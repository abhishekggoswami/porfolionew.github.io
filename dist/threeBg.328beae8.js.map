{"version":3,"sources":["../node_modules/three/build/three.module.js","assets/js/images.js","assets/js/threeBg.js"],"names":["REVISION","exports","MOUSE","LEFT","MIDDLE","RIGHT","ROTATE","DOLLY","PAN","TOUCH","DOLLY_PAN","DOLLY_ROTATE","CullFaceNone","CullFaceBack","CullFaceFront","CullFaceFrontBack","BasicShadowMap","PCFShadowMap","PCFSoftShadowMap","VSMShadowMap","FrontSide","BackSide","DoubleSide","NoBlending","NormalBlending","AdditiveBlending","SubtractiveBlending","MultiplyBlending","CustomBlending","AddEquation","SubtractEquation","ReverseSubtractEquation","MinEquation","MaxEquation","ZeroFactor","OneFactor","SrcColorFactor","OneMinusSrcColorFactor","SrcAlphaFactor","OneMinusSrcAlphaFactor","DstAlphaFactor","OneMinusDstAlphaFactor","DstColorFactor","OneMinusDstColorFactor","SrcAlphaSaturateFactor","ConstantColorFactor","OneMinusConstantColorFactor","ConstantAlphaFactor","OneMinusConstantAlphaFactor","NeverDepth","AlwaysDepth","LessDepth","LessEqualDepth","EqualDepth","GreaterEqualDepth","GreaterDepth","NotEqualDepth","MultiplyOperation","MixOperation","AddOperation","NoToneMapping","LinearToneMapping","ReinhardToneMapping","CineonToneMapping","ACESFilmicToneMapping","CustomToneMapping","AgXToneMapping","NeutralToneMapping","AttachedBindMode","DetachedBindMode","UVMapping","CubeReflectionMapping","CubeRefractionMapping","EquirectangularReflectionMapping","EquirectangularRefractionMapping","CubeUVReflectionMapping","RepeatWrapping","ClampToEdgeWrapping","MirroredRepeatWrapping","NearestFilter","NearestMipmapNearestFilter","NearestMipMapNearestFilter","NearestMipmapLinearFilter","NearestMipMapLinearFilter","LinearFilter","LinearMipmapNearestFilter","LinearMipMapNearestFilter","LinearMipmapLinearFilter","LinearMipMapLinearFilter","UnsignedByteType","ByteType","ShortType","UnsignedShortType","IntType","UnsignedIntType","FloatType","HalfFloatType","UnsignedShort4444Type","UnsignedShort5551Type","UnsignedInt248Type","UnsignedInt5999Type","AlphaFormat","RGBFormat","RGBAFormat","LuminanceFormat","LuminanceAlphaFormat","DepthFormat","DepthStencilFormat","RedFormat","RedIntegerFormat","RGFormat","RGIntegerFormat","RGBIntegerFormat","RGBAIntegerFormat","RGB_S3TC_DXT1_Format","RGBA_S3TC_DXT1_Format","RGBA_S3TC_DXT3_Format","RGBA_S3TC_DXT5_Format","RGB_PVRTC_4BPPV1_Format","RGB_PVRTC_2BPPV1_Format","RGBA_PVRTC_4BPPV1_Format","RGBA_PVRTC_2BPPV1_Format","RGB_ETC1_Format","RGB_ETC2_Format","RGBA_ETC2_EAC_Format","RGBA_ASTC_4x4_Format","RGBA_ASTC_5x4_Format","RGBA_ASTC_5x5_Format","RGBA_ASTC_6x5_Format","RGBA_ASTC_6x6_Format","RGBA_ASTC_8x5_Format","RGBA_ASTC_8x6_Format","RGBA_ASTC_8x8_Format","RGBA_ASTC_10x5_Format","RGBA_ASTC_10x6_Format","RGBA_ASTC_10x8_Format","RGBA_ASTC_10x10_Format","RGBA_ASTC_12x10_Format","RGBA_ASTC_12x12_Format","RGBA_BPTC_Format","RGB_BPTC_SIGNED_Format","RGB_BPTC_UNSIGNED_Format","RED_RGTC1_Format","SIGNED_RED_RGTC1_Format","RED_GREEN_RGTC2_Format","SIGNED_RED_GREEN_RGTC2_Format","LoopOnce","LoopRepeat","LoopPingPong","InterpolateDiscrete","InterpolateLinear","InterpolateSmooth","ZeroCurvatureEnding","ZeroSlopeEnding","WrapAroundEnding","NormalAnimationBlendMode","AdditiveAnimationBlendMode","TrianglesDrawMode","TriangleStripDrawMode","TriangleFanDrawMode","BasicDepthPacking","RGBADepthPacking","TangentSpaceNormalMap","ObjectSpaceNormalMap","NoColorSpace","SRGBColorSpace","LinearSRGBColorSpace","DisplayP3ColorSpace","LinearDisplayP3ColorSpace","LinearTransfer","SRGBTransfer","Rec709Primaries","P3Primaries","ZeroStencilOp","KeepStencilOp","ReplaceStencilOp","IncrementStencilOp","DecrementStencilOp","IncrementWrapStencilOp","DecrementWrapStencilOp","InvertStencilOp","NeverStencilFunc","LessStencilFunc","EqualStencilFunc","LessEqualStencilFunc","GreaterStencilFunc","NotEqualStencilFunc","GreaterEqualStencilFunc","AlwaysStencilFunc","NeverCompare","LessCompare","EqualCompare","LessEqualCompare","GreaterCompare","NotEqualCompare","GreaterEqualCompare","AlwaysCompare","StaticDrawUsage","DynamicDrawUsage","StreamDrawUsage","StaticReadUsage","DynamicReadUsage","StreamReadUsage","StaticCopyUsage","DynamicCopyUsage","StreamCopyUsage","GLSL1","GLSL3","WebGLCoordinateSystem","WebGPUCoordinateSystem","EventDispatcher","addEventListener","type","listener","_listeners","undefined","listeners","indexOf","push","hasEventListener","removeEventListener","listenerArray","index","splice","dispatchEvent","event","target","array","slice","i","l","length","call","_lut","_seed","DEG2RAD","Math","PI","RAD2DEG","generateUUID","d0","random","d1","d2","d3","uuid","toLowerCase","clamp","value","min","max","euclideanModulo","n","m","mapLinear","x","a1","a2","b1","b2","inverseLerp","y","lerp","t","damp","lambda","dt","exp","pingpong","arguments","abs","smoothstep","smootherstep","randInt","low","high","floor","randFloat","randFloatSpread","range","seededRandom","s","imul","degToRad","degrees","radToDeg","radians","isPowerOfTwo","ceilPowerOfTwo","pow","ceil","log","LN2","floorPowerOfTwo","setQuaternionFromProperEuler","q","a","b","c","order","cos","sin","c2","s2","c13","s13","c1_3","s1_3","c3_1","s3_1","set","console","warn","denormalize","constructor","Float32Array","Uint32Array","Uint16Array","Uint8Array","Int32Array","Int16Array","Int8Array","Error","normalize","round","MathUtils","Vector2","prototype","isVector2","width","height","setScalar","scalar","setX","setY","setComponent","getComponent","clone","copy","v","add","addScalar","addVectors","addScaledVector","sub","subScalar","subVectors","multiply","multiplyScalar","divide","divideScalar","applyMatrix3","e","elements","clampScalar","minVal","maxVal","clampLength","roundToZero","trunc","negate","dot","cross","lengthSq","sqrt","manhattanLength","angle","atan2","angleTo","denominator","theta","acos","distanceTo","distanceToSquared","dx","dy","manhattanDistanceTo","setLength","alpha","lerpVectors","v1","v2","equals","fromArray","offset","toArray","fromBufferAttribute","attribute","getX","getY","rotateAround","center","Symbol","iterator","Matrix3","n11","n12","n13","n21","n22","n23","n31","n32","n33","isMatrix3","te","identity","me","extractBasis","xAxis","yAxis","zAxis","setFromMatrix3Column","setFromMatrix4","multiplyMatrices","premultiply","ae","be","a11","a12","a13","a21","a22","a23","a31","a32","a33","b11","b12","b13","b21","b22","b23","b31","b32","b33","determinant","d","f","g","h","invert","t11","t12","t13","det","detInv","transpose","tmp","getNormalMatrix","matrix4","transposeIntoArray","r","setUvTransform","tx","ty","sx","sy","rotation","cx","cy","scale","_m3","makeScale","rotate","makeRotation","translate","makeTranslation","matrix","arrayNeedsUint32","TYPED_ARRAYS","Uint8ClampedArray","Float64Array","getTypedArray","buffer","createElementNS","name","document","createCanvasElement","canvas","style","display","_cache","warnOnce","message","probeAsync","gl","sync","interval","Promise","resolve","reject","probe","clientWaitSync","SYNC_FLUSH_COMMANDS_BIT","WAIT_FAILED","TIMEOUT_EXPIRED","setTimeout","LINEAR_SRGB_TO_LINEAR_DISPLAY_P3","LINEAR_DISPLAY_P3_TO_LINEAR_SRGB","COLOR_SPACES","transfer","primaries","toReference","color","fromReference","convertSRGBToLinear","convertLinearToSRGB","SUPPORTED_WORKING_COLOR_SPACES","Set","ColorManagement","enabled","_workingColorSpace","workingColorSpace","colorSpace","has","convert","sourceColorSpace","targetColorSpace","sourceToReference","targetFromReference","fromWorkingColorSpace","toWorkingColorSpace","getPrimaries","getTransfer","SRGBToLinear","LinearToSRGB","_canvas","ImageUtils","getDataURL","image","test","src","HTMLCanvasElement","context","getContext","ImageData","putImageData","drawImage","toDataURL","sRGBToLinear","HTMLImageElement","ImageBitmap","imageData","getImageData","data","_sourceId","Source","isSource","Object","defineProperty","dataReady","version","needsUpdate","toJSON","meta","isRootObject","images","output","url","Array","isArray","isDataTexture","serializeImage","from","_textureId","Texture","DEFAULT_IMAGE","mapping","DEFAULT_MAPPING","wrapS","wrapT","magFilter","minFilter","format","anisotropy","DEFAULT_ANISOTROPY","isTexture","source","mipmaps","channel","internalFormat","repeat","matrixAutoUpdate","generateMipmaps","premultiplyAlpha","flipY","unpackAlignment","userData","onUpdate","isRenderTargetTexture","pmremVersion","updateMatrix","JSON","parse","stringify","textures","metadata","generator","wrap","keys","dispose","transformUv","uv","needsPMREMUpdate","Vector4","z","w","isVector4","setZ","setW","applyMatrix4","setAxisAngleFromQuaternion","setAxisAngleFromRotationMatrix","epsilon","epsilon2","m11","m12","m13","m21","m22","m23","m31","m32","m33","xx","yy","zz","xy","xz","yz","setFromMatrixPosition","getZ","getW","RenderTarget","options","isRenderTarget","depth","scissor","scissorTest","viewport","assign","depthBuffer","stencilBuffer","resolveDepthBuffer","resolveStencilBuffer","depthTexture","samples","count","texture","setSize","il","WebGLRenderTarget","isWebGLRenderTarget","DataArrayTexture","isDataArrayTexture","wrapR","layerUpdates","addLayerUpdate","layerIndex","clearLayerUpdates","clear","WebGLArrayRenderTarget","isWebGLArrayRenderTarget","Data3DTexture","isData3DTexture","WebGL3DRenderTarget","isWebGL3DRenderTarget","Quaternion","isQuaternion","_x","_y","_z","_w","slerpFlat","dst","dstOffset","src0","srcOffset0","src1","srcOffset1","x0","y0","z0","w0","x1","y1","z1","w1","dir","sqrSin","Number","EPSILON","len","tDir","multiplyQuaternionsFlat","_onChangeCallback","quaternion","setFromEuler","euler","update","_order","c1","c3","s1","s3","setFromAxisAngle","axis","halfAngle","setFromRotationMatrix","trace","setFromUnitVectors","vFrom","vTo","rotateTowards","step","slerp","conjugate","multiplyQuaternions","qax","qay","qaz","qaw","qbx","qby","qbz","qbw","qb","cosHalfTheta","sqrSinHalfTheta","sinHalfTheta","halfTheta","ratioA","ratioB","slerpQuaternions","qa","theta1","theta2","r1","r2","_onChange","callback","Vector3","isVector3","multiplyVectors","applyEuler","applyQuaternion","_quaternion$4","applyAxisAngle","applyNormalMatrix","vx","vy","vz","qx","qy","qz","qw","tz","project","camera","matrixWorldInverse","projectionMatrix","unproject","projectionMatrixInverse","matrixWorld","transformDirection","crossVectors","ax","ay","az","bx","by","bz","projectOnVector","projectOnPlane","planeNormal","_vector$c","reflect","normal","dz","setFromSpherical","setFromSphericalCoords","radius","phi","sinPhiRadius","setFromCylindrical","setFromCylindricalCoords","setFromMatrixScale","setFromMatrixColumn","sz","setFromColor","randomDirection","u","Box3","Infinity","isBox3","setFromArray","makeEmpty","expandByPoint","_vector$b","setFromBufferAttribute","setFromPoints","points","setFromCenterAndSize","size","halfSize","setFromObject","object","precise","expandByObject","box","isEmpty","getCenter","getSize","point","expandByVector","vector","expandByScalar","updateWorldMatrix","geometry","positionAttribute","getAttribute","isInstancedMesh","isMesh","getVertexPosition","boundingBox","computeBoundingBox","_box$4","union","children","containsPoint","containsBox","getParameter","intersectsBox","intersectsSphere","sphere","clampPoint","intersectsPlane","plane","constant","intersectsTriangle","triangle","_center","_extents","_v0$2","_v1$7","_v2$4","_f0","_f1","_f2","axes","satForAxes","_triangleNormal","distanceToPoint","getBoundingSphere","intersect","_points","_testAxis","v0","extents","j","p0","p1","p2","_box$3","_v1$6","_v2$3","Sphere","isSphere","optionalCenter","maxRadiusSq","radiusSum","deltaLengthSq","getBoundingBox","getMaxScaleOnAxis","delta","_vector$a","_segCenter","_segDir","_diff","_edge1","_edge2","_normal$1","Ray","origin","direction","ray","at","lookAt","recast","closestPointToPoint","directionDistance","distanceSqToPoint","distanceSqToSegment","optionalPointOnRay","optionalPointOnSegment","segExtent","a01","b0","s0","sqrDist","extDet","invDet","intersectSphere","tca","radius2","thc","t0","t1","distanceToPlane","intersectPlane","distToPoint","intersectBox","tmin","tmax","tymin","tymax","tzmin","tzmax","invdirx","invdiry","invdirz","isNaN","intersectTriangle","backfaceCulling","DdN","sign","DdQxE2","DdE1xQ","QdN","Matrix4","n14","n24","n34","n41","n42","n43","n44","isMatrix4","copyPosition","setFromMatrix3","makeBasis","extractRotation","scaleX","_v1$5","scaleY","scaleZ","makeRotationFromEuler","af","bf","ce","cf","de","df","ac","ad","bc","bd","makeRotationFromQuaternion","compose","_zero","_one","eye","up","a14","a24","a34","a41","a42","a43","a44","b14","b24","b34","b41","b42","b43","b44","setPosition","t14","scaleXSq","scaleYSq","scaleZSq","makeRotationX","makeRotationY","makeRotationZ","makeRotationAxis","makeShear","yx","zx","zy","position","x2","y2","z2","wx","wy","wz","decompose","_m1$4","invSX","invSY","invSZ","makePerspective","left","right","top","bottom","near","far","coordinateSystem","makeOrthographic","p","zInv","_matrix$2","_quaternion$3","Euler","DEFAULT_ORDER","isEuler","asin","setFromQuaternion","setFromVector3","reorder","newOrder","Layers","mask","enable","enableAll","toggle","disable","disableAll","layers","isEnabled","_object3DId","_v1$4","_q1","_m1$3","_target","_position$3","_scale$2","_quaternion$2","_xAxis","_yAxis","_zAxis","_addedEvent","_removedEvent","_childaddedEvent","child","_childremovedEvent","Object3D","isObject3D","parent","DEFAULT_UP","onRotationChange","onQuaternionChange","defineProperties","configurable","enumerable","modelViewMatrix","normalMatrix","DEFAULT_MATRIX_AUTO_UPDATE","matrixWorldAutoUpdate","DEFAULT_MATRIX_WORLD_AUTO_UPDATE","matrixWorldNeedsUpdate","visible","castShadow","receiveShadow","frustumCulled","renderOrder","animations","onBeforeShadow","onAfterShadow","onBeforeRender","onAfterRender","setRotationFromAxisAngle","setRotationFromEuler","setRotationFromMatrix","setRotationFromQuaternion","rotateOnAxis","rotateOnWorldAxis","rotateX","rotateY","rotateZ","translateOnAxis","distance","translateX","translateY","translateZ","localToWorld","worldToLocal","isCamera","isLight","error","removeFromParent","remove","attach","getObjectById","id","getObjectByProperty","getObjectByName","getObjectsByProperty","result","getWorldPosition","getWorldQuaternion","getWorldScale","getWorldDirection","raycast","traverse","traverseVisible","traverseAncestors","updateMatrixWorld","force","updateParents","updateChildren","geometries","materials","shapes","skeletons","nodes","instanceMatrix","instanceColor","isBatchedMesh","perObjectFrustumCulled","sortObjects","drawRanges","_drawRanges","reservedRanges","_reservedRanges","visibility","_visibility","active","_active","bounds","_bounds","map","bound","boxInitialized","boxMin","boxMax","sphereInitialized","sphereRadius","sphereCenter","maxInstanceCount","_maxInstanceCount","maxVertexCount","_maxVertexCount","maxIndexCount","_maxIndexCount","geometryInitialized","_geometryInitialized","geometryCount","_geometryCount","matricesTexture","_matricesTexture","_colorsTexture","colorsTexture","boundingSphere","serialize","library","element","isScene","background","isColor","environment","isLine","isPoints","parameters","shape","isSkinnedMesh","bindMode","bindMatrix","skeleton","material","uuids","animation","extractFromCache","cache","values","key","recursive","_v0$1","_v1$3","_v2$2","_v3$2","_vab","_vac","_vbc","_vap","_vbp","_vcp","Triangle","getNormal","targetLengthSq","getBarycoord","dot00","dot01","dot02","dot11","dot12","denom","invDenom","getInterpolation","p3","v3","isFrontFacing","setFromPointsAndIndices","i0","i1","i2","setFromAttributeAndIndices","getArea","getMidpoint","getPlane","setFromCoplanarPoints","d4","vc","d5","d6","vb","va","_colorKeywords","_hslA","_hslB","hue2rgb","Color","setHex","setStyle","setRGB","hex","setHSL","handleAlpha","string","parseFloat","exec","components","parseInt","charAt","setColorName","copySRGBToLinear","copyLinearToSRGB","getHex","_color","getHexString","toString","getHSL","hue","saturation","lightness","getRGB","getStyle","toFixed","offsetHSL","addColors","color1","color2","lerpColors","lerpHSL","NAMES","_materialId","Material","isMaterial","blending","side","vertexColors","opacity","transparent","alphaHash","blendSrc","blendDst","blendEquation","blendSrcAlpha","blendDstAlpha","blendEquationAlpha","blendColor","blendAlpha","depthFunc","depthTest","depthWrite","stencilWriteMask","stencilFunc","stencilRef","stencilFuncMask","stencilFail","stencilZFail","stencilZPass","stencilWrite","clippingPlanes","clipIntersection","clipShadows","shadowSide","colorWrite","precision","polygonOffset","polygonOffsetFactor","polygonOffsetUnits","dithering","alphaToCoverage","premultipliedAlpha","forceSinglePass","toneMapped","_alphaTest","alphaTest","onBeforeCompile","customProgramCacheKey","setValues","newValue","currentValue","roughness","metalness","sheen","sheenColor","sheenRoughness","emissive","emissiveIntensity","specular","specularIntensity","specularColor","shininess","clearcoat","clearcoatRoughness","clearcoatMap","clearcoatRoughnessMap","clearcoatNormalMap","clearcoatNormalScale","dispersion","iridescence","iridescenceIOR","iridescenceThicknessRange","iridescenceMap","iridescenceThicknessMap","anisotropyRotation","anisotropyMap","matcap","alphaMap","lightMap","lightMapIntensity","aoMap","aoMapIntensity","bumpMap","bumpScale","normalMap","normalMapType","normalScale","displacementMap","displacementScale","displacementBias","roughnessMap","metalnessMap","emissiveMap","specularMap","specularIntensityMap","specularColorMap","envMap","combine","envMapRotation","envMapIntensity","reflectivity","refractionRatio","gradientMap","transmission","transmissionMap","thickness","thicknessMap","attenuationDistance","attenuationColor","sizeAttenuation","linewidth","dashSize","gapSize","wireframe","wireframeLinewidth","wireframeLinecap","wireframeLinejoin","flatShading","fog","srcPlanes","dstPlanes","onBuild","MeshBasicMaterial","isMeshBasicMaterial","_tables","_generateTables","ArrayBuffer","floatView","uint32View","baseTable","shiftTable","mantissaTable","exponentTable","offsetTable","toHalfFloat","val","fromHalfFloat","DataUtils","_vector$9","_vector2$1","BufferAttribute","itemSize","normalized","TypeError","isBufferAttribute","usage","_updateRange","updateRanges","gpuType","onUploadCallback","updateRange","setUsage","addUpdateRange","start","clearUpdateRanges","copyAt","index1","index2","copyArray","setXY","setXYZ","component","setXYZW","onUpload","Int8BufferAttribute","Uint8BufferAttribute","Uint8ClampedBufferAttribute","Int16BufferAttribute","Uint16BufferAttribute","Int32BufferAttribute","Uint32BufferAttribute","Float16BufferAttribute","isFloat16BufferAttribute","Float32BufferAttribute","_id$2","_m1$2","_obj","_offset","_box$2","_boxMorphTargets","_vector$8","BufferGeometry","isBufferGeometry","attributes","morphAttributes","morphTargetsRelative","groups","drawRange","getIndex","setIndex","setAttribute","deleteAttribute","hasAttribute","addGroup","materialIndex","clearGroups","setDrawRange","tangent","computeBoundingSphere","morphAttributesPosition","isGLBufferAttribute","morphAttribute","jl","computeTangents","normalAttribute","uvAttribute","tangentAttribute","tan1","tan2","vA","vB","vC","uvA","uvB","uvC","sdir","tdir","handleTriangle","isFinite","group","tmp2","n2","handleVertex","computeVertexNormals","pA","pB","pC","nA","nB","nC","cb","ab","normalizeNormals","normals","toNonIndexed","convertBufferAttribute","indices","array2","isInterleavedBufferAttribute","stride","geometry2","newAttribute","morphArray","hasMorphAttributes","attributeArray","_inverseMatrix$3","_ray$3","_sphere$6","_sphereHitAt","_vA$1","_vB$1","_vC$1","_tempA","_morphA","_uvA$1","_uvB$1","_uvC$1","_normalA","_normalB","_normalC","_intersectionPoint","_intersectionPointWorld","Mesh","updateMorphTargets","morphTargetInfluences","morphTargetDictionary","ml","String","morphPosition","morphInfluences","influence","raycaster","intersects","_computeIntersections","rayLocalSpace","intersection","uv1","groupMaterial","end","checkGeometryIntersection","faceIndex","face","checkIntersection$1","BoxGeometry","widthSegments","heightSegments","depthSegments","scope","vertices","uvs","numberOfVertices","groupStart","buildPlane","udir","vdir","gridX","gridY","segmentWidth","segmentHeight","widthHalf","heightHalf","depthHalf","gridX1","gridY1","vertexCounter","groupCount","iy","ix","fromJSON","cloneUniforms","property","mergeUniforms","uniforms","merged","cloneUniformsGroups","getUnlitUniformColorSpace","renderer","currentRenderTarget","getRenderTarget","outputColorSpace","isXRRenderTarget","UniformsUtils","merge","default_vertex","default_fragment","ShaderMaterial","isShaderMaterial","defines","uniformsGroups","vertexShader","fragmentShader","lights","clipping","extensions","clipCullDistance","multiDraw","defaultAttributeValues","index0AttributeName","uniformsNeedUpdate","glslVersion","uniform","Camera","_v3$1","_minTarget","_maxTarget","PerspectiveCamera","fov","aspect","isPerspectiveCamera","zoom","focus","view","filmGauge","filmOffset","updateProjectionMatrix","setFocalLength","focalLength","vExtentSlope","getFilmHeight","atan","getFocalLength","tan","getEffectiveFOV","getFilmWidth","getViewBounds","minTarget","maxTarget","getViewSize","setViewOffset","fullWidth","fullHeight","offsetX","offsetY","clearViewOffset","skew","CubeCamera","renderTarget","activeMipmapLevel","cameraPX","cameraNX","cameraPY","cameraNY","cameraPZ","cameraNZ","updateCoordinateSystem","cameras","concat","scene","currentActiveCubeFace","getActiveCubeFace","currentActiveMipmapLevel","getActiveMipmapLevel","currentXrEnabled","xr","setRenderTarget","render","CubeTexture","isCubeTexture","WebGLCubeRenderTarget","isWebGLCubeRenderTarget","fromEquirectangularTexture","shader","tEquirect","mesh","currentMinFilter","stencil","_vector1","_vector2","_normalMatrix","Plane","isPlane","setComponents","setFromNormalAndCoplanarPoint","inverseNormalLength","distanceToSphere","projectPoint","intersectLine","line","intersectsLine","startSign","endSign","coplanarPoint","optionalNormalMatrix","referencePoint","_sphere$5","_vector$7","Frustum","p4","p5","planes","frustum","setFromProjectionMatrix","me0","me1","me2","me3","me4","me5","me6","me7","me8","me9","me10","me11","me12","me13","me14","me15","intersectsObject","intersectsSprite","sprite","negRadius","WebGLAnimation","isAnimating","animationLoop","requestId","onAnimationFrame","time","frame","requestAnimationFrame","stop","cancelAnimationFrame","setAnimationLoop","setContext","WebGLAttributes","buffers","WeakMap","createBuffer","bufferType","byteLength","bindBuffer","bufferData","FLOAT","HALF_FLOAT","UNSIGNED_SHORT","SHORT","UNSIGNED_INT","INT","BYTE","UNSIGNED_BYTE","bytesPerElement","BYTES_PER_ELEMENT","updateBuffer","bufferSubData","get","deleteBuffer","delete","cached","elementSize","PlaneGeometry","width_half","height_half","segment_width","segment_height","alphahash_fragment","alphahash_pars_fragment","alphamap_fragment","alphamap_pars_fragment","alphatest_fragment","alphatest_pars_fragment","aomap_fragment","aomap_pars_fragment","batching_pars_vertex","batching_vertex","begin_vertex","beginnormal_vertex","bsdfs","iridescence_fragment","bumpmap_pars_fragment","clipping_planes_fragment","clipping_planes_pars_fragment","clipping_planes_pars_vertex","clipping_planes_vertex","color_fragment","color_pars_fragment","color_pars_vertex","color_vertex","common","cube_uv_reflection_fragment","defaultnormal_vertex","displacementmap_pars_vertex","displacementmap_vertex","emissivemap_fragment","emissivemap_pars_fragment","colorspace_fragment","colorspace_pars_fragment","envmap_fragment","envmap_common_pars_fragment","envmap_pars_fragment","envmap_pars_vertex","envmap_vertex","fog_vertex","fog_pars_vertex","fog_fragment","fog_pars_fragment","gradientmap_pars_fragment","lightmap_pars_fragment","lights_lambert_fragment","lights_lambert_pars_fragment","lights_pars_begin","envmap_physical_pars_fragment","lights_toon_fragment","lights_toon_pars_fragment","lights_phong_fragment","lights_phong_pars_fragment","lights_physical_fragment","lights_physical_pars_fragment","lights_fragment_begin","lights_fragment_maps","lights_fragment_end","logdepthbuf_fragment","logdepthbuf_pars_fragment","logdepthbuf_pars_vertex","logdepthbuf_vertex","map_fragment","map_pars_fragment","map_particle_fragment","map_particle_pars_fragment","metalnessmap_fragment","metalnessmap_pars_fragment","morphinstance_vertex","morphcolor_vertex","morphnormal_vertex","morphtarget_pars_vertex","morphtarget_vertex","normal_fragment_begin","normal_fragment_maps","normal_pars_fragment","normal_pars_vertex","normal_vertex","normalmap_pars_fragment","clearcoat_normal_fragment_begin","clearcoat_normal_fragment_maps","clearcoat_pars_fragment","iridescence_pars_fragment","opaque_fragment","packing","premultiplied_alpha_fragment","project_vertex","dithering_fragment","dithering_pars_fragment","roughnessmap_fragment","roughnessmap_pars_fragment","shadowmap_pars_fragment","shadowmap_pars_vertex","shadowmap_vertex","shadowmask_pars_fragment","skinbase_vertex","skinning_pars_vertex","skinning_vertex","skinnormal_vertex","specularmap_fragment","specularmap_pars_fragment","tonemapping_fragment","tonemapping_pars_fragment","transmission_fragment","transmission_pars_fragment","uv_pars_fragment","uv_pars_vertex","uv_vertex","worldpos_vertex","vertex$h","fragment$h","vertex$g","fragment$g","vertex$f","fragment$f","vertex$e","fragment$e","vertex$d","fragment$d","vertex$c","fragment$c","vertex$b","fragment$b","vertex$a","fragment$a","vertex$9","fragment$9","vertex$8","fragment$8","vertex$7","fragment$7","vertex$6","fragment$6","vertex$5","fragment$5","vertex$4","fragment$4","vertex$3","fragment$3","vertex$2","fragment$2","vertex$1","fragment$1","ShaderChunk","background_vert","background_frag","backgroundCube_vert","backgroundCube_frag","cube_vert","cube_frag","depth_vert","depth_frag","distanceRGBA_vert","distanceRGBA_frag","equirect_vert","equirect_frag","linedashed_vert","linedashed_frag","meshbasic_vert","meshbasic_frag","meshlambert_vert","meshlambert_frag","meshmatcap_vert","meshmatcap_frag","meshnormal_vert","meshnormal_frag","meshphong_vert","meshphong_frag","meshphysical_vert","meshphysical_frag","meshtoon_vert","meshtoon_frag","points_vert","points_frag","shadow_vert","shadow_frag","sprite_vert","sprite_frag","UniformsLib","diffuse","mapTransform","alphaMapTransform","specularmap","specularMapTransform","envmap","flipEnvMap","ior","aomap","aoMapTransform","lightmap","lightMapTransform","bumpmap","bumpMapTransform","normalmap","normalMapTransform","displacementmap","displacementMapTransform","emissivemap","emissiveMapTransform","metalnessmap","metalnessMapTransform","roughnessmap","roughnessMapTransform","gradientmap","fogDensity","fogNear","fogFar","fogColor","ambientLightColor","lightProbe","directionalLights","properties","directionalLightShadows","shadowIntensity","shadowBias","shadowNormalBias","shadowRadius","shadowMapSize","directionalShadowMap","directionalShadowMatrix","spotLights","coneCos","penumbraCos","decay","spotLightShadows","spotLightMap","spotShadowMap","spotLightMatrix","pointLights","pointLightShadows","shadowCameraNear","shadowCameraFar","pointShadowMap","pointShadowMatrix","hemisphereLights","skyColor","groundColor","rectAreaLights","ltc_1","ltc_2","uvTransform","ShaderLib","basic","lambert","phong","standard","toon","dashed","totalSize","t2D","backgroundIntensity","backgroundCube","backgroundBlurriness","backgroundRotation","cube","tCube","tFlip","equirect","distanceRGBA","referencePosition","nearDistance","farDistance","shadow","physical","clearcoatMapTransform","clearcoatNormalMapTransform","clearcoatRoughnessMapTransform","iridescenceMapTransform","iridescenceThicknessMinimum","iridescenceThicknessMaximum","iridescenceThicknessMapTransform","sheenColorMap","sheenColorMapTransform","sheenRoughnessMap","sheenRoughnessMapTransform","transmissionMapTransform","transmissionSamplerSize","transmissionSamplerMap","thicknessMapTransform","specularColorMapTransform","specularIntensityMapTransform","anisotropyVector","anisotropyMapTransform","_rgb","_e1$1","_m1$1","WebGLBackground","cubemaps","cubeuvmaps","state","objects","clearColor","clearAlpha","planeMesh","boxMesh","currentBackground","currentBackgroundVersion","currentTonemapping","getBackground","usePMREM","forceClear","setClear","environmentBlendMode","getEnvironmentBlendMode","autoClear","setTest","setMask","autoClearColor","autoClearDepth","autoClearStencil","addToRenderList","renderList","toneMapping","unshift","getClearColor","setClearColor","getClearAlpha","setClearAlpha","WebGLBindingStates","maxVertexAttributes","MAX_VERTEX_ATTRIBS","bindingStates","defaultState","createBindingState","currentState","forceUpdate","setup","program","updateBuffers","getBindingState","bindVertexArrayObject","saveCache","ELEMENT_ARRAY_BUFFER","setupVertexAttributes","createVertexArrayObject","createVertexArray","vao","bindVertexArray","deleteVertexArrayObject","deleteVertexArray","programMap","stateMap","newAttributes","enabledAttributes","attributeDivisors","cachedAttributes","geometryAttributes","attributesNum","programAttributes","getAttributes","programAttribute","location","cachedAttribute","geometryAttribute","initAttributes","enableAttribute","enableAttributeAndDivisor","meshPerAttribute","enableVertexAttribArray","vertexAttribDivisor","disableUnusedAttributes","disableVertexAttribArray","vertexAttribPointer","integer","vertexAttribIPointer","materialDefaultAttributeValues","isInstancedInterleavedBuffer","locationSize","ARRAY_BUFFER","isInstancedBufferAttribute","vertexAttrib2fv","vertexAttrib3fv","vertexAttrib4fv","vertexAttrib1fv","reset","geometryId","programId","releaseStatesOfGeometry","releaseStatesOfProgram","resetDefaultState","WebGLBufferRenderer","info","mode","setMode","drawArrays","renderInstances","primcount","drawArraysInstanced","renderMultiDraw","starts","counts","drawCount","extension","multiDrawArraysWEBGL","elementCount","renderMultiDrawInstances","multiDrawArraysInstancedWEBGL","WebGLCapabilities","utils","maxAnisotropy","getMaxAnisotropy","MAX_TEXTURE_MAX_ANISOTROPY_EXT","textureFormatReadable","textureFormat","IMPLEMENTATION_COLOR_READ_FORMAT","textureTypeReadable","textureType","halfFloatSupportedByExt","IMPLEMENTATION_COLOR_READ_TYPE","getMaxPrecision","getShaderPrecisionFormat","VERTEX_SHADER","HIGH_FLOAT","FRAGMENT_SHADER","MEDIUM_FLOAT","maxPrecision","logarithmicDepthBuffer","maxTextures","MAX_TEXTURE_IMAGE_UNITS","maxVertexTextures","MAX_VERTEX_TEXTURE_IMAGE_UNITS","maxTextureSize","MAX_TEXTURE_SIZE","maxCubemapSize","MAX_CUBE_MAP_TEXTURE_SIZE","maxAttributes","maxVertexUniforms","MAX_VERTEX_UNIFORM_VECTORS","maxVaryings","MAX_VARYING_VECTORS","maxFragmentUniforms","MAX_FRAGMENT_UNIFORM_VECTORS","vertexTextures","maxSamples","MAX_SAMPLES","isWebGL2","WebGLClipping","globalState","numGlobalPlanes","localClippingEnabled","renderingShadows","viewNormalMatrix","numPlanes","numIntersection","init","enableLocalClipping","beginShadows","projectPlanes","endShadows","setGlobalState","setState","useCache","materialProperties","resetGlobalState","nGlobal","lGlobal","dstArray","clippingState","skipTransform","nPlanes","flatSize","viewMatrix","i4","WebGLCubeMaps","mapTextureMapping","cubemap","onTextureDispose","OrthographicCamera","isOrthographicCamera","scaleW","scaleH","LOD_MIN","EXTRA_LOD_SIGMA","_flatCamera","_clearColor","_oldTarget","_oldActiveCubeFace","_oldActiveMipmapLevel","_oldXrEnabled","PHI","INV_PHI","_axisDirections","PMREMGenerator","_renderer","_pingPongRenderTarget","_lodMax","_cubeSize","_lodPlanes","_sizeLods","_sigmas","_blurMaterial","_cubemapMaterial","_equirectMaterial","_compileMaterial","fromScene","sigma","_setSize","cubeUVRenderTarget","_allocateTargets","_sceneToCubeUV","_blur","_applyPMREM","_cleanup","fromEquirectangular","equirectangular","_fromTexture","fromCubemap","compileCubemapShader","_getCubemapMaterial","compileEquirectangularShader","_getEquirectMaterial","_dispose","cubeSize","log2","outputTarget","_setViewport","_textureToCubeUV","params","_createRenderTarget","sizeLods","lodPlanes","sigmas","_createPlanes","_getBlurShader","tmpMesh","compile","cubeCamera","upSign","forwardSign","originalAutoClear","backgroundMaterial","backgroundBox","useSolidColor","col","poleAxis","lodIn","lodOut","pingPongRenderTarget","_halfBlur","targetIn","targetOut","sigmaRadians","blurMaterial","STANDARD_DEVIATIONS","blurMesh","blurUniforms","pixels","radiansPerPixel","sigmaPixels","weights","sum","weight","outputSize","lodMax","lod","totalLods","sizeLod","texelSize","cubeFaces","positionSize","uvSize","faceIndexSize","coordinates","fill","shaderMaterial","_getCommonVertexShader","WebGLCubeUVMaps","cubeUVmaps","pmremGenerator","isEquirectMap","isCubeMap","currentPMREMVersion","isCubeTextureComplete","cubemapUV","WebGLExtensions","getExtension","WebGLGeometries","wireframeAttributes","onGeometryDispose","isInstancedBufferGeometry","memory","updateWireframeAttribute","geometryIndex","geometryPosition","previousAttribute","getWireframeAttribute","currentAttribute","WebGLIndexedBufferRenderer","drawElements","drawElementsInstanced","multiDrawElementsWEBGL","multiDrawElementsInstancedWEBGL","WebGLInfo","calls","triangles","lines","instanceCount","TRIANGLES","LINES","LINE_STRIP","LINE_LOOP","POINTS","programs","autoReset","WebGLMorphtargets","capabilities","morphTextures","morph","objectInfluences","morphTargetsCount","entry","hasMorphPosition","hasMorphNormals","hasMorphColors","morphTargets","morphNormals","morphColors","vertexDataCount","vertexDataStride","morphTarget","morphNormal","morphColor","disposeTexture","morphTexture","getUniforms","setValue","morphInfluencesSum","morphBaseInfluence","WebGLObjects","updateMap","buffergeometry","onInstancedMeshDispose","instancedMesh","DepthTexture","isDepthTexture","compareFunction","emptyTexture","emptyShadowTexture","emptyArrayTexture","empty3dTexture","emptyCubeTexture","arrayCacheF32","arrayCacheI32","mat4array","mat3array","mat2array","flatten","nBlocks","blockSize","firstElem","arraysEqual","allocTexUnits","allocateTextureUnit","setValueV1f","uniform1f","addr","setValueV2f","uniform2f","uniform2fv","setValueV3f","uniform3f","uniform3fv","setValueV4f","uniform4f","uniform4fv","setValueM2","uniformMatrix2fv","setValueM3","uniformMatrix3fv","setValueM4","uniformMatrix4fv","setValueV1i","uniform1i","setValueV2i","uniform2i","uniform2iv","setValueV3i","uniform3i","uniform3iv","setValueV4i","uniform4i","uniform4iv","setValueV1ui","uniform1ui","setValueV2ui","uniform2ui","uniform2uiv","setValueV3ui","uniform3ui","uniform3uiv","setValueV4ui","uniform4ui","uniform4uiv","setValueT1","unit","emptyTexture2D","SAMPLER_2D_SHADOW","setTexture2D","setValueT3D1","setTexture3D","setValueT6","setTextureCube","setValueT2DArray1","setTexture2DArray","getSingularSetter","setValueV1fArray","uniform1fv","setValueV2fArray","setValueV3fArray","setValueV4fArray","setValueM2Array","setValueM3Array","setValueM4Array","setValueV1iArray","uniform1iv","setValueV2iArray","setValueV3iArray","setValueV4iArray","setValueV1uiArray","uniform1uiv","setValueV2uiArray","setValueV3uiArray","setValueV4uiArray","setValueT1Array","units","setValueT3DArray","setValueT6Array","setValueT2DArrayArray","getPureArraySetter","SingleUniform","activeInfo","PureArrayUniform","StructuredUniform","seq","RePathPart","addUniform","container","uniformObject","parseUniform","path","pathLength","lastIndex","match","matchEnd","idIsIndex","subscript","next","WebGLUniforms","getProgramParameter","ACTIVE_UNIFORMS","getActiveUniform","getUniformLocation","setOptional","upload","seqWithValue","WebGLShader","createShader","shaderSource","compileShader","COMPLETION_STATUS_KHR","programIdCount","handleSource","errorLine","split","lines2","to","join","getEncodingComponents","workingPrimaries","encodingPrimaries","gamutMapping","getShaderErrors","status","getShaderParameter","COMPILE_STATUS","errors","getShaderInfoLog","trim","errorMatches","toUpperCase","getShaderSource","getTexelEncodingFunction","functionName","getToneMappingFunction","toneMappingName","generateVertexExtensions","chunks","extensionClipCullDistance","extensionMultiDraw","filter","filterEmptyLine","generateDefines","fetchAttributeLocations","ACTIVE_ATTRIBUTES","getActiveAttrib","FLOAT_MAT2","FLOAT_MAT3","FLOAT_MAT4","getAttribLocation","replaceLightNums","numSpotLightCoords","numSpotLightShadows","numSpotLightMaps","numSpotLightShadowsWithMaps","replace","numDirLights","numSpotLights","numRectAreaLights","numPointLights","numHemiLights","numDirLightShadows","numPointLightShadows","replaceClippingPlaneNums","numClippingPlanes","numClipIntersection","includePattern","resolveIncludes","includeReplacer","shaderChunkMap","Map","include","newInclude","unrollLoopPattern","unrollLoops","loopReplacer","snippet","generatePrecision","precisionstring","generateShadowMapTypeDefine","shadowMapTypeDefine","shadowMapType","generateEnvMapTypeDefine","envMapTypeDefine","envMapMode","generateEnvMapModeDefine","envMapModeDefine","generateEnvMapBlendingDefine","envMapBlendingDefine","generateCubeUVSize","imageHeight","envMapCubeUVHeight","maxMip","texelHeight","texelWidth","WebGLProgram","cacheKey","envMapCubeUVSize","customVertexExtensions","customDefines","createProgram","prefixVertex","prefixFragment","versionString","isRawShaderMaterial","shaderType","shaderName","batching","batchingColor","instancing","instancingColor","instancingMorph","useFog","fogExp2","normalMapObjectSpace","normalMapTangentSpace","mapUv","alphaMapUv","lightMapUv","aoMapUv","emissiveMapUv","bumpMapUv","normalMapUv","displacementMapUv","metalnessMapUv","roughnessMapUv","anisotropyMapUv","clearcoatMapUv","clearcoatNormalMapUv","clearcoatRoughnessMapUv","iridescenceMapUv","iridescenceThicknessMapUv","sheenColorMapUv","sheenRoughnessMapUv","specularMapUv","specularColorMapUv","specularIntensityMapUv","transmissionMapUv","thicknessMapUv","vertexTangents","vertexAlphas","vertexUv1s","vertexUv2s","vertexUv3s","pointsUvs","skinning","morphTextureStride","doubleSided","flipSided","shadowMapEnabled","numLightProbes","decodeVideoTexture","opaque","useDepthPacking","depthPacking","vertexGlsl","fragmentGlsl","glVertexShader","glFragmentShader","attachShader","bindAttribLocation","linkProgram","onFirstUse","self","debug","checkShaderErrors","programLog","getProgramInfoLog","vertexLog","fragmentLog","runnable","haveDiagnostics","LINK_STATUS","onShaderError","vertexErrors","fragmentErrors","getError","VALIDATE_STATUS","diagnostics","prefix","deleteShader","cachedUniforms","programReady","rendererExtensionParallelShaderCompile","isReady","destroy","deleteProgram","usedTimes","_id$1","WebGLShaderCache","shaderCache","materialCache","vertexShaderStage","_getShaderStage","fragmentShaderStage","materialShaders","_getShaderCacheForMaterial","shaderStage","code","getVertexShaderID","getFragmentShaderID","stage","WebGLShaderStage","WebGLPrograms","_programLayers","_customShaders","_activeChannels","SUPPORTS_VERTEX_TEXTURES","shaderIDs","MeshDepthMaterial","MeshDistanceMaterial","MeshNormalMaterial","MeshLambertMaterial","MeshPhongMaterial","MeshToonMaterial","MeshStandardMaterial","MeshPhysicalMaterial","MeshMatcapMaterial","LineBasicMaterial","LineDashedMaterial","PointsMaterial","ShadowMaterial","SpriteMaterial","getChannel","getParameters","shadows","isMeshStandardMaterial","shaderID","customVertexShaderID","customFragmentShaderID","IS_INSTANCEDMESH","IS_BATCHEDMESH","HAS_MAP","HAS_MATCAP","HAS_ENVMAP","HAS_AOMAP","HAS_LIGHTMAP","HAS_BUMPMAP","HAS_NORMALMAP","HAS_DISPLACEMENTMAP","HAS_EMISSIVEMAP","HAS_METALNESSMAP","HAS_ROUGHNESSMAP","HAS_ANISOTROPY","HAS_CLEARCOAT","HAS_DISPERSION","HAS_IRIDESCENCE","HAS_SHEEN","HAS_TRANSMISSION","HAS_ANISOTROPYMAP","HAS_CLEARCOATMAP","HAS_CLEARCOAT_NORMALMAP","HAS_CLEARCOAT_ROUGHNESSMAP","HAS_IRIDESCENCEMAP","HAS_IRIDESCENCE_THICKNESSMAP","HAS_SHEEN_COLORMAP","HAS_SHEEN_ROUGHNESSMAP","HAS_SPECULARMAP","HAS_SPECULAR_COLORMAP","HAS_SPECULAR_INTENSITYMAP","HAS_TRANSMISSIONMAP","HAS_THICKNESSMAP","HAS_GRADIENTMAP","HAS_ALPHAMAP","HAS_ALPHATEST","HAS_ALPHAHASH","HAS_EXTENSIONS","supportsVertexTextures","isFogExp2","directional","spot","rectArea","hemi","shadowMap","isVideoTexture","getProgramCacheKey","getProgramCacheKeyParameters","getProgramCacheKeyBooleans","morphAttributeCount","acquireProgram","pl","preexistingProgram","releaseProgram","pop","releaseShaderCache","WebGLProperties","painterSortStable","groupOrder","reversePainterSortStable","WebGLRenderList","renderItems","renderItemsIndex","transmissive","getNextRenderItem","renderItem","sort","customOpaqueSort","customTransparentSort","finish","WebGLRenderLists","lists","renderCallDepth","listArray","list","UniformsCache","light","halfWidth","halfHeight","ShadowUniformsCache","nextVersion","shadowCastingAndTexturingLightsFirst","lightA","lightB","WebGLLights","shadowCache","hash","directionalLength","pointLength","spotLength","rectAreaLength","hemiLength","numDirectionalShadows","numPointShadows","numSpotShadows","numSpotMaps","ambient","directionalShadow","spotShadow","rectAreaLTC1","rectAreaLTC2","pointShadow","vector3","matrix42","numSpotShadowsWithMaps","intensity","isAmbientLight","isLightProbe","sh","coefficients","isDirectionalLight","shadowUniforms","bias","normalBias","mapSize","isSpotLight","penumbra","updateMatrices","isRectAreaLight","isPointLight","isHemisphereLight","LTC_FLOAT_1","LTC_FLOAT_2","LTC_HALF_1","LTC_HALF_2","setupView","WebGLRenderState","lightsArray","shadowsArray","pushLight","pushShadow","shadowLight","setupLights","setupLightsView","transmissionRenderTarget","WebGLRenderStates","renderStates","renderStateArray","renderState","isMeshDepthMaterial","isMeshDistanceMaterial","vertex","fragment","WebGLShadowMap","_frustum","_shadowMapSize","_viewportSize","_viewport","_depthMaterial","_distanceMaterial","_materialCache","_maxTextureSize","shadowMaterialVertical","VSM_SAMPLES","shadow_pass","resolution","shadowMaterialHorizontal","HORIZONTAL_PASS","fullScreenTri","fullScreenMesh","autoUpdate","_previousType","activeCubeFace","_state","setBlending","setScissorTest","toVSM","fromVSM","shadowFrameExtents","getFrameExtents","pars","viewportCount","getViewportCount","vp","getViewport","getFrustum","renderObject","isPointLightShadow","VSMPass","blurSamples","mapPass","renderBufferDirect","getDepthMaterial","customMaterial","customDistanceMaterial","customDepthMaterial","keyA","keyB","materialsForVariant","cachedMaterial","onMaterialDispose","shadowCamera","k","kl","depthMaterial","shadowMaterial","WebGLState","ColorBuffer","locked","currentColorMask","currentColorClear","colorMask","setLocked","lock","DepthBuffer","currentDepthMask","currentDepthFunc","currentDepthClear","DEPTH_TEST","depthMask","setFunc","NEVER","ALWAYS","LESS","LEQUAL","EQUAL","GEQUAL","GREATER","NOTEQUAL","clearDepth","StencilBuffer","currentStencilMask","currentStencilFunc","currentStencilRef","currentStencilFuncMask","currentStencilFail","currentStencilZFail","currentStencilZPass","currentStencilClear","stencilTest","STENCIL_TEST","stencilMask","setOp","stencilOp","clearStencil","colorBuffer","uboBindings","uboProgramMap","enabledCapabilities","currentBoundFramebuffers","currentDrawbuffers","defaultDrawbuffers","currentProgram","currentBlendingEnabled","currentBlending","currentBlendEquation","currentBlendSrc","currentBlendDst","currentBlendEquationAlpha","currentBlendSrcAlpha","currentBlendDstAlpha","currentBlendColor","currentBlendAlpha","currentPremultipledAlpha","currentFlipSided","currentCullFace","currentLineWidth","currentPolygonOffsetFactor","currentPolygonOffsetUnits","MAX_COMBINED_TEXTURE_IMAGE_UNITS","lineWidthAvailable","glVersion","VERSION","currentTextureSlot","currentBoundTextures","scissorParam","SCISSOR_BOX","viewportParam","VIEWPORT","currentScissor","currentViewport","createTexture","dimensions","bindTexture","texParameteri","TEXTURE_MIN_FILTER","NEAREST","TEXTURE_MAG_FILTER","TEXTURE_3D","TEXTURE_2D_ARRAY","texImage3D","RGBA","texImage2D","emptyTextures","TEXTURE_2D","TEXTURE_CUBE_MAP","TEXTURE_CUBE_MAP_POSITIVE_X","setFlipSided","setCullFace","CULL_FACE","bindFramebuffer","framebuffer","DRAW_FRAMEBUFFER","FRAMEBUFFER","drawBuffers","COLOR_ATTACHMENT0","BACK","useProgram","equationToGL","FUNC_ADD","FUNC_SUBTRACT","FUNC_REVERSE_SUBTRACT","MIN","MAX","factorToGL","ZERO","ONE","SRC_COLOR","SRC_ALPHA","SRC_ALPHA_SATURATE","DST_COLOR","DST_ALPHA","ONE_MINUS_SRC_COLOR","ONE_MINUS_SRC_ALPHA","ONE_MINUS_DST_COLOR","ONE_MINUS_DST_ALPHA","CONSTANT_COLOR","ONE_MINUS_CONSTANT_COLOR","CONSTANT_ALPHA","ONE_MINUS_CONSTANT_ALPHA","BLEND","blendFuncSeparate","blendFunc","blendEquationSeparate","setMaterial","frontFaceCW","setPolygonOffset","SAMPLE_ALPHA_TO_COVERAGE","frontFace","CW","CCW","cullFace","FRONT","FRONT_AND_BACK","setLineWidth","lineWidth","factor","POLYGON_OFFSET_FILL","SCISSOR_TEST","activeTexture","webglSlot","TEXTURE0","webglType","webglTexture","boundTexture","unbindTexture","compressedTexImage2D","apply","compressedTexImage3D","texSubImage2D","texSubImage3D","compressedTexSubImage2D","compressedTexSubImage3D","texStorage2D","texStorage3D","updateUBOMapping","uniformsGroup","blockIndex","getUniformBlockIndex","uniformBlockBinding","__bindingPointIndex","KEEP","READ_FRAMEBUFFER","contain","imageAspect","cover","getByteLength","typeByteLength","getTextureTypeByteLength","TextureUtils","WebGLTextures","_gl","multisampledRTTExt","supportsInvalidateFramebuffer","navigator","userAgent","_imageDimensions","_videoTextures","_sources","useOffscreenCanvas","OffscreenCanvas","err","createCanvas","resizeImage","needsNewCanvas","maxSize","getDimensions","VideoFrame","textureNeedsGenerateMipmaps","generateMipmap","getInternalFormat","internalFormatName","glFormat","glType","forceLinearTransfer","RED","R32F","R16F","R8","RED_INTEGER","R8UI","R16UI","R32UI","R8I","R16I","R32I","RG","RG32F","RG16F","RG8","RG_INTEGER","RG8UI","RG16UI","RG32UI","RG8I","RG16I","RG32I","RGB","UNSIGNED_INT_5_9_9_9_REV","RGB9_E5","RGBA32F","RGBA16F","SRGB8_ALPHA8","RGBA8","UNSIGNED_SHORT_4_4_4_4","RGBA4","UNSIGNED_SHORT_5_5_5_1","RGB5_A1","getInternalDepthFormat","useStencil","depthType","glInternalFormat","DEPTH24_STENCIL8","DEPTH32F_STENCIL8","DEPTH_COMPONENT24","DEPTH_COMPONENT32F","DEPTH_COMPONENT16","getMipLevels","isFramebufferTexture","isCompressedTexture","deallocateTexture","onRenderTargetDispose","deallocateRenderTarget","textureProperties","__webglInit","webglTextures","__cacheKey","deleteTexture","__webglTexture","renderTargetProperties","__webglFramebuffer","level","deleteFramebuffer","__webglDepthbuffer","deleteRenderbuffer","__webglMultisampledFramebuffer","__webglColorRenderbuffer","__webglDepthRenderbuffer","attachmentProperties","textureUnits","resetTextureUnits","textureUnit","getTextureCacheKey","slot","updateVideoTexture","__version","complete","uploadTexture","uploadCubeTexture","wrappingToGL","REPEAT","CLAMP_TO_EDGE","MIRRORED_REPEAT","filterToGL","NEAREST_MIPMAP_NEAREST","NEAREST_MIPMAP_LINEAR","LINEAR","LINEAR_MIPMAP_NEAREST","LINEAR_MIPMAP_LINEAR","compareToGL","setTextureParameters","TEXTURE_WRAP_S","TEXTURE_WRAP_T","TEXTURE_WRAP_R","TEXTURE_COMPARE_MODE","COMPARE_REF_TO_TEXTURE","TEXTURE_COMPARE_FUNC","__currentAnisotropy","texParameterf","TEXTURE_MAX_ANISOTROPY_EXT","initTexture","forceUpload","textureCacheKey","isCompressedArrayTexture","sourceProperties","texturePrimaries","unpackConversion","NONE","BROWSER_DEFAULT_WEBGL","pixelStorei","UNPACK_FLIP_Y_WEBGL","UNPACK_PREMULTIPLY_ALPHA_WEBGL","UNPACK_ALIGNMENT","UNPACK_COLORSPACE_CONVERSION_WEBGL","verifyColorSpace","mipmap","useTexStorage","allocateMemory","levels","layerByteLength","layerData","subarray","isCompressed","cubeImage","mipmapImage","setupFrameBufferTexture","attachment","textureTarget","__hasExternalTextures","useMultisampledRTT","framebufferTexture2DMultisampleEXT","getRenderTargetSamples","TEXTURE_CUBE_MAP_NEGATIVE_Z","framebufferTexture2D","setupRenderBufferStorage","renderbuffer","isMultisample","bindRenderbuffer","RENDERBUFFER","glAttachmentType","DEPTH_STENCIL_ATTACHMENT","DEPTH_ATTACHMENT","isUseMultisampledRTT","renderbufferStorageMultisampleEXT","renderbufferStorageMultisample","renderbufferStorage","framebufferRenderbuffer","setupDepthTexture","isCube","webglDepthTexture","setupDepthRenderbuffer","__autoAllocateDepthBuffer","createRenderbuffer","rebindTextures","colorTexture","setupRenderTarget","isMultipleRenderTargets","createFramebuffer","glTextureType","updateRenderTargetMipmap","invalidationArrayRead","invalidationArrayDraw","updateMultisampleRenderTarget","COLOR_BUFFER_BIT","depthStyle","DEPTH_BUFFER_BIT","STENCIL_BUFFER_BIT","blitFramebuffer","invalidateFramebuffer","__useRenderToTexture","naturalWidth","naturalHeight","displayWidth","displayHeight","WebGLUtils","ALPHA","LUMINANCE","LUMINANCE_ALPHA","DEPTH_COMPONENT","DEPTH_STENCIL","RGBA_INTEGER","COMPRESSED_SRGB_S3TC_DXT1_EXT","COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT","COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT","COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT","COMPRESSED_RGB_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT3_EXT","COMPRESSED_RGBA_S3TC_DXT5_EXT","COMPRESSED_RGB_PVRTC_4BPPV1_IMG","COMPRESSED_RGB_PVRTC_2BPPV1_IMG","COMPRESSED_RGBA_PVRTC_4BPPV1_IMG","COMPRESSED_RGBA_PVRTC_2BPPV1_IMG","COMPRESSED_SRGB8_ETC2","COMPRESSED_RGB8_ETC2","COMPRESSED_SRGB8_ALPHA8_ETC2_EAC","COMPRESSED_RGBA8_ETC2_EAC","COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR","COMPRESSED_RGBA_ASTC_4x4_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR","COMPRESSED_RGBA_ASTC_5x4_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR","COMPRESSED_RGBA_ASTC_5x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR","COMPRESSED_RGBA_ASTC_6x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR","COMPRESSED_RGBA_ASTC_6x6_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR","COMPRESSED_RGBA_ASTC_8x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR","COMPRESSED_RGBA_ASTC_8x6_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR","COMPRESSED_RGBA_ASTC_8x8_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR","COMPRESSED_RGBA_ASTC_10x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR","COMPRESSED_RGBA_ASTC_10x6_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR","COMPRESSED_RGBA_ASTC_10x8_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR","COMPRESSED_RGBA_ASTC_10x10_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR","COMPRESSED_RGBA_ASTC_12x10_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR","COMPRESSED_RGBA_ASTC_12x12_KHR","COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT","COMPRESSED_RGBA_BPTC_UNORM_EXT","COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT","COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT","COMPRESSED_RED_RGTC1_EXT","COMPRESSED_SIGNED_RED_RGTC1_EXT","COMPRESSED_RED_GREEN_RGTC2_EXT","COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT","UNSIGNED_INT_24_8","ArrayCamera","isArrayCamera","Group","isGroup","_moveEvent","WebXRController","_targetRay","_grip","_hand","getHandSpace","joints","inputState","pinching","getTargetRaySpace","hasLinearVelocity","linearVelocity","hasAngularVelocity","angularVelocity","getGripSpace","connect","inputSource","hand","inputjoint","_getHandJoint","disconnect","referenceSpace","inputPose","gripPose","handPose","targetRay","grip","session","visibilityState","jointPose","getJointPose","joint","transform","jointRadius","indexTip","thumbTip","distanceToPinch","threshold","handedness","gripSpace","getPose","targetRaySpace","jointName","_occlusion_vertex","_occlusion_fragment","WebXRDepthSensing","depthNear","depthFar","depthData","texProps","getMesh","cameraXR","depthColor","depthWidth","depthHeight","getDepthTexture","WebXRManager","framebufferScaleFactor","referenceSpaceType","foveation","customReferenceSpace","pose","glBinding","glProjLayer","glBaseLayer","xrFrame","depthSensing","getContextAttributes","initialRenderTarget","newRenderTarget","controllers","controllerInputSources","currentSize","currentPixelRatio","cameraL","cameraR","_currentDepthNear","_currentDepthFar","cameraAutoUpdate","isPresenting","getController","controller","getControllerGrip","getHand","onSessionEvent","controllerIndex","onSessionEnd","onInputSourcesChange","setPixelRatio","setFramebufferScaleFactor","setReferenceSpaceType","getReferenceSpace","setReferenceSpace","space","getBaseLayer","getBinding","getFrame","getSession","setSession","xrCompatible","makeXRCompatible","getPixelRatio","layerInit","antialias","XRWebGLLayer","updateRenderState","baseLayer","framebufferWidth","framebufferHeight","depthFormat","glDepthFormat","projectionlayerInit","colorFormat","scaleFactor","XRWebGLBinding","createProjectionLayer","textureWidth","textureHeight","ignoreDepthValues","setFoveation","requestReferenceSpace","removed","added","cameraLPos","cameraRPos","setProjectionFromUnion","ipd","projL","projR","topFov","bottomFov","leftFov","rightFov","zOffset","xOffset","near2","far2","left2","right2","top2","bottom2","updateCamera","updateUserCamera","getCamera","getFoveation","fixedFoveation","hasDepthSensing","getDepthSensingMesh","onAnimationFrameCallback","getViewerPose","views","setRenderTargetFramebuffer","cameraXRNeedsUpdate","glSubImage","getViewSubImage","setRenderTargetTextures","depthStencilTexture","enabledFeatures","includes","getDepthInformation","isValid","detectedPlanes","_e1","_m1","WebGLMaterials","refreshTransformUniform","refreshFogUniforms","isFog","density","refreshMaterialUniforms","pixelRatio","refreshUniformsCommon","isMeshLambertMaterial","isMeshToonMaterial","refreshUniformsToon","isMeshPhongMaterial","refreshUniformsPhong","refreshUniformsStandard","isMeshPhysicalMaterial","refreshUniformsPhysical","isMeshMatcapMaterial","refreshUniformsMatcap","refreshUniformsDistance","isMeshNormalMaterial","isLineBasicMaterial","refreshUniformsLine","isLineDashedMaterial","refreshUniformsDash","isPointsMaterial","refreshUniformsPoints","isSpriteMaterial","refreshUniformsSprites","isShadowMaterial","WebGLUniformsGroups","updateList","allocatedBindingPoints","maxBindingPoints","MAX_UNIFORM_BUFFER_BINDINGS","bind","webglProgram","prepareUniformsGroup","onUniformsGroupsDispose","updateBufferData","bindingPointIndex","allocateBindingPointIndex","__size","UNIFORM_BUFFER","bindBufferBase","__cache","uniformArray","hasUniformChanged","__offset","arrayOffset","getUniformSize","__data","storage","indexArray","indexString","cachedObject","chunkSize","chunkOffsetUniform","boundary","chunkOffset","WebGLRenderer","preserveDrawingBuffer","powerPreference","failIfMajorPerformanceCaveat","isWebGLRenderer","_alpha","WebGLRenderingContext","uintClearColor","intClearColor","currentRenderList","currentRenderState","renderListStack","renderStateStack","domElement","_outputColorSpace","toneMappingExposure","_this","_isContextLost","_currentActiveCubeFace","_currentActiveMipmapLevel","_currentRenderTarget","_currentMaterialId","_currentCamera","_currentViewport","_currentScissor","_currentScissorTest","_currentClearColor","_currentClearAlpha","_width","_height","_pixelRatio","_opaqueSort","_transparentSort","_scissor","_scissorTest","_clippingEnabled","_localClippingEnabled","_projScreenMatrix","_vector3","_vector4","_emptyScene","overrideMaterial","_renderBackground","getTargetPixelRatio","contextName","contextAttributes","onContextLost","onContextRestore","onContextCreationError","programCache","renderLists","morphtargets","bufferRenderer","indexedBufferRenderer","initGLContext","forceContextLoss","loseContext","forceContextRestore","restoreContext","updateStyle","setViewport","getDrawingBufferSize","setDrawingBufferSize","getCurrentViewport","getScissor","setScissor","getScissorTest","boolean","setOpaqueSort","method","setTransparentSort","bits","isIntegerFormat","targetFormat","targetType","isUnsignedType","clearBufferuiv","COLOR","clearBufferiv","onXRSessionStart","onXRSessionEnd","preventDefault","infoAutoReset","shadowMapAutoUpdate","shadowMapNeedsUpdate","statusMessage","deallocateMaterial","releaseMaterialProgramReferences","forEach","setProgram","rangeFactor","drawStart","drawEnd","isLineSegments","isLineLoop","isSprite","_multiDrawInstances","_multiDrawStarts","_multiDrawCounts","_multiDrawCount","prepareMaterial","getProgram","targetScene","material2","compileAsync","checkMaterialsReady","depthSensingMesh","projectObject","opaqueObjects","transmissiveObjects","camera2","renderTransmissionPass","renderScene","isLOD","transparentObjects","renderObjects","activeViewport","currentToneMapping","currentCameraViewport","renderTargetNeedsUpdate","currentSide","lightsStateVersion","programCacheKey","environmentRotation","updateCommonMaterialProperties","needsLights","materialNeedsLights","uniformsList","getUniformList","progUniforms","needsProgramChange","refreshProgram","refreshMaterial","refreshLights","p_uniforms","m_uniforms","uCamPos","cameraPosition","boneTexture","computeBoneTexture","_indirectTexture","isMeshGouraudMaterial","environmentIntensity","markUniformsLightsNeedsUpdate","defaultFramebuffer","__useDefaultFramebuffer","useDefaultFramebuffer","isRenderTarget3D","framebufferBound","layer","framebufferTextureLayer","readRenderTargetPixels","activeCubeFaceIndex","readPixels","readRenderTargetPixelsAsync","glBuffer","PIXEL_PACK_BUFFER","STREAM_READ","flush","fenceSync","SYNC_GPU_COMMANDS_COMPLETE","getBufferSubData","deleteSync","copyFramebufferToTexture","levelScale","copyTexSubImage2D","copyTextureToTexture","srcTexture","dstTexture","srcRegion","dstPosition","minX","minY","dstX","dstY","currentUnpackRowLen","UNPACK_ROW_LENGTH","currentUnpackImageHeight","UNPACK_IMAGE_HEIGHT","currentUnpackSkipPixels","UNPACK_SKIP_PIXELS","currentUnpackSkipRows","UNPACK_SKIP_ROWS","currentUnpackSkipImages","UNPACK_SKIP_IMAGES","copyTextureToTexture3D","minZ","dstZ","glTarget","initRenderTarget","resetState","__THREE_DEVTOOLS__","CustomEvent","detail","drawingBufferColorSpace","unpackColorSpace","FogExp2","Fog","Scene","InterleavedBuffer","isInterleavedBuffer","arrayBuffers","_uuid","ib","_vector$6","InterleavedBufferAttribute","interleavedBuffer","interleavedBuffers","_geometry","_intersectPoint","_worldScale","_mvPosition","_alignedPosition","_rotatedPosition","_viewWorldMatrix","_vA","_vB","_vC","_uvA","_uvB","_uvC","Sprite","float32Array","transformVertex","vertexPosition","mvPosition","_v1$2","_v2$1","LOD","_currentLevel","addLevel","hysteresis","getCurrentLevel","getObjectForDistance","levelDistance","_basePosition","_skinIndex","_skinWeight","_matrix4","_vertex","_sphere$4","_inverseMatrix$2","_ray$2","SkinnedMesh","bindMatrixInverse","applyBoneTransform","calculateInverses","normalizeSkinWeights","skinWeight","skinIndex","boneIndex","bones","boneInverses","Bone","isBone","DataTexture","_offsetMatrix","_identityMatrix$1","Skeleton","boneMatrices","inverse","bone","getBoneByName","json","boneInverse","InstancedBufferAttribute","_instanceLocalMatrix","_instanceWorldMatrix","_instanceIntersects","_box3","_identity","_mesh$1","_sphere$3","InstancedMesh","setMatrixAt","getMatrixAt","getColorAt","getMorphAt","dataIndex","raycastTimes","instanceId","setColorAt","setMorphAt","sortOpaque","sortTransparent","MultiDrawRenderList","pool","item","_matrix$1","_invMatrixWorld","_identityMatrix","_whiteColor","_projScreenMatrix$2","_box$1","_sphere$2","_vector$5","_forward","_temp","_renderList","_mesh","_batchIntersects","copyAttributeData","targetOffset","vertexCount","BatchedMesh","customSort","_drawInfo","_visibilityChanged","_initMatricesTexture","_initIndirectTexture","matricesArray","indirectArray","indirectTexture","_initColorsTexture","colorsArray","_initializeGeometry","reference","attributeName","srcAttribute","dstAttribute","_validateGeometry","batchGeometry","Boolean","setCustomSort","func","drawInfo","getBoundingBoxAt","getBoundingSphereAt","addInstance","drawId","addGeometry","indexCount","reservedRange","vertexStart","indexStart","lastRange","hasIndex","setGeometryAt","dstIndex","srcIndex","posAttr","iv","setVisibleAt","getVisibleAt","batchId","inf","multiDrawStarts","multiDrawCounts","culled","linecap","linejoin","_vStart","_vEnd","_inverseMatrix$1","_ray$1","_sphere$1","_intersectPointOnRay","_intersectPointOnSegment","Line","computeLineDistances","lineDistances","localThreshold","localThresholdSq","checkIntersection","thresholdSq","distSq","_start","_end","LineSegments","LineLoop","_inverseMatrix","_ray","_sphere","_position$2","Points","testPoint","rayPointDistanceSq","intersectPoint","distanceToRay","VideoTexture","video","updateVideo","requestVideoFrameCallback","hasVideoFrameCallback","readyState","HAVE_CURRENT_DATA","FramebufferTexture","CompressedTexture","CompressedArrayTexture","CompressedCubeTexture","isCompressedCubeTexture","CanvasTexture","isCanvasTexture","Curve","arcLengthDivisions","getPoint","getPointAt","optionalTarget","getUtoTmapping","getPoints","divisions","getSpacedPoints","getLength","lengths","getLengths","cacheArcLengths","current","last","updateArcLengths","arcLengths","targetArcLength","comparison","lengthBefore","lengthAfter","segmentLength","segmentFraction","getTangent","t2","pt1","pt2","getTangentAt","computeFrenetFrames","segments","closed","tangents","binormals","vec","mat","MAX_VALUE","EllipseCurve","aX","aY","xRadius","yRadius","aStartAngle","aEndAngle","aClockwise","aRotation","isEllipseCurve","twoPi","deltaAngle","samePoints","ArcCurve","aRadius","isArcCurve","CubicPoly","c0","initCatmullRom","x3","tension","initNonuniformCatmullRom","dt0","dt1","dt2","calc","t3","px","py","pz","CatmullRomCurve3","curveType","isCatmullRomCurve3","intPoint","CatmullRom","QuadraticBezierP0","QuadraticBezierP1","QuadraticBezierP2","QuadraticBezier","CubicBezierP0","CubicBezierP1","CubicBezierP2","CubicBezierP3","CubicBezier","CubicBezierCurve","isCubicBezierCurve","CubicBezierCurve3","isCubicBezierCurve3","LineCurve","isLineCurve","LineCurve3","isLineCurve3","QuadraticBezierCurve","isQuadraticBezierCurve","QuadraticBezierCurve3","isQuadraticBezierCurve3","SplineCurve","isSplineCurve","Curves","freeze","__proto__","CurvePath","curves","autoClose","curve","closePath","startPoint","endPoint","lineType","curveLengths","getCurveLengths","diff","lens","cacheLengths","sums","pts","Path","currentPoint","moveTo","lineTo","quadraticCurveTo","aCPx","aCPy","bezierCurveTo","aCP1x","aCP1y","aCP2x","aCP2y","splineThru","npts","arc","absarc","absellipse","ellipse","firstPoint","lastPoint","LatheGeometry","phiStart","phiLength","initNormals","inverseSegments","curNormal","prevNormal","base","CapsuleGeometry","capSegments","radialSegments","CircleGeometry","thetaStart","thetaLength","segment","CylinderGeometry","radiusTop","radiusBottom","openEnded","generateTorso","generateCap","slope","indexRow","sinTheta","cosTheta","centerIndexStart","centerIndexEnd","ConeGeometry","PolyhedronGeometry","vertexBuffer","uvBuffer","subdivide","applyRadius","generateUVs","getVertexByIndex","subdivideFace","cols","aj","bj","rows","pushVertex","azimuth","inclination","correctUVs","correctSeam","centroid","azi","correctUV","details","DodecahedronGeometry","_v0","_v1$1","_normal","_triangle","EdgesGeometry","thresholdAngle","precisionPoints","thresholdDot","indexAttr","positionAttr","indexArr","vertKeys","hashes","edgeData","jNext","vecHash0","vecHash1","reverseHash","index0","Shape","holes","getPointsHoles","holesPts","extractPoints","hole","Earcut","triangulate","holeIndices","dim","hasHoles","outerLen","outerNode","linkedList","prev","maxX","maxY","invSize","eliminateHoles","earcutLinked","clockwise","signedArea","insertNode","removeNode","filterPoints","again","steiner","area","ear","pass","indexCurve","isEarHashed","isEar","cureLocalIntersections","splitEarcut","pointInTriangle","zOrder","maxZ","prevZ","nextZ","locallyInside","isValidDiagonal","splitPolygon","queue","getLeftmost","compareX","eliminateHole","bridge","findHoleBridge","bridgeReverse","hx","hy","mx","my","tanMin","sectorContainsSector","sortLinked","tail","numMerges","pSize","qSize","inSize","leftmost","intersectsPolygon","middleInside","q1","q2","o1","o2","o3","o4","onSegment","num","inside","Node","an","bp","ShapeUtils","contour","isClockWise","triangulateShape","faces","removeDupEndPts","addContour","holeIndex","ExtrudeGeometry","verticesArray","uvArray","addShape","placeholder","curveSegments","steps","bevelEnabled","bevelThickness","bevelSize","bevelOffset","bevelSegments","extrudePath","uvgen","UVGenerator","WorldUVGenerator","extrudePts","extrudeByPath","splineTube","binormal","position2","shapePoints","reverse","hl","ahole","scalePt2","pt","vlen","flen","getBevelVec","inPt","inPrev","inNext","v_trans_x","v_trans_y","shrink_by","v_prev_x","v_prev_y","v_next_x","v_next_y","v_prev_lensq","collinear0","v_prev_len","v_next_len","ptPrevShift_x","ptPrevShift_y","ptNextShift_x","ptNextShift_y","sf","v_trans_lensq","direction_eq","contourMovements","holesMovements","oneHoleMovements","verticesMovements","bs","vert","buildLidFaces","buildSideFaces","f3","layeroffset","sidewalls","sl","slen1","slen2","f4","addVertex","nextIndex","generateTopUV","addUV","generateSideWallUV","vector2","toJSON$1","geometryShapes","indexA","indexB","indexC","a_x","a_y","b_x","b_y","c_x","c_y","indexD","a_z","b_z","c_z","d_x","d_y","d_z","IcosahedronGeometry","OctahedronGeometry","RingGeometry","innerRadius","outerRadius","thetaSegments","phiSegments","radiusStep","thetaSegmentLevel","ShapeGeometry","indexOffset","shapeVertices","shapeHoles","shapeHole","SphereGeometry","thetaEnd","grid","verticesRow","uOffset","TetrahedronGeometry","TorusGeometry","tube","tubularSegments","TorusKnotGeometry","P1","P2","B","T","N","calculatePositionOnCurve","cu","su","quOverP","cs","TubeGeometry","frames","P","generateBufferData","generateSegment","generateIndices","WireframeGeometry","edges","o","ol","isUniqueEdge","hash1","hash2","Geometries","RawShaderMaterial","_anisotropy","_clearcoat","_dispersion","_iridescence","_sheen","_transmission","convertArray","forceClone","isTypedArray","isView","DataView","getKeyframeOrder","times","compareTime","sortedArray","nValues","srcOffset","flattenJSON","jsonKeys","valuePropertyName","subclip","sourceClip","startFrame","endFrame","fps","clip","tracks","track","valueSize","getValueSize","minStartTime","shift","resetDuration","makeClipAdditive","targetClip","referenceFrame","referenceClip","numTracks","referenceTime","referenceTrack","referenceTrackType","ValueTypeName","targetTrack","find","referenceOffset","referenceValueSize","createInterpolant","isInterpolantFactoryMethodGLTFCubicSpline","targetValueSize","referenceValue","startIndex","endIndex","interpolant","evaluate","resultBuffer","referenceQuat","numTimes","valueStart","valueEnd","blendMode","AnimationUtils","Interpolant","parameterPositions","sampleValues","sampleSize","_cachedIndex","settings","DefaultSettings_","pp","validate_interval","seek","linear_scan","forward_scan","giveUpAt","copySampleValue_","t1global","mid","intervalChanged_","interpolate_","getSettings_","CubicInterpolant","_weightPrev","_offsetPrev","_weightNext","_offsetNext","endingStart","endingEnd","iPrev","iNext","tPrev","tNext","halfDt","o0","oP","oN","wP","wN","ppp","sP","sN","LinearInterpolant","offset1","offset0","weight1","weight0","DiscreteInterpolant","KeyframeTrack","interpolation","TimeBufferType","ValueBufferType","setInterpolation","DefaultInterpolation","trackType","InterpolantFactoryMethodDiscrete","InterpolantFactoryMethodLinear","InterpolantFactoryMethodSmooth","factoryMethod","timeOffset","timeScale","startTime","endTime","nKeys","validate","valid","prevTime","currTime","optimize","smoothInterpolation","writeIndex","keep","timeNext","offsetP","offsetN","readOffset","writeOffset","TypedKeyframeTrack","BooleanKeyframeTrack","ColorKeyframeTrack","NumberKeyframeTrack","QuaternionLinearInterpolant","QuaternionKeyframeTrack","StringKeyframeTrack","VectorKeyframeTrack","AnimationClip","duration","jsonTracks","frameTime","parseKeyframeTrack","clipTracks","CreateFromMorphTargetSequence","morphTargetSequence","noLoop","numMorphTargets","findByName","objectOrClipArray","clipArray","CreateClipsFromMorphTargetSequences","animationToMorphTargets","pattern","parts","animationMorphTargets","clips","parseAnimation","addNonemptyTrack","trackName","animationKeys","propertyName","destTracks","clipName","hierarchyTracks","hierarchy","morphTargetNames","morphTargetName","animationKey","boneName","getTrackTypeForValueTypeName","typeName","Cache","files","file","LoadingManager","onLoad","onProgress","onError","isLoading","itemsLoaded","itemsTotal","urlModifier","handlers","onStart","itemStart","itemEnd","itemError","resolveURL","setURLModifier","addHandler","regex","loader","removeHandler","getHandler","global","DefaultLoadingManager","Loader","manager","crossOrigin","withCredentials","resourcePath","requestHeader","load","loadAsync","setCrossOrigin","setWithCredentials","setPath","setResourcePath","setRequestHeader","DEFAULT_MATERIAL_NAME","loading","HttpError","response","FileLoader","req","Request","headers","Headers","credentials","mimeType","responseType","fetch","then","ReadableStream","body","getReader","callbacks","reader","contentLength","total","lengthComputable","loaded","stream","readData","read","_ref","done","close","ProgressEvent","enqueue","Response","statusText","arrayBuffer","blob","text","parser","DOMParser","parseFromString","re","label","decoder","TextDecoder","decode","catch","finally","setResponseType","setMimeType","AnimationLoader","CompressedTextureLoader","loadTexture","texDatas","mipmapCount","isCubemap","ImageLoader","onImageLoad","removeEventListeners","onImageError","CubeTextureLoader","urls","DataTextureLoader","texData","TextureLoader","Light","HemisphereLight","_projScreenMatrix$1","_lightPositionWorld$1","_lookTarget$1","LightShadow","_frameExtents","_viewportCount","_viewports","shadowMatrix","viewportIndex","SpotLightShadow","isSpotLightShadow","SpotLight","power","_lightPositionWorld","_lookTarget","PointLightShadow","_cubeDirections","_cubeUps","PointLight","DirectionalLightShadow","isDirectionalLightShadow","DirectionalLight","AmbientLight","RectAreaLight","SphericalHarmonics3","isSphericalHarmonics3","zero","getAt","coeff","getIrradianceAt","addScaledSH","getBasisAt","shBasis","LightProbe","MaterialLoader","getTexture","createMaterialFromType","setTextures","materialLib","LoaderUtils","decodeText","fromCharCode","decodeURIComponent","escape","extractUrlBase","lastIndexOf","InstancedBufferGeometry","BufferGeometryLoader","interleavedBufferMap","arrayBufferMap","getInterleavedBuffer","getArrayBuffer","typedArray","bufferAttribute","bufferAttributeConstr","drawcalls","offsets","ObjectLoader","parseAsync","parseAnimations","parseShapes","parseGeometries","parseImages","parseTextures","parseMaterials","parseObject","parseSkeletons","bindSkeletons","bindLightTargets","hasImages","parseImagesAsync","bufferGeometryLoader","loadImage","deserializeImage","imageArray","currentUrl","deserializedImage","parseConstant","TEXTURE_MAPPING","TEXTURE_WRAPPING","TEXTURE_FILTER","getGeometry","getMaterial","isInteger","objectAnimations","ImageBitmapLoader","isImageBitmapLoader","createImageBitmap","setOptions","imageBitmap","fetchOptions","promise","res","colorSpaceConversion","_context","AudioContext","window","webkitAudioContext","AudioLoader","bufferCopy","decodeAudioData","audioBuffer","handleError","_eyeRight","_eyeLeft","_projectionMatrix","StereoCamera","eyeSep","eyeSepHalf","eyeSepOnProjection","ymax","xmin","xmax","Clock","autoStart","oldTime","elapsedTime","running","now","getElapsedTime","getDelta","newTime","performance","Date","_position$1","_quaternion$1","_scale$1","_orientation$1","AudioListener","gain","createGain","destination","timeDelta","_clock","getInput","removeFilter","getFilter","setFilter","getMasterVolume","setMasterVolume","setTargetAtTime","currentTime","positionX","linearRampToValueAtTime","positionY","positionZ","forwardX","forwardY","forwardZ","upX","upY","upZ","setOrientation","Audio","autoplay","detune","loop","loopStart","loopEnd","playbackRate","isPlaying","hasPlaybackControl","sourceType","_startedAt","_progress","_connected","filters","getOutput","setNodeSource","audioNode","setMediaElementSource","mediaElement","createMediaElementSource","setMediaStreamSource","mediaStream","createMediaStreamSource","setBuffer","play","delay","createBufferSource","onended","onEnded","setDetune","setPlaybackRate","pause","getFilters","setFilters","getDetune","getPlaybackRate","getLoop","setLoop","setLoopStart","setLoopEnd","getVolume","setVolume","_position","_quaternion","_scale","_orientation","PositionalAudio","panner","createPanner","panningModel","getRefDistance","refDistance","setRefDistance","getRolloffFactor","rolloffFactor","setRolloffFactor","getDistanceModel","distanceModel","setDistanceModel","getMaxDistance","maxDistance","setMaxDistance","setDirectionalCone","coneInnerAngle","coneOuterAngle","coneOuterGain","orientationX","orientationY","orientationZ","AudioAnalyser","audio","fftSize","analyser","createAnalyser","frequencyBinCount","getFrequencyData","getByteFrequencyData","getAverageFrequency","PropertyMixer","binding","mixFunction","mixFunctionAdditive","setIdentity","_slerp","_slerpAdditive","_setAdditiveIdentityQuaternion","_workIndex","_select","_setAdditiveIdentityOther","_lerp","_lerpAdditive","_setAdditiveIdentityNumeric","_mixBufferRegion","_mixBufferRegionAdditive","_setIdentity","_origIndex","_addIndex","cumulativeWeight","cumulativeWeightAdditive","useCount","referenceCount","accumulate","accuIndex","currentWeight","mix","accumulateAdditive","weightAdditive","originalValueOffset","saveOriginalState","getValue","restoreOriginalState","targetIndex","workOffset","_RESERVED_CHARS_RE","_reservedRe","RegExp","_wordChar","_wordCharOrDot","_directoryRe","_nodeRe","_objectRe","_propertyRe","_trackRe","_supportedObjectNames","Composite","targetGroup","optionalParsedPath","parsedPath","PropertyBinding","parseTrackName","_targetGroup","_bindings","subscribe_","firstValidIndex","nCachedObjects_","bindings","unbind","rootNode","node","findNode","nodeName","_getValue_unbound","_setValue_unbound","create","root","isAnimationObjectGroup","sanitizeNodeName","matches","results","objectName","objectIndex","propertyIndex","lastDot","substring","searchNodeSubtree","childNode","subTreeNode","_getValue_unavailable","_setValue_unavailable","_getValue_direct","targetObject","_getValue_array","resolvedProperty","_getValue_arrayElement","_getValue_toArray","_setValue_direct","_setValue_direct_setNeedsUpdate","_setValue_direct_setMatrixWorldNeedsUpdate","_setValue_array","dest","_setValue_array_setNeedsUpdate","_setValue_array_setMatrixWorldNeedsUpdate","_setValue_arrayElement","_setValue_arrayElement_setNeedsUpdate","_setValue_arrayElement_setMatrixWorldNeedsUpdate","_setValue_fromArray","_setValue_fromArray_setNeedsUpdate","_setValue_fromArray_setMatrixWorldNeedsUpdate","targetArray","sourceArray","nodeProperty","versioning","Versioning","None","NeedsUpdate","MatrixWorldNeedsUpdate","bindingType","BindingType","Direct","ArrayElement","HasFromToArray","EntireArray","GetterByBindingType","SetterByBindingTypeAndVersioning","AnimationObjectGroup","_objects","_indicesByUUID","_paths","_parsedPaths","_bindingsIndicesByPath","stats","inUse","bindingsPerObject","indicesByUUID","paths","parsedPaths","nBindings","knownObject","nObjects","nCachedObjects","firstActiveIndex","lastCachedObject","bindingsForPath","lastCached","lastCachedIndex","firstActiveObject","firstActive","uncache","lastObject","indicesByPath","unsubscribe_","lastBindingsIndex","lastBindings","lastBindingsPath","AnimationAction","mixer","localRoot","_mixer","_clip","_localRoot","nTracks","interpolants","interpolantSettings","_interpolantSettings","_interpolants","_propertyBindings","_cacheIndex","_byClipCacheIndex","_timeScaleInterpolant","_weightInterpolant","_loopCount","_startTime","_effectiveTimeScale","_effectiveWeight","repetitions","paused","clampWhenFinished","zeroSlopeAtStart","zeroSlopeAtEnd","_activateAction","_deactivateAction","stopFading","stopWarping","isRunning","_isActiveAction","isScheduled","startAt","setEffectiveWeight","getEffectiveWeight","fadeIn","_scheduleFading","fadeOut","crossFadeFrom","fadeOutAction","warp","fadeInDuration","fadeOutDuration","startEndRatio","endStartRatio","crossFadeTo","fadeInAction","weightInterpolant","_takeBackControlInterpolant","setEffectiveTimeScale","getEffectiveTimeScale","setDuration","syncWith","action","halt","startTimeScale","endTimeScale","_lendControlInterpolant","timeScaleInterpolant","getMixer","getClip","getRoot","_root","_update","deltaTime","timeDirection","_updateWeight","timeRunning","_updateTimeScale","clipTime","_updateTime","propertyMixers","interpolantValue","loopCount","pingPong","_setEndings","handle_stop","loopDelta","pending","atStart","atEnd","weightNow","weightThen","_controlInterpolantsResultBuffer","AnimationMixer","_initMemoryManager","_accuIndex","_bindAction","prototypeAction","rootUuid","bindingsByRoot","_bindingsByRootAndName","bindingsByName","_addInactiveBinding","clipUuid","actionsForClip","_actionsByClip","knownActions","_addInactiveAction","_lendBinding","_lendAction","_takeBackBinding","_takeBackAction","_actions","_nActiveActions","_nActiveBindings","_controlInterpolants","_nActiveControlInterpolants","actions","controlInterpolants","actionsByClip","actionByRoot","_removeInactiveAction","lastInactiveAction","cacheIndex","knownActionsForClip","lastKnownAction","byClipCacheIndex","_removeInactiveBindingsForAction","_removeInactiveBinding","prevIndex","lastActiveIndex","firstInactiveAction","firstInactiveIndex","lastActiveAction","bindingByName","propBinding","lastInactiveBinding","firstInactiveBinding","lastActiveBinding","__cacheIndex","lastActiveInterpolant","clipAction","optionalRoot","clipObject","existingAction","newAction","stopAllAction","nActions","setTime","timeInSeconds","uncacheClip","actionsToRemove","uncacheRoot","uncacheAction","Uniform","_id","UniformsGroup","isUniformsGroup","setName","uniformsSource","InstancedInterleavedBuffer","GLBufferAttribute","setType","setItemSize","setCount","_matrix","Raycaster","setFromCamera","coords","setFromXRController","intersectObject","ascSort","intersectObjects","propagate","Spherical","other","makeSafe","EPS","setFromCartesianCoords","Cylindrical","_vector$4","Box2","isBox2","_startP","_startEnd","Line3","distanceSq","closestPointToPointParameter","clampToLine","startEnd2","startEnd_startP","_vector$3","SpotLightHelper","positions","cone","coneLength","coneWidth","_vector$2","_boneMatrix","_matrixWorldInv","SkeletonHelper","getBoneList","colors","isSkeletonHelper","boneList","PointLightHelper","sphereSize","_vector$1","_color1","_color2","HemisphereLightHelper","GridHelper","PolarGridHelper","sectors","rings","_v1","_v2","_v3","DirectionalLightHelper","lightPlane","targetLine","_vector","_camera","CameraHelper","pointMap","addLine","addPoint","colorFrustum","colorCone","colorUp","colorTarget","colorCross","setColors","colorAttribute","setPoint","_box","BoxHelper","Box3Helper","PlaneHelper","positions2","_axis","_lineGeometry","_coneGeometry","ArrowHelper","headLength","headWidth","setDirection","setColor","AxesHelper","xAxisColor","yAxisColor","zAxisColor","ShapePath","subPaths","currentPath","toShapes","isCCW","toShapesNoHoles","inSubpaths","tmpPath","tmpShape","isPointInsidePolygon","inPolygon","polyLen","edgeLowPt","edgeHighPt","edgeDx","edgeDy","perpEdge","solid","holesFirst","betterShapeHoles","newShapes","newShapeHoles","mainIdx","tmpPoints","ambiguous","toChange","sIdx","sLen","sho","hIdx","ho","hole_unassigned","s2Idx","tmpHoles","WebGLMultipleRenderTargets","isWebGLMultipleRenderTargets","revision","__THREE__","_","_interopRequireDefault","require","_lekshmimam","_joshansir","_jishnu","_Sreejesh","_kps","_2","_radhika","_chickoo","_3","_4","_5","_6","_7","_8","_9","_10","_11","_12","_13","_14","_15","_16","_bg","_gogo","_w2","__esModule","default","avatar1","avatar2","avatar3","avatar4","avatar5","avatar6","avatar7","avatar8","avatar9","avatar10","avatar11","bg1","bg2","bg3","bg4","bg5","bg6","bg7","bg8","bg9","bg10","bg11","bg12","bg13","_default","THREE","_interopRequireWildcard","_images","_getRequireWildcardCache","getOwnPropertyDescriptor","hasOwnProperty","querySelector","innerWidth","innerHeight","appendChild","clock","animate","anim1","anim2"],"mappings":";;AEAA,IAAA4wK,KAAA,GAAAC,uBAAA,CAAAtD,OAAA;AACA,IAAAuD,OAAA,GAAAxD,sBAAA,CAAAC,OAAA;AAA8B,SAAAD,uBAAAt3J,CAAA,WAAAA,CAAA,IAAAA,CAAA,CAAAi5J,UAAA,GAAAj5J,CAAA,KAAAk5J,OAAA,EAAAl5J,CAAA;AAAA,SAAA+6J,yBAAA/6J,CAAA,6BAAA01C,OAAA,mBAAAtvC,CAAA,OAAAsvC,OAAA,IAAAn7C,CAAA,OAAAm7C,OAAA,YAAAqlH,wBAAA,YAAAA,CAAA/6J,CAAA,WAAAA,CAAA,GAAAzF,CAAA,GAAA6L,CAAA,KAAApG,CAAA;ADD9B,ACC8B,IDD9Bq3J,CAAA,GAAAC,CCC8BuD,qBDD9B,CAAAtD,ECC8Bv3J,CAAA,EAAAoG,CAAA,CDD9B,QCC8BA,CAAA,IAAApG,CAAA,IAAAA,CAAA,CAAAi5J,UAAA,SAAAj5J,CAAA,eAAAA,CAAA,uBAAAA,CAAA,yBAAAA,CAAA,WAAAk5J,OAAA,EAAAl5J,CAAA,QAAAzF,CAAA,GAAAwgK,wBAAA,CAAA30J,CAAA,OAAA7L,CAAA,IAAAA,CAAA,CAAA4P,GAAA,CAAAnK,CAAA,UAAAzF,CAAA,CAAAq8C,GAAA,CAAA52C,CAAA,OAAApG,CAAA,KAAAsuH,SAAA,UAAA1rH,CAAA,GAAA6P,MAAA,CAAAC,cAAA,IAAAD,MAAA,CAAA2uJ,wBAAA,WAAAx/I,CAAA,IAAAxb,CAAA,oBAAAwb,CAAA,OAAAy/I,cAAA,CAAAziK,IAAA,CAAAwH,CAAA,EAAAwb,CAAA,SAAAnjB,CAAA,GAAAmE,CAAA,GAAA6P,MAAA,CAAA2uJ,wBAAA,CAAAh7J,CAAA,EAAAwb,CAAA,UAAAnjB,CAAA,KAAAA,CAAA,CAAAu+C,GAAA,IAAAv+C,CAAA,CAAAiF,GAAA,IAAA+O,MAAA,CAAAC,cAAA,CAAA1S,CAAA,EAAA4hB,CAAA,EAAAnjB,CAAA,IAAAuB,CAAA,CAAA4hB,CAAA,IAAAxb,CAAA,CAAAwb,CAAA,YAAA5hB,CAAA,CAAAs/J,OAAA,GAAAl5J,CAAA,EAAAzF,CAAA,IAAAA,CAAA,CAAA+C,GAAA,CAAA0C,CAAA,EAAApG,CAAA,GAAAA,CAAA;ADA9B,ACCA,IDDA49J,ECCMpyF,SDDN,ACCe,GDDfkyF,ACCkBzvJ,QAAQ,CAACqzJ,aDD3B,ACCwC,CDDxC3D,ACCyC,ODDzC,ICCoD,CAAC;ADArD,ACEA,IDFAE,ECEMzuB,MAAM,EDFZ,CCEe,EDFfsuB,ECEmBsD,KAAK,CAAC5sB,aAAa,CDFtC,ACEuC,CDFvCupB,ACEwC,ODFxC;AACA,ACEA,IDFAG,ECEM/mH,KDFN,ACEW,GDFX2mH,ACEc,IAAIsD,KAAK,CAAC7kD,KAAK,CAAC,CAAC,KDF/B,CAAAwhD,OAAA;AACA,ACEA,IDFAI,ECEMp+I,MAAM,CDFZ,ECEe,CDFf+9I,GCEmBsD,KAAK,CAAC3sH,aDFzB,CAAAspH,GCE0C,CACtC,EAAE,CDHN,CCIIpjB,MAAM,CAACgnB,UAAU,GAAChnB,MAAM,CAACinB,WAAW,EACpC,GAAG;ADJP,ACIS,IDJTxD,IAAA,GAAAN,sBAAA,CAAAC,OAAA;AACA,ACII,IDJJM,ACIQ,CAAC,CDJT,GAAAP,sBAAA,CAAAC,OAAA;ADNA,ACOA,ACKA,CAAC,GDLDO,QAAA,GAAAR,sBAAA,CAAAC,OAAA;ADNA,ACOA,ACKA,IDLAQ,QAAA,GAAAT,sBAAA,CAAAC,OAAA;ADNA,ACOA,IAAAS,EAAA,GAAAV,sBAAA,CAAAC,OAAA;ADNA,ACOA,ACKA,IDLAU,EAAA,ACKM7rH,GDLNkrH,KCKc,GAAG,IAAIsD,KAAK,CAACnxD,IDL3B,CAAA8tD,OAAA,CCKwC,CAAC;AFXzC,ACQA,ECIIt1D,EDJJi2D,EAAA,GAAAZ,ECIa,EAAE,kBDJf,CAAAC,OAAA;ADPA,ACQA,ACIA,CAAC,CAAC,EDJFY,EDRMnuK,ACQN,GAAAstK,KDRc,GAAArtK,OAAA,CAAAD,MCQd,CAAAutK,CDRc,GAAG,GCQjB,EDRsB;AAEtB,ACOA,ACIAnrH,IDJAgsH,EDPMluK,ACON,ECIQ,CDJRotK,ACIS5kJ,EFXE,GAAAzoB,EEWK,CAACkqJ,IFXN,CAAAjqJ,CEWY,CAACixK,GFXb,GAAG,CCOd,CAAA5D,ECIkC,EAAEpjB,GDJpC,GCI0C,CAACinB,WAAW,CAAC;ADHvD,ACIAh2F,EFZgBj7E,ECQhBkuK,EDRoB,ACQpB,EDRsB,CAAC,ACQvBf,ACIS,CAAC+D,WAAW,CAACjvH,QAAQ,CDJ9B,ACI+Bk+D,CDJ/BitD,OAAA,ECIyC,CAAC;ADH1C,EDTyBntK,ECSzBkuK,EAAA,EDT+B,CCS/BhB,CDTiC,CAAC,oBCSlC,CAAAC,OAAA;AACA,ACKA,EFfoCltK,ECUpCkuK,GDVyC,ACUzC,EDV2C,CAAC,ACU5CjB,sBAAA,CAAAC,OAAA;AACA,ACKApjB,EFhB8C7pJ,ECW9CkuK,ECKM,CDLN,ACKOrhK,CFhB6C,EAAE,ACWtDmgK,CDXuD,YEgBhC,CAAC,QDLxB,ACKgC,CDLhCC,CCKkC,MDLlC,ACKsC;ADJtC,EDZyDhtK,AEiBtDgvB,EDLHk/I,GDZ8D,ACY9D,CCKS,CFjBuD,AEiBtDtqH,CFjBuD,ACYjEmpH,KCKgB,GAAGnjB,MAAM,CAACgnB,ODL1B,CAAA5D,ECKoC,GAAGpjB,EDLvC,ICK6C,CAACinB,WAAW;ADJzD,EDbmE5wK,AEkBhE+uB,EDLHm/I,CDbsE,EAAE,ACaxE,CCKS,CAAChqH,CDLV4oH,qBCKgC,CDLhC,ACKiC,CDLjCC,ACKkC,ODLlC;ADb0E,ACc1E,CDd2E,CEmBxEnrH,EDLHusH,GAAA,GAAArB,ACKW,CAAC5kJ,OAAO,CAACyhI,MAAM,CAACgnB,MDL3B,CAAA5D,GCKqC,EAAEpjB,EDLvC,ICK6C,CAACinB,WAAW,CAAC;AFlB1D,ACcA,ACKA,CAAC,CAAC,EDLFxC,EDdMnuK,CCcN,GAAA6sK,CDdW,GAAArtK,OAAA,CAAAQ,KAAA,GAAG,ECcd,CAAA8sK,OAAA;AACA,ACMA,EFrBgBjtK,ECehBuuK,ECMM17I,CDNN,CDfsB,EAAE,ACexBm6I,CDfyB,GEqBX,GAAG,IAAIsD,KAAK,CAAC3jH,KDN3B,CAAAsgH,OAAA,ACMwC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;ADLvD,ACMA,EFtB2B/sK,ECgB3BsuK,CDhB8B,CEsBxB1lI,CFtB0B,ACgBhC,CDhBiC,ECgBjCkkI,ICMc,GAAG,IAAIsD,KAAK,CAAC16H,KDN3B,CAAAq3H,OAAA,ICM4C,CAAC;ADF7C,EDpBmC7sK,AEuB/B,EDHJquK,KAAA,EDpB4C,CCoB5CzB,CDpB8C,CAAC,oBCoB/C,CAAAC,OAAA;AACA,EDrBiD5sK,AEwB7C6e,EDHJyK,EAAA,CCGS,EDHTqjJ,ACGW,KFxBkD,EAAE,CEwB5C,cDHnB,CAAAC,OAAA;ADrBiE,ACsBjE,CDtBkE,CEyB9D,EDHJyB,GAAA,GAAA1B,sBAAA,CAAAC,OAAA;ADrBA,ACqB4C,ECIxCzmI,GAAG,CFzBDlmC,CEyBEo+I,EDJoCsuB,ICI9B,CAAC3tB,IFzBG,AEyBC,CAAC98H,EFzBF5iB,OAAA,CAAAW,GCqB0BoV,CAAA,CCIlB,CAACi6J,GAAG,GFzBZ,GAAG,ACqBuBj6J,CDrBtB,ACqBsB,IAAAA,CAAA,CAAAi5J,UAAA,GAAAj5J,CAAA,KAAAk5J,OAAA,EAAAl5J,CAAA;ADpB5C,ACyBA,ECAI,IFzBEnV,ACyBAgiB,MAAM,GAAG,GDzBG,GAAA5iB,OAAA,CAAAY,YAAA,GAAG,CAAC;AACtB,AE0BA,CAAC,CDDGsuK,ACCF,IF1BIruK,GCyBK,EAAPquK,QDzBe,CCyBR,EDzBQlvK,OAAA,CAAAa,aAAA,GAAG,CAAC;AACvB,AE0BA,EDDIsuK,IDzBEruK,AE0BA4mD,GDDK,CCCD,CDDNynH,ECCS,IAAIwB,KAAK,CF1BC,AE0BA9xH,GF1BA7+C,CE0BI,CAACkzB,EDDjB,GDzBY,CAAApyB,EE0Ba,EAAEqoC,QAAQ,CAAC,IF1BxB,GAAG,CAAC;AAC3B,AE2BAud,EDFI0oH,GCEC,CF3BCruK,AE2BAoU,GDFK,ACEF,CAACuyC,CDFN0nH,GCEU,CAAC,KF3BK,GAAApvK,MCyBT,CDzBS,CAAAe,cAAA,GAAG,CAAC;AACxB,AE2BAuuB,EDFI+/I,IDzBEruK,AE2BA,CAAC88B,EDFI,EAAPuxI,ICEW,CAACxpJ,CAAC,CF3BC,EE2BE,CF3BF7lB,AE2BG,KDFV,EDzBO,CAAAgB,YAAA,GAAG,CAAC;AACtB,AE4BA,EDHIsuK,IDzBEruK,AE4BAsnB,GDHK,EAAP+mJ,ACGO,GAAGp8I,QF5BQ,AE4BA,CAAC4mB,EF5BD95C,GCyBX,IDzBW,CAAAiB,AE4BW,CAAC68B,QAAQ,CAACvV,KAAK,CF5B1B,GAAG,CAAC;AAC1B,AE4BA,EDHIgnJ,IDzBEruK,GCyBK,EAAPquK,ODzBc,GAAAvvK,ECyBP,KDzBO,CAAAkB,YAAA,GAAG,CAAC;AACtB,AE4BA,EDHIsuK,IDzBEruK,AE4BAkwK,GDHK,EAAP7B,ACGO,GAAG,CF5BC,GAAAxvK,AE4BG2wK,GDHP,ECGY,CAACxlB,CF5BT,CAAAhqJ,GE4Bc,CAAC,CAAC,IF5BhB,GAAG,CAAC;AACnB,AE8BA,EDLIsuK,IDzBEruK,GCyBK,ACKFkwK,EDLL7B,GDzBU,EE8BE6B,CF9BFtxK,AE8BE,EAAG,KF9BL,CAAAoB,ECyBH,MDzBG,GAAG,CAAC;AAClB,ECyBIsuK,ACKA,IF9BEruK,EE8BI2pD,CDLC,EAAP0kH,CCKU,GAAG2B,CF9BD,GAAArxK,CE8BM,CAACyrJ,KF9BP,CAAApqJ,ACyBL,QCK0B,CAAC,CF9BtB,AE8BuB,GF9BpB,CAAC;AACpB,ECyBIsuK,ACKAr8J,IF9BEhS,GE8BK,CDLC,ACKA4Q,EDLRy9J,CCKW,CAAC3kH,EF9BA,EE8BI,CF9BJhrD,AE8BK,GDLT,IDzBI,CAAAsB,UAAA,GAAG,CAAC;AACpB,ECyBIsuK,ACMA,IF/BEruK,CE+BE,GDNI,CCMA6M,CDNRwhK,ACMS,GAAC,CAAC,EAAExhK,CAAC,CF/BE,ECyBR,ACMOma,CF/BCvoB,IE+BI,EAAEoO,CF/BN,AE+BO,CF/BP7M,CE+BS,EAAC,WF/BV,GAAG,CAAC;AACxB,ECyBIsuK,ECMG,CDNA,CDzBDruK,CCyBFquK,GCMS//J,CAAC,GAAGojB,GDNV,KDzBe,AE+BG,CAAC4mB,EF/BJ95C,OAAA,CAAAwB,AE+Bc,CAACs8B,QAAQ,CAAC3lB,IAAI,CAAC/J,CF/B7B,AE+B8B,CAAC,EF/B5B,CAAC;AAC1B,ECyBI0hK,ECMG,CDNA,CDzBDruK,CCyBFquK,GCMS1/J,CAAC,GAAG8iB,GDNV,KCMkB,CAAC4mB,EF/BD,GAAA95C,KE+BW,CAAC89B,CF/BZ,CAAAr8B,ME+BoB,CAAC2W,IAAI,CAAChK,CAAC,CAAC,KF/B5B,GAAG,CAAC;AAC7B,ECyBI2hK,ECOG,CDPA,CDzBDruK,CCyBFquK,GCOSwB,KAAK,EDPX,CCOc,GAAG,CFhCF,EEgCK5iK,CFhCL3O,GEgCS,CAAC4S,GFhCV,AEgCa,CFhCblR,AEgCcoO,CAAC,GAAGk7C,IAAI,GAAG,EAAE,CAAC,EFhC5B,GAAG,CAAC;AAC1B,ECyBIglH,ECOG,CDPA,CDzBDruK,CCyBFquK,GCOSwB,KAAK,EDPX,CCOc,EFhCD,EEgCK,CFhCLxxK,EEgCQ2O,IAAI,CFhCZ,AEgCaiE,CFhCbjR,EEgCgB,CAACyO,CAAC,GAAG46C,IAAI,GFhCzB,AEgC4B,EAAE,CFhC3B,AEgC4B,CFhC3B;AACxB,ECyBIilH,ECSG/8I,CDTA,CDzBDtxB,CCyBFquK,KCSW,CAACn2H,IFlCC,ACyBV,GDzBU95C,GEkCS,CAAC89B,GFlCV,CAAAl8B,IEkCkB,CAACokB,IAAI,CAAC5X,CFlCxB,AEkCyB,EAAE,CFlCxB,GAAG,aEkCuCmjK,KAAK,GAAGC,KAAK,CAAC;AFjC5E,ECyBItB,ECSGh9I,CDTA,CDzBDrxB,CCyBFquK,KCSW,CAAC5zH,KDTT,IDzBe,GAAAt8C,OAAA,CAAA6B,AEkCc,CAAC,CAAC,cFlChB,GAAG,GAAG;AAC5B,ECyBIsuK,ECSGj9I,CDTA,CDzBDpxB,CCyBFquK,KCSW,CAACr2H,KDTT,KCSmB,CAAChc,KFlCE,GAAA99B,AEkCM,CAACwiB,MFlCP,CAAA1gB,IEkCkB,GAAG,IAAI,YFlCzB,GAAG,GAAG;AACnC,ECyBIsuK,ACSA,GDTG,CDzBDruK,CCyBFquK,UDzBa,CCyBV,EDzBUpwK,OAAA,CAAA+B,WAAA,GAAG,GAAG;AACvB,ECyBIsuK,ACSAnlH,GDTG,CDzBDlpD,CCyBFquK,UDzBa,CCyBV,EDzBUrwK,GEkCQ,CAACsxK,GFlCT,CAAAtvK,GEkCgB,CAAC,OFlCjB,GAAG,GAAG;AACvB,ECyBIsuK,ACSA,IFlCEruK,ACyBE,EAAJquK,QDzBY,GAAAtwK,ACyBR,ODzB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","file":"threeBg.328beae8.js","sourceRoot":"..\\src","sourcesContent":["/**\n * @license\n * Copyright 2010-2024 Three.js Authors\n * SPDX-License-Identifier: MIT\n */\nconst REVISION = '166';\n\nconst MOUSE = { LEFT: 0, MIDDLE: 1, RIGHT: 2, ROTATE: 0, DOLLY: 1, PAN: 2 };\nconst TOUCH = { ROTATE: 0, PAN: 1, DOLLY_PAN: 2, DOLLY_ROTATE: 3 };\nconst CullFaceNone = 0;\nconst CullFaceBack = 1;\nconst CullFaceFront = 2;\nconst CullFaceFrontBack = 3;\nconst BasicShadowMap = 0;\nconst PCFShadowMap = 1;\nconst PCFSoftShadowMap = 2;\nconst VSMShadowMap = 3;\nconst FrontSide = 0;\nconst BackSide = 1;\nconst DoubleSide = 2;\nconst NoBlending = 0;\nconst NormalBlending = 1;\nconst AdditiveBlending = 2;\nconst SubtractiveBlending = 3;\nconst MultiplyBlending = 4;\nconst CustomBlending = 5;\nconst AddEquation = 100;\nconst SubtractEquation = 101;\nconst ReverseSubtractEquation = 102;\nconst MinEquation = 103;\nconst MaxEquation = 104;\nconst ZeroFactor = 200;\nconst OneFactor = 201;\nconst SrcColorFactor = 202;\nconst OneMinusSrcColorFactor = 203;\nconst SrcAlphaFactor = 204;\nconst OneMinusSrcAlphaFactor = 205;\nconst DstAlphaFactor = 206;\nconst OneMinusDstAlphaFactor = 207;\nconst DstColorFactor = 208;\nconst OneMinusDstColorFactor = 209;\nconst SrcAlphaSaturateFactor = 210;\nconst ConstantColorFactor = 211;\nconst OneMinusConstantColorFactor = 212;\nconst ConstantAlphaFactor = 213;\nconst OneMinusConstantAlphaFactor = 214;\nconst NeverDepth = 0;\nconst AlwaysDepth = 1;\nconst LessDepth = 2;\nconst LessEqualDepth = 3;\nconst EqualDepth = 4;\nconst GreaterEqualDepth = 5;\nconst GreaterDepth = 6;\nconst NotEqualDepth = 7;\nconst MultiplyOperation = 0;\nconst MixOperation = 1;\nconst AddOperation = 2;\nconst NoToneMapping = 0;\nconst LinearToneMapping = 1;\nconst ReinhardToneMapping = 2;\nconst CineonToneMapping = 3;\nconst ACESFilmicToneMapping = 4;\nconst CustomToneMapping = 5;\nconst AgXToneMapping = 6;\nconst NeutralToneMapping = 7;\nconst AttachedBindMode = 'attached';\nconst DetachedBindMode = 'detached';\n\nconst UVMapping = 300;\nconst CubeReflectionMapping = 301;\nconst CubeRefractionMapping = 302;\nconst EquirectangularReflectionMapping = 303;\nconst EquirectangularRefractionMapping = 304;\nconst CubeUVReflectionMapping = 306;\nconst RepeatWrapping = 1000;\nconst ClampToEdgeWrapping = 1001;\nconst MirroredRepeatWrapping = 1002;\nconst NearestFilter = 1003;\nconst NearestMipmapNearestFilter = 1004;\nconst NearestMipMapNearestFilter = 1004;\nconst NearestMipmapLinearFilter = 1005;\nconst NearestMipMapLinearFilter = 1005;\nconst LinearFilter = 1006;\nconst LinearMipmapNearestFilter = 1007;\nconst LinearMipMapNearestFilter = 1007;\nconst LinearMipmapLinearFilter = 1008;\nconst LinearMipMapLinearFilter = 1008;\nconst UnsignedByteType = 1009;\nconst ByteType = 1010;\nconst ShortType = 1011;\nconst UnsignedShortType = 1012;\nconst IntType = 1013;\nconst UnsignedIntType = 1014;\nconst FloatType = 1015;\nconst HalfFloatType = 1016;\nconst UnsignedShort4444Type = 1017;\nconst UnsignedShort5551Type = 1018;\nconst UnsignedInt248Type = 1020;\nconst UnsignedInt5999Type = 35902;\nconst AlphaFormat = 1021;\nconst RGBFormat = 1022;\nconst RGBAFormat = 1023;\nconst LuminanceFormat = 1024;\nconst LuminanceAlphaFormat = 1025;\nconst DepthFormat = 1026;\nconst DepthStencilFormat = 1027;\nconst RedFormat = 1028;\nconst RedIntegerFormat = 1029;\nconst RGFormat = 1030;\nconst RGIntegerFormat = 1031;\nconst RGBIntegerFormat = 1032;\nconst RGBAIntegerFormat = 1033;\n\nconst RGB_S3TC_DXT1_Format = 33776;\nconst RGBA_S3TC_DXT1_Format = 33777;\nconst RGBA_S3TC_DXT3_Format = 33778;\nconst RGBA_S3TC_DXT5_Format = 33779;\nconst RGB_PVRTC_4BPPV1_Format = 35840;\nconst RGB_PVRTC_2BPPV1_Format = 35841;\nconst RGBA_PVRTC_4BPPV1_Format = 35842;\nconst RGBA_PVRTC_2BPPV1_Format = 35843;\nconst RGB_ETC1_Format = 36196;\nconst RGB_ETC2_Format = 37492;\nconst RGBA_ETC2_EAC_Format = 37496;\nconst RGBA_ASTC_4x4_Format = 37808;\nconst RGBA_ASTC_5x4_Format = 37809;\nconst RGBA_ASTC_5x5_Format = 37810;\nconst RGBA_ASTC_6x5_Format = 37811;\nconst RGBA_ASTC_6x6_Format = 37812;\nconst RGBA_ASTC_8x5_Format = 37813;\nconst RGBA_ASTC_8x6_Format = 37814;\nconst RGBA_ASTC_8x8_Format = 37815;\nconst RGBA_ASTC_10x5_Format = 37816;\nconst RGBA_ASTC_10x6_Format = 37817;\nconst RGBA_ASTC_10x8_Format = 37818;\nconst RGBA_ASTC_10x10_Format = 37819;\nconst RGBA_ASTC_12x10_Format = 37820;\nconst RGBA_ASTC_12x12_Format = 37821;\nconst RGBA_BPTC_Format = 36492;\nconst RGB_BPTC_SIGNED_Format = 36494;\nconst RGB_BPTC_UNSIGNED_Format = 36495;\nconst RED_RGTC1_Format = 36283;\nconst SIGNED_RED_RGTC1_Format = 36284;\nconst RED_GREEN_RGTC2_Format = 36285;\nconst SIGNED_RED_GREEN_RGTC2_Format = 36286;\nconst LoopOnce = 2200;\nconst LoopRepeat = 2201;\nconst LoopPingPong = 2202;\nconst InterpolateDiscrete = 2300;\nconst InterpolateLinear = 2301;\nconst InterpolateSmooth = 2302;\nconst ZeroCurvatureEnding = 2400;\nconst ZeroSlopeEnding = 2401;\nconst WrapAroundEnding = 2402;\nconst NormalAnimationBlendMode = 2500;\nconst AdditiveAnimationBlendMode = 2501;\nconst TrianglesDrawMode = 0;\nconst TriangleStripDrawMode = 1;\nconst TriangleFanDrawMode = 2;\nconst BasicDepthPacking = 3200;\nconst RGBADepthPacking = 3201;\nconst TangentSpaceNormalMap = 0;\nconst ObjectSpaceNormalMap = 1;\n\n// Color space string identifiers, matching CSS Color Module Level 4 and WebGPU names where available.\nconst NoColorSpace = '';\nconst SRGBColorSpace = 'srgb';\nconst LinearSRGBColorSpace = 'srgb-linear';\nconst DisplayP3ColorSpace = 'display-p3';\nconst LinearDisplayP3ColorSpace = 'display-p3-linear';\n\nconst LinearTransfer = 'linear';\nconst SRGBTransfer = 'srgb';\n\nconst Rec709Primaries = 'rec709';\nconst P3Primaries = 'p3';\n\nconst ZeroStencilOp = 0;\nconst KeepStencilOp = 7680;\nconst ReplaceStencilOp = 7681;\nconst IncrementStencilOp = 7682;\nconst DecrementStencilOp = 7683;\nconst IncrementWrapStencilOp = 34055;\nconst DecrementWrapStencilOp = 34056;\nconst InvertStencilOp = 5386;\n\nconst NeverStencilFunc = 512;\nconst LessStencilFunc = 513;\nconst EqualStencilFunc = 514;\nconst LessEqualStencilFunc = 515;\nconst GreaterStencilFunc = 516;\nconst NotEqualStencilFunc = 517;\nconst GreaterEqualStencilFunc = 518;\nconst AlwaysStencilFunc = 519;\n\nconst NeverCompare = 512;\nconst LessCompare = 513;\nconst EqualCompare = 514;\nconst LessEqualCompare = 515;\nconst GreaterCompare = 516;\nconst NotEqualCompare = 517;\nconst GreaterEqualCompare = 518;\nconst AlwaysCompare = 519;\n\nconst StaticDrawUsage = 35044;\nconst DynamicDrawUsage = 35048;\nconst StreamDrawUsage = 35040;\nconst StaticReadUsage = 35045;\nconst DynamicReadUsage = 35049;\nconst StreamReadUsage = 35041;\nconst StaticCopyUsage = 35046;\nconst DynamicCopyUsage = 35050;\nconst StreamCopyUsage = 35042;\n\nconst GLSL1 = '100';\nconst GLSL3 = '300 es';\n\nconst WebGLCoordinateSystem = 2000;\nconst WebGPUCoordinateSystem = 2001;\n\n/**\n * https://github.com/mrdoob/eventdispatcher.js/\n */\n\nclass EventDispatcher {\n\n\taddEventListener( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) this._listeners = {};\n\n\t\tconst listeners = this._listeners;\n\n\t\tif ( listeners[ type ] === undefined ) {\n\n\t\t\tlisteners[ type ] = [];\n\n\t\t}\n\n\t\tif ( listeners[ type ].indexOf( listener ) === - 1 ) {\n\n\t\t\tlisteners[ type ].push( listener );\n\n\t\t}\n\n\t}\n\n\thasEventListener( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) return false;\n\n\t\tconst listeners = this._listeners;\n\n\t\treturn listeners[ type ] !== undefined && listeners[ type ].indexOf( listener ) !== - 1;\n\n\t}\n\n\tremoveEventListener( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) return;\n\n\t\tconst listeners = this._listeners;\n\t\tconst listenerArray = listeners[ type ];\n\n\t\tif ( listenerArray !== undefined ) {\n\n\t\t\tconst index = listenerArray.indexOf( listener );\n\n\t\t\tif ( index !== - 1 ) {\n\n\t\t\t\tlistenerArray.splice( index, 1 );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tdispatchEvent( event ) {\n\n\t\tif ( this._listeners === undefined ) return;\n\n\t\tconst listeners = this._listeners;\n\t\tconst listenerArray = listeners[ event.type ];\n\n\t\tif ( listenerArray !== undefined ) {\n\n\t\t\tevent.target = this;\n\n\t\t\t// Make a copy, in case listeners are removed while iterating.\n\t\t\tconst array = listenerArray.slice( 0 );\n\n\t\t\tfor ( let i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\tarray[ i ].call( this, event );\n\n\t\t\t}\n\n\t\t\tevent.target = null;\n\n\t\t}\n\n\t}\n\n}\n\nconst _lut = [ '00', '01', '02', '03', '04', '05', '06', '07', '08', '09', '0a', '0b', '0c', '0d', '0e', '0f', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '1a', '1b', '1c', '1d', '1e', '1f', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '2a', '2b', '2c', '2d', '2e', '2f', '30', '31', '32', '33', '34', '35', '36', '37', '38', '39', '3a', '3b', '3c', '3d', '3e', '3f', '40', '41', '42', '43', '44', '45', '46', '47', '48', '49', '4a', '4b', '4c', '4d', '4e', '4f', '50', '51', '52', '53', '54', '55', '56', '57', '58', '59', '5a', '5b', '5c', '5d', '5e', '5f', '60', '61', '62', '63', '64', '65', '66', '67', '68', '69', '6a', '6b', '6c', '6d', '6e', '6f', '70', '71', '72', '73', '74', '75', '76', '77', '78', '79', '7a', '7b', '7c', '7d', '7e', '7f', '80', '81', '82', '83', '84', '85', '86', '87', '88', '89', '8a', '8b', '8c', '8d', '8e', '8f', '90', '91', '92', '93', '94', '95', '96', '97', '98', '99', '9a', '9b', '9c', '9d', '9e', '9f', 'a0', 'a1', 'a2', 'a3', 'a4', 'a5', 'a6', 'a7', 'a8', 'a9', 'aa', 'ab', 'ac', 'ad', 'ae', 'af', 'b0', 'b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7', 'b8', 'b9', 'ba', 'bb', 'bc', 'bd', 'be', 'bf', 'c0', 'c1', 'c2', 'c3', 'c4', 'c5', 'c6', 'c7', 'c8', 'c9', 'ca', 'cb', 'cc', 'cd', 'ce', 'cf', 'd0', 'd1', 'd2', 'd3', 'd4', 'd5', 'd6', 'd7', 'd8', 'd9', 'da', 'db', 'dc', 'dd', 'de', 'df', 'e0', 'e1', 'e2', 'e3', 'e4', 'e5', 'e6', 'e7', 'e8', 'e9', 'ea', 'eb', 'ec', 'ed', 'ee', 'ef', 'f0', 'f1', 'f2', 'f3', 'f4', 'f5', 'f6', 'f7', 'f8', 'f9', 'fa', 'fb', 'fc', 'fd', 'fe', 'ff' ];\n\nlet _seed = 1234567;\n\n\nconst DEG2RAD = Math.PI / 180;\nconst RAD2DEG = 180 / Math.PI;\n\n// http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/21963136#21963136\nfunction generateUUID() {\n\n\tconst d0 = Math.random() * 0xffffffff | 0;\n\tconst d1 = Math.random() * 0xffffffff | 0;\n\tconst d2 = Math.random() * 0xffffffff | 0;\n\tconst d3 = Math.random() * 0xffffffff | 0;\n\tconst uuid = _lut[ d0 & 0xff ] + _lut[ d0 >> 8 & 0xff ] + _lut[ d0 >> 16 & 0xff ] + _lut[ d0 >> 24 & 0xff ] + '-' +\n\t\t\t_lut[ d1 & 0xff ] + _lut[ d1 >> 8 & 0xff ] + '-' + _lut[ d1 >> 16 & 0x0f | 0x40 ] + _lut[ d1 >> 24 & 0xff ] + '-' +\n\t\t\t_lut[ d2 & 0x3f | 0x80 ] + _lut[ d2 >> 8 & 0xff ] + '-' + _lut[ d2 >> 16 & 0xff ] + _lut[ d2 >> 24 & 0xff ] +\n\t\t\t_lut[ d3 & 0xff ] + _lut[ d3 >> 8 & 0xff ] + _lut[ d3 >> 16 & 0xff ] + _lut[ d3 >> 24 & 0xff ];\n\n\t// .toLowerCase() here flattens concatenated strings to save heap memory space.\n\treturn uuid.toLowerCase();\n\n}\n\nfunction clamp( value, min, max ) {\n\n\treturn Math.max( min, Math.min( max, value ) );\n\n}\n\n// compute euclidean modulo of m % n\n// https://en.wikipedia.org/wiki/Modulo_operation\nfunction euclideanModulo( n, m ) {\n\n\treturn ( ( n % m ) + m ) % m;\n\n}\n\n// Linear mapping from range <a1, a2> to range <b1, b2>\nfunction mapLinear( x, a1, a2, b1, b2 ) {\n\n\treturn b1 + ( x - a1 ) * ( b2 - b1 ) / ( a2 - a1 );\n\n}\n\n// https://www.gamedev.net/tutorials/programming/general-and-gameplay-programming/inverse-lerp-a-super-useful-yet-often-overlooked-function-r5230/\nfunction inverseLerp( x, y, value ) {\n\n\tif ( x !== y ) {\n\n\t\treturn ( value - x ) / ( y - x );\n\n\t} else {\n\n\t\treturn 0;\n\n\t}\n\n}\n\n// https://en.wikipedia.org/wiki/Linear_interpolation\nfunction lerp( x, y, t ) {\n\n\treturn ( 1 - t ) * x + t * y;\n\n}\n\n// http://www.rorydriscoll.com/2016/03/07/frame-rate-independent-damping-using-lerp/\nfunction damp( x, y, lambda, dt ) {\n\n\treturn lerp( x, y, 1 - Math.exp( - lambda * dt ) );\n\n}\n\n// https://www.desmos.com/calculator/vcsjnyz7x4\nfunction pingpong( x, length = 1 ) {\n\n\treturn length - Math.abs( euclideanModulo( x, length * 2 ) - length );\n\n}\n\n// http://en.wikipedia.org/wiki/Smoothstep\nfunction smoothstep( x, min, max ) {\n\n\tif ( x <= min ) return 0;\n\tif ( x >= max ) return 1;\n\n\tx = ( x - min ) / ( max - min );\n\n\treturn x * x * ( 3 - 2 * x );\n\n}\n\nfunction smootherstep( x, min, max ) {\n\n\tif ( x <= min ) return 0;\n\tif ( x >= max ) return 1;\n\n\tx = ( x - min ) / ( max - min );\n\n\treturn x * x * x * ( x * ( x * 6 - 15 ) + 10 );\n\n}\n\n// Random integer from <low, high> interval\nfunction randInt( low, high ) {\n\n\treturn low + Math.floor( Math.random() * ( high - low + 1 ) );\n\n}\n\n// Random float from <low, high> interval\nfunction randFloat( low, high ) {\n\n\treturn low + Math.random() * ( high - low );\n\n}\n\n// Random float from <-range/2, range/2> interval\nfunction randFloatSpread( range ) {\n\n\treturn range * ( 0.5 - Math.random() );\n\n}\n\n// Deterministic pseudo-random float in the interval [ 0, 1 ]\nfunction seededRandom( s ) {\n\n\tif ( s !== undefined ) _seed = s;\n\n\t// Mulberry32 generator\n\n\tlet t = _seed += 0x6D2B79F5;\n\n\tt = Math.imul( t ^ t >>> 15, t | 1 );\n\n\tt ^= t + Math.imul( t ^ t >>> 7, t | 61 );\n\n\treturn ( ( t ^ t >>> 14 ) >>> 0 ) / 4294967296;\n\n}\n\nfunction degToRad( degrees ) {\n\n\treturn degrees * DEG2RAD;\n\n}\n\nfunction radToDeg( radians ) {\n\n\treturn radians * RAD2DEG;\n\n}\n\nfunction isPowerOfTwo( value ) {\n\n\treturn ( value & ( value - 1 ) ) === 0 && value !== 0;\n\n}\n\nfunction ceilPowerOfTwo( value ) {\n\n\treturn Math.pow( 2, Math.ceil( Math.log( value ) / Math.LN2 ) );\n\n}\n\nfunction floorPowerOfTwo( value ) {\n\n\treturn Math.pow( 2, Math.floor( Math.log( value ) / Math.LN2 ) );\n\n}\n\nfunction setQuaternionFromProperEuler( q, a, b, c, order ) {\n\n\t// Intrinsic Proper Euler Angles - see https://en.wikipedia.org/wiki/Euler_angles\n\n\t// rotations are applied to the axes in the order specified by 'order'\n\t// rotation by angle 'a' is applied first, then by angle 'b', then by angle 'c'\n\t// angles are in radians\n\n\tconst cos = Math.cos;\n\tconst sin = Math.sin;\n\n\tconst c2 = cos( b / 2 );\n\tconst s2 = sin( b / 2 );\n\n\tconst c13 = cos( ( a + c ) / 2 );\n\tconst s13 = sin( ( a + c ) / 2 );\n\n\tconst c1_3 = cos( ( a - c ) / 2 );\n\tconst s1_3 = sin( ( a - c ) / 2 );\n\n\tconst c3_1 = cos( ( c - a ) / 2 );\n\tconst s3_1 = sin( ( c - a ) / 2 );\n\n\tswitch ( order ) {\n\n\t\tcase 'XYX':\n\t\t\tq.set( c2 * s13, s2 * c1_3, s2 * s1_3, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'YZY':\n\t\t\tq.set( s2 * s1_3, c2 * s13, s2 * c1_3, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'ZXZ':\n\t\t\tq.set( s2 * c1_3, s2 * s1_3, c2 * s13, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'XZX':\n\t\t\tq.set( c2 * s13, s2 * s3_1, s2 * c3_1, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'YXY':\n\t\t\tq.set( s2 * c3_1, c2 * s13, s2 * s3_1, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'ZYZ':\n\t\t\tq.set( s2 * s3_1, s2 * c3_1, c2 * s13, c2 * c13 );\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tconsole.warn( 'THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: ' + order );\n\n\t}\n\n}\n\nfunction denormalize( value, array ) {\n\n\tswitch ( array.constructor ) {\n\n\t\tcase Float32Array:\n\n\t\t\treturn value;\n\n\t\tcase Uint32Array:\n\n\t\t\treturn value / 4294967295.0;\n\n\t\tcase Uint16Array:\n\n\t\t\treturn value / 65535.0;\n\n\t\tcase Uint8Array:\n\n\t\t\treturn value / 255.0;\n\n\t\tcase Int32Array:\n\n\t\t\treturn Math.max( value / 2147483647.0, - 1.0 );\n\n\t\tcase Int16Array:\n\n\t\t\treturn Math.max( value / 32767.0, - 1.0 );\n\n\t\tcase Int8Array:\n\n\t\t\treturn Math.max( value / 127.0, - 1.0 );\n\n\t\tdefault:\n\n\t\t\tthrow new Error( 'Invalid component type.' );\n\n\t}\n\n}\n\nfunction normalize( value, array ) {\n\n\tswitch ( array.constructor ) {\n\n\t\tcase Float32Array:\n\n\t\t\treturn value;\n\n\t\tcase Uint32Array:\n\n\t\t\treturn Math.round( value * 4294967295.0 );\n\n\t\tcase Uint16Array:\n\n\t\t\treturn Math.round( value * 65535.0 );\n\n\t\tcase Uint8Array:\n\n\t\t\treturn Math.round( value * 255.0 );\n\n\t\tcase Int32Array:\n\n\t\t\treturn Math.round( value * 2147483647.0 );\n\n\t\tcase Int16Array:\n\n\t\t\treturn Math.round( value * 32767.0 );\n\n\t\tcase Int8Array:\n\n\t\t\treturn Math.round( value * 127.0 );\n\n\t\tdefault:\n\n\t\t\tthrow new Error( 'Invalid component type.' );\n\n\t}\n\n}\n\nconst MathUtils = {\n\tDEG2RAD: DEG2RAD,\n\tRAD2DEG: RAD2DEG,\n\tgenerateUUID: generateUUID,\n\tclamp: clamp,\n\teuclideanModulo: euclideanModulo,\n\tmapLinear: mapLinear,\n\tinverseLerp: inverseLerp,\n\tlerp: lerp,\n\tdamp: damp,\n\tpingpong: pingpong,\n\tsmoothstep: smoothstep,\n\tsmootherstep: smootherstep,\n\trandInt: randInt,\n\trandFloat: randFloat,\n\trandFloatSpread: randFloatSpread,\n\tseededRandom: seededRandom,\n\tdegToRad: degToRad,\n\tradToDeg: radToDeg,\n\tisPowerOfTwo: isPowerOfTwo,\n\tceilPowerOfTwo: ceilPowerOfTwo,\n\tfloorPowerOfTwo: floorPowerOfTwo,\n\tsetQuaternionFromProperEuler: setQuaternionFromProperEuler,\n\tnormalize: normalize,\n\tdenormalize: denormalize\n};\n\nclass Vector2 {\n\n\tconstructor( x = 0, y = 0 ) {\n\n\t\tVector2.prototype.isVector2 = true;\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\n\t}\n\n\tget width() {\n\n\t\treturn this.x;\n\n\t}\n\n\tset width( value ) {\n\n\t\tthis.x = value;\n\n\t}\n\n\tget height() {\n\n\t\treturn this.y;\n\n\t}\n\n\tset height( value ) {\n\n\t\tthis.y = value;\n\n\t}\n\n\tset( x, y ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetX( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponent( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.x, this.y );\n\n\t}\n\n\tcopy( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\n\t\treturn this;\n\n\t}\n\n\tadd( v ) {\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\n\t\treturn this;\n\n\t}\n\n\taddVectors( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\n\t\treturn this;\n\n\t}\n\n\taddScaledVector( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( v ) {\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\n\t\treturn this;\n\n\t}\n\n\tsubScalar( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\n\t\treturn this;\n\n\t}\n\n\tsubVectors( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( v ) {\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\n\t\treturn this;\n\n\t}\n\n\tdivide( v ) {\n\n\t\tthis.x /= v.x;\n\t\tthis.y /= v.y;\n\n\t\treturn this;\n\n\t}\n\n\tdivideScalar( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tconst x = this.x, y = this.y;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ];\n\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ];\n\n\t\treturn this;\n\n\t}\n\n\tmin( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\n\t\treturn this;\n\n\t}\n\n\tmax( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\n\t\treturn this;\n\n\t}\n\n\tclamp( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampScalar( minVal, maxVal ) {\n\n\t\tthis.x = Math.max( minVal, Math.min( maxVal, this.x ) );\n\t\tthis.y = Math.max( minVal, Math.min( maxVal, this.y ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampLength( min, max ) {\n\n\t\tconst length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t}\n\n\tfloor() {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\n\t\treturn this;\n\n\t}\n\n\tceil() {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\n\t\treturn this;\n\n\t}\n\n\tround() {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\n\t\treturn this;\n\n\t}\n\n\troundToZero() {\n\n\t\tthis.x = Math.trunc( this.x );\n\t\tthis.y = Math.trunc( this.y );\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y;\n\n\t}\n\n\tcross( v ) {\n\n\t\treturn this.x * v.y - this.y * v.x;\n\n\t}\n\n\tlengthSq() {\n\n\t\treturn this.x * this.x + this.y * this.y;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y );\n\n\t}\n\n\tmanhattanLength() {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y );\n\n\t}\n\n\tnormalize() {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t}\n\n\tangle() {\n\n\t\t// computes the angle in radians with respect to the positive x-axis\n\n\t\tconst angle = Math.atan2( - this.y, - this.x ) + Math.PI;\n\n\t\treturn angle;\n\n\t}\n\n\tangleTo( v ) {\n\n\t\tconst denominator = Math.sqrt( this.lengthSq() * v.lengthSq() );\n\n\t\tif ( denominator === 0 ) return Math.PI / 2;\n\n\t\tconst theta = this.dot( v ) / denominator;\n\n\t\t// clamp, to handle numerical problems\n\n\t\treturn Math.acos( clamp( theta, - 1, 1 ) );\n\n\t}\n\n\tdistanceTo( v ) {\n\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t}\n\n\tdistanceToSquared( v ) {\n\n\t\tconst dx = this.x - v.x, dy = this.y - v.y;\n\t\treturn dx * dx + dy * dy;\n\n\t}\n\n\tmanhattanDistanceTo( v ) {\n\n\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y );\n\n\t}\n\n\tsetLength( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t}\n\n\tlerp( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpVectors( v1, v2, alpha ) {\n\n\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\n\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tequals( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\n\t\treturn this;\n\n\t}\n\n\trotateAround( center, angle ) {\n\n\t\tconst c = Math.cos( angle ), s = Math.sin( angle );\n\n\t\tconst x = this.x - center.x;\n\t\tconst y = this.y - center.y;\n\n\t\tthis.x = x * c - y * s + center.x;\n\t\tthis.y = x * s + y * c + center.y;\n\n\t\treturn this;\n\n\t}\n\n\trandom() {\n\n\t\tthis.x = Math.random();\n\t\tthis.y = Math.random();\n\n\t\treturn this;\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.x;\n\t\tyield this.y;\n\n\t}\n\n}\n\nclass Matrix3 {\n\n\tconstructor( n11, n12, n13, n21, n22, n23, n31, n32, n33 ) {\n\n\t\tMatrix3.prototype.isMatrix3 = true;\n\n\t\tthis.elements = [\n\n\t\t\t1, 0, 0,\n\t\t\t0, 1, 0,\n\t\t\t0, 0, 1\n\n\t\t];\n\n\t\tif ( n11 !== undefined ) {\n\n\t\t\tthis.set( n11, n12, n13, n21, n22, n23, n31, n32, n33 );\n\n\t\t}\n\n\t}\n\n\tset( n11, n12, n13, n21, n22, n23, n31, n32, n33 ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] = n11; te[ 1 ] = n21; te[ 2 ] = n31;\n\t\tte[ 3 ] = n12; te[ 4 ] = n22; te[ 5 ] = n32;\n\t\tte[ 6 ] = n13; te[ 7 ] = n23; te[ 8 ] = n33;\n\n\t\treturn this;\n\n\t}\n\n\tidentity() {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0,\n\t\t\t0, 1, 0,\n\t\t\t0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tcopy( m ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = m.elements;\n\n\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ];\n\t\tte[ 3 ] = me[ 3 ]; te[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ];\n\t\tte[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ]; te[ 8 ] = me[ 8 ];\n\n\t\treturn this;\n\n\t}\n\n\textractBasis( xAxis, yAxis, zAxis ) {\n\n\t\txAxis.setFromMatrix3Column( this, 0 );\n\t\tyAxis.setFromMatrix3Column( this, 1 );\n\t\tzAxis.setFromMatrix3Column( this, 2 );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrix4( m ) {\n\n\t\tconst me = m.elements;\n\n\t\tthis.set(\n\n\t\t\tme[ 0 ], me[ 4 ], me[ 8 ],\n\t\t\tme[ 1 ], me[ 5 ], me[ 9 ],\n\t\t\tme[ 2 ], me[ 6 ], me[ 10 ]\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( m ) {\n\n\t\treturn this.multiplyMatrices( this, m );\n\n\t}\n\n\tpremultiply( m ) {\n\n\t\treturn this.multiplyMatrices( m, this );\n\n\t}\n\n\tmultiplyMatrices( a, b ) {\n\n\t\tconst ae = a.elements;\n\t\tconst be = b.elements;\n\t\tconst te = this.elements;\n\n\t\tconst a11 = ae[ 0 ], a12 = ae[ 3 ], a13 = ae[ 6 ];\n\t\tconst a21 = ae[ 1 ], a22 = ae[ 4 ], a23 = ae[ 7 ];\n\t\tconst a31 = ae[ 2 ], a32 = ae[ 5 ], a33 = ae[ 8 ];\n\n\t\tconst b11 = be[ 0 ], b12 = be[ 3 ], b13 = be[ 6 ];\n\t\tconst b21 = be[ 1 ], b22 = be[ 4 ], b23 = be[ 7 ];\n\t\tconst b31 = be[ 2 ], b32 = be[ 5 ], b33 = be[ 8 ];\n\n\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31;\n\t\tte[ 3 ] = a11 * b12 + a12 * b22 + a13 * b32;\n\t\tte[ 6 ] = a11 * b13 + a12 * b23 + a13 * b33;\n\n\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31;\n\t\tte[ 4 ] = a21 * b12 + a22 * b22 + a23 * b32;\n\t\tte[ 7 ] = a21 * b13 + a22 * b23 + a23 * b33;\n\n\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31;\n\t\tte[ 5 ] = a31 * b12 + a32 * b22 + a33 * b32;\n\t\tte[ 8 ] = a31 * b13 + a32 * b23 + a33 * b33;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( s ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] *= s; te[ 3 ] *= s; te[ 6 ] *= s;\n\t\tte[ 1 ] *= s; te[ 4 ] *= s; te[ 7 ] *= s;\n\t\tte[ 2 ] *= s; te[ 5 ] *= s; te[ 8 ] *= s;\n\n\t\treturn this;\n\n\t}\n\n\tdeterminant() {\n\n\t\tconst te = this.elements;\n\n\t\tconst a = te[ 0 ], b = te[ 1 ], c = te[ 2 ],\n\t\t\td = te[ 3 ], e = te[ 4 ], f = te[ 5 ],\n\t\t\tg = te[ 6 ], h = te[ 7 ], i = te[ 8 ];\n\n\t\treturn a * e * i - a * f * h - b * d * i + b * f * g + c * d * h - c * e * g;\n\n\t}\n\n\tinvert() {\n\n\t\tconst te = this.elements,\n\n\t\t\tn11 = te[ 0 ], n21 = te[ 1 ], n31 = te[ 2 ],\n\t\t\tn12 = te[ 3 ], n22 = te[ 4 ], n32 = te[ 5 ],\n\t\t\tn13 = te[ 6 ], n23 = te[ 7 ], n33 = te[ 8 ],\n\n\t\t\tt11 = n33 * n22 - n32 * n23,\n\t\t\tt12 = n32 * n13 - n33 * n12,\n\t\t\tt13 = n23 * n12 - n22 * n13,\n\n\t\t\tdet = n11 * t11 + n21 * t12 + n31 * t13;\n\n\t\tif ( det === 0 ) return this.set( 0, 0, 0, 0, 0, 0, 0, 0, 0 );\n\n\t\tconst detInv = 1 / det;\n\n\t\tte[ 0 ] = t11 * detInv;\n\t\tte[ 1 ] = ( n31 * n23 - n33 * n21 ) * detInv;\n\t\tte[ 2 ] = ( n32 * n21 - n31 * n22 ) * detInv;\n\n\t\tte[ 3 ] = t12 * detInv;\n\t\tte[ 4 ] = ( n33 * n11 - n31 * n13 ) * detInv;\n\t\tte[ 5 ] = ( n31 * n12 - n32 * n11 ) * detInv;\n\n\t\tte[ 6 ] = t13 * detInv;\n\t\tte[ 7 ] = ( n21 * n13 - n23 * n11 ) * detInv;\n\t\tte[ 8 ] = ( n22 * n11 - n21 * n12 ) * detInv;\n\n\t\treturn this;\n\n\t}\n\n\ttranspose() {\n\n\t\tlet tmp;\n\t\tconst m = this.elements;\n\n\t\ttmp = m[ 1 ]; m[ 1 ] = m[ 3 ]; m[ 3 ] = tmp;\n\t\ttmp = m[ 2 ]; m[ 2 ] = m[ 6 ]; m[ 6 ] = tmp;\n\t\ttmp = m[ 5 ]; m[ 5 ] = m[ 7 ]; m[ 7 ] = tmp;\n\n\t\treturn this;\n\n\t}\n\n\tgetNormalMatrix( matrix4 ) {\n\n\t\treturn this.setFromMatrix4( matrix4 ).invert().transpose();\n\n\t}\n\n\ttransposeIntoArray( r ) {\n\n\t\tconst m = this.elements;\n\n\t\tr[ 0 ] = m[ 0 ];\n\t\tr[ 1 ] = m[ 3 ];\n\t\tr[ 2 ] = m[ 6 ];\n\t\tr[ 3 ] = m[ 1 ];\n\t\tr[ 4 ] = m[ 4 ];\n\t\tr[ 5 ] = m[ 7 ];\n\t\tr[ 6 ] = m[ 2 ];\n\t\tr[ 7 ] = m[ 5 ];\n\t\tr[ 8 ] = m[ 8 ];\n\n\t\treturn this;\n\n\t}\n\n\tsetUvTransform( tx, ty, sx, sy, rotation, cx, cy ) {\n\n\t\tconst c = Math.cos( rotation );\n\t\tconst s = Math.sin( rotation );\n\n\t\tthis.set(\n\t\t\tsx * c, sx * s, - sx * ( c * cx + s * cy ) + cx + tx,\n\t\t\t- sy * s, sy * c, - sy * ( - s * cx + c * cy ) + cy + ty,\n\t\t\t0, 0, 1\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\t//\n\n\tscale( sx, sy ) {\n\n\t\tthis.premultiply( _m3.makeScale( sx, sy ) );\n\n\t\treturn this;\n\n\t}\n\n\trotate( theta ) {\n\n\t\tthis.premultiply( _m3.makeRotation( - theta ) );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( tx, ty ) {\n\n\t\tthis.premultiply( _m3.makeTranslation( tx, ty ) );\n\n\t\treturn this;\n\n\t}\n\n\t// for 2D Transforms\n\n\tmakeTranslation( x, y ) {\n\n\t\tif ( x.isVector2 ) {\n\n\t\t\tthis.set(\n\n\t\t\t\t1, 0, x.x,\n\t\t\t\t0, 1, x.y,\n\t\t\t\t0, 0, 1\n\n\t\t\t);\n\n\t\t} else {\n\n\t\t\tthis.set(\n\n\t\t\t\t1, 0, x,\n\t\t\t\t0, 1, y,\n\t\t\t\t0, 0, 1\n\n\t\t\t);\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotation( theta ) {\n\n\t\t// counterclockwise\n\n\t\tconst c = Math.cos( theta );\n\t\tconst s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\tc, - s, 0,\n\t\t\ts, c, 0,\n\t\t\t0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeScale( x, y ) {\n\n\t\tthis.set(\n\n\t\t\tx, 0, 0,\n\t\t\t0, y, 0,\n\t\t\t0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\t//\n\n\tequals( matrix ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = matrix.elements;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tif ( te[ i ] !== me[ i ] ) return false;\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tconst te = this.elements;\n\n\t\tarray[ offset ] = te[ 0 ];\n\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\tarray[ offset + 2 ] = te[ 2 ];\n\n\t\tarray[ offset + 3 ] = te[ 3 ];\n\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\tarray[ offset + 5 ] = te[ 5 ];\n\n\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\tarray[ offset + 7 ] = te[ 7 ];\n\t\tarray[ offset + 8 ] = te[ 8 ];\n\n\t\treturn array;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().fromArray( this.elements );\n\n\t}\n\n}\n\nconst _m3 = /*@__PURE__*/ new Matrix3();\n\nfunction arrayNeedsUint32( array ) {\n\n\t// assumes larger values usually on last\n\n\tfor ( let i = array.length - 1; i >= 0; -- i ) {\n\n\t\tif ( array[ i ] >= 65535 ) return true; // account for PRIMITIVE_RESTART_FIXED_INDEX, #24565\n\n\t}\n\n\treturn false;\n\n}\n\nconst TYPED_ARRAYS = {\n\tInt8Array: Int8Array,\n\tUint8Array: Uint8Array,\n\tUint8ClampedArray: Uint8ClampedArray,\n\tInt16Array: Int16Array,\n\tUint16Array: Uint16Array,\n\tInt32Array: Int32Array,\n\tUint32Array: Uint32Array,\n\tFloat32Array: Float32Array,\n\tFloat64Array: Float64Array\n};\n\nfunction getTypedArray( type, buffer ) {\n\n\treturn new TYPED_ARRAYS[ type ]( buffer );\n\n}\n\nfunction createElementNS( name ) {\n\n\treturn document.createElementNS( 'http://www.w3.org/1999/xhtml', name );\n\n}\n\nfunction createCanvasElement() {\n\n\tconst canvas = createElementNS( 'canvas' );\n\tcanvas.style.display = 'block';\n\treturn canvas;\n\n}\n\nconst _cache = {};\n\nfunction warnOnce( message ) {\n\n\tif ( message in _cache ) return;\n\n\t_cache[ message ] = true;\n\n\tconsole.warn( message );\n\n}\n\nfunction probeAsync( gl, sync, interval ) {\n\n\treturn new Promise( function ( resolve, reject ) {\n\n\t\tfunction probe() {\n\n\t\t\tswitch ( gl.clientWaitSync( sync, gl.SYNC_FLUSH_COMMANDS_BIT, 0 ) ) {\n\n\t\t\t\tcase gl.WAIT_FAILED:\n\t\t\t\t\treject();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase gl.TIMEOUT_EXPIRED:\n\t\t\t\t\tsetTimeout( probe, interval );\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tresolve();\n\n\t\t\t}\n\n\t\t}\n\n\t\tsetTimeout( probe, interval );\n\n\t} );\n\n}\n\n/**\n * Matrices converting P3 <-> Rec. 709 primaries, without gamut mapping\n * or clipping. Based on W3C specifications for sRGB and Display P3,\n * and ICC specifications for the D50 connection space. Values in/out\n * are _linear_ sRGB and _linear_ Display P3.\n *\n * Note that both sRGB and Display P3 use the sRGB transfer functions.\n *\n * Reference:\n * - http://www.russellcottrell.com/photo/matrixCalculator.htm\n */\n\nconst LINEAR_SRGB_TO_LINEAR_DISPLAY_P3 = /*@__PURE__*/ new Matrix3().set(\n\t0.8224621, 0.177538, 0.0,\n\t0.0331941, 0.9668058, 0.0,\n\t0.0170827, 0.0723974, 0.9105199,\n);\n\nconst LINEAR_DISPLAY_P3_TO_LINEAR_SRGB = /*@__PURE__*/ new Matrix3().set(\n\t1.2249401, - 0.2249404, 0.0,\n\t- 0.0420569, 1.0420571, 0.0,\n\t- 0.0196376, - 0.0786361, 1.0982735\n);\n\n/**\n * Defines supported color spaces by transfer function and primaries,\n * and provides conversions to/from the Linear-sRGB reference space.\n */\nconst COLOR_SPACES = {\n\t[ LinearSRGBColorSpace ]: {\n\t\ttransfer: LinearTransfer,\n\t\tprimaries: Rec709Primaries,\n\t\ttoReference: ( color ) => color,\n\t\tfromReference: ( color ) => color,\n\t},\n\t[ SRGBColorSpace ]: {\n\t\ttransfer: SRGBTransfer,\n\t\tprimaries: Rec709Primaries,\n\t\ttoReference: ( color ) => color.convertSRGBToLinear(),\n\t\tfromReference: ( color ) => color.convertLinearToSRGB(),\n\t},\n\t[ LinearDisplayP3ColorSpace ]: {\n\t\ttransfer: LinearTransfer,\n\t\tprimaries: P3Primaries,\n\t\ttoReference: ( color ) => color.applyMatrix3( LINEAR_DISPLAY_P3_TO_LINEAR_SRGB ),\n\t\tfromReference: ( color ) => color.applyMatrix3( LINEAR_SRGB_TO_LINEAR_DISPLAY_P3 ),\n\t},\n\t[ DisplayP3ColorSpace ]: {\n\t\ttransfer: SRGBTransfer,\n\t\tprimaries: P3Primaries,\n\t\ttoReference: ( color ) => color.convertSRGBToLinear().applyMatrix3( LINEAR_DISPLAY_P3_TO_LINEAR_SRGB ),\n\t\tfromReference: ( color ) => color.applyMatrix3( LINEAR_SRGB_TO_LINEAR_DISPLAY_P3 ).convertLinearToSRGB(),\n\t},\n};\n\nconst SUPPORTED_WORKING_COLOR_SPACES = new Set( [ LinearSRGBColorSpace, LinearDisplayP3ColorSpace ] );\n\nconst ColorManagement = {\n\n\tenabled: true,\n\n\t_workingColorSpace: LinearSRGBColorSpace,\n\n\tget workingColorSpace() {\n\n\t\treturn this._workingColorSpace;\n\n\t},\n\n\tset workingColorSpace( colorSpace ) {\n\n\t\tif ( ! SUPPORTED_WORKING_COLOR_SPACES.has( colorSpace ) ) {\n\n\t\t\tthrow new Error( `Unsupported working color space, \"${ colorSpace }\".` );\n\n\t\t}\n\n\t\tthis._workingColorSpace = colorSpace;\n\n\t},\n\n\tconvert: function ( color, sourceColorSpace, targetColorSpace ) {\n\n\t\tif ( this.enabled === false || sourceColorSpace === targetColorSpace || ! sourceColorSpace || ! targetColorSpace ) {\n\n\t\t\treturn color;\n\n\t\t}\n\n\t\tconst sourceToReference = COLOR_SPACES[ sourceColorSpace ].toReference;\n\t\tconst targetFromReference = COLOR_SPACES[ targetColorSpace ].fromReference;\n\n\t\treturn targetFromReference( sourceToReference( color ) );\n\n\t},\n\n\tfromWorkingColorSpace: function ( color, targetColorSpace ) {\n\n\t\treturn this.convert( color, this._workingColorSpace, targetColorSpace );\n\n\t},\n\n\ttoWorkingColorSpace: function ( color, sourceColorSpace ) {\n\n\t\treturn this.convert( color, sourceColorSpace, this._workingColorSpace );\n\n\t},\n\n\tgetPrimaries: function ( colorSpace ) {\n\n\t\treturn COLOR_SPACES[ colorSpace ].primaries;\n\n\t},\n\n\tgetTransfer: function ( colorSpace ) {\n\n\t\tif ( colorSpace === NoColorSpace ) return LinearTransfer;\n\n\t\treturn COLOR_SPACES[ colorSpace ].transfer;\n\n\t},\n\n};\n\n\nfunction SRGBToLinear( c ) {\n\n\treturn ( c < 0.04045 ) ? c * 0.0773993808 : Math.pow( c * 0.9478672986 + 0.0521327014, 2.4 );\n\n}\n\nfunction LinearToSRGB( c ) {\n\n\treturn ( c < 0.0031308 ) ? c * 12.92 : 1.055 * ( Math.pow( c, 0.41666 ) ) - 0.055;\n\n}\n\nlet _canvas;\n\nclass ImageUtils {\n\n\tstatic getDataURL( image ) {\n\n\t\tif ( /^data:/i.test( image.src ) ) {\n\n\t\t\treturn image.src;\n\n\t\t}\n\n\t\tif ( typeof HTMLCanvasElement === 'undefined' ) {\n\n\t\t\treturn image.src;\n\n\t\t}\n\n\t\tlet canvas;\n\n\t\tif ( image instanceof HTMLCanvasElement ) {\n\n\t\t\tcanvas = image;\n\n\t\t} else {\n\n\t\t\tif ( _canvas === undefined ) _canvas = createElementNS( 'canvas' );\n\n\t\t\t_canvas.width = image.width;\n\t\t\t_canvas.height = image.height;\n\n\t\t\tconst context = _canvas.getContext( '2d' );\n\n\t\t\tif ( image instanceof ImageData ) {\n\n\t\t\t\tcontext.putImageData( image, 0, 0 );\n\n\t\t\t} else {\n\n\t\t\t\tcontext.drawImage( image, 0, 0, image.width, image.height );\n\n\t\t\t}\n\n\t\t\tcanvas = _canvas;\n\n\t\t}\n\n\t\tif ( canvas.width > 2048 || canvas.height > 2048 ) {\n\n\t\t\tconsole.warn( 'THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons', image );\n\n\t\t\treturn canvas.toDataURL( 'image/jpeg', 0.6 );\n\n\t\t} else {\n\n\t\t\treturn canvas.toDataURL( 'image/png' );\n\n\t\t}\n\n\t}\n\n\tstatic sRGBToLinear( image ) {\n\n\t\tif ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||\n\t\t\t( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||\n\t\t\t( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ) {\n\n\t\t\tconst canvas = createElementNS( 'canvas' );\n\n\t\t\tcanvas.width = image.width;\n\t\t\tcanvas.height = image.height;\n\n\t\t\tconst context = canvas.getContext( '2d' );\n\t\t\tcontext.drawImage( image, 0, 0, image.width, image.height );\n\n\t\t\tconst imageData = context.getImageData( 0, 0, image.width, image.height );\n\t\t\tconst data = imageData.data;\n\n\t\t\tfor ( let i = 0; i < data.length; i ++ ) {\n\n\t\t\t\tdata[ i ] = SRGBToLinear( data[ i ] / 255 ) * 255;\n\n\t\t\t}\n\n\t\t\tcontext.putImageData( imageData, 0, 0 );\n\n\t\t\treturn canvas;\n\n\t\t} else if ( image.data ) {\n\n\t\t\tconst data = image.data.slice( 0 );\n\n\t\t\tfor ( let i = 0; i < data.length; i ++ ) {\n\n\t\t\t\tif ( data instanceof Uint8Array || data instanceof Uint8ClampedArray ) {\n\n\t\t\t\t\tdata[ i ] = Math.floor( SRGBToLinear( data[ i ] / 255 ) * 255 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// assuming float\n\n\t\t\t\t\tdata[ i ] = SRGBToLinear( data[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tdata: data,\n\t\t\t\twidth: image.width,\n\t\t\t\theight: image.height\n\t\t\t};\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied.' );\n\t\t\treturn image;\n\n\t\t}\n\n\t}\n\n}\n\nlet _sourceId = 0;\n\nclass Source {\n\n\tconstructor( data = null ) {\n\n\t\tthis.isSource = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _sourceId ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.data = data;\n\t\tthis.dataReady = true;\n\n\t\tthis.version = 0;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( ! isRootObject && meta.images[ this.uuid ] !== undefined ) {\n\n\t\t\treturn meta.images[ this.uuid ];\n\n\t\t}\n\n\t\tconst output = {\n\t\t\tuuid: this.uuid,\n\t\t\turl: ''\n\t\t};\n\n\t\tconst data = this.data;\n\n\t\tif ( data !== null ) {\n\n\t\t\tlet url;\n\n\t\t\tif ( Array.isArray( data ) ) {\n\n\t\t\t\t// cube texture\n\n\t\t\t\turl = [];\n\n\t\t\t\tfor ( let i = 0, l = data.length; i < l; i ++ ) {\n\n\t\t\t\t\tif ( data[ i ].isDataTexture ) {\n\n\t\t\t\t\t\turl.push( serializeImage( data[ i ].image ) );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\turl.push( serializeImage( data[ i ] ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// texture\n\n\t\t\t\turl = serializeImage( data );\n\n\t\t\t}\n\n\t\t\toutput.url = url;\n\n\t\t}\n\n\t\tif ( ! isRootObject ) {\n\n\t\t\tmeta.images[ this.uuid ] = output;\n\n\t\t}\n\n\t\treturn output;\n\n\t}\n\n}\n\nfunction serializeImage( image ) {\n\n\tif ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||\n\t\t( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||\n\t\t( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ) {\n\n\t\t// default images\n\n\t\treturn ImageUtils.getDataURL( image );\n\n\t} else {\n\n\t\tif ( image.data ) {\n\n\t\t\t// images of DataTexture\n\n\t\t\treturn {\n\t\t\t\tdata: Array.from( image.data ),\n\t\t\t\twidth: image.width,\n\t\t\t\theight: image.height,\n\t\t\t\ttype: image.data.constructor.name\n\t\t\t};\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.Texture: Unable to serialize Texture.' );\n\t\t\treturn {};\n\n\t\t}\n\n\t}\n\n}\n\nlet _textureId = 0;\n\nclass Texture extends EventDispatcher {\n\n\tconstructor( image = Texture.DEFAULT_IMAGE, mapping = Texture.DEFAULT_MAPPING, wrapS = ClampToEdgeWrapping, wrapT = ClampToEdgeWrapping, magFilter = LinearFilter, minFilter = LinearMipmapLinearFilter, format = RGBAFormat, type = UnsignedByteType, anisotropy = Texture.DEFAULT_ANISOTROPY, colorSpace = NoColorSpace ) {\n\n\t\tsuper();\n\n\t\tthis.isTexture = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _textureId ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.name = '';\n\n\t\tthis.source = new Source( image );\n\t\tthis.mipmaps = [];\n\n\t\tthis.mapping = mapping;\n\t\tthis.channel = 0;\n\n\t\tthis.wrapS = wrapS;\n\t\tthis.wrapT = wrapT;\n\n\t\tthis.magFilter = magFilter;\n\t\tthis.minFilter = minFilter;\n\n\t\tthis.anisotropy = anisotropy;\n\n\t\tthis.format = format;\n\t\tthis.internalFormat = null;\n\t\tthis.type = type;\n\n\t\tthis.offset = new Vector2( 0, 0 );\n\t\tthis.repeat = new Vector2( 1, 1 );\n\t\tthis.center = new Vector2( 0, 0 );\n\t\tthis.rotation = 0;\n\n\t\tthis.matrixAutoUpdate = true;\n\t\tthis.matrix = new Matrix3();\n\n\t\tthis.generateMipmaps = true;\n\t\tthis.premultiplyAlpha = false;\n\t\tthis.flipY = true;\n\t\tthis.unpackAlignment = 4;\t// valid values: 1, 2, 4, 8 (see http://www.khronos.org/opengles/sdk/docs/man/xhtml/glPixelStorei.xml)\n\n\t\tthis.colorSpace = colorSpace;\n\n\t\tthis.userData = {};\n\n\t\tthis.version = 0;\n\t\tthis.onUpdate = null;\n\n\t\tthis.isRenderTargetTexture = false; // indicates whether a texture belongs to a render target or not\n\t\tthis.pmremVersion = 0; // indicates whether this texture should be processed by PMREMGenerator or not (only relevant for render target textures)\n\n\t}\n\n\tget image() {\n\n\t\treturn this.source.data;\n\n\t}\n\n\tset image( value = null ) {\n\n\t\tthis.source.data = value;\n\n\t}\n\n\tupdateMatrix() {\n\n\t\tthis.matrix.setUvTransform( this.offset.x, this.offset.y, this.repeat.x, this.repeat.y, this.rotation, this.center.x, this.center.y );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.source = source.source;\n\t\tthis.mipmaps = source.mipmaps.slice( 0 );\n\n\t\tthis.mapping = source.mapping;\n\t\tthis.channel = source.channel;\n\n\t\tthis.wrapS = source.wrapS;\n\t\tthis.wrapT = source.wrapT;\n\n\t\tthis.magFilter = source.magFilter;\n\t\tthis.minFilter = source.minFilter;\n\n\t\tthis.anisotropy = source.anisotropy;\n\n\t\tthis.format = source.format;\n\t\tthis.internalFormat = source.internalFormat;\n\t\tthis.type = source.type;\n\n\t\tthis.offset.copy( source.offset );\n\t\tthis.repeat.copy( source.repeat );\n\t\tthis.center.copy( source.center );\n\t\tthis.rotation = source.rotation;\n\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\t\tthis.matrix.copy( source.matrix );\n\n\t\tthis.generateMipmaps = source.generateMipmaps;\n\t\tthis.premultiplyAlpha = source.premultiplyAlpha;\n\t\tthis.flipY = source.flipY;\n\t\tthis.unpackAlignment = source.unpackAlignment;\n\t\tthis.colorSpace = source.colorSpace;\n\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\tthis.needsUpdate = true;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( ! isRootObject && meta.textures[ this.uuid ] !== undefined ) {\n\n\t\t\treturn meta.textures[ this.uuid ];\n\n\t\t}\n\n\t\tconst output = {\n\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.6,\n\t\t\t\ttype: 'Texture',\n\t\t\t\tgenerator: 'Texture.toJSON'\n\t\t\t},\n\n\t\t\tuuid: this.uuid,\n\t\t\tname: this.name,\n\n\t\t\timage: this.source.toJSON( meta ).uuid,\n\n\t\t\tmapping: this.mapping,\n\t\t\tchannel: this.channel,\n\n\t\t\trepeat: [ this.repeat.x, this.repeat.y ],\n\t\t\toffset: [ this.offset.x, this.offset.y ],\n\t\t\tcenter: [ this.center.x, this.center.y ],\n\t\t\trotation: this.rotation,\n\n\t\t\twrap: [ this.wrapS, this.wrapT ],\n\n\t\t\tformat: this.format,\n\t\t\tinternalFormat: this.internalFormat,\n\t\t\ttype: this.type,\n\t\t\tcolorSpace: this.colorSpace,\n\n\t\t\tminFilter: this.minFilter,\n\t\t\tmagFilter: this.magFilter,\n\t\t\tanisotropy: this.anisotropy,\n\n\t\t\tflipY: this.flipY,\n\n\t\t\tgenerateMipmaps: this.generateMipmaps,\n\t\t\tpremultiplyAlpha: this.premultiplyAlpha,\n\t\t\tunpackAlignment: this.unpackAlignment\n\n\t\t};\n\n\t\tif ( Object.keys( this.userData ).length > 0 ) output.userData = this.userData;\n\n\t\tif ( ! isRootObject ) {\n\n\t\t\tmeta.textures[ this.uuid ] = output;\n\n\t\t}\n\n\t\treturn output;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n\ttransformUv( uv ) {\n\n\t\tif ( this.mapping !== UVMapping ) return uv;\n\n\t\tuv.applyMatrix3( this.matrix );\n\n\t\tif ( uv.x < 0 || uv.x > 1 ) {\n\n\t\t\tswitch ( this.wrapS ) {\n\n\t\t\t\tcase RepeatWrapping:\n\n\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ClampToEdgeWrapping:\n\n\t\t\t\t\tuv.x = uv.x < 0 ? 0 : 1;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MirroredRepeatWrapping:\n\n\t\t\t\t\tif ( Math.abs( Math.floor( uv.x ) % 2 ) === 1 ) {\n\n\t\t\t\t\t\tuv.x = Math.ceil( uv.x ) - uv.x;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( uv.y < 0 || uv.y > 1 ) {\n\n\t\t\tswitch ( this.wrapT ) {\n\n\t\t\t\tcase RepeatWrapping:\n\n\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ClampToEdgeWrapping:\n\n\t\t\t\t\tuv.y = uv.y < 0 ? 0 : 1;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MirroredRepeatWrapping:\n\n\t\t\t\t\tif ( Math.abs( Math.floor( uv.y ) % 2 ) === 1 ) {\n\n\t\t\t\t\t\tuv.y = Math.ceil( uv.y ) - uv.y;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.flipY ) {\n\n\t\t\tuv.y = 1 - uv.y;\n\n\t\t}\n\n\t\treturn uv;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) {\n\n\t\t\tthis.version ++;\n\t\t\tthis.source.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n\tset needsPMREMUpdate( value ) {\n\n\t\tif ( value === true ) {\n\n\t\t\tthis.pmremVersion ++;\n\n\t\t}\n\n\t}\n\n}\n\nTexture.DEFAULT_IMAGE = null;\nTexture.DEFAULT_MAPPING = UVMapping;\nTexture.DEFAULT_ANISOTROPY = 1;\n\nclass Vector4 {\n\n\tconstructor( x = 0, y = 0, z = 0, w = 1 ) {\n\n\t\tVector4.prototype.isVector4 = true;\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\tthis.w = w;\n\n\t}\n\n\tget width() {\n\n\t\treturn this.z;\n\n\t}\n\n\tset width( value ) {\n\n\t\tthis.z = value;\n\n\t}\n\n\tget height() {\n\n\t\treturn this.w;\n\n\t}\n\n\tset height( value ) {\n\n\t\tthis.w = value;\n\n\t}\n\n\tset( x, y, z, w ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\tthis.w = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\t\tthis.z = scalar;\n\t\tthis.w = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetX( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetZ( z ) {\n\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetW( w ) {\n\n\t\tthis.w = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponent( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tcase 2: this.z = value; break;\n\t\t\tcase 3: this.w = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tcase 2: return this.z;\n\t\t\tcase 3: return this.w;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.x, this.y, this.z, this.w );\n\n\t}\n\n\tcopy( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\t\tthis.z = v.z;\n\t\tthis.w = ( v.w !== undefined ) ? v.w : 1;\n\n\t\treturn this;\n\n\t}\n\n\tadd( v ) {\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\t\tthis.z += v.z;\n\t\tthis.w += v.w;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\t\tthis.z += s;\n\t\tthis.w += s;\n\n\t\treturn this;\n\n\t}\n\n\taddVectors( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\t\tthis.z = a.z + b.z;\n\t\tthis.w = a.w + b.w;\n\n\t\treturn this;\n\n\t}\n\n\taddScaledVector( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\t\tthis.z += v.z * s;\n\t\tthis.w += v.w * s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( v ) {\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\t\tthis.z -= v.z;\n\t\tthis.w -= v.w;\n\n\t\treturn this;\n\n\t}\n\n\tsubScalar( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\t\tthis.z -= s;\n\t\tthis.w -= s;\n\n\t\treturn this;\n\n\t}\n\n\tsubVectors( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\t\tthis.z = a.z - b.z;\n\t\tthis.w = a.w - b.w;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( v ) {\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\t\tthis.z *= v.z;\n\t\tthis.w *= v.w;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\t\tthis.z *= scalar;\n\t\tthis.w *= scalar;\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z, w = this.w;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] * w;\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] * w;\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] * w;\n\t\tthis.w = e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] * w;\n\n\t\treturn this;\n\n\t}\n\n\tdivideScalar( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t}\n\n\tsetAxisAngleFromQuaternion( q ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm\n\n\t\t// q is assumed to be normalized\n\n\t\tthis.w = 2 * Math.acos( q.w );\n\n\t\tconst s = Math.sqrt( 1 - q.w * q.w );\n\n\t\tif ( s < 0.0001 ) {\n\n\t\t\tthis.x = 1;\n\t\t\tthis.y = 0;\n\t\t\tthis.z = 0;\n\n\t\t} else {\n\n\t\t\tthis.x = q.x / s;\n\t\t\tthis.y = q.y / s;\n\t\t\tthis.z = q.z / s;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetAxisAngleFromRotationMatrix( m ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToAngle/index.htm\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tlet angle, x, y, z; // variables for result\n\t\tconst epsilon = 0.01,\t\t// margin to allow for rounding errors\n\t\t\tepsilon2 = 0.1,\t\t// margin to distinguish between 0 and 180 degrees\n\n\t\t\tte = m.elements,\n\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n\t\tif ( ( Math.abs( m12 - m21 ) < epsilon ) &&\n\t\t     ( Math.abs( m13 - m31 ) < epsilon ) &&\n\t\t     ( Math.abs( m23 - m32 ) < epsilon ) ) {\n\n\t\t\t// singularity found\n\t\t\t// first check for identity matrix which must have +1 for all terms\n\t\t\t// in leading diagonal and zero in other terms\n\n\t\t\tif ( ( Math.abs( m12 + m21 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m13 + m31 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m23 + m32 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m11 + m22 + m33 - 3 ) < epsilon2 ) ) {\n\n\t\t\t\t// this singularity is identity matrix so angle = 0\n\n\t\t\t\tthis.set( 1, 0, 0, 0 );\n\n\t\t\t\treturn this; // zero angle, arbitrary axis\n\n\t\t\t}\n\n\t\t\t// otherwise this singularity is angle = 180\n\n\t\t\tangle = Math.PI;\n\n\t\t\tconst xx = ( m11 + 1 ) / 2;\n\t\t\tconst yy = ( m22 + 1 ) / 2;\n\t\t\tconst zz = ( m33 + 1 ) / 2;\n\t\t\tconst xy = ( m12 + m21 ) / 4;\n\t\t\tconst xz = ( m13 + m31 ) / 4;\n\t\t\tconst yz = ( m23 + m32 ) / 4;\n\n\t\t\tif ( ( xx > yy ) && ( xx > zz ) ) {\n\n\t\t\t\t// m11 is the largest diagonal term\n\n\t\t\t\tif ( xx < epsilon ) {\n\n\t\t\t\t\tx = 0;\n\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\tz = 0.707106781;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tx = Math.sqrt( xx );\n\t\t\t\t\ty = xy / x;\n\t\t\t\t\tz = xz / x;\n\n\t\t\t\t}\n\n\t\t\t} else if ( yy > zz ) {\n\n\t\t\t\t// m22 is the largest diagonal term\n\n\t\t\t\tif ( yy < epsilon ) {\n\n\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\ty = 0;\n\t\t\t\t\tz = 0.707106781;\n\n\t\t\t\t} else {\n\n\t\t\t\t\ty = Math.sqrt( yy );\n\t\t\t\t\tx = xy / y;\n\t\t\t\t\tz = yz / y;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// m33 is the largest diagonal term so base result on this\n\n\t\t\t\tif ( zz < epsilon ) {\n\n\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\tz = 0;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tz = Math.sqrt( zz );\n\t\t\t\t\tx = xz / z;\n\t\t\t\t\ty = yz / z;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.set( x, y, z, angle );\n\n\t\t\treturn this; // return 180 deg rotation\n\n\t\t}\n\n\t\t// as we have reached here there are no singularities so we can handle normally\n\n\t\tlet s = Math.sqrt( ( m32 - m23 ) * ( m32 - m23 ) +\n\t\t\t( m13 - m31 ) * ( m13 - m31 ) +\n\t\t\t( m21 - m12 ) * ( m21 - m12 ) ); // used to normalize\n\n\t\tif ( Math.abs( s ) < 0.001 ) s = 1;\n\n\t\t// prevent divide by zero, should not happen if matrix is orthogonal and should be\n\t\t// caught by singularity test above, but I've left it in just in case\n\n\t\tthis.x = ( m32 - m23 ) / s;\n\t\tthis.y = ( m13 - m31 ) / s;\n\t\tthis.z = ( m21 - m12 ) / s;\n\t\tthis.w = Math.acos( ( m11 + m22 + m33 - 1 ) / 2 );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrixPosition( m ) {\n\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 12 ];\n\t\tthis.y = e[ 13 ];\n\t\tthis.z = e[ 14 ];\n\t\tthis.w = e[ 15 ];\n\n\t\treturn this;\n\n\t}\n\n\tmin( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\t\tthis.z = Math.min( this.z, v.z );\n\t\tthis.w = Math.min( this.w, v.w );\n\n\t\treturn this;\n\n\t}\n\n\tmax( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\t\tthis.z = Math.max( this.z, v.z );\n\t\tthis.w = Math.max( this.w, v.w );\n\n\t\treturn this;\n\n\t}\n\n\tclamp( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\n\t\tthis.w = Math.max( min.w, Math.min( max.w, this.w ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampScalar( minVal, maxVal ) {\n\n\t\tthis.x = Math.max( minVal, Math.min( maxVal, this.x ) );\n\t\tthis.y = Math.max( minVal, Math.min( maxVal, this.y ) );\n\t\tthis.z = Math.max( minVal, Math.min( maxVal, this.z ) );\n\t\tthis.w = Math.max( minVal, Math.min( maxVal, this.w ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampLength( min, max ) {\n\n\t\tconst length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t}\n\n\tfloor() {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\t\tthis.z = Math.floor( this.z );\n\t\tthis.w = Math.floor( this.w );\n\n\t\treturn this;\n\n\t}\n\n\tceil() {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\t\tthis.z = Math.ceil( this.z );\n\t\tthis.w = Math.ceil( this.w );\n\n\t\treturn this;\n\n\t}\n\n\tround() {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\t\tthis.z = Math.round( this.z );\n\t\tthis.w = Math.round( this.w );\n\n\t\treturn this;\n\n\t}\n\n\troundToZero() {\n\n\t\tthis.x = Math.trunc( this.x );\n\t\tthis.y = Math.trunc( this.y );\n\t\tthis.z = Math.trunc( this.z );\n\t\tthis.w = Math.trunc( this.w );\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\t\tthis.z = - this.z;\n\t\tthis.w = - this.w;\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z + this.w * v.w;\n\n\t}\n\n\tlengthSq() {\n\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w );\n\n\t}\n\n\tmanhattanLength() {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z ) + Math.abs( this.w );\n\n\t}\n\n\tnormalize() {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t}\n\n\tsetLength( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t}\n\n\tlerp( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\tthis.z += ( v.z - this.z ) * alpha;\n\t\tthis.w += ( v.w - this.w ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpVectors( v1, v2, alpha ) {\n\n\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\n\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\n\t\tthis.z = v1.z + ( v2.z - v1.z ) * alpha;\n\t\tthis.w = v1.w + ( v2.w - v1.w ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tequals( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) && ( v.w === this.w ) );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\t\tthis.z = array[ offset + 2 ];\n\t\tthis.w = array[ offset + 3 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\t\tarray[ offset + 2 ] = this.z;\n\t\tarray[ offset + 3 ] = this.w;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\t\tthis.z = attribute.getZ( index );\n\t\tthis.w = attribute.getW( index );\n\n\t\treturn this;\n\n\t}\n\n\trandom() {\n\n\t\tthis.x = Math.random();\n\t\tthis.y = Math.random();\n\t\tthis.z = Math.random();\n\t\tthis.w = Math.random();\n\n\t\treturn this;\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.x;\n\t\tyield this.y;\n\t\tyield this.z;\n\t\tyield this.w;\n\n\t}\n\n}\n\n/*\n In options, we can specify:\n * Texture parameters for an auto-generated target texture\n * depthBuffer/stencilBuffer: Booleans to indicate if we should generate these buffers\n*/\nclass RenderTarget extends EventDispatcher {\n\n\tconstructor( width = 1, height = 1, options = {} ) {\n\n\t\tsuper();\n\n\t\tthis.isRenderTarget = true;\n\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t\tthis.depth = 1;\n\n\t\tthis.scissor = new Vector4( 0, 0, width, height );\n\t\tthis.scissorTest = false;\n\n\t\tthis.viewport = new Vector4( 0, 0, width, height );\n\n\t\tconst image = { width: width, height: height, depth: 1 };\n\n\t\toptions = Object.assign( {\n\t\t\tgenerateMipmaps: false,\n\t\t\tinternalFormat: null,\n\t\t\tminFilter: LinearFilter,\n\t\t\tdepthBuffer: true,\n\t\t\tstencilBuffer: false,\n\t\t\tresolveDepthBuffer: true,\n\t\t\tresolveStencilBuffer: true,\n\t\t\tdepthTexture: null,\n\t\t\tsamples: 0,\n\t\t\tcount: 1\n\t\t}, options );\n\n\t\tconst texture = new Texture( image, options.mapping, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.colorSpace );\n\n\t\ttexture.flipY = false;\n\t\ttexture.generateMipmaps = options.generateMipmaps;\n\t\ttexture.internalFormat = options.internalFormat;\n\n\t\tthis.textures = [];\n\n\t\tconst count = options.count;\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tthis.textures[ i ] = texture.clone();\n\t\t\tthis.textures[ i ].isRenderTargetTexture = true;\n\n\t\t}\n\n\t\tthis.depthBuffer = options.depthBuffer;\n\t\tthis.stencilBuffer = options.stencilBuffer;\n\n\t\tthis.resolveDepthBuffer = options.resolveDepthBuffer;\n\t\tthis.resolveStencilBuffer = options.resolveStencilBuffer;\n\n\t\tthis.depthTexture = options.depthTexture;\n\n\t\tthis.samples = options.samples;\n\n\t}\n\n\tget texture() {\n\n\t\treturn this.textures[ 0 ];\n\n\t}\n\n\tset texture( value ) {\n\n\t\tthis.textures[ 0 ] = value;\n\n\t}\n\n\tsetSize( width, height, depth = 1 ) {\n\n\t\tif ( this.width !== width || this.height !== height || this.depth !== depth ) {\n\n\t\t\tthis.width = width;\n\t\t\tthis.height = height;\n\t\t\tthis.depth = depth;\n\n\t\t\tfor ( let i = 0, il = this.textures.length; i < il; i ++ ) {\n\n\t\t\t\tthis.textures[ i ].image.width = width;\n\t\t\t\tthis.textures[ i ].image.height = height;\n\t\t\t\tthis.textures[ i ].image.depth = depth;\n\n\t\t\t}\n\n\t\t\tthis.dispose();\n\n\t\t}\n\n\t\tthis.viewport.set( 0, 0, width, height );\n\t\tthis.scissor.set( 0, 0, width, height );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.width = source.width;\n\t\tthis.height = source.height;\n\t\tthis.depth = source.depth;\n\n\t\tthis.scissor.copy( source.scissor );\n\t\tthis.scissorTest = source.scissorTest;\n\n\t\tthis.viewport.copy( source.viewport );\n\n\t\tthis.textures.length = 0;\n\n\t\tfor ( let i = 0, il = source.textures.length; i < il; i ++ ) {\n\n\t\t\tthis.textures[ i ] = source.textures[ i ].clone();\n\t\t\tthis.textures[ i ].isRenderTargetTexture = true;\n\n\t\t}\n\n\t\t// ensure image object is not shared, see #20328\n\n\t\tconst image = Object.assign( {}, source.texture.image );\n\t\tthis.texture.source = new Source( image );\n\n\t\tthis.depthBuffer = source.depthBuffer;\n\t\tthis.stencilBuffer = source.stencilBuffer;\n\n\t\tthis.resolveDepthBuffer = source.resolveDepthBuffer;\n\t\tthis.resolveStencilBuffer = source.resolveStencilBuffer;\n\n\t\tif ( source.depthTexture !== null ) this.depthTexture = source.depthTexture.clone();\n\n\t\tthis.samples = source.samples;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n}\n\nclass WebGLRenderTarget extends RenderTarget {\n\n\tconstructor( width = 1, height = 1, options = {} ) {\n\n\t\tsuper( width, height, options );\n\n\t\tthis.isWebGLRenderTarget = true;\n\n\t}\n\n}\n\nclass DataArrayTexture extends Texture {\n\n\tconstructor( data = null, width = 1, height = 1, depth = 1 ) {\n\n\t\tsuper( null );\n\n\t\tthis.isDataArrayTexture = true;\n\n\t\tthis.image = { data, width, height, depth };\n\n\t\tthis.magFilter = NearestFilter;\n\t\tthis.minFilter = NearestFilter;\n\n\t\tthis.wrapR = ClampToEdgeWrapping;\n\n\t\tthis.generateMipmaps = false;\n\t\tthis.flipY = false;\n\t\tthis.unpackAlignment = 1;\n\n\t\tthis.layerUpdates = new Set();\n\n\t}\n\n\taddLayerUpdate( layerIndex ) {\n\n\t\tthis.layerUpdates.add( layerIndex );\n\n\t}\n\n\tclearLayerUpdates() {\n\n\t\tthis.layerUpdates.clear();\n\n\t}\n\n}\n\nclass WebGLArrayRenderTarget extends WebGLRenderTarget {\n\n\tconstructor( width = 1, height = 1, depth = 1, options = {} ) {\n\n\t\tsuper( width, height, options );\n\n\t\tthis.isWebGLArrayRenderTarget = true;\n\n\t\tthis.depth = depth;\n\n\t\tthis.texture = new DataArrayTexture( null, width, height, depth );\n\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t}\n\n}\n\nclass Data3DTexture extends Texture {\n\n\tconstructor( data = null, width = 1, height = 1, depth = 1 ) {\n\n\t\t// We're going to add .setXXX() methods for setting properties later.\n\t\t// Users can still set in DataTexture3D directly.\n\t\t//\n\t\t//\tconst texture = new THREE.DataTexture3D( data, width, height, depth );\n\t\t// \ttexture.anisotropy = 16;\n\t\t//\n\t\t// See #14839\n\n\t\tsuper( null );\n\n\t\tthis.isData3DTexture = true;\n\n\t\tthis.image = { data, width, height, depth };\n\n\t\tthis.magFilter = NearestFilter;\n\t\tthis.minFilter = NearestFilter;\n\n\t\tthis.wrapR = ClampToEdgeWrapping;\n\n\t\tthis.generateMipmaps = false;\n\t\tthis.flipY = false;\n\t\tthis.unpackAlignment = 1;\n\n\t}\n\n}\n\nclass WebGL3DRenderTarget extends WebGLRenderTarget {\n\n\tconstructor( width = 1, height = 1, depth = 1, options = {} ) {\n\n\t\tsuper( width, height, options );\n\n\t\tthis.isWebGL3DRenderTarget = true;\n\n\t\tthis.depth = depth;\n\n\t\tthis.texture = new Data3DTexture( null, width, height, depth );\n\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t}\n\n}\n\nclass Quaternion {\n\n\tconstructor( x = 0, y = 0, z = 0, w = 1 ) {\n\n\t\tthis.isQuaternion = true;\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._w = w;\n\n\t}\n\n\tstatic slerpFlat( dst, dstOffset, src0, srcOffset0, src1, srcOffset1, t ) {\n\n\t\t// fuzz-free, array-based Quaternion SLERP operation\n\n\t\tlet x0 = src0[ srcOffset0 + 0 ],\n\t\t\ty0 = src0[ srcOffset0 + 1 ],\n\t\t\tz0 = src0[ srcOffset0 + 2 ],\n\t\t\tw0 = src0[ srcOffset0 + 3 ];\n\n\t\tconst x1 = src1[ srcOffset1 + 0 ],\n\t\t\ty1 = src1[ srcOffset1 + 1 ],\n\t\t\tz1 = src1[ srcOffset1 + 2 ],\n\t\t\tw1 = src1[ srcOffset1 + 3 ];\n\n\t\tif ( t === 0 ) {\n\n\t\t\tdst[ dstOffset + 0 ] = x0;\n\t\t\tdst[ dstOffset + 1 ] = y0;\n\t\t\tdst[ dstOffset + 2 ] = z0;\n\t\t\tdst[ dstOffset + 3 ] = w0;\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( t === 1 ) {\n\n\t\t\tdst[ dstOffset + 0 ] = x1;\n\t\t\tdst[ dstOffset + 1 ] = y1;\n\t\t\tdst[ dstOffset + 2 ] = z1;\n\t\t\tdst[ dstOffset + 3 ] = w1;\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( w0 !== w1 || x0 !== x1 || y0 !== y1 || z0 !== z1 ) {\n\n\t\t\tlet s = 1 - t;\n\t\t\tconst cos = x0 * x1 + y0 * y1 + z0 * z1 + w0 * w1,\n\t\t\t\tdir = ( cos >= 0 ? 1 : - 1 ),\n\t\t\t\tsqrSin = 1 - cos * cos;\n\n\t\t\t// Skip the Slerp for tiny steps to avoid numeric problems:\n\t\t\tif ( sqrSin > Number.EPSILON ) {\n\n\t\t\t\tconst sin = Math.sqrt( sqrSin ),\n\t\t\t\t\tlen = Math.atan2( sin, cos * dir );\n\n\t\t\t\ts = Math.sin( s * len ) / sin;\n\t\t\t\tt = Math.sin( t * len ) / sin;\n\n\t\t\t}\n\n\t\t\tconst tDir = t * dir;\n\n\t\t\tx0 = x0 * s + x1 * tDir;\n\t\t\ty0 = y0 * s + y1 * tDir;\n\t\t\tz0 = z0 * s + z1 * tDir;\n\t\t\tw0 = w0 * s + w1 * tDir;\n\n\t\t\t// Normalize in case we just did a lerp:\n\t\t\tif ( s === 1 - t ) {\n\n\t\t\t\tconst f = 1 / Math.sqrt( x0 * x0 + y0 * y0 + z0 * z0 + w0 * w0 );\n\n\t\t\t\tx0 *= f;\n\t\t\t\ty0 *= f;\n\t\t\t\tz0 *= f;\n\t\t\t\tw0 *= f;\n\n\t\t\t}\n\n\t\t}\n\n\t\tdst[ dstOffset ] = x0;\n\t\tdst[ dstOffset + 1 ] = y0;\n\t\tdst[ dstOffset + 2 ] = z0;\n\t\tdst[ dstOffset + 3 ] = w0;\n\n\t}\n\n\tstatic multiplyQuaternionsFlat( dst, dstOffset, src0, srcOffset0, src1, srcOffset1 ) {\n\n\t\tconst x0 = src0[ srcOffset0 ];\n\t\tconst y0 = src0[ srcOffset0 + 1 ];\n\t\tconst z0 = src0[ srcOffset0 + 2 ];\n\t\tconst w0 = src0[ srcOffset0 + 3 ];\n\n\t\tconst x1 = src1[ srcOffset1 ];\n\t\tconst y1 = src1[ srcOffset1 + 1 ];\n\t\tconst z1 = src1[ srcOffset1 + 2 ];\n\t\tconst w1 = src1[ srcOffset1 + 3 ];\n\n\t\tdst[ dstOffset ] = x0 * w1 + w0 * x1 + y0 * z1 - z0 * y1;\n\t\tdst[ dstOffset + 1 ] = y0 * w1 + w0 * y1 + z0 * x1 - x0 * z1;\n\t\tdst[ dstOffset + 2 ] = z0 * w1 + w0 * z1 + x0 * y1 - y0 * x1;\n\t\tdst[ dstOffset + 3 ] = w0 * w1 - x0 * x1 - y0 * y1 - z0 * z1;\n\n\t\treturn dst;\n\n\t}\n\n\tget x() {\n\n\t\treturn this._x;\n\n\t}\n\n\tset x( value ) {\n\n\t\tthis._x = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget y() {\n\n\t\treturn this._y;\n\n\t}\n\n\tset y( value ) {\n\n\t\tthis._y = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget z() {\n\n\t\treturn this._z;\n\n\t}\n\n\tset z( value ) {\n\n\t\tthis._z = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget w() {\n\n\t\treturn this._w;\n\n\t}\n\n\tset w( value ) {\n\n\t\tthis._w = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tset( x, y, z, w ) {\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._w = w;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this._x, this._y, this._z, this._w );\n\n\t}\n\n\tcopy( quaternion ) {\n\n\t\tthis._x = quaternion.x;\n\t\tthis._y = quaternion.y;\n\t\tthis._z = quaternion.z;\n\t\tthis._w = quaternion.w;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromEuler( euler, update = true ) {\n\n\t\tconst x = euler._x, y = euler._y, z = euler._z, order = euler._order;\n\n\t\t// http://www.mathworks.com/matlabcentral/fileexchange/\n\t\t// \t20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/\n\t\t//\tcontent/SpinCalc.m\n\n\t\tconst cos = Math.cos;\n\t\tconst sin = Math.sin;\n\n\t\tconst c1 = cos( x / 2 );\n\t\tconst c2 = cos( y / 2 );\n\t\tconst c3 = cos( z / 2 );\n\n\t\tconst s1 = sin( x / 2 );\n\t\tconst s2 = sin( y / 2 );\n\t\tconst s3 = sin( z / 2 );\n\n\t\tswitch ( order ) {\n\n\t\t\tcase 'XYZ':\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'YXZ':\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZXY':\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZYX':\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'YZX':\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'XZY':\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tconsole.warn( 'THREE.Quaternion: .setFromEuler() encountered an unknown order: ' + order );\n\n\t\t}\n\n\t\tif ( update === true ) this._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromAxisAngle( axis, angle ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm\n\n\t\t// assumes axis is normalized\n\n\t\tconst halfAngle = angle / 2, s = Math.sin( halfAngle );\n\n\t\tthis._x = axis.x * s;\n\t\tthis._y = axis.y * s;\n\t\tthis._z = axis.z * s;\n\t\tthis._w = Math.cos( halfAngle );\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromRotationMatrix( m ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tconst te = m.elements,\n\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ],\n\n\t\t\ttrace = m11 + m22 + m33;\n\n\t\tif ( trace > 0 ) {\n\n\t\t\tconst s = 0.5 / Math.sqrt( trace + 1.0 );\n\n\t\t\tthis._w = 0.25 / s;\n\t\t\tthis._x = ( m32 - m23 ) * s;\n\t\t\tthis._y = ( m13 - m31 ) * s;\n\t\t\tthis._z = ( m21 - m12 ) * s;\n\n\t\t} else if ( m11 > m22 && m11 > m33 ) {\n\n\t\t\tconst s = 2.0 * Math.sqrt( 1.0 + m11 - m22 - m33 );\n\n\t\t\tthis._w = ( m32 - m23 ) / s;\n\t\t\tthis._x = 0.25 * s;\n\t\t\tthis._y = ( m12 + m21 ) / s;\n\t\t\tthis._z = ( m13 + m31 ) / s;\n\n\t\t} else if ( m22 > m33 ) {\n\n\t\t\tconst s = 2.0 * Math.sqrt( 1.0 + m22 - m11 - m33 );\n\n\t\t\tthis._w = ( m13 - m31 ) / s;\n\t\t\tthis._x = ( m12 + m21 ) / s;\n\t\t\tthis._y = 0.25 * s;\n\t\t\tthis._z = ( m23 + m32 ) / s;\n\n\t\t} else {\n\n\t\t\tconst s = 2.0 * Math.sqrt( 1.0 + m33 - m11 - m22 );\n\n\t\t\tthis._w = ( m21 - m12 ) / s;\n\t\t\tthis._x = ( m13 + m31 ) / s;\n\t\t\tthis._y = ( m23 + m32 ) / s;\n\t\t\tthis._z = 0.25 * s;\n\n\t\t}\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromUnitVectors( vFrom, vTo ) {\n\n\t\t// assumes direction vectors vFrom and vTo are normalized\n\n\t\tlet r = vFrom.dot( vTo ) + 1;\n\n\t\tif ( r < Number.EPSILON ) {\n\n\t\t\t// vFrom and vTo point in opposite directions\n\n\t\t\tr = 0;\n\n\t\t\tif ( Math.abs( vFrom.x ) > Math.abs( vFrom.z ) ) {\n\n\t\t\t\tthis._x = - vFrom.y;\n\t\t\t\tthis._y = vFrom.x;\n\t\t\t\tthis._z = 0;\n\t\t\t\tthis._w = r;\n\n\t\t\t} else {\n\n\t\t\t\tthis._x = 0;\n\t\t\t\tthis._y = - vFrom.z;\n\t\t\t\tthis._z = vFrom.y;\n\t\t\t\tthis._w = r;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// crossVectors( vFrom, vTo ); // inlined to avoid cyclic dependency on Vector3\n\n\t\t\tthis._x = vFrom.y * vTo.z - vFrom.z * vTo.y;\n\t\t\tthis._y = vFrom.z * vTo.x - vFrom.x * vTo.z;\n\t\t\tthis._z = vFrom.x * vTo.y - vFrom.y * vTo.x;\n\t\t\tthis._w = r;\n\n\t\t}\n\n\t\treturn this.normalize();\n\n\t}\n\n\tangleTo( q ) {\n\n\t\treturn 2 * Math.acos( Math.abs( clamp( this.dot( q ), - 1, 1 ) ) );\n\n\t}\n\n\trotateTowards( q, step ) {\n\n\t\tconst angle = this.angleTo( q );\n\n\t\tif ( angle === 0 ) return this;\n\n\t\tconst t = Math.min( 1, step / angle );\n\n\t\tthis.slerp( q, t );\n\n\t\treturn this;\n\n\t}\n\n\tidentity() {\n\n\t\treturn this.set( 0, 0, 0, 1 );\n\n\t}\n\n\tinvert() {\n\n\t\t// quaternion is assumed to have unit length\n\n\t\treturn this.conjugate();\n\n\t}\n\n\tconjugate() {\n\n\t\tthis._x *= - 1;\n\t\tthis._y *= - 1;\n\t\tthis._z *= - 1;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this._x * v._x + this._y * v._y + this._z * v._z + this._w * v._w;\n\n\t}\n\n\tlengthSq() {\n\n\t\treturn this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w );\n\n\t}\n\n\tnormalize() {\n\n\t\tlet l = this.length();\n\n\t\tif ( l === 0 ) {\n\n\t\t\tthis._x = 0;\n\t\t\tthis._y = 0;\n\t\t\tthis._z = 0;\n\t\t\tthis._w = 1;\n\n\t\t} else {\n\n\t\t\tl = 1 / l;\n\n\t\t\tthis._x = this._x * l;\n\t\t\tthis._y = this._y * l;\n\t\t\tthis._z = this._z * l;\n\t\t\tthis._w = this._w * l;\n\n\t\t}\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( q ) {\n\n\t\treturn this.multiplyQuaternions( this, q );\n\n\t}\n\n\tpremultiply( q ) {\n\n\t\treturn this.multiplyQuaternions( q, this );\n\n\t}\n\n\tmultiplyQuaternions( a, b ) {\n\n\t\t// from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm\n\n\t\tconst qax = a._x, qay = a._y, qaz = a._z, qaw = a._w;\n\t\tconst qbx = b._x, qby = b._y, qbz = b._z, qbw = b._w;\n\n\t\tthis._x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;\n\t\tthis._y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;\n\t\tthis._z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;\n\t\tthis._w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tslerp( qb, t ) {\n\n\t\tif ( t === 0 ) return this;\n\t\tif ( t === 1 ) return this.copy( qb );\n\n\t\tconst x = this._x, y = this._y, z = this._z, w = this._w;\n\n\t\t// http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/\n\n\t\tlet cosHalfTheta = w * qb._w + x * qb._x + y * qb._y + z * qb._z;\n\n\t\tif ( cosHalfTheta < 0 ) {\n\n\t\t\tthis._w = - qb._w;\n\t\t\tthis._x = - qb._x;\n\t\t\tthis._y = - qb._y;\n\t\t\tthis._z = - qb._z;\n\n\t\t\tcosHalfTheta = - cosHalfTheta;\n\n\t\t} else {\n\n\t\t\tthis.copy( qb );\n\n\t\t}\n\n\t\tif ( cosHalfTheta >= 1.0 ) {\n\n\t\t\tthis._w = w;\n\t\t\tthis._x = x;\n\t\t\tthis._y = y;\n\t\t\tthis._z = z;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst sqrSinHalfTheta = 1.0 - cosHalfTheta * cosHalfTheta;\n\n\t\tif ( sqrSinHalfTheta <= Number.EPSILON ) {\n\n\t\t\tconst s = 1 - t;\n\t\t\tthis._w = s * w + t * this._w;\n\t\t\tthis._x = s * x + t * this._x;\n\t\t\tthis._y = s * y + t * this._y;\n\t\t\tthis._z = s * z + t * this._z;\n\n\t\t\tthis.normalize(); // normalize calls _onChangeCallback()\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst sinHalfTheta = Math.sqrt( sqrSinHalfTheta );\n\t\tconst halfTheta = Math.atan2( sinHalfTheta, cosHalfTheta );\n\t\tconst ratioA = Math.sin( ( 1 - t ) * halfTheta ) / sinHalfTheta,\n\t\t\tratioB = Math.sin( t * halfTheta ) / sinHalfTheta;\n\n\t\tthis._w = ( w * ratioA + this._w * ratioB );\n\t\tthis._x = ( x * ratioA + this._x * ratioB );\n\t\tthis._y = ( y * ratioA + this._y * ratioB );\n\t\tthis._z = ( z * ratioA + this._z * ratioB );\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tslerpQuaternions( qa, qb, t ) {\n\n\t\treturn this.copy( qa ).slerp( qb, t );\n\n\t}\n\n\trandom() {\n\n\t\t// sets this quaternion to a uniform random unit quaternnion\n\n\t\t// Ken Shoemake\n\t\t// Uniform random rotations\n\t\t// D. Kirk, editor, Graphics Gems III, pages 124-132. Academic Press, New York, 1992.\n\n\t\tconst theta1 = 2 * Math.PI * Math.random();\n\t\tconst theta2 = 2 * Math.PI * Math.random();\n\n\t\tconst x0 = Math.random();\n\t\tconst r1 = Math.sqrt( 1 - x0 );\n\t\tconst r2 = Math.sqrt( x0 );\n\n\t\treturn this.set(\n\t\t\tr1 * Math.sin( theta1 ),\n\t\t\tr1 * Math.cos( theta1 ),\n\t\t\tr2 * Math.sin( theta2 ),\n\t\t\tr2 * Math.cos( theta2 ),\n\t\t);\n\n\t}\n\n\tequals( quaternion ) {\n\n\t\treturn ( quaternion._x === this._x ) && ( quaternion._y === this._y ) && ( quaternion._z === this._z ) && ( quaternion._w === this._w );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis._x = array[ offset ];\n\t\tthis._y = array[ offset + 1 ];\n\t\tthis._z = array[ offset + 2 ];\n\t\tthis._w = array[ offset + 3 ];\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this._x;\n\t\tarray[ offset + 1 ] = this._y;\n\t\tarray[ offset + 2 ] = this._z;\n\t\tarray[ offset + 3 ] = this._w;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis._x = attribute.getX( index );\n\t\tthis._y = attribute.getY( index );\n\t\tthis._z = attribute.getZ( index );\n\t\tthis._w = attribute.getW( index );\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\treturn this.toArray();\n\n\t}\n\n\t_onChange( callback ) {\n\n\t\tthis._onChangeCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\t_onChangeCallback() {}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this._x;\n\t\tyield this._y;\n\t\tyield this._z;\n\t\tyield this._w;\n\n\t}\n\n}\n\nclass Vector3 {\n\n\tconstructor( x = 0, y = 0, z = 0 ) {\n\n\t\tVector3.prototype.isVector3 = true;\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\n\t}\n\n\tset( x, y, z ) {\n\n\t\tif ( z === undefined ) z = this.z; // sprite.scale.set(x,y)\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\t\tthis.z = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetX( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetZ( z ) {\n\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponent( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tcase 2: this.z = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tcase 2: return this.z;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.x, this.y, this.z );\n\n\t}\n\n\tcopy( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\t\tthis.z = v.z;\n\n\t\treturn this;\n\n\t}\n\n\tadd( v ) {\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\t\tthis.z += v.z;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\t\tthis.z += s;\n\n\t\treturn this;\n\n\t}\n\n\taddVectors( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\t\tthis.z = a.z + b.z;\n\n\t\treturn this;\n\n\t}\n\n\taddScaledVector( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\t\tthis.z += v.z * s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( v ) {\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\t\tthis.z -= v.z;\n\n\t\treturn this;\n\n\t}\n\n\tsubScalar( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\t\tthis.z -= s;\n\n\t\treturn this;\n\n\t}\n\n\tsubVectors( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\t\tthis.z = a.z - b.z;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( v ) {\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\t\tthis.z *= v.z;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\t\tthis.z *= scalar;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyVectors( a, b ) {\n\n\t\tthis.x = a.x * b.x;\n\t\tthis.y = a.y * b.y;\n\t\tthis.z = a.z * b.z;\n\n\t\treturn this;\n\n\t}\n\n\tapplyEuler( euler ) {\n\n\t\treturn this.applyQuaternion( _quaternion$4.setFromEuler( euler ) );\n\n\t}\n\n\tapplyAxisAngle( axis, angle ) {\n\n\t\treturn this.applyQuaternion( _quaternion$4.setFromAxisAngle( axis, angle ) );\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ] * z;\n\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ] * z;\n\t\tthis.z = e[ 2 ] * x + e[ 5 ] * y + e[ 8 ] * z;\n\n\t\treturn this;\n\n\t}\n\n\tapplyNormalMatrix( m ) {\n\n\t\treturn this.applyMatrix3( m ).normalize();\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst e = m.elements;\n\n\t\tconst w = 1 / ( e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] );\n\n\t\tthis.x = ( e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] ) * w;\n\t\tthis.y = ( e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] ) * w;\n\t\tthis.z = ( e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] ) * w;\n\n\t\treturn this;\n\n\t}\n\n\tapplyQuaternion( q ) {\n\n\t\t// quaternion q is assumed to have unit length\n\n\t\tconst vx = this.x, vy = this.y, vz = this.z;\n\t\tconst qx = q.x, qy = q.y, qz = q.z, qw = q.w;\n\n\t\t// t = 2 * cross( q.xyz, v );\n\t\tconst tx = 2 * ( qy * vz - qz * vy );\n\t\tconst ty = 2 * ( qz * vx - qx * vz );\n\t\tconst tz = 2 * ( qx * vy - qy * vx );\n\n\t\t// v + q.w * t + cross( q.xyz, t );\n\t\tthis.x = vx + qw * tx + qy * tz - qz * ty;\n\t\tthis.y = vy + qw * ty + qz * tx - qx * tz;\n\t\tthis.z = vz + qw * tz + qx * ty - qy * tx;\n\n\t\treturn this;\n\n\t}\n\n\tproject( camera ) {\n\n\t\treturn this.applyMatrix4( camera.matrixWorldInverse ).applyMatrix4( camera.projectionMatrix );\n\n\t}\n\n\tunproject( camera ) {\n\n\t\treturn this.applyMatrix4( camera.projectionMatrixInverse ).applyMatrix4( camera.matrixWorld );\n\n\t}\n\n\ttransformDirection( m ) {\n\n\t\t// input: THREE.Matrix4 affine matrix\n\t\t// vector interpreted as a direction\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z;\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z;\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z;\n\n\t\treturn this.normalize();\n\n\t}\n\n\tdivide( v ) {\n\n\t\tthis.x /= v.x;\n\t\tthis.y /= v.y;\n\t\tthis.z /= v.z;\n\n\t\treturn this;\n\n\t}\n\n\tdivideScalar( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t}\n\n\tmin( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\t\tthis.z = Math.min( this.z, v.z );\n\n\t\treturn this;\n\n\t}\n\n\tmax( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\t\tthis.z = Math.max( this.z, v.z );\n\n\t\treturn this;\n\n\t}\n\n\tclamp( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampScalar( minVal, maxVal ) {\n\n\t\tthis.x = Math.max( minVal, Math.min( maxVal, this.x ) );\n\t\tthis.y = Math.max( minVal, Math.min( maxVal, this.y ) );\n\t\tthis.z = Math.max( minVal, Math.min( maxVal, this.z ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampLength( min, max ) {\n\n\t\tconst length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t}\n\n\tfloor() {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\t\tthis.z = Math.floor( this.z );\n\n\t\treturn this;\n\n\t}\n\n\tceil() {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\t\tthis.z = Math.ceil( this.z );\n\n\t\treturn this;\n\n\t}\n\n\tround() {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\t\tthis.z = Math.round( this.z );\n\n\t\treturn this;\n\n\t}\n\n\troundToZero() {\n\n\t\tthis.x = Math.trunc( this.x );\n\t\tthis.y = Math.trunc( this.y );\n\t\tthis.z = Math.trunc( this.z );\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\t\tthis.z = - this.z;\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z;\n\n\t}\n\n\t// TODO lengthSquared?\n\n\tlengthSq() {\n\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z );\n\n\t}\n\n\tmanhattanLength() {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z );\n\n\t}\n\n\tnormalize() {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t}\n\n\tsetLength( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t}\n\n\tlerp( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\tthis.z += ( v.z - this.z ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpVectors( v1, v2, alpha ) {\n\n\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\n\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\n\t\tthis.z = v1.z + ( v2.z - v1.z ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tcross( v ) {\n\n\t\treturn this.crossVectors( this, v );\n\n\t}\n\n\tcrossVectors( a, b ) {\n\n\t\tconst ax = a.x, ay = a.y, az = a.z;\n\t\tconst bx = b.x, by = b.y, bz = b.z;\n\n\t\tthis.x = ay * bz - az * by;\n\t\tthis.y = az * bx - ax * bz;\n\t\tthis.z = ax * by - ay * bx;\n\n\t\treturn this;\n\n\t}\n\n\tprojectOnVector( v ) {\n\n\t\tconst denominator = v.lengthSq();\n\n\t\tif ( denominator === 0 ) return this.set( 0, 0, 0 );\n\n\t\tconst scalar = v.dot( this ) / denominator;\n\n\t\treturn this.copy( v ).multiplyScalar( scalar );\n\n\t}\n\n\tprojectOnPlane( planeNormal ) {\n\n\t\t_vector$c.copy( this ).projectOnVector( planeNormal );\n\n\t\treturn this.sub( _vector$c );\n\n\t}\n\n\treflect( normal ) {\n\n\t\t// reflect incident vector off plane orthogonal to normal\n\t\t// normal is assumed to have unit length\n\n\t\treturn this.sub( _vector$c.copy( normal ).multiplyScalar( 2 * this.dot( normal ) ) );\n\n\t}\n\n\tangleTo( v ) {\n\n\t\tconst denominator = Math.sqrt( this.lengthSq() * v.lengthSq() );\n\n\t\tif ( denominator === 0 ) return Math.PI / 2;\n\n\t\tconst theta = this.dot( v ) / denominator;\n\n\t\t// clamp, to handle numerical problems\n\n\t\treturn Math.acos( clamp( theta, - 1, 1 ) );\n\n\t}\n\n\tdistanceTo( v ) {\n\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t}\n\n\tdistanceToSquared( v ) {\n\n\t\tconst dx = this.x - v.x, dy = this.y - v.y, dz = this.z - v.z;\n\n\t\treturn dx * dx + dy * dy + dz * dz;\n\n\t}\n\n\tmanhattanDistanceTo( v ) {\n\n\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y ) + Math.abs( this.z - v.z );\n\n\t}\n\n\tsetFromSpherical( s ) {\n\n\t\treturn this.setFromSphericalCoords( s.radius, s.phi, s.theta );\n\n\t}\n\n\tsetFromSphericalCoords( radius, phi, theta ) {\n\n\t\tconst sinPhiRadius = Math.sin( phi ) * radius;\n\n\t\tthis.x = sinPhiRadius * Math.sin( theta );\n\t\tthis.y = Math.cos( phi ) * radius;\n\t\tthis.z = sinPhiRadius * Math.cos( theta );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCylindrical( c ) {\n\n\t\treturn this.setFromCylindricalCoords( c.radius, c.theta, c.y );\n\n\t}\n\n\tsetFromCylindricalCoords( radius, theta, y ) {\n\n\t\tthis.x = radius * Math.sin( theta );\n\t\tthis.y = y;\n\t\tthis.z = radius * Math.cos( theta );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrixPosition( m ) {\n\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 12 ];\n\t\tthis.y = e[ 13 ];\n\t\tthis.z = e[ 14 ];\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrixScale( m ) {\n\n\t\tconst sx = this.setFromMatrixColumn( m, 0 ).length();\n\t\tconst sy = this.setFromMatrixColumn( m, 1 ).length();\n\t\tconst sz = this.setFromMatrixColumn( m, 2 ).length();\n\n\t\tthis.x = sx;\n\t\tthis.y = sy;\n\t\tthis.z = sz;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrixColumn( m, index ) {\n\n\t\treturn this.fromArray( m.elements, index * 4 );\n\n\t}\n\n\tsetFromMatrix3Column( m, index ) {\n\n\t\treturn this.fromArray( m.elements, index * 3 );\n\n\t}\n\n\tsetFromEuler( e ) {\n\n\t\tthis.x = e._x;\n\t\tthis.y = e._y;\n\t\tthis.z = e._z;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromColor( c ) {\n\n\t\tthis.x = c.r;\n\t\tthis.y = c.g;\n\t\tthis.z = c.b;\n\n\t\treturn this;\n\n\t}\n\n\tequals( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\t\tthis.z = array[ offset + 2 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\t\tarray[ offset + 2 ] = this.z;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\t\tthis.z = attribute.getZ( index );\n\n\t\treturn this;\n\n\t}\n\n\trandom() {\n\n\t\tthis.x = Math.random();\n\t\tthis.y = Math.random();\n\t\tthis.z = Math.random();\n\n\t\treturn this;\n\n\t}\n\n\trandomDirection() {\n\n\t\t// https://mathworld.wolfram.com/SpherePointPicking.html\n\n\t\tconst theta = Math.random() * Math.PI * 2;\n\t\tconst u = Math.random() * 2 - 1;\n\t\tconst c = Math.sqrt( 1 - u * u );\n\n\t\tthis.x = c * Math.cos( theta );\n\t\tthis.y = u;\n\t\tthis.z = c * Math.sin( theta );\n\n\t\treturn this;\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.x;\n\t\tyield this.y;\n\t\tyield this.z;\n\n\t}\n\n}\n\nconst _vector$c = /*@__PURE__*/ new Vector3();\nconst _quaternion$4 = /*@__PURE__*/ new Quaternion();\n\nclass Box3 {\n\n\tconstructor( min = new Vector3( + Infinity, + Infinity, + Infinity ), max = new Vector3( - Infinity, - Infinity, - Infinity ) ) {\n\n\t\tthis.isBox3 = true;\n\n\t\tthis.min = min;\n\t\tthis.max = max;\n\n\t}\n\n\tset( min, max ) {\n\n\t\tthis.min.copy( min );\n\t\tthis.max.copy( max );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromArray( array ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( let i = 0, il = array.length; i < il; i += 3 ) {\n\n\t\t\tthis.expandByPoint( _vector$b.fromArray( array, i ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromBufferAttribute( attribute ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( let i = 0, il = attribute.count; i < il; i ++ ) {\n\n\t\t\tthis.expandByPoint( _vector$b.fromBufferAttribute( attribute, i ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( let i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tthis.expandByPoint( points[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCenterAndSize( center, size ) {\n\n\t\tconst halfSize = _vector$b.copy( size ).multiplyScalar( 0.5 );\n\n\t\tthis.min.copy( center ).sub( halfSize );\n\t\tthis.max.copy( center ).add( halfSize );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromObject( object, precise = false ) {\n\n\t\tthis.makeEmpty();\n\n\t\treturn this.expandByObject( object, precise );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( box ) {\n\n\t\tthis.min.copy( box.min );\n\t\tthis.max.copy( box.max );\n\n\t\treturn this;\n\n\t}\n\n\tmakeEmpty() {\n\n\t\tthis.min.x = this.min.y = this.min.z = + Infinity;\n\t\tthis.max.x = this.max.y = this.max.z = - Infinity;\n\n\t\treturn this;\n\n\t}\n\n\tisEmpty() {\n\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y ) || ( this.max.z < this.min.z );\n\n\t}\n\n\tgetCenter( target ) {\n\n\t\treturn this.isEmpty() ? target.set( 0, 0, 0 ) : target.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\n\t}\n\n\tgetSize( target ) {\n\n\t\treturn this.isEmpty() ? target.set( 0, 0, 0 ) : target.subVectors( this.max, this.min );\n\n\t}\n\n\texpandByPoint( point ) {\n\n\t\tthis.min.min( point );\n\t\tthis.max.max( point );\n\n\t\treturn this;\n\n\t}\n\n\texpandByVector( vector ) {\n\n\t\tthis.min.sub( vector );\n\t\tthis.max.add( vector );\n\n\t\treturn this;\n\n\t}\n\n\texpandByScalar( scalar ) {\n\n\t\tthis.min.addScalar( - scalar );\n\t\tthis.max.addScalar( scalar );\n\n\t\treturn this;\n\n\t}\n\n\texpandByObject( object, precise = false ) {\n\n\t\t// Computes the world-axis-aligned bounding box of an object (including its children),\n\t\t// accounting for both the object's, and children's, world transforms\n\n\t\tobject.updateWorldMatrix( false, false );\n\n\t\tconst geometry = object.geometry;\n\n\t\tif ( geometry !== undefined ) {\n\n\t\t\tconst positionAttribute = geometry.getAttribute( 'position' );\n\n\t\t\t// precise AABB computation based on vertex data requires at least a position attribute.\n\t\t\t// instancing isn't supported so far and uses the normal (conservative) code path.\n\n\t\t\tif ( precise === true && positionAttribute !== undefined && object.isInstancedMesh !== true ) {\n\n\t\t\t\tfor ( let i = 0, l = positionAttribute.count; i < l; i ++ ) {\n\n\t\t\t\t\tif ( object.isMesh === true ) {\n\n\t\t\t\t\t\tobject.getVertexPosition( i, _vector$b );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t_vector$b.fromBufferAttribute( positionAttribute, i );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t_vector$b.applyMatrix4( object.matrixWorld );\n\t\t\t\t\tthis.expandByPoint( _vector$b );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( object.boundingBox !== undefined ) {\n\n\t\t\t\t\t// object-level bounding box\n\n\t\t\t\t\tif ( object.boundingBox === null ) {\n\n\t\t\t\t\t\tobject.computeBoundingBox();\n\n\t\t\t\t\t}\n\n\t\t\t\t\t_box$4.copy( object.boundingBox );\n\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// geometry-level bounding box\n\n\t\t\t\t\tif ( geometry.boundingBox === null ) {\n\n\t\t\t\t\t\tgeometry.computeBoundingBox();\n\n\t\t\t\t\t}\n\n\t\t\t\t\t_box$4.copy( geometry.boundingBox );\n\n\t\t\t\t}\n\n\t\t\t\t_box$4.applyMatrix4( object.matrixWorld );\n\n\t\t\t\tthis.union( _box$4 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst children = object.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tthis.expandByObject( children[ i ], precise );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn point.x < this.min.x || point.x > this.max.x ||\n\t\t\tpoint.y < this.min.y || point.y > this.max.y ||\n\t\t\tpoint.z < this.min.z || point.z > this.max.z ? false : true;\n\n\t}\n\n\tcontainsBox( box ) {\n\n\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x &&\n\t\t\tthis.min.y <= box.min.y && box.max.y <= this.max.y &&\n\t\t\tthis.min.z <= box.min.z && box.max.z <= this.max.z;\n\n\t}\n\n\tgetParameter( point, target ) {\n\n\t\t// This can potentially have a divide by zero if the box\n\t\t// has a size dimension of 0.\n\n\t\treturn target.set(\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y ),\n\t\t\t( point.z - this.min.z ) / ( this.max.z - this.min.z )\n\t\t);\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\t// using 6 splitting planes to rule out intersections.\n\t\treturn box.max.x < this.min.x || box.min.x > this.max.x ||\n\t\t\tbox.max.y < this.min.y || box.min.y > this.max.y ||\n\t\t\tbox.max.z < this.min.z || box.min.z > this.max.z ? false : true;\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\t// Find the point on the AABB closest to the sphere center.\n\t\tthis.clampPoint( sphere.center, _vector$b );\n\n\t\t// If that point is inside the sphere, the AABB and sphere intersect.\n\t\treturn _vector$b.distanceToSquared( sphere.center ) <= ( sphere.radius * sphere.radius );\n\n\t}\n\n\tintersectsPlane( plane ) {\n\n\t\t// We compute the minimum and maximum dot product values. If those values\n\t\t// are on the same side (back or front) of the plane, then there is no intersection.\n\n\t\tlet min, max;\n\n\t\tif ( plane.normal.x > 0 ) {\n\n\t\t\tmin = plane.normal.x * this.min.x;\n\t\t\tmax = plane.normal.x * this.max.x;\n\n\t\t} else {\n\n\t\t\tmin = plane.normal.x * this.max.x;\n\t\t\tmax = plane.normal.x * this.min.x;\n\n\t\t}\n\n\t\tif ( plane.normal.y > 0 ) {\n\n\t\t\tmin += plane.normal.y * this.min.y;\n\t\t\tmax += plane.normal.y * this.max.y;\n\n\t\t} else {\n\n\t\t\tmin += plane.normal.y * this.max.y;\n\t\t\tmax += plane.normal.y * this.min.y;\n\n\t\t}\n\n\t\tif ( plane.normal.z > 0 ) {\n\n\t\t\tmin += plane.normal.z * this.min.z;\n\t\t\tmax += plane.normal.z * this.max.z;\n\n\t\t} else {\n\n\t\t\tmin += plane.normal.z * this.max.z;\n\t\t\tmax += plane.normal.z * this.min.z;\n\n\t\t}\n\n\t\treturn ( min <= - plane.constant && max >= - plane.constant );\n\n\t}\n\n\tintersectsTriangle( triangle ) {\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\t// compute box center and extents\n\t\tthis.getCenter( _center );\n\t\t_extents.subVectors( this.max, _center );\n\n\t\t// translate triangle to aabb origin\n\t\t_v0$2.subVectors( triangle.a, _center );\n\t\t_v1$7.subVectors( triangle.b, _center );\n\t\t_v2$4.subVectors( triangle.c, _center );\n\n\t\t// compute edge vectors for triangle\n\t\t_f0.subVectors( _v1$7, _v0$2 );\n\t\t_f1.subVectors( _v2$4, _v1$7 );\n\t\t_f2.subVectors( _v0$2, _v2$4 );\n\n\t\t// test against axes that are given by cross product combinations of the edges of the triangle and the edges of the aabb\n\t\t// make an axis testing of each of the 3 sides of the aabb against each of the 3 sides of the triangle = 9 axis of separation\n\t\t// axis_ij = u_i x f_j (u0, u1, u2 = face normals of aabb = x,y,z axes vectors since aabb is axis aligned)\n\t\tlet axes = [\n\t\t\t0, - _f0.z, _f0.y, 0, - _f1.z, _f1.y, 0, - _f2.z, _f2.y,\n\t\t\t_f0.z, 0, - _f0.x, _f1.z, 0, - _f1.x, _f2.z, 0, - _f2.x,\n\t\t\t- _f0.y, _f0.x, 0, - _f1.y, _f1.x, 0, - _f2.y, _f2.x, 0\n\t\t];\n\t\tif ( ! satForAxes( axes, _v0$2, _v1$7, _v2$4, _extents ) ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\t// test 3 face normals from the aabb\n\t\taxes = [ 1, 0, 0, 0, 1, 0, 0, 0, 1 ];\n\t\tif ( ! satForAxes( axes, _v0$2, _v1$7, _v2$4, _extents ) ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\t// finally testing the face normal of the triangle\n\t\t// use already existing triangle edge vectors here\n\t\t_triangleNormal.crossVectors( _f0, _f1 );\n\t\taxes = [ _triangleNormal.x, _triangleNormal.y, _triangleNormal.z ];\n\n\t\treturn satForAxes( axes, _v0$2, _v1$7, _v2$4, _extents );\n\n\t}\n\n\tclampPoint( point, target ) {\n\n\t\treturn target.copy( point ).clamp( this.min, this.max );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn this.clampPoint( point, _vector$b ).distanceTo( point );\n\n\t}\n\n\tgetBoundingSphere( target ) {\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\ttarget.makeEmpty();\n\n\t\t} else {\n\n\t\t\tthis.getCenter( target.center );\n\n\t\t\ttarget.radius = this.getSize( _vector$b ).length() * 0.5;\n\n\t\t}\n\n\t\treturn target;\n\n\t}\n\n\tintersect( box ) {\n\n\t\tthis.min.max( box.min );\n\t\tthis.max.min( box.max );\n\n\t\t// ensure that if there is no overlap, the result is fully empty, not slightly empty with non-inf/+inf values that will cause subsequence intersects to erroneously return valid values.\n\t\tif ( this.isEmpty() ) this.makeEmpty();\n\n\t\treturn this;\n\n\t}\n\n\tunion( box ) {\n\n\t\tthis.min.min( box.min );\n\t\tthis.max.max( box.max );\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\t// transform of empty box is an empty box.\n\t\tif ( this.isEmpty() ) return this;\n\n\t\t// NOTE: I am using a binary pattern to specify all 2^3 combinations below\n\t\t_points[ 0 ].set( this.min.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 000\n\t\t_points[ 1 ].set( this.min.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 001\n\t\t_points[ 2 ].set( this.min.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 010\n\t\t_points[ 3 ].set( this.min.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 011\n\t\t_points[ 4 ].set( this.max.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 100\n\t\t_points[ 5 ].set( this.max.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 101\n\t\t_points[ 6 ].set( this.max.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 110\n\t\t_points[ 7 ].set( this.max.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 111\n\n\t\tthis.setFromPoints( _points );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.min.add( offset );\n\t\tthis.max.add( offset );\n\n\t\treturn this;\n\n\t}\n\n\tequals( box ) {\n\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\n\n\t}\n\n}\n\nconst _points = [\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3()\n];\n\nconst _vector$b = /*@__PURE__*/ new Vector3();\n\nconst _box$4 = /*@__PURE__*/ new Box3();\n\n// triangle centered vertices\n\nconst _v0$2 = /*@__PURE__*/ new Vector3();\nconst _v1$7 = /*@__PURE__*/ new Vector3();\nconst _v2$4 = /*@__PURE__*/ new Vector3();\n\n// triangle edge vectors\n\nconst _f0 = /*@__PURE__*/ new Vector3();\nconst _f1 = /*@__PURE__*/ new Vector3();\nconst _f2 = /*@__PURE__*/ new Vector3();\n\nconst _center = /*@__PURE__*/ new Vector3();\nconst _extents = /*@__PURE__*/ new Vector3();\nconst _triangleNormal = /*@__PURE__*/ new Vector3();\nconst _testAxis = /*@__PURE__*/ new Vector3();\n\nfunction satForAxes( axes, v0, v1, v2, extents ) {\n\n\tfor ( let i = 0, j = axes.length - 3; i <= j; i += 3 ) {\n\n\t\t_testAxis.fromArray( axes, i );\n\t\t// project the aabb onto the separating axis\n\t\tconst r = extents.x * Math.abs( _testAxis.x ) + extents.y * Math.abs( _testAxis.y ) + extents.z * Math.abs( _testAxis.z );\n\t\t// project all 3 vertices of the triangle onto the separating axis\n\t\tconst p0 = v0.dot( _testAxis );\n\t\tconst p1 = v1.dot( _testAxis );\n\t\tconst p2 = v2.dot( _testAxis );\n\t\t// actual test, basically see if either of the most extreme of the triangle points intersects r\n\t\tif ( Math.max( - Math.max( p0, p1, p2 ), Math.min( p0, p1, p2 ) ) > r ) {\n\n\t\t\t// points of the projected triangle are outside the projected half-length of the aabb\n\t\t\t// the axis is separating and we can exit\n\t\t\treturn false;\n\n\t\t}\n\n\t}\n\n\treturn true;\n\n}\n\nconst _box$3 = /*@__PURE__*/ new Box3();\nconst _v1$6 = /*@__PURE__*/ new Vector3();\nconst _v2$3 = /*@__PURE__*/ new Vector3();\n\nclass Sphere {\n\n\tconstructor( center = new Vector3(), radius = - 1 ) {\n\n\t\tthis.isSphere = true;\n\n\t\tthis.center = center;\n\t\tthis.radius = radius;\n\n\t}\n\n\tset( center, radius ) {\n\n\t\tthis.center.copy( center );\n\t\tthis.radius = radius;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points, optionalCenter ) {\n\n\t\tconst center = this.center;\n\n\t\tif ( optionalCenter !== undefined ) {\n\n\t\t\tcenter.copy( optionalCenter );\n\n\t\t} else {\n\n\t\t\t_box$3.setFromPoints( points ).getCenter( center );\n\n\t\t}\n\n\t\tlet maxRadiusSq = 0;\n\n\t\tfor ( let i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( points[ i ] ) );\n\n\t\t}\n\n\t\tthis.radius = Math.sqrt( maxRadiusSq );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( sphere ) {\n\n\t\tthis.center.copy( sphere.center );\n\t\tthis.radius = sphere.radius;\n\n\t\treturn this;\n\n\t}\n\n\tisEmpty() {\n\n\t\treturn ( this.radius < 0 );\n\n\t}\n\n\tmakeEmpty() {\n\n\t\tthis.center.set( 0, 0, 0 );\n\t\tthis.radius = - 1;\n\n\t\treturn this;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn ( point.distanceToSquared( this.center ) <= ( this.radius * this.radius ) );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn ( point.distanceTo( this.center ) - this.radius );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\tconst radiusSum = this.radius + sphere.radius;\n\n\t\treturn sphere.center.distanceToSquared( this.center ) <= ( radiusSum * radiusSum );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn box.intersectsSphere( this );\n\n\t}\n\n\tintersectsPlane( plane ) {\n\n\t\treturn Math.abs( plane.distanceToPoint( this.center ) ) <= this.radius;\n\n\t}\n\n\tclampPoint( point, target ) {\n\n\t\tconst deltaLengthSq = this.center.distanceToSquared( point );\n\n\t\ttarget.copy( point );\n\n\t\tif ( deltaLengthSq > ( this.radius * this.radius ) ) {\n\n\t\t\ttarget.sub( this.center ).normalize();\n\t\t\ttarget.multiplyScalar( this.radius ).add( this.center );\n\n\t\t}\n\n\t\treturn target;\n\n\t}\n\n\tgetBoundingBox( target ) {\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\t// Empty sphere produces empty bounding box\n\t\t\ttarget.makeEmpty();\n\t\t\treturn target;\n\n\t\t}\n\n\t\ttarget.set( this.center, this.center );\n\t\ttarget.expandByScalar( this.radius );\n\n\t\treturn target;\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tthis.center.applyMatrix4( matrix );\n\t\tthis.radius = this.radius * matrix.getMaxScaleOnAxis();\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.center.add( offset );\n\n\t\treturn this;\n\n\t}\n\n\texpandByPoint( point ) {\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\tthis.center.copy( point );\n\n\t\t\tthis.radius = 0;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\t_v1$6.subVectors( point, this.center );\n\n\t\tconst lengthSq = _v1$6.lengthSq();\n\n\t\tif ( lengthSq > ( this.radius * this.radius ) ) {\n\n\t\t\t// calculate the minimal sphere\n\n\t\t\tconst length = Math.sqrt( lengthSq );\n\n\t\t\tconst delta = ( length - this.radius ) * 0.5;\n\n\t\t\tthis.center.addScaledVector( _v1$6, delta / length );\n\n\t\t\tthis.radius += delta;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tunion( sphere ) {\n\n\t\tif ( sphere.isEmpty() ) {\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\tthis.copy( sphere );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( this.center.equals( sphere.center ) === true ) {\n\n\t\t\t this.radius = Math.max( this.radius, sphere.radius );\n\n\t\t} else {\n\n\t\t\t_v2$3.subVectors( sphere.center, this.center ).setLength( sphere.radius );\n\n\t\t\tthis.expandByPoint( _v1$6.copy( sphere.center ).add( _v2$3 ) );\n\n\t\t\tthis.expandByPoint( _v1$6.copy( sphere.center ).sub( _v2$3 ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tequals( sphere ) {\n\n\t\treturn sphere.center.equals( this.center ) && ( sphere.radius === this.radius );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _vector$a = /*@__PURE__*/ new Vector3();\nconst _segCenter = /*@__PURE__*/ new Vector3();\nconst _segDir = /*@__PURE__*/ new Vector3();\nconst _diff = /*@__PURE__*/ new Vector3();\n\nconst _edge1 = /*@__PURE__*/ new Vector3();\nconst _edge2 = /*@__PURE__*/ new Vector3();\nconst _normal$1 = /*@__PURE__*/ new Vector3();\n\nclass Ray {\n\n\tconstructor( origin = new Vector3(), direction = new Vector3( 0, 0, - 1 ) ) {\n\n\t\tthis.origin = origin;\n\t\tthis.direction = direction;\n\n\t}\n\n\tset( origin, direction ) {\n\n\t\tthis.origin.copy( origin );\n\t\tthis.direction.copy( direction );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( ray ) {\n\n\t\tthis.origin.copy( ray.origin );\n\t\tthis.direction.copy( ray.direction );\n\n\t\treturn this;\n\n\t}\n\n\tat( t, target ) {\n\n\t\treturn target.copy( this.origin ).addScaledVector( this.direction, t );\n\n\t}\n\n\tlookAt( v ) {\n\n\t\tthis.direction.copy( v ).sub( this.origin ).normalize();\n\n\t\treturn this;\n\n\t}\n\n\trecast( t ) {\n\n\t\tthis.origin.copy( this.at( t, _vector$a ) );\n\n\t\treturn this;\n\n\t}\n\n\tclosestPointToPoint( point, target ) {\n\n\t\ttarget.subVectors( point, this.origin );\n\n\t\tconst directionDistance = target.dot( this.direction );\n\n\t\tif ( directionDistance < 0 ) {\n\n\t\t\treturn target.copy( this.origin );\n\n\t\t}\n\n\t\treturn target.copy( this.origin ).addScaledVector( this.direction, directionDistance );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn Math.sqrt( this.distanceSqToPoint( point ) );\n\n\t}\n\n\tdistanceSqToPoint( point ) {\n\n\t\tconst directionDistance = _vector$a.subVectors( point, this.origin ).dot( this.direction );\n\n\t\t// point behind the ray\n\n\t\tif ( directionDistance < 0 ) {\n\n\t\t\treturn this.origin.distanceToSquared( point );\n\n\t\t}\n\n\t\t_vector$a.copy( this.origin ).addScaledVector( this.direction, directionDistance );\n\n\t\treturn _vector$a.distanceToSquared( point );\n\n\t}\n\n\tdistanceSqToSegment( v0, v1, optionalPointOnRay, optionalPointOnSegment ) {\n\n\t\t// from https://github.com/pmjoniak/GeometricTools/blob/master/GTEngine/Include/Mathematics/GteDistRaySegment.h\n\t\t// It returns the min distance between the ray and the segment\n\t\t// defined by v0 and v1\n\t\t// It can also set two optional targets :\n\t\t// - The closest point on the ray\n\t\t// - The closest point on the segment\n\n\t\t_segCenter.copy( v0 ).add( v1 ).multiplyScalar( 0.5 );\n\t\t_segDir.copy( v1 ).sub( v0 ).normalize();\n\t\t_diff.copy( this.origin ).sub( _segCenter );\n\n\t\tconst segExtent = v0.distanceTo( v1 ) * 0.5;\n\t\tconst a01 = - this.direction.dot( _segDir );\n\t\tconst b0 = _diff.dot( this.direction );\n\t\tconst b1 = - _diff.dot( _segDir );\n\t\tconst c = _diff.lengthSq();\n\t\tconst det = Math.abs( 1 - a01 * a01 );\n\t\tlet s0, s1, sqrDist, extDet;\n\n\t\tif ( det > 0 ) {\n\n\t\t\t// The ray and segment are not parallel.\n\n\t\t\ts0 = a01 * b1 - b0;\n\t\t\ts1 = a01 * b0 - b1;\n\t\t\textDet = segExtent * det;\n\n\t\t\tif ( s0 >= 0 ) {\n\n\t\t\t\tif ( s1 >= - extDet ) {\n\n\t\t\t\t\tif ( s1 <= extDet ) {\n\n\t\t\t\t\t\t// region 0\n\t\t\t\t\t\t// Minimum at interior points of ray and segment.\n\n\t\t\t\t\t\tconst invDet = 1 / det;\n\t\t\t\t\t\ts0 *= invDet;\n\t\t\t\t\t\ts1 *= invDet;\n\t\t\t\t\t\tsqrDist = s0 * ( s0 + a01 * s1 + 2 * b0 ) + s1 * ( a01 * s0 + s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// region 1\n\n\t\t\t\t\t\ts1 = segExtent;\n\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// region 5\n\n\t\t\t\t\ts1 = - segExtent;\n\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( s1 <= - extDet ) {\n\n\t\t\t\t\t// region 4\n\n\t\t\t\t\ts0 = Math.max( 0, - ( - a01 * segExtent + b0 ) );\n\t\t\t\t\ts1 = ( s0 > 0 ) ? - segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t} else if ( s1 <= extDet ) {\n\n\t\t\t\t\t// region 3\n\n\t\t\t\t\ts0 = 0;\n\t\t\t\t\ts1 = Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\tsqrDist = s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// region 2\n\n\t\t\t\t\ts0 = Math.max( 0, - ( a01 * segExtent + b0 ) );\n\t\t\t\t\ts1 = ( s0 > 0 ) ? segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// Ray and segment are parallel.\n\n\t\t\ts1 = ( a01 > 0 ) ? - segExtent : segExtent;\n\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t}\n\n\t\tif ( optionalPointOnRay ) {\n\n\t\t\toptionalPointOnRay.copy( this.origin ).addScaledVector( this.direction, s0 );\n\n\t\t}\n\n\t\tif ( optionalPointOnSegment ) {\n\n\t\t\toptionalPointOnSegment.copy( _segCenter ).addScaledVector( _segDir, s1 );\n\n\t\t}\n\n\t\treturn sqrDist;\n\n\t}\n\n\tintersectSphere( sphere, target ) {\n\n\t\t_vector$a.subVectors( sphere.center, this.origin );\n\t\tconst tca = _vector$a.dot( this.direction );\n\t\tconst d2 = _vector$a.dot( _vector$a ) - tca * tca;\n\t\tconst radius2 = sphere.radius * sphere.radius;\n\n\t\tif ( d2 > radius2 ) return null;\n\n\t\tconst thc = Math.sqrt( radius2 - d2 );\n\n\t\t// t0 = first intersect point - entrance on front of sphere\n\t\tconst t0 = tca - thc;\n\n\t\t// t1 = second intersect point - exit point on back of sphere\n\t\tconst t1 = tca + thc;\n\n\t\t// test to see if t1 is behind the ray - if so, return null\n\t\tif ( t1 < 0 ) return null;\n\n\t\t// test to see if t0 is behind the ray:\n\t\t// if it is, the ray is inside the sphere, so return the second exit point scaled by t1,\n\t\t// in order to always return an intersect point that is in front of the ray.\n\t\tif ( t0 < 0 ) return this.at( t1, target );\n\n\t\t// else t0 is in front of the ray, so return the first collision point scaled by t0\n\t\treturn this.at( t0, target );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\treturn this.distanceSqToPoint( sphere.center ) <= ( sphere.radius * sphere.radius );\n\n\t}\n\n\tdistanceToPlane( plane ) {\n\n\t\tconst denominator = plane.normal.dot( this.direction );\n\n\t\tif ( denominator === 0 ) {\n\n\t\t\t// line is coplanar, return origin\n\t\t\tif ( plane.distanceToPoint( this.origin ) === 0 ) {\n\n\t\t\t\treturn 0;\n\n\t\t\t}\n\n\t\t\t// Null is preferable to undefined since undefined means.... it is undefined\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst t = - ( this.origin.dot( plane.normal ) + plane.constant ) / denominator;\n\n\t\t// Return if the ray never intersects the plane\n\n\t\treturn t >= 0 ? t : null;\n\n\t}\n\n\tintersectPlane( plane, target ) {\n\n\t\tconst t = this.distanceToPlane( plane );\n\n\t\tif ( t === null ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\treturn this.at( t, target );\n\n\t}\n\n\tintersectsPlane( plane ) {\n\n\t\t// check if the ray lies on the plane first\n\n\t\tconst distToPoint = plane.distanceToPoint( this.origin );\n\n\t\tif ( distToPoint === 0 ) {\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\tconst denominator = plane.normal.dot( this.direction );\n\n\t\tif ( denominator * distToPoint < 0 ) {\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\t// ray origin is behind the plane (and is pointing behind it)\n\n\t\treturn false;\n\n\t}\n\n\tintersectBox( box, target ) {\n\n\t\tlet tmin, tmax, tymin, tymax, tzmin, tzmax;\n\n\t\tconst invdirx = 1 / this.direction.x,\n\t\t\tinvdiry = 1 / this.direction.y,\n\t\t\tinvdirz = 1 / this.direction.z;\n\n\t\tconst origin = this.origin;\n\n\t\tif ( invdirx >= 0 ) {\n\n\t\t\ttmin = ( box.min.x - origin.x ) * invdirx;\n\t\t\ttmax = ( box.max.x - origin.x ) * invdirx;\n\n\t\t} else {\n\n\t\t\ttmin = ( box.max.x - origin.x ) * invdirx;\n\t\t\ttmax = ( box.min.x - origin.x ) * invdirx;\n\n\t\t}\n\n\t\tif ( invdiry >= 0 ) {\n\n\t\t\ttymin = ( box.min.y - origin.y ) * invdiry;\n\t\t\ttymax = ( box.max.y - origin.y ) * invdiry;\n\n\t\t} else {\n\n\t\t\ttymin = ( box.max.y - origin.y ) * invdiry;\n\t\t\ttymax = ( box.min.y - origin.y ) * invdiry;\n\n\t\t}\n\n\t\tif ( ( tmin > tymax ) || ( tymin > tmax ) ) return null;\n\n\t\tif ( tymin > tmin || isNaN( tmin ) ) tmin = tymin;\n\n\t\tif ( tymax < tmax || isNaN( tmax ) ) tmax = tymax;\n\n\t\tif ( invdirz >= 0 ) {\n\n\t\t\ttzmin = ( box.min.z - origin.z ) * invdirz;\n\t\t\ttzmax = ( box.max.z - origin.z ) * invdirz;\n\n\t\t} else {\n\n\t\t\ttzmin = ( box.max.z - origin.z ) * invdirz;\n\t\t\ttzmax = ( box.min.z - origin.z ) * invdirz;\n\n\t\t}\n\n\t\tif ( ( tmin > tzmax ) || ( tzmin > tmax ) ) return null;\n\n\t\tif ( tzmin > tmin || tmin !== tmin ) tmin = tzmin;\n\n\t\tif ( tzmax < tmax || tmax !== tmax ) tmax = tzmax;\n\n\t\t//return point closest to the ray (positive side)\n\n\t\tif ( tmax < 0 ) return null;\n\n\t\treturn this.at( tmin >= 0 ? tmin : tmax, target );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn this.intersectBox( box, _vector$a ) !== null;\n\n\t}\n\n\tintersectTriangle( a, b, c, backfaceCulling, target ) {\n\n\t\t// Compute the offset origin, edges, and normal.\n\n\t\t// from https://github.com/pmjoniak/GeometricTools/blob/master/GTEngine/Include/Mathematics/GteIntrRay3Triangle3.h\n\n\t\t_edge1.subVectors( b, a );\n\t\t_edge2.subVectors( c, a );\n\t\t_normal$1.crossVectors( _edge1, _edge2 );\n\n\t\t// Solve Q + t*D = b1*E1 + b2*E2 (Q = kDiff, D = ray direction,\n\t\t// E1 = kEdge1, E2 = kEdge2, N = Cross(E1,E2)) by\n\t\t//   |Dot(D,N)|*b1 = sign(Dot(D,N))*Dot(D,Cross(Q,E2))\n\t\t//   |Dot(D,N)|*b2 = sign(Dot(D,N))*Dot(D,Cross(E1,Q))\n\t\t//   |Dot(D,N)|*t = -sign(Dot(D,N))*Dot(Q,N)\n\t\tlet DdN = this.direction.dot( _normal$1 );\n\t\tlet sign;\n\n\t\tif ( DdN > 0 ) {\n\n\t\t\tif ( backfaceCulling ) return null;\n\t\t\tsign = 1;\n\n\t\t} else if ( DdN < 0 ) {\n\n\t\t\tsign = - 1;\n\t\t\tDdN = - DdN;\n\n\t\t} else {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t_diff.subVectors( this.origin, a );\n\t\tconst DdQxE2 = sign * this.direction.dot( _edge2.crossVectors( _diff, _edge2 ) );\n\n\t\t// b1 < 0, no intersection\n\t\tif ( DdQxE2 < 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst DdE1xQ = sign * this.direction.dot( _edge1.cross( _diff ) );\n\n\t\t// b2 < 0, no intersection\n\t\tif ( DdE1xQ < 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// b1+b2 > 1, no intersection\n\t\tif ( DdQxE2 + DdE1xQ > DdN ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// Line intersects triangle, check if ray does.\n\t\tconst QdN = - sign * _diff.dot( _normal$1 );\n\n\t\t// t < 0, no intersection\n\t\tif ( QdN < 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// Ray intersects triangle.\n\t\treturn this.at( QdN / DdN, target );\n\n\t}\n\n\tapplyMatrix4( matrix4 ) {\n\n\t\tthis.origin.applyMatrix4( matrix4 );\n\t\tthis.direction.transformDirection( matrix4 );\n\n\t\treturn this;\n\n\t}\n\n\tequals( ray ) {\n\n\t\treturn ray.origin.equals( this.origin ) && ray.direction.equals( this.direction );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nclass Matrix4 {\n\n\tconstructor( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ) {\n\n\t\tMatrix4.prototype.isMatrix4 = true;\n\n\t\tthis.elements = [\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, 1, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t];\n\n\t\tif ( n11 !== undefined ) {\n\n\t\t\tthis.set( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 );\n\n\t\t}\n\n\t}\n\n\tset( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] = n11; te[ 4 ] = n12; te[ 8 ] = n13; te[ 12 ] = n14;\n\t\tte[ 1 ] = n21; te[ 5 ] = n22; te[ 9 ] = n23; te[ 13 ] = n24;\n\t\tte[ 2 ] = n31; te[ 6 ] = n32; te[ 10 ] = n33; te[ 14 ] = n34;\n\t\tte[ 3 ] = n41; te[ 7 ] = n42; te[ 11 ] = n43; te[ 15 ] = n44;\n\n\t\treturn this;\n\n\t}\n\n\tidentity() {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, 1, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new Matrix4().fromArray( this.elements );\n\n\t}\n\n\tcopy( m ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = m.elements;\n\n\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ]; te[ 3 ] = me[ 3 ];\n\t\tte[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ]; te[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ];\n\t\tte[ 8 ] = me[ 8 ]; te[ 9 ] = me[ 9 ]; te[ 10 ] = me[ 10 ]; te[ 11 ] = me[ 11 ];\n\t\tte[ 12 ] = me[ 12 ]; te[ 13 ] = me[ 13 ]; te[ 14 ] = me[ 14 ]; te[ 15 ] = me[ 15 ];\n\n\t\treturn this;\n\n\t}\n\n\tcopyPosition( m ) {\n\n\t\tconst te = this.elements, me = m.elements;\n\n\t\tte[ 12 ] = me[ 12 ];\n\t\tte[ 13 ] = me[ 13 ];\n\t\tte[ 14 ] = me[ 14 ];\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrix3( m ) {\n\n\t\tconst me = m.elements;\n\n\t\tthis.set(\n\n\t\t\tme[ 0 ], me[ 3 ], me[ 6 ], 0,\n\t\t\tme[ 1 ], me[ 4 ], me[ 7 ], 0,\n\t\t\tme[ 2 ], me[ 5 ], me[ 8 ], 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\textractBasis( xAxis, yAxis, zAxis ) {\n\n\t\txAxis.setFromMatrixColumn( this, 0 );\n\t\tyAxis.setFromMatrixColumn( this, 1 );\n\t\tzAxis.setFromMatrixColumn( this, 2 );\n\n\t\treturn this;\n\n\t}\n\n\tmakeBasis( xAxis, yAxis, zAxis ) {\n\n\t\tthis.set(\n\t\t\txAxis.x, yAxis.x, zAxis.x, 0,\n\t\t\txAxis.y, yAxis.y, zAxis.y, 0,\n\t\t\txAxis.z, yAxis.z, zAxis.z, 0,\n\t\t\t0, 0, 0, 1\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\textractRotation( m ) {\n\n\t\t// this method does not support reflection matrices\n\n\t\tconst te = this.elements;\n\t\tconst me = m.elements;\n\n\t\tconst scaleX = 1 / _v1$5.setFromMatrixColumn( m, 0 ).length();\n\t\tconst scaleY = 1 / _v1$5.setFromMatrixColumn( m, 1 ).length();\n\t\tconst scaleZ = 1 / _v1$5.setFromMatrixColumn( m, 2 ).length();\n\n\t\tte[ 0 ] = me[ 0 ] * scaleX;\n\t\tte[ 1 ] = me[ 1 ] * scaleX;\n\t\tte[ 2 ] = me[ 2 ] * scaleX;\n\t\tte[ 3 ] = 0;\n\n\t\tte[ 4 ] = me[ 4 ] * scaleY;\n\t\tte[ 5 ] = me[ 5 ] * scaleY;\n\t\tte[ 6 ] = me[ 6 ] * scaleY;\n\t\tte[ 7 ] = 0;\n\n\t\tte[ 8 ] = me[ 8 ] * scaleZ;\n\t\tte[ 9 ] = me[ 9 ] * scaleZ;\n\t\tte[ 10 ] = me[ 10 ] * scaleZ;\n\t\tte[ 11 ] = 0;\n\n\t\tte[ 12 ] = 0;\n\t\tte[ 13 ] = 0;\n\t\tte[ 14 ] = 0;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationFromEuler( euler ) {\n\n\t\tconst te = this.elements;\n\n\t\tconst x = euler.x, y = euler.y, z = euler.z;\n\t\tconst a = Math.cos( x ), b = Math.sin( x );\n\t\tconst c = Math.cos( y ), d = Math.sin( y );\n\t\tconst e = Math.cos( z ), f = Math.sin( z );\n\n\t\tif ( euler.order === 'XYZ' ) {\n\n\t\t\tconst ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = - c * f;\n\t\t\tte[ 8 ] = d;\n\n\t\t\tte[ 1 ] = af + be * d;\n\t\t\tte[ 5 ] = ae - bf * d;\n\t\t\tte[ 9 ] = - b * c;\n\n\t\t\tte[ 2 ] = bf - ae * d;\n\t\t\tte[ 6 ] = be + af * d;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'YXZ' ) {\n\n\t\t\tconst ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\tte[ 0 ] = ce + df * b;\n\t\t\tte[ 4 ] = de * b - cf;\n\t\t\tte[ 8 ] = a * d;\n\n\t\t\tte[ 1 ] = a * f;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = - b;\n\n\t\t\tte[ 2 ] = cf * b - de;\n\t\t\tte[ 6 ] = df + ce * b;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'ZXY' ) {\n\n\t\t\tconst ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\tte[ 0 ] = ce - df * b;\n\t\t\tte[ 4 ] = - a * f;\n\t\t\tte[ 8 ] = de + cf * b;\n\n\t\t\tte[ 1 ] = cf + de * b;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = df - ce * b;\n\n\t\t\tte[ 2 ] = - a * d;\n\t\t\tte[ 6 ] = b;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'ZYX' ) {\n\n\t\t\tconst ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = be * d - af;\n\t\t\tte[ 8 ] = ae * d + bf;\n\n\t\t\tte[ 1 ] = c * f;\n\t\t\tte[ 5 ] = bf * d + ae;\n\t\t\tte[ 9 ] = af * d - be;\n\n\t\t\tte[ 2 ] = - d;\n\t\t\tte[ 6 ] = b * c;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'YZX' ) {\n\n\t\t\tconst ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = bd - ac * f;\n\t\t\tte[ 8 ] = bc * f + ad;\n\n\t\t\tte[ 1 ] = f;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = - b * e;\n\n\t\t\tte[ 2 ] = - d * e;\n\t\t\tte[ 6 ] = ad * f + bc;\n\t\t\tte[ 10 ] = ac - bd * f;\n\n\t\t} else if ( euler.order === 'XZY' ) {\n\n\t\t\tconst ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = - f;\n\t\t\tte[ 8 ] = d * e;\n\n\t\t\tte[ 1 ] = ac * f + bd;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = ad * f - bc;\n\n\t\t\tte[ 2 ] = bc * f - ad;\n\t\t\tte[ 6 ] = b * e;\n\t\t\tte[ 10 ] = bd * f + ac;\n\n\t\t}\n\n\t\t// bottom row\n\t\tte[ 3 ] = 0;\n\t\tte[ 7 ] = 0;\n\t\tte[ 11 ] = 0;\n\n\t\t// last column\n\t\tte[ 12 ] = 0;\n\t\tte[ 13 ] = 0;\n\t\tte[ 14 ] = 0;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationFromQuaternion( q ) {\n\n\t\treturn this.compose( _zero, q, _one );\n\n\t}\n\n\tlookAt( eye, target, up ) {\n\n\t\tconst te = this.elements;\n\n\t\t_z.subVectors( eye, target );\n\n\t\tif ( _z.lengthSq() === 0 ) {\n\n\t\t\t// eye and target are in the same position\n\n\t\t\t_z.z = 1;\n\n\t\t}\n\n\t\t_z.normalize();\n\t\t_x.crossVectors( up, _z );\n\n\t\tif ( _x.lengthSq() === 0 ) {\n\n\t\t\t// up and z are parallel\n\n\t\t\tif ( Math.abs( up.z ) === 1 ) {\n\n\t\t\t\t_z.x += 0.0001;\n\n\t\t\t} else {\n\n\t\t\t\t_z.z += 0.0001;\n\n\t\t\t}\n\n\t\t\t_z.normalize();\n\t\t\t_x.crossVectors( up, _z );\n\n\t\t}\n\n\t\t_x.normalize();\n\t\t_y.crossVectors( _z, _x );\n\n\t\tte[ 0 ] = _x.x; te[ 4 ] = _y.x; te[ 8 ] = _z.x;\n\t\tte[ 1 ] = _x.y; te[ 5 ] = _y.y; te[ 9 ] = _z.y;\n\t\tte[ 2 ] = _x.z; te[ 6 ] = _y.z; te[ 10 ] = _z.z;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( m ) {\n\n\t\treturn this.multiplyMatrices( this, m );\n\n\t}\n\n\tpremultiply( m ) {\n\n\t\treturn this.multiplyMatrices( m, this );\n\n\t}\n\n\tmultiplyMatrices( a, b ) {\n\n\t\tconst ae = a.elements;\n\t\tconst be = b.elements;\n\t\tconst te = this.elements;\n\n\t\tconst a11 = ae[ 0 ], a12 = ae[ 4 ], a13 = ae[ 8 ], a14 = ae[ 12 ];\n\t\tconst a21 = ae[ 1 ], a22 = ae[ 5 ], a23 = ae[ 9 ], a24 = ae[ 13 ];\n\t\tconst a31 = ae[ 2 ], a32 = ae[ 6 ], a33 = ae[ 10 ], a34 = ae[ 14 ];\n\t\tconst a41 = ae[ 3 ], a42 = ae[ 7 ], a43 = ae[ 11 ], a44 = ae[ 15 ];\n\n\t\tconst b11 = be[ 0 ], b12 = be[ 4 ], b13 = be[ 8 ], b14 = be[ 12 ];\n\t\tconst b21 = be[ 1 ], b22 = be[ 5 ], b23 = be[ 9 ], b24 = be[ 13 ];\n\t\tconst b31 = be[ 2 ], b32 = be[ 6 ], b33 = be[ 10 ], b34 = be[ 14 ];\n\t\tconst b41 = be[ 3 ], b42 = be[ 7 ], b43 = be[ 11 ], b44 = be[ 15 ];\n\n\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;\n\t\tte[ 4 ] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;\n\t\tte[ 8 ] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;\n\t\tte[ 12 ] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;\n\n\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;\n\t\tte[ 5 ] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;\n\t\tte[ 9 ] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;\n\t\tte[ 13 ] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;\n\n\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;\n\t\tte[ 6 ] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;\n\t\tte[ 10 ] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;\n\t\tte[ 14 ] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;\n\n\t\tte[ 3 ] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;\n\t\tte[ 7 ] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;\n\t\tte[ 11 ] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;\n\t\tte[ 15 ] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( s ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] *= s; te[ 4 ] *= s; te[ 8 ] *= s; te[ 12 ] *= s;\n\t\tte[ 1 ] *= s; te[ 5 ] *= s; te[ 9 ] *= s; te[ 13 ] *= s;\n\t\tte[ 2 ] *= s; te[ 6 ] *= s; te[ 10 ] *= s; te[ 14 ] *= s;\n\t\tte[ 3 ] *= s; te[ 7 ] *= s; te[ 11 ] *= s; te[ 15 ] *= s;\n\n\t\treturn this;\n\n\t}\n\n\tdeterminant() {\n\n\t\tconst te = this.elements;\n\n\t\tconst n11 = te[ 0 ], n12 = te[ 4 ], n13 = te[ 8 ], n14 = te[ 12 ];\n\t\tconst n21 = te[ 1 ], n22 = te[ 5 ], n23 = te[ 9 ], n24 = te[ 13 ];\n\t\tconst n31 = te[ 2 ], n32 = te[ 6 ], n33 = te[ 10 ], n34 = te[ 14 ];\n\t\tconst n41 = te[ 3 ], n42 = te[ 7 ], n43 = te[ 11 ], n44 = te[ 15 ];\n\n\t\t//TODO: make this more efficient\n\t\t//( based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm )\n\n\t\treturn (\n\t\t\tn41 * (\n\t\t\t\t+ n14 * n23 * n32\n\t\t\t\t - n13 * n24 * n32\n\t\t\t\t - n14 * n22 * n33\n\t\t\t\t + n12 * n24 * n33\n\t\t\t\t + n13 * n22 * n34\n\t\t\t\t - n12 * n23 * n34\n\t\t\t) +\n\t\t\tn42 * (\n\t\t\t\t+ n11 * n23 * n34\n\t\t\t\t - n11 * n24 * n33\n\t\t\t\t + n14 * n21 * n33\n\t\t\t\t - n13 * n21 * n34\n\t\t\t\t + n13 * n24 * n31\n\t\t\t\t - n14 * n23 * n31\n\t\t\t) +\n\t\t\tn43 * (\n\t\t\t\t+ n11 * n24 * n32\n\t\t\t\t - n11 * n22 * n34\n\t\t\t\t - n14 * n21 * n32\n\t\t\t\t + n12 * n21 * n34\n\t\t\t\t + n14 * n22 * n31\n\t\t\t\t - n12 * n24 * n31\n\t\t\t) +\n\t\t\tn44 * (\n\t\t\t\t- n13 * n22 * n31\n\t\t\t\t - n11 * n23 * n32\n\t\t\t\t + n11 * n22 * n33\n\t\t\t\t + n13 * n21 * n32\n\t\t\t\t - n12 * n21 * n33\n\t\t\t\t + n12 * n23 * n31\n\t\t\t)\n\n\t\t);\n\n\t}\n\n\ttranspose() {\n\n\t\tconst te = this.elements;\n\t\tlet tmp;\n\n\t\ttmp = te[ 1 ]; te[ 1 ] = te[ 4 ]; te[ 4 ] = tmp;\n\t\ttmp = te[ 2 ]; te[ 2 ] = te[ 8 ]; te[ 8 ] = tmp;\n\t\ttmp = te[ 6 ]; te[ 6 ] = te[ 9 ]; te[ 9 ] = tmp;\n\n\t\ttmp = te[ 3 ]; te[ 3 ] = te[ 12 ]; te[ 12 ] = tmp;\n\t\ttmp = te[ 7 ]; te[ 7 ] = te[ 13 ]; te[ 13 ] = tmp;\n\t\ttmp = te[ 11 ]; te[ 11 ] = te[ 14 ]; te[ 14 ] = tmp;\n\n\t\treturn this;\n\n\t}\n\n\tsetPosition( x, y, z ) {\n\n\t\tconst te = this.elements;\n\n\t\tif ( x.isVector3 ) {\n\n\t\t\tte[ 12 ] = x.x;\n\t\t\tte[ 13 ] = x.y;\n\t\t\tte[ 14 ] = x.z;\n\n\t\t} else {\n\n\t\t\tte[ 12 ] = x;\n\t\t\tte[ 13 ] = y;\n\t\t\tte[ 14 ] = z;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tinvert() {\n\n\t\t// based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm\n\t\tconst te = this.elements,\n\n\t\t\tn11 = te[ 0 ], n21 = te[ 1 ], n31 = te[ 2 ], n41 = te[ 3 ],\n\t\t\tn12 = te[ 4 ], n22 = te[ 5 ], n32 = te[ 6 ], n42 = te[ 7 ],\n\t\t\tn13 = te[ 8 ], n23 = te[ 9 ], n33 = te[ 10 ], n43 = te[ 11 ],\n\t\t\tn14 = te[ 12 ], n24 = te[ 13 ], n34 = te[ 14 ], n44 = te[ 15 ],\n\n\t\t\tt11 = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44,\n\t\t\tt12 = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44,\n\t\t\tt13 = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44,\n\t\t\tt14 = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;\n\n\t\tconst det = n11 * t11 + n21 * t12 + n31 * t13 + n41 * t14;\n\n\t\tif ( det === 0 ) return this.set( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 );\n\n\t\tconst detInv = 1 / det;\n\n\t\tte[ 0 ] = t11 * detInv;\n\t\tte[ 1 ] = ( n24 * n33 * n41 - n23 * n34 * n41 - n24 * n31 * n43 + n21 * n34 * n43 + n23 * n31 * n44 - n21 * n33 * n44 ) * detInv;\n\t\tte[ 2 ] = ( n22 * n34 * n41 - n24 * n32 * n41 + n24 * n31 * n42 - n21 * n34 * n42 - n22 * n31 * n44 + n21 * n32 * n44 ) * detInv;\n\t\tte[ 3 ] = ( n23 * n32 * n41 - n22 * n33 * n41 - n23 * n31 * n42 + n21 * n33 * n42 + n22 * n31 * n43 - n21 * n32 * n43 ) * detInv;\n\n\t\tte[ 4 ] = t12 * detInv;\n\t\tte[ 5 ] = ( n13 * n34 * n41 - n14 * n33 * n41 + n14 * n31 * n43 - n11 * n34 * n43 - n13 * n31 * n44 + n11 * n33 * n44 ) * detInv;\n\t\tte[ 6 ] = ( n14 * n32 * n41 - n12 * n34 * n41 - n14 * n31 * n42 + n11 * n34 * n42 + n12 * n31 * n44 - n11 * n32 * n44 ) * detInv;\n\t\tte[ 7 ] = ( n12 * n33 * n41 - n13 * n32 * n41 + n13 * n31 * n42 - n11 * n33 * n42 - n12 * n31 * n43 + n11 * n32 * n43 ) * detInv;\n\n\t\tte[ 8 ] = t13 * detInv;\n\t\tte[ 9 ] = ( n14 * n23 * n41 - n13 * n24 * n41 - n14 * n21 * n43 + n11 * n24 * n43 + n13 * n21 * n44 - n11 * n23 * n44 ) * detInv;\n\t\tte[ 10 ] = ( n12 * n24 * n41 - n14 * n22 * n41 + n14 * n21 * n42 - n11 * n24 * n42 - n12 * n21 * n44 + n11 * n22 * n44 ) * detInv;\n\t\tte[ 11 ] = ( n13 * n22 * n41 - n12 * n23 * n41 - n13 * n21 * n42 + n11 * n23 * n42 + n12 * n21 * n43 - n11 * n22 * n43 ) * detInv;\n\n\t\tte[ 12 ] = t14 * detInv;\n\t\tte[ 13 ] = ( n13 * n24 * n31 - n14 * n23 * n31 + n14 * n21 * n33 - n11 * n24 * n33 - n13 * n21 * n34 + n11 * n23 * n34 ) * detInv;\n\t\tte[ 14 ] = ( n14 * n22 * n31 - n12 * n24 * n31 - n14 * n21 * n32 + n11 * n24 * n32 + n12 * n21 * n34 - n11 * n22 * n34 ) * detInv;\n\t\tte[ 15 ] = ( n12 * n23 * n31 - n13 * n22 * n31 + n13 * n21 * n32 - n11 * n23 * n32 - n12 * n21 * n33 + n11 * n22 * n33 ) * detInv;\n\n\t\treturn this;\n\n\t}\n\n\tscale( v ) {\n\n\t\tconst te = this.elements;\n\t\tconst x = v.x, y = v.y, z = v.z;\n\n\t\tte[ 0 ] *= x; te[ 4 ] *= y; te[ 8 ] *= z;\n\t\tte[ 1 ] *= x; te[ 5 ] *= y; te[ 9 ] *= z;\n\t\tte[ 2 ] *= x; te[ 6 ] *= y; te[ 10 ] *= z;\n\t\tte[ 3 ] *= x; te[ 7 ] *= y; te[ 11 ] *= z;\n\n\t\treturn this;\n\n\t}\n\n\tgetMaxScaleOnAxis() {\n\n\t\tconst te = this.elements;\n\n\t\tconst scaleXSq = te[ 0 ] * te[ 0 ] + te[ 1 ] * te[ 1 ] + te[ 2 ] * te[ 2 ];\n\t\tconst scaleYSq = te[ 4 ] * te[ 4 ] + te[ 5 ] * te[ 5 ] + te[ 6 ] * te[ 6 ];\n\t\tconst scaleZSq = te[ 8 ] * te[ 8 ] + te[ 9 ] * te[ 9 ] + te[ 10 ] * te[ 10 ];\n\n\t\treturn Math.sqrt( Math.max( scaleXSq, scaleYSq, scaleZSq ) );\n\n\t}\n\n\tmakeTranslation( x, y, z ) {\n\n\t\tif ( x.isVector3 ) {\n\n\t\t\tthis.set(\n\n\t\t\t\t1, 0, 0, x.x,\n\t\t\t\t0, 1, 0, x.y,\n\t\t\t\t0, 0, 1, x.z,\n\t\t\t\t0, 0, 0, 1\n\n\t\t\t);\n\n\t\t} else {\n\n\t\t\tthis.set(\n\n\t\t\t\t1, 0, 0, x,\n\t\t\t\t0, 1, 0, y,\n\t\t\t\t0, 0, 1, z,\n\t\t\t\t0, 0, 0, 1\n\n\t\t\t);\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationX( theta ) {\n\n\t\tconst c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, c, - s, 0,\n\t\t\t0, s, c, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationY( theta ) {\n\n\t\tconst c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\t c, 0, s, 0,\n\t\t\t 0, 1, 0, 0,\n\t\t\t- s, 0, c, 0,\n\t\t\t 0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationZ( theta ) {\n\n\t\tconst c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\tc, - s, 0, 0,\n\t\t\ts, c, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationAxis( axis, angle ) {\n\n\t\t// Based on http://www.gamedev.net/reference/articles/article1199.asp\n\n\t\tconst c = Math.cos( angle );\n\t\tconst s = Math.sin( angle );\n\t\tconst t = 1 - c;\n\t\tconst x = axis.x, y = axis.y, z = axis.z;\n\t\tconst tx = t * x, ty = t * y;\n\n\t\tthis.set(\n\n\t\t\ttx * x + c, tx * y - s * z, tx * z + s * y, 0,\n\t\t\ttx * y + s * z, ty * y + c, ty * z - s * x, 0,\n\t\t\ttx * z - s * y, ty * z + s * x, t * z * z + c, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeScale( x, y, z ) {\n\n\t\tthis.set(\n\n\t\t\tx, 0, 0, 0,\n\t\t\t0, y, 0, 0,\n\t\t\t0, 0, z, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeShear( xy, xz, yx, yz, zx, zy ) {\n\n\t\tthis.set(\n\n\t\t\t1, yx, zx, 0,\n\t\t\txy, 1, zy, 0,\n\t\t\txz, yz, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tcompose( position, quaternion, scale ) {\n\n\t\tconst te = this.elements;\n\n\t\tconst x = quaternion._x, y = quaternion._y, z = quaternion._z, w = quaternion._w;\n\t\tconst x2 = x + x,\ty2 = y + y, z2 = z + z;\n\t\tconst xx = x * x2, xy = x * y2, xz = x * z2;\n\t\tconst yy = y * y2, yz = y * z2, zz = z * z2;\n\t\tconst wx = w * x2, wy = w * y2, wz = w * z2;\n\n\t\tconst sx = scale.x, sy = scale.y, sz = scale.z;\n\n\t\tte[ 0 ] = ( 1 - ( yy + zz ) ) * sx;\n\t\tte[ 1 ] = ( xy + wz ) * sx;\n\t\tte[ 2 ] = ( xz - wy ) * sx;\n\t\tte[ 3 ] = 0;\n\n\t\tte[ 4 ] = ( xy - wz ) * sy;\n\t\tte[ 5 ] = ( 1 - ( xx + zz ) ) * sy;\n\t\tte[ 6 ] = ( yz + wx ) * sy;\n\t\tte[ 7 ] = 0;\n\n\t\tte[ 8 ] = ( xz + wy ) * sz;\n\t\tte[ 9 ] = ( yz - wx ) * sz;\n\t\tte[ 10 ] = ( 1 - ( xx + yy ) ) * sz;\n\t\tte[ 11 ] = 0;\n\n\t\tte[ 12 ] = position.x;\n\t\tte[ 13 ] = position.y;\n\t\tte[ 14 ] = position.z;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tdecompose( position, quaternion, scale ) {\n\n\t\tconst te = this.elements;\n\n\t\tlet sx = _v1$5.set( te[ 0 ], te[ 1 ], te[ 2 ] ).length();\n\t\tconst sy = _v1$5.set( te[ 4 ], te[ 5 ], te[ 6 ] ).length();\n\t\tconst sz = _v1$5.set( te[ 8 ], te[ 9 ], te[ 10 ] ).length();\n\n\t\t// if determine is negative, we need to invert one scale\n\t\tconst det = this.determinant();\n\t\tif ( det < 0 ) sx = - sx;\n\n\t\tposition.x = te[ 12 ];\n\t\tposition.y = te[ 13 ];\n\t\tposition.z = te[ 14 ];\n\n\t\t// scale the rotation part\n\t\t_m1$4.copy( this );\n\n\t\tconst invSX = 1 / sx;\n\t\tconst invSY = 1 / sy;\n\t\tconst invSZ = 1 / sz;\n\n\t\t_m1$4.elements[ 0 ] *= invSX;\n\t\t_m1$4.elements[ 1 ] *= invSX;\n\t\t_m1$4.elements[ 2 ] *= invSX;\n\n\t\t_m1$4.elements[ 4 ] *= invSY;\n\t\t_m1$4.elements[ 5 ] *= invSY;\n\t\t_m1$4.elements[ 6 ] *= invSY;\n\n\t\t_m1$4.elements[ 8 ] *= invSZ;\n\t\t_m1$4.elements[ 9 ] *= invSZ;\n\t\t_m1$4.elements[ 10 ] *= invSZ;\n\n\t\tquaternion.setFromRotationMatrix( _m1$4 );\n\n\t\tscale.x = sx;\n\t\tscale.y = sy;\n\t\tscale.z = sz;\n\n\t\treturn this;\n\n\t}\n\n\tmakePerspective( left, right, top, bottom, near, far, coordinateSystem = WebGLCoordinateSystem ) {\n\n\t\tconst te = this.elements;\n\t\tconst x = 2 * near / ( right - left );\n\t\tconst y = 2 * near / ( top - bottom );\n\n\t\tconst a = ( right + left ) / ( right - left );\n\t\tconst b = ( top + bottom ) / ( top - bottom );\n\n\t\tlet c, d;\n\n\t\tif ( coordinateSystem === WebGLCoordinateSystem ) {\n\n\t\t\tc = - ( far + near ) / ( far - near );\n\t\t\td = ( - 2 * far * near ) / ( far - near );\n\n\t\t} else if ( coordinateSystem === WebGPUCoordinateSystem ) {\n\n\t\t\tc = - far / ( far - near );\n\t\t\td = ( - far * near ) / ( far - near );\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'THREE.Matrix4.makePerspective(): Invalid coordinate system: ' + coordinateSystem );\n\n\t\t}\n\n\t\tte[ 0 ] = x;\tte[ 4 ] = 0;\tte[ 8 ] = a; \tte[ 12 ] = 0;\n\t\tte[ 1 ] = 0;\tte[ 5 ] = y;\tte[ 9 ] = b; \tte[ 13 ] = 0;\n\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = c; \tte[ 14 ] = d;\n\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = - 1;\tte[ 15 ] = 0;\n\n\t\treturn this;\n\n\t}\n\n\tmakeOrthographic( left, right, top, bottom, near, far, coordinateSystem = WebGLCoordinateSystem ) {\n\n\t\tconst te = this.elements;\n\t\tconst w = 1.0 / ( right - left );\n\t\tconst h = 1.0 / ( top - bottom );\n\t\tconst p = 1.0 / ( far - near );\n\n\t\tconst x = ( right + left ) * w;\n\t\tconst y = ( top + bottom ) * h;\n\n\t\tlet z, zInv;\n\n\t\tif ( coordinateSystem === WebGLCoordinateSystem ) {\n\n\t\t\tz = ( far + near ) * p;\n\t\t\tzInv = - 2 * p;\n\n\t\t} else if ( coordinateSystem === WebGPUCoordinateSystem ) {\n\n\t\t\tz = near * p;\n\t\t\tzInv = - 1 * p;\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'THREE.Matrix4.makeOrthographic(): Invalid coordinate system: ' + coordinateSystem );\n\n\t\t}\n\n\t\tte[ 0 ] = 2 * w;\tte[ 4 ] = 0;\t\tte[ 8 ] = 0; \t\tte[ 12 ] = - x;\n\t\tte[ 1 ] = 0; \t\tte[ 5 ] = 2 * h;\tte[ 9 ] = 0; \t\tte[ 13 ] = - y;\n\t\tte[ 2 ] = 0; \t\tte[ 6 ] = 0;\t\tte[ 10 ] = zInv;\tte[ 14 ] = - z;\n\t\tte[ 3 ] = 0; \t\tte[ 7 ] = 0;\t\tte[ 11 ] = 0;\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tequals( matrix ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = matrix.elements;\n\n\t\tfor ( let i = 0; i < 16; i ++ ) {\n\n\t\t\tif ( te[ i ] !== me[ i ] ) return false;\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tfor ( let i = 0; i < 16; i ++ ) {\n\n\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tconst te = this.elements;\n\n\t\tarray[ offset ] = te[ 0 ];\n\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\tarray[ offset + 2 ] = te[ 2 ];\n\t\tarray[ offset + 3 ] = te[ 3 ];\n\n\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\tarray[ offset + 5 ] = te[ 5 ];\n\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\tarray[ offset + 7 ] = te[ 7 ];\n\n\t\tarray[ offset + 8 ] = te[ 8 ];\n\t\tarray[ offset + 9 ] = te[ 9 ];\n\t\tarray[ offset + 10 ] = te[ 10 ];\n\t\tarray[ offset + 11 ] = te[ 11 ];\n\n\t\tarray[ offset + 12 ] = te[ 12 ];\n\t\tarray[ offset + 13 ] = te[ 13 ];\n\t\tarray[ offset + 14 ] = te[ 14 ];\n\t\tarray[ offset + 15 ] = te[ 15 ];\n\n\t\treturn array;\n\n\t}\n\n}\n\nconst _v1$5 = /*@__PURE__*/ new Vector3();\nconst _m1$4 = /*@__PURE__*/ new Matrix4();\nconst _zero = /*@__PURE__*/ new Vector3( 0, 0, 0 );\nconst _one = /*@__PURE__*/ new Vector3( 1, 1, 1 );\nconst _x = /*@__PURE__*/ new Vector3();\nconst _y = /*@__PURE__*/ new Vector3();\nconst _z = /*@__PURE__*/ new Vector3();\n\nconst _matrix$2 = /*@__PURE__*/ new Matrix4();\nconst _quaternion$3 = /*@__PURE__*/ new Quaternion();\n\nclass Euler {\n\n\tconstructor( x = 0, y = 0, z = 0, order = Euler.DEFAULT_ORDER ) {\n\n\t\tthis.isEuler = true;\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._order = order;\n\n\t}\n\n\tget x() {\n\n\t\treturn this._x;\n\n\t}\n\n\tset x( value ) {\n\n\t\tthis._x = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget y() {\n\n\t\treturn this._y;\n\n\t}\n\n\tset y( value ) {\n\n\t\tthis._y = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget z() {\n\n\t\treturn this._z;\n\n\t}\n\n\tset z( value ) {\n\n\t\tthis._z = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget order() {\n\n\t\treturn this._order;\n\n\t}\n\n\tset order( value ) {\n\n\t\tthis._order = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tset( x, y, z, order = this._order ) {\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._order = order;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this._x, this._y, this._z, this._order );\n\n\t}\n\n\tcopy( euler ) {\n\n\t\tthis._x = euler._x;\n\t\tthis._y = euler._y;\n\t\tthis._z = euler._z;\n\t\tthis._order = euler._order;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromRotationMatrix( m, order = this._order, update = true ) {\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tconst te = m.elements;\n\t\tconst m11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ];\n\t\tconst m21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ];\n\t\tconst m31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n\t\tswitch ( order ) {\n\n\t\t\tcase 'XYZ':\n\n\t\t\t\tthis._y = Math.asin( clamp( m13, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m13 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\t\tthis._z = Math.atan2( - m12, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\t\tthis._z = 0;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'YXZ':\n\n\t\t\t\tthis._x = Math.asin( - clamp( m23, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m23 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\t\t\t\t\tthis._z = Math.atan2( m21, m22 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\t\t\t\t\tthis._z = 0;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZXY':\n\n\t\t\t\tthis._x = Math.asin( clamp( m32, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m32 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._y = Math.atan2( - m31, m33 );\n\t\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._y = 0;\n\t\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZYX':\n\n\t\t\t\tthis._y = Math.asin( - clamp( m31, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m31 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m33 );\n\t\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = 0;\n\t\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'YZX':\n\n\t\t\t\tthis._z = Math.asin( clamp( m21, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m21 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m22 );\n\t\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = 0;\n\t\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'XZY':\n\n\t\t\t\tthis._z = Math.asin( - clamp( m12, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m12 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\t\tthis._y = Math.atan2( m13, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\t\tthis._y = 0;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tconsole.warn( 'THREE.Euler: .setFromRotationMatrix() encountered an unknown order: ' + order );\n\n\t\t}\n\n\t\tthis._order = order;\n\n\t\tif ( update === true ) this._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromQuaternion( q, order, update ) {\n\n\t\t_matrix$2.makeRotationFromQuaternion( q );\n\n\t\treturn this.setFromRotationMatrix( _matrix$2, order, update );\n\n\t}\n\n\tsetFromVector3( v, order = this._order ) {\n\n\t\treturn this.set( v.x, v.y, v.z, order );\n\n\t}\n\n\treorder( newOrder ) {\n\n\t\t// WARNING: this discards revolution information -bhouston\n\n\t\t_quaternion$3.setFromEuler( this );\n\n\t\treturn this.setFromQuaternion( _quaternion$3, newOrder );\n\n\t}\n\n\tequals( euler ) {\n\n\t\treturn ( euler._x === this._x ) && ( euler._y === this._y ) && ( euler._z === this._z ) && ( euler._order === this._order );\n\n\t}\n\n\tfromArray( array ) {\n\n\t\tthis._x = array[ 0 ];\n\t\tthis._y = array[ 1 ];\n\t\tthis._z = array[ 2 ];\n\t\tif ( array[ 3 ] !== undefined ) this._order = array[ 3 ];\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this._x;\n\t\tarray[ offset + 1 ] = this._y;\n\t\tarray[ offset + 2 ] = this._z;\n\t\tarray[ offset + 3 ] = this._order;\n\n\t\treturn array;\n\n\t}\n\n\t_onChange( callback ) {\n\n\t\tthis._onChangeCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\t_onChangeCallback() {}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this._x;\n\t\tyield this._y;\n\t\tyield this._z;\n\t\tyield this._order;\n\n\t}\n\n}\n\nEuler.DEFAULT_ORDER = 'XYZ';\n\nclass Layers {\n\n\tconstructor() {\n\n\t\tthis.mask = 1 | 0;\n\n\t}\n\n\tset( channel ) {\n\n\t\tthis.mask = ( 1 << channel | 0 ) >>> 0;\n\n\t}\n\n\tenable( channel ) {\n\n\t\tthis.mask |= 1 << channel | 0;\n\n\t}\n\n\tenableAll() {\n\n\t\tthis.mask = 0xffffffff | 0;\n\n\t}\n\n\ttoggle( channel ) {\n\n\t\tthis.mask ^= 1 << channel | 0;\n\n\t}\n\n\tdisable( channel ) {\n\n\t\tthis.mask &= ~ ( 1 << channel | 0 );\n\n\t}\n\n\tdisableAll() {\n\n\t\tthis.mask = 0;\n\n\t}\n\n\ttest( layers ) {\n\n\t\treturn ( this.mask & layers.mask ) !== 0;\n\n\t}\n\n\tisEnabled( channel ) {\n\n\t\treturn ( this.mask & ( 1 << channel | 0 ) ) !== 0;\n\n\t}\n\n}\n\nlet _object3DId = 0;\n\nconst _v1$4 = /*@__PURE__*/ new Vector3();\nconst _q1 = /*@__PURE__*/ new Quaternion();\nconst _m1$3 = /*@__PURE__*/ new Matrix4();\nconst _target = /*@__PURE__*/ new Vector3();\n\nconst _position$3 = /*@__PURE__*/ new Vector3();\nconst _scale$2 = /*@__PURE__*/ new Vector3();\nconst _quaternion$2 = /*@__PURE__*/ new Quaternion();\n\nconst _xAxis = /*@__PURE__*/ new Vector3( 1, 0, 0 );\nconst _yAxis = /*@__PURE__*/ new Vector3( 0, 1, 0 );\nconst _zAxis = /*@__PURE__*/ new Vector3( 0, 0, 1 );\n\nconst _addedEvent = { type: 'added' };\nconst _removedEvent = { type: 'removed' };\n\nconst _childaddedEvent = { type: 'childadded', child: null };\nconst _childremovedEvent = { type: 'childremoved', child: null };\n\nclass Object3D extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isObject3D = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _object3DId ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'Object3D';\n\n\t\tthis.parent = null;\n\t\tthis.children = [];\n\n\t\tthis.up = Object3D.DEFAULT_UP.clone();\n\n\t\tconst position = new Vector3();\n\t\tconst rotation = new Euler();\n\t\tconst quaternion = new Quaternion();\n\t\tconst scale = new Vector3( 1, 1, 1 );\n\n\t\tfunction onRotationChange() {\n\n\t\t\tquaternion.setFromEuler( rotation, false );\n\n\t\t}\n\n\t\tfunction onQuaternionChange() {\n\n\t\t\trotation.setFromQuaternion( quaternion, undefined, false );\n\n\t\t}\n\n\t\trotation._onChange( onRotationChange );\n\t\tquaternion._onChange( onQuaternionChange );\n\n\t\tObject.defineProperties( this, {\n\t\t\tposition: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: position\n\t\t\t},\n\t\t\trotation: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: rotation\n\t\t\t},\n\t\t\tquaternion: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: quaternion\n\t\t\t},\n\t\t\tscale: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: scale\n\t\t\t},\n\t\t\tmodelViewMatrix: {\n\t\t\t\tvalue: new Matrix4()\n\t\t\t},\n\t\t\tnormalMatrix: {\n\t\t\t\tvalue: new Matrix3()\n\t\t\t}\n\t\t} );\n\n\t\tthis.matrix = new Matrix4();\n\t\tthis.matrixWorld = new Matrix4();\n\n\t\tthis.matrixAutoUpdate = Object3D.DEFAULT_MATRIX_AUTO_UPDATE;\n\n\t\tthis.matrixWorldAutoUpdate = Object3D.DEFAULT_MATRIX_WORLD_AUTO_UPDATE; // checked by the renderer\n\t\tthis.matrixWorldNeedsUpdate = false;\n\n\t\tthis.layers = new Layers();\n\t\tthis.visible = true;\n\n\t\tthis.castShadow = false;\n\t\tthis.receiveShadow = false;\n\n\t\tthis.frustumCulled = true;\n\t\tthis.renderOrder = 0;\n\n\t\tthis.animations = [];\n\n\t\tthis.userData = {};\n\n\t}\n\n\tonBeforeShadow( /* renderer, object, camera, shadowCamera, geometry, depthMaterial, group */ ) {}\n\n\tonAfterShadow( /* renderer, object, camera, shadowCamera, geometry, depthMaterial, group */ ) {}\n\n\tonBeforeRender( /* renderer, scene, camera, geometry, material, group */ ) {}\n\n\tonAfterRender( /* renderer, scene, camera, geometry, material, group */ ) {}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tthis.matrix.premultiply( matrix );\n\n\t\tthis.matrix.decompose( this.position, this.quaternion, this.scale );\n\n\t}\n\n\tapplyQuaternion( q ) {\n\n\t\tthis.quaternion.premultiply( q );\n\n\t\treturn this;\n\n\t}\n\n\tsetRotationFromAxisAngle( axis, angle ) {\n\n\t\t// assumes axis is normalized\n\n\t\tthis.quaternion.setFromAxisAngle( axis, angle );\n\n\t}\n\n\tsetRotationFromEuler( euler ) {\n\n\t\tthis.quaternion.setFromEuler( euler, true );\n\n\t}\n\n\tsetRotationFromMatrix( m ) {\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tthis.quaternion.setFromRotationMatrix( m );\n\n\t}\n\n\tsetRotationFromQuaternion( q ) {\n\n\t\t// assumes q is normalized\n\n\t\tthis.quaternion.copy( q );\n\n\t}\n\n\trotateOnAxis( axis, angle ) {\n\n\t\t// rotate object on axis in object space\n\t\t// axis is assumed to be normalized\n\n\t\t_q1.setFromAxisAngle( axis, angle );\n\n\t\tthis.quaternion.multiply( _q1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateOnWorldAxis( axis, angle ) {\n\n\t\t// rotate object on axis in world space\n\t\t// axis is assumed to be normalized\n\t\t// method assumes no rotated parent\n\n\t\t_q1.setFromAxisAngle( axis, angle );\n\n\t\tthis.quaternion.premultiply( _q1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateX( angle ) {\n\n\t\treturn this.rotateOnAxis( _xAxis, angle );\n\n\t}\n\n\trotateY( angle ) {\n\n\t\treturn this.rotateOnAxis( _yAxis, angle );\n\n\t}\n\n\trotateZ( angle ) {\n\n\t\treturn this.rotateOnAxis( _zAxis, angle );\n\n\t}\n\n\ttranslateOnAxis( axis, distance ) {\n\n\t\t// translate object by distance along axis in object space\n\t\t// axis is assumed to be normalized\n\n\t\t_v1$4.copy( axis ).applyQuaternion( this.quaternion );\n\n\t\tthis.position.add( _v1$4.multiplyScalar( distance ) );\n\n\t\treturn this;\n\n\t}\n\n\ttranslateX( distance ) {\n\n\t\treturn this.translateOnAxis( _xAxis, distance );\n\n\t}\n\n\ttranslateY( distance ) {\n\n\t\treturn this.translateOnAxis( _yAxis, distance );\n\n\t}\n\n\ttranslateZ( distance ) {\n\n\t\treturn this.translateOnAxis( _zAxis, distance );\n\n\t}\n\n\tlocalToWorld( vector ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\treturn vector.applyMatrix4( this.matrixWorld );\n\n\t}\n\n\tworldToLocal( vector ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\treturn vector.applyMatrix4( _m1$3.copy( this.matrixWorld ).invert() );\n\n\t}\n\n\tlookAt( x, y, z ) {\n\n\t\t// This method does not support objects having non-uniformly-scaled parent(s)\n\n\t\tif ( x.isVector3 ) {\n\n\t\t\t_target.copy( x );\n\n\t\t} else {\n\n\t\t\t_target.set( x, y, z );\n\n\t\t}\n\n\t\tconst parent = this.parent;\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\t_position$3.setFromMatrixPosition( this.matrixWorld );\n\n\t\tif ( this.isCamera || this.isLight ) {\n\n\t\t\t_m1$3.lookAt( _position$3, _target, this.up );\n\n\t\t} else {\n\n\t\t\t_m1$3.lookAt( _target, _position$3, this.up );\n\n\t\t}\n\n\t\tthis.quaternion.setFromRotationMatrix( _m1$3 );\n\n\t\tif ( parent ) {\n\n\t\t\t_m1$3.extractRotation( parent.matrixWorld );\n\t\t\t_q1.setFromRotationMatrix( _m1$3 );\n\t\t\tthis.quaternion.premultiply( _q1.invert() );\n\n\t\t}\n\n\t}\n\n\tadd( object ) {\n\n\t\tif ( arguments.length > 1 ) {\n\n\t\t\tfor ( let i = 0; i < arguments.length; i ++ ) {\n\n\t\t\t\tthis.add( arguments[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( object === this ) {\n\n\t\t\tconsole.error( 'THREE.Object3D.add: object can\\'t be added as a child of itself.', object );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( object && object.isObject3D ) {\n\n\t\t\tobject.removeFromParent();\n\t\t\tobject.parent = this;\n\t\t\tthis.children.push( object );\n\n\t\t\tobject.dispatchEvent( _addedEvent );\n\n\t\t\t_childaddedEvent.child = object;\n\t\t\tthis.dispatchEvent( _childaddedEvent );\n\t\t\t_childaddedEvent.child = null;\n\n\t\t} else {\n\n\t\t\tconsole.error( 'THREE.Object3D.add: object not an instance of THREE.Object3D.', object );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tremove( object ) {\n\n\t\tif ( arguments.length > 1 ) {\n\n\t\t\tfor ( let i = 0; i < arguments.length; i ++ ) {\n\n\t\t\t\tthis.remove( arguments[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst index = this.children.indexOf( object );\n\n\t\tif ( index !== - 1 ) {\n\n\t\t\tobject.parent = null;\n\t\t\tthis.children.splice( index, 1 );\n\n\t\t\tobject.dispatchEvent( _removedEvent );\n\n\t\t\t_childremovedEvent.child = object;\n\t\t\tthis.dispatchEvent( _childremovedEvent );\n\t\t\t_childremovedEvent.child = null;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tremoveFromParent() {\n\n\t\tconst parent = this.parent;\n\n\t\tif ( parent !== null ) {\n\n\t\t\tparent.remove( this );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclear() {\n\n\t\treturn this.remove( ... this.children );\n\n\t}\n\n\tattach( object ) {\n\n\t\t// adds object as a child of this, while maintaining the object's world transform\n\n\t\t// Note: This method does not support scene graphs having non-uniformly-scaled nodes(s)\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\t_m1$3.copy( this.matrixWorld ).invert();\n\n\t\tif ( object.parent !== null ) {\n\n\t\t\tobject.parent.updateWorldMatrix( true, false );\n\n\t\t\t_m1$3.multiply( object.parent.matrixWorld );\n\n\t\t}\n\n\t\tobject.applyMatrix4( _m1$3 );\n\n\t\tobject.removeFromParent();\n\t\tobject.parent = this;\n\t\tthis.children.push( object );\n\n\t\tobject.updateWorldMatrix( false, true );\n\n\t\tobject.dispatchEvent( _addedEvent );\n\n\t\t_childaddedEvent.child = object;\n\t\tthis.dispatchEvent( _childaddedEvent );\n\t\t_childaddedEvent.child = null;\n\n\t\treturn this;\n\n\t}\n\n\tgetObjectById( id ) {\n\n\t\treturn this.getObjectByProperty( 'id', id );\n\n\t}\n\n\tgetObjectByName( name ) {\n\n\t\treturn this.getObjectByProperty( 'name', name );\n\n\t}\n\n\tgetObjectByProperty( name, value ) {\n\n\t\tif ( this[ name ] === value ) return this;\n\n\t\tfor ( let i = 0, l = this.children.length; i < l; i ++ ) {\n\n\t\t\tconst child = this.children[ i ];\n\t\t\tconst object = child.getObjectByProperty( name, value );\n\n\t\t\tif ( object !== undefined ) {\n\n\t\t\t\treturn object;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn undefined;\n\n\t}\n\n\tgetObjectsByProperty( name, value, result = [] ) {\n\n\t\tif ( this[ name ] === value ) result.push( this );\n\n\t\tconst children = this.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].getObjectsByProperty( name, value, result );\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n\tgetWorldPosition( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\treturn target.setFromMatrixPosition( this.matrixWorld );\n\n\t}\n\n\tgetWorldQuaternion( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\tthis.matrixWorld.decompose( _position$3, target, _scale$2 );\n\n\t\treturn target;\n\n\t}\n\n\tgetWorldScale( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\tthis.matrixWorld.decompose( _position$3, _quaternion$2, target );\n\n\t\treturn target;\n\n\t}\n\n\tgetWorldDirection( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\tconst e = this.matrixWorld.elements;\n\n\t\treturn target.set( e[ 8 ], e[ 9 ], e[ 10 ] ).normalize();\n\n\t}\n\n\traycast( /* raycaster, intersects */ ) {}\n\n\ttraverse( callback ) {\n\n\t\tcallback( this );\n\n\t\tconst children = this.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].traverse( callback );\n\n\t\t}\n\n\t}\n\n\ttraverseVisible( callback ) {\n\n\t\tif ( this.visible === false ) return;\n\n\t\tcallback( this );\n\n\t\tconst children = this.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].traverseVisible( callback );\n\n\t\t}\n\n\t}\n\n\ttraverseAncestors( callback ) {\n\n\t\tconst parent = this.parent;\n\n\t\tif ( parent !== null ) {\n\n\t\t\tcallback( parent );\n\n\t\t\tparent.traverseAncestors( callback );\n\n\t\t}\n\n\t}\n\n\tupdateMatrix() {\n\n\t\tthis.matrix.compose( this.position, this.quaternion, this.scale );\n\n\t\tthis.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tif ( this.matrixWorldNeedsUpdate || force ) {\n\n\t\t\tif ( this.matrixWorldAutoUpdate === true ) {\n\n\t\t\t\tif ( this.parent === null ) {\n\n\t\t\t\t\tthis.matrixWorld.copy( this.matrix );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.matrixWorldNeedsUpdate = false;\n\n\t\t\tforce = true;\n\n\t\t}\n\n\t\t// make sure descendants are updated if required\n\n\t\tconst children = this.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tconst child = children[ i ];\n\n\t\t\tchild.updateMatrixWorld( force );\n\n\t\t}\n\n\t}\n\n\tupdateWorldMatrix( updateParents, updateChildren ) {\n\n\t\tconst parent = this.parent;\n\n\t\tif ( updateParents === true && parent !== null ) {\n\n\t\t\tparent.updateWorldMatrix( true, false );\n\n\t\t}\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tif ( this.matrixWorldAutoUpdate === true ) {\n\n\t\t\tif ( this.parent === null ) {\n\n\t\t\t\tthis.matrixWorld.copy( this.matrix );\n\n\t\t\t} else {\n\n\t\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// make sure descendants are updated\n\n\t\tif ( updateChildren === true ) {\n\n\t\t\tconst children = this.children;\n\n\t\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tconst child = children[ i ];\n\n\t\t\t\tchild.updateWorldMatrix( false, true );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\t// meta is a string when called from JSON.stringify\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tconst output = {};\n\n\t\t// meta is a hash used to collect geometries, materials.\n\t\t// not providing it implies that this is the root object\n\t\t// being serialized.\n\t\tif ( isRootObject ) {\n\n\t\t\t// initialize meta obj\n\t\t\tmeta = {\n\t\t\t\tgeometries: {},\n\t\t\t\tmaterials: {},\n\t\t\t\ttextures: {},\n\t\t\t\timages: {},\n\t\t\t\tshapes: {},\n\t\t\t\tskeletons: {},\n\t\t\t\tanimations: {},\n\t\t\t\tnodes: {}\n\t\t\t};\n\n\t\t\toutput.metadata = {\n\t\t\t\tversion: 4.6,\n\t\t\t\ttype: 'Object',\n\t\t\t\tgenerator: 'Object3D.toJSON'\n\t\t\t};\n\n\t\t}\n\n\t\t// standard Object3D serialization\n\n\t\tconst object = {};\n\n\t\tobject.uuid = this.uuid;\n\t\tobject.type = this.type;\n\n\t\tif ( this.name !== '' ) object.name = this.name;\n\t\tif ( this.castShadow === true ) object.castShadow = true;\n\t\tif ( this.receiveShadow === true ) object.receiveShadow = true;\n\t\tif ( this.visible === false ) object.visible = false;\n\t\tif ( this.frustumCulled === false ) object.frustumCulled = false;\n\t\tif ( this.renderOrder !== 0 ) object.renderOrder = this.renderOrder;\n\t\tif ( Object.keys( this.userData ).length > 0 ) object.userData = this.userData;\n\n\t\tobject.layers = this.layers.mask;\n\t\tobject.matrix = this.matrix.toArray();\n\t\tobject.up = this.up.toArray();\n\n\t\tif ( this.matrixAutoUpdate === false ) object.matrixAutoUpdate = false;\n\n\t\t// object specific properties\n\n\t\tif ( this.isInstancedMesh ) {\n\n\t\t\tobject.type = 'InstancedMesh';\n\t\t\tobject.count = this.count;\n\t\t\tobject.instanceMatrix = this.instanceMatrix.toJSON();\n\t\t\tif ( this.instanceColor !== null ) object.instanceColor = this.instanceColor.toJSON();\n\n\t\t}\n\n\t\tif ( this.isBatchedMesh ) {\n\n\t\t\tobject.type = 'BatchedMesh';\n\t\t\tobject.perObjectFrustumCulled = this.perObjectFrustumCulled;\n\t\t\tobject.sortObjects = this.sortObjects;\n\n\t\t\tobject.drawRanges = this._drawRanges;\n\t\t\tobject.reservedRanges = this._reservedRanges;\n\n\t\t\tobject.visibility = this._visibility;\n\t\t\tobject.active = this._active;\n\t\t\tobject.bounds = this._bounds.map( bound => ( {\n\t\t\t\tboxInitialized: bound.boxInitialized,\n\t\t\t\tboxMin: bound.box.min.toArray(),\n\t\t\t\tboxMax: bound.box.max.toArray(),\n\n\t\t\t\tsphereInitialized: bound.sphereInitialized,\n\t\t\t\tsphereRadius: bound.sphere.radius,\n\t\t\t\tsphereCenter: bound.sphere.center.toArray()\n\t\t\t} ) );\n\n\t\t\tobject.maxInstanceCount = this._maxInstanceCount;\n\t\t\tobject.maxVertexCount = this._maxVertexCount;\n\t\t\tobject.maxIndexCount = this._maxIndexCount;\n\n\t\t\tobject.geometryInitialized = this._geometryInitialized;\n\t\t\tobject.geometryCount = this._geometryCount;\n\n\t\t\tobject.matricesTexture = this._matricesTexture.toJSON( meta );\n\n\t\t\tif ( this._colorsTexture !== null ) object.colorsTexture = this._colorsTexture.toJSON( meta );\n\n\t\t\tif ( this.boundingSphere !== null ) {\n\n\t\t\t\tobject.boundingSphere = {\n\t\t\t\t\tcenter: object.boundingSphere.center.toArray(),\n\t\t\t\t\tradius: object.boundingSphere.radius\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\tif ( this.boundingBox !== null ) {\n\n\t\t\t\tobject.boundingBox = {\n\t\t\t\t\tmin: object.boundingBox.min.toArray(),\n\t\t\t\t\tmax: object.boundingBox.max.toArray()\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tfunction serialize( library, element ) {\n\n\t\t\tif ( library[ element.uuid ] === undefined ) {\n\n\t\t\t\tlibrary[ element.uuid ] = element.toJSON( meta );\n\n\t\t\t}\n\n\t\t\treturn element.uuid;\n\n\t\t}\n\n\t\tif ( this.isScene ) {\n\n\t\t\tif ( this.background ) {\n\n\t\t\t\tif ( this.background.isColor ) {\n\n\t\t\t\t\tobject.background = this.background.toJSON();\n\n\t\t\t\t} else if ( this.background.isTexture ) {\n\n\t\t\t\t\tobject.background = this.background.toJSON( meta ).uuid;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( this.environment && this.environment.isTexture && this.environment.isRenderTargetTexture !== true ) {\n\n\t\t\t\tobject.environment = this.environment.toJSON( meta ).uuid;\n\n\t\t\t}\n\n\t\t} else if ( this.isMesh || this.isLine || this.isPoints ) {\n\n\t\t\tobject.geometry = serialize( meta.geometries, this.geometry );\n\n\t\t\tconst parameters = this.geometry.parameters;\n\n\t\t\tif ( parameters !== undefined && parameters.shapes !== undefined ) {\n\n\t\t\t\tconst shapes = parameters.shapes;\n\n\t\t\t\tif ( Array.isArray( shapes ) ) {\n\n\t\t\t\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\t\t\t\tconst shape = shapes[ i ];\n\n\t\t\t\t\t\tserialize( meta.shapes, shape );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tserialize( meta.shapes, shapes );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.isSkinnedMesh ) {\n\n\t\t\tobject.bindMode = this.bindMode;\n\t\t\tobject.bindMatrix = this.bindMatrix.toArray();\n\n\t\t\tif ( this.skeleton !== undefined ) {\n\n\t\t\t\tserialize( meta.skeletons, this.skeleton );\n\n\t\t\t\tobject.skeleton = this.skeleton.uuid;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.material !== undefined ) {\n\n\t\t\tif ( Array.isArray( this.material ) ) {\n\n\t\t\t\tconst uuids = [];\n\n\t\t\t\tfor ( let i = 0, l = this.material.length; i < l; i ++ ) {\n\n\t\t\t\t\tuuids.push( serialize( meta.materials, this.material[ i ] ) );\n\n\t\t\t\t}\n\n\t\t\t\tobject.material = uuids;\n\n\t\t\t} else {\n\n\t\t\t\tobject.material = serialize( meta.materials, this.material );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.children.length > 0 ) {\n\n\t\t\tobject.children = [];\n\n\t\t\tfor ( let i = 0; i < this.children.length; i ++ ) {\n\n\t\t\t\tobject.children.push( this.children[ i ].toJSON( meta ).object );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.animations.length > 0 ) {\n\n\t\t\tobject.animations = [];\n\n\t\t\tfor ( let i = 0; i < this.animations.length; i ++ ) {\n\n\t\t\t\tconst animation = this.animations[ i ];\n\n\t\t\t\tobject.animations.push( serialize( meta.animations, animation ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( isRootObject ) {\n\n\t\t\tconst geometries = extractFromCache( meta.geometries );\n\t\t\tconst materials = extractFromCache( meta.materials );\n\t\t\tconst textures = extractFromCache( meta.textures );\n\t\t\tconst images = extractFromCache( meta.images );\n\t\t\tconst shapes = extractFromCache( meta.shapes );\n\t\t\tconst skeletons = extractFromCache( meta.skeletons );\n\t\t\tconst animations = extractFromCache( meta.animations );\n\t\t\tconst nodes = extractFromCache( meta.nodes );\n\n\t\t\tif ( geometries.length > 0 ) output.geometries = geometries;\n\t\t\tif ( materials.length > 0 ) output.materials = materials;\n\t\t\tif ( textures.length > 0 ) output.textures = textures;\n\t\t\tif ( images.length > 0 ) output.images = images;\n\t\t\tif ( shapes.length > 0 ) output.shapes = shapes;\n\t\t\tif ( skeletons.length > 0 ) output.skeletons = skeletons;\n\t\t\tif ( animations.length > 0 ) output.animations = animations;\n\t\t\tif ( nodes.length > 0 ) output.nodes = nodes;\n\n\t\t}\n\n\t\toutput.object = object;\n\n\t\treturn output;\n\n\t\t// extract data from the cache hash\n\t\t// remove metadata on each item\n\t\t// and return as array\n\t\tfunction extractFromCache( cache ) {\n\n\t\t\tconst values = [];\n\t\t\tfor ( const key in cache ) {\n\n\t\t\t\tconst data = cache[ key ];\n\t\t\t\tdelete data.metadata;\n\t\t\t\tvalues.push( data );\n\n\t\t\t}\n\n\t\t\treturn values;\n\n\t\t}\n\n\t}\n\n\tclone( recursive ) {\n\n\t\treturn new this.constructor().copy( this, recursive );\n\n\t}\n\n\tcopy( source, recursive = true ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.up.copy( source.up );\n\n\t\tthis.position.copy( source.position );\n\t\tthis.rotation.order = source.rotation.order;\n\t\tthis.quaternion.copy( source.quaternion );\n\t\tthis.scale.copy( source.scale );\n\n\t\tthis.matrix.copy( source.matrix );\n\t\tthis.matrixWorld.copy( source.matrixWorld );\n\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\n\t\tthis.matrixWorldAutoUpdate = source.matrixWorldAutoUpdate;\n\t\tthis.matrixWorldNeedsUpdate = source.matrixWorldNeedsUpdate;\n\n\t\tthis.layers.mask = source.layers.mask;\n\t\tthis.visible = source.visible;\n\n\t\tthis.castShadow = source.castShadow;\n\t\tthis.receiveShadow = source.receiveShadow;\n\n\t\tthis.frustumCulled = source.frustumCulled;\n\t\tthis.renderOrder = source.renderOrder;\n\n\t\tthis.animations = source.animations.slice();\n\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\tif ( recursive === true ) {\n\n\t\t\tfor ( let i = 0; i < source.children.length; i ++ ) {\n\n\t\t\t\tconst child = source.children[ i ];\n\t\t\t\tthis.add( child.clone() );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nObject3D.DEFAULT_UP = /*@__PURE__*/ new Vector3( 0, 1, 0 );\nObject3D.DEFAULT_MATRIX_AUTO_UPDATE = true;\nObject3D.DEFAULT_MATRIX_WORLD_AUTO_UPDATE = true;\n\nconst _v0$1 = /*@__PURE__*/ new Vector3();\nconst _v1$3 = /*@__PURE__*/ new Vector3();\nconst _v2$2 = /*@__PURE__*/ new Vector3();\nconst _v3$2 = /*@__PURE__*/ new Vector3();\n\nconst _vab = /*@__PURE__*/ new Vector3();\nconst _vac = /*@__PURE__*/ new Vector3();\nconst _vbc = /*@__PURE__*/ new Vector3();\nconst _vap = /*@__PURE__*/ new Vector3();\nconst _vbp = /*@__PURE__*/ new Vector3();\nconst _vcp = /*@__PURE__*/ new Vector3();\n\nclass Triangle {\n\n\tconstructor( a = new Vector3(), b = new Vector3(), c = new Vector3() ) {\n\n\t\tthis.a = a;\n\t\tthis.b = b;\n\t\tthis.c = c;\n\n\t}\n\n\tstatic getNormal( a, b, c, target ) {\n\n\t\ttarget.subVectors( c, b );\n\t\t_v0$1.subVectors( a, b );\n\t\ttarget.cross( _v0$1 );\n\n\t\tconst targetLengthSq = target.lengthSq();\n\t\tif ( targetLengthSq > 0 ) {\n\n\t\t\treturn target.multiplyScalar( 1 / Math.sqrt( targetLengthSq ) );\n\n\t\t}\n\n\t\treturn target.set( 0, 0, 0 );\n\n\t}\n\n\t// static/instance method to calculate barycentric coordinates\n\t// based on: http://www.blackpawn.com/texts/pointinpoly/default.html\n\tstatic getBarycoord( point, a, b, c, target ) {\n\n\t\t_v0$1.subVectors( c, a );\n\t\t_v1$3.subVectors( b, a );\n\t\t_v2$2.subVectors( point, a );\n\n\t\tconst dot00 = _v0$1.dot( _v0$1 );\n\t\tconst dot01 = _v0$1.dot( _v1$3 );\n\t\tconst dot02 = _v0$1.dot( _v2$2 );\n\t\tconst dot11 = _v1$3.dot( _v1$3 );\n\t\tconst dot12 = _v1$3.dot( _v2$2 );\n\n\t\tconst denom = ( dot00 * dot11 - dot01 * dot01 );\n\n\t\t// collinear or singular triangle\n\t\tif ( denom === 0 ) {\n\n\t\t\ttarget.set( 0, 0, 0 );\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst invDenom = 1 / denom;\n\t\tconst u = ( dot11 * dot02 - dot01 * dot12 ) * invDenom;\n\t\tconst v = ( dot00 * dot12 - dot01 * dot02 ) * invDenom;\n\n\t\t// barycentric coordinates must always sum to 1\n\t\treturn target.set( 1 - u - v, v, u );\n\n\t}\n\n\tstatic containsPoint( point, a, b, c ) {\n\n\t\t// if the triangle is degenerate then we can't contain a point\n\t\tif ( this.getBarycoord( point, a, b, c, _v3$2 ) === null ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\treturn ( _v3$2.x >= 0 ) && ( _v3$2.y >= 0 ) && ( ( _v3$2.x + _v3$2.y ) <= 1 );\n\n\t}\n\n\tstatic getInterpolation( point, p1, p2, p3, v1, v2, v3, target ) {\n\n\t\tif ( this.getBarycoord( point, p1, p2, p3, _v3$2 ) === null ) {\n\n\t\t\ttarget.x = 0;\n\t\t\ttarget.y = 0;\n\t\t\tif ( 'z' in target ) target.z = 0;\n\t\t\tif ( 'w' in target ) target.w = 0;\n\t\t\treturn null;\n\n\t\t}\n\n\t\ttarget.setScalar( 0 );\n\t\ttarget.addScaledVector( v1, _v3$2.x );\n\t\ttarget.addScaledVector( v2, _v3$2.y );\n\t\ttarget.addScaledVector( v3, _v3$2.z );\n\n\t\treturn target;\n\n\t}\n\n\tstatic isFrontFacing( a, b, c, direction ) {\n\n\t\t_v0$1.subVectors( c, b );\n\t\t_v1$3.subVectors( a, b );\n\n\t\t// strictly front facing\n\t\treturn ( _v0$1.cross( _v1$3 ).dot( direction ) < 0 ) ? true : false;\n\n\t}\n\n\tset( a, b, c ) {\n\n\t\tthis.a.copy( a );\n\t\tthis.b.copy( b );\n\t\tthis.c.copy( c );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPointsAndIndices( points, i0, i1, i2 ) {\n\n\t\tthis.a.copy( points[ i0 ] );\n\t\tthis.b.copy( points[ i1 ] );\n\t\tthis.c.copy( points[ i2 ] );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromAttributeAndIndices( attribute, i0, i1, i2 ) {\n\n\t\tthis.a.fromBufferAttribute( attribute, i0 );\n\t\tthis.b.fromBufferAttribute( attribute, i1 );\n\t\tthis.c.fromBufferAttribute( attribute, i2 );\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( triangle ) {\n\n\t\tthis.a.copy( triangle.a );\n\t\tthis.b.copy( triangle.b );\n\t\tthis.c.copy( triangle.c );\n\n\t\treturn this;\n\n\t}\n\n\tgetArea() {\n\n\t\t_v0$1.subVectors( this.c, this.b );\n\t\t_v1$3.subVectors( this.a, this.b );\n\n\t\treturn _v0$1.cross( _v1$3 ).length() * 0.5;\n\n\t}\n\n\tgetMidpoint( target ) {\n\n\t\treturn target.addVectors( this.a, this.b ).add( this.c ).multiplyScalar( 1 / 3 );\n\n\t}\n\n\tgetNormal( target ) {\n\n\t\treturn Triangle.getNormal( this.a, this.b, this.c, target );\n\n\t}\n\n\tgetPlane( target ) {\n\n\t\treturn target.setFromCoplanarPoints( this.a, this.b, this.c );\n\n\t}\n\n\tgetBarycoord( point, target ) {\n\n\t\treturn Triangle.getBarycoord( point, this.a, this.b, this.c, target );\n\n\t}\n\n\tgetInterpolation( point, v1, v2, v3, target ) {\n\n\t\treturn Triangle.getInterpolation( point, this.a, this.b, this.c, v1, v2, v3, target );\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn Triangle.containsPoint( point, this.a, this.b, this.c );\n\n\t}\n\n\tisFrontFacing( direction ) {\n\n\t\treturn Triangle.isFrontFacing( this.a, this.b, this.c, direction );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn box.intersectsTriangle( this );\n\n\t}\n\n\tclosestPointToPoint( p, target ) {\n\n\t\tconst a = this.a, b = this.b, c = this.c;\n\t\tlet v, w;\n\n\t\t// algorithm thanks to Real-Time Collision Detection by Christer Ericson,\n\t\t// published by Morgan Kaufmann Publishers, (c) 2005 Elsevier Inc.,\n\t\t// under the accompanying license; see chapter 5.1.5 for detailed explanation.\n\t\t// basically, we're distinguishing which of the voronoi regions of the triangle\n\t\t// the point lies in with the minimum amount of redundant computation.\n\n\t\t_vab.subVectors( b, a );\n\t\t_vac.subVectors( c, a );\n\t\t_vap.subVectors( p, a );\n\t\tconst d1 = _vab.dot( _vap );\n\t\tconst d2 = _vac.dot( _vap );\n\t\tif ( d1 <= 0 && d2 <= 0 ) {\n\n\t\t\t// vertex region of A; barycentric coords (1, 0, 0)\n\t\t\treturn target.copy( a );\n\n\t\t}\n\n\t\t_vbp.subVectors( p, b );\n\t\tconst d3 = _vab.dot( _vbp );\n\t\tconst d4 = _vac.dot( _vbp );\n\t\tif ( d3 >= 0 && d4 <= d3 ) {\n\n\t\t\t// vertex region of B; barycentric coords (0, 1, 0)\n\t\t\treturn target.copy( b );\n\n\t\t}\n\n\t\tconst vc = d1 * d4 - d3 * d2;\n\t\tif ( vc <= 0 && d1 >= 0 && d3 <= 0 ) {\n\n\t\t\tv = d1 / ( d1 - d3 );\n\t\t\t// edge region of AB; barycentric coords (1-v, v, 0)\n\t\t\treturn target.copy( a ).addScaledVector( _vab, v );\n\n\t\t}\n\n\t\t_vcp.subVectors( p, c );\n\t\tconst d5 = _vab.dot( _vcp );\n\t\tconst d6 = _vac.dot( _vcp );\n\t\tif ( d6 >= 0 && d5 <= d6 ) {\n\n\t\t\t// vertex region of C; barycentric coords (0, 0, 1)\n\t\t\treturn target.copy( c );\n\n\t\t}\n\n\t\tconst vb = d5 * d2 - d1 * d6;\n\t\tif ( vb <= 0 && d2 >= 0 && d6 <= 0 ) {\n\n\t\t\tw = d2 / ( d2 - d6 );\n\t\t\t// edge region of AC; barycentric coords (1-w, 0, w)\n\t\t\treturn target.copy( a ).addScaledVector( _vac, w );\n\n\t\t}\n\n\t\tconst va = d3 * d6 - d5 * d4;\n\t\tif ( va <= 0 && ( d4 - d3 ) >= 0 && ( d5 - d6 ) >= 0 ) {\n\n\t\t\t_vbc.subVectors( c, b );\n\t\t\tw = ( d4 - d3 ) / ( ( d4 - d3 ) + ( d5 - d6 ) );\n\t\t\t// edge region of BC; barycentric coords (0, 1-w, w)\n\t\t\treturn target.copy( b ).addScaledVector( _vbc, w ); // edge region of BC\n\n\t\t}\n\n\t\t// face region\n\t\tconst denom = 1 / ( va + vb + vc );\n\t\t// u = va * denom\n\t\tv = vb * denom;\n\t\tw = vc * denom;\n\n\t\treturn target.copy( a ).addScaledVector( _vab, v ).addScaledVector( _vac, w );\n\n\t}\n\n\tequals( triangle ) {\n\n\t\treturn triangle.a.equals( this.a ) && triangle.b.equals( this.b ) && triangle.c.equals( this.c );\n\n\t}\n\n}\n\nconst _colorKeywords = { 'aliceblue': 0xF0F8FF, 'antiquewhite': 0xFAEBD7, 'aqua': 0x00FFFF, 'aquamarine': 0x7FFFD4, 'azure': 0xF0FFFF,\n\t'beige': 0xF5F5DC, 'bisque': 0xFFE4C4, 'black': 0x000000, 'blanchedalmond': 0xFFEBCD, 'blue': 0x0000FF, 'blueviolet': 0x8A2BE2,\n\t'brown': 0xA52A2A, 'burlywood': 0xDEB887, 'cadetblue': 0x5F9EA0, 'chartreuse': 0x7FFF00, 'chocolate': 0xD2691E, 'coral': 0xFF7F50,\n\t'cornflowerblue': 0x6495ED, 'cornsilk': 0xFFF8DC, 'crimson': 0xDC143C, 'cyan': 0x00FFFF, 'darkblue': 0x00008B, 'darkcyan': 0x008B8B,\n\t'darkgoldenrod': 0xB8860B, 'darkgray': 0xA9A9A9, 'darkgreen': 0x006400, 'darkgrey': 0xA9A9A9, 'darkkhaki': 0xBDB76B, 'darkmagenta': 0x8B008B,\n\t'darkolivegreen': 0x556B2F, 'darkorange': 0xFF8C00, 'darkorchid': 0x9932CC, 'darkred': 0x8B0000, 'darksalmon': 0xE9967A, 'darkseagreen': 0x8FBC8F,\n\t'darkslateblue': 0x483D8B, 'darkslategray': 0x2F4F4F, 'darkslategrey': 0x2F4F4F, 'darkturquoise': 0x00CED1, 'darkviolet': 0x9400D3,\n\t'deeppink': 0xFF1493, 'deepskyblue': 0x00BFFF, 'dimgray': 0x696969, 'dimgrey': 0x696969, 'dodgerblue': 0x1E90FF, 'firebrick': 0xB22222,\n\t'floralwhite': 0xFFFAF0, 'forestgreen': 0x228B22, 'fuchsia': 0xFF00FF, 'gainsboro': 0xDCDCDC, 'ghostwhite': 0xF8F8FF, 'gold': 0xFFD700,\n\t'goldenrod': 0xDAA520, 'gray': 0x808080, 'green': 0x008000, 'greenyellow': 0xADFF2F, 'grey': 0x808080, 'honeydew': 0xF0FFF0, 'hotpink': 0xFF69B4,\n\t'indianred': 0xCD5C5C, 'indigo': 0x4B0082, 'ivory': 0xFFFFF0, 'khaki': 0xF0E68C, 'lavender': 0xE6E6FA, 'lavenderblush': 0xFFF0F5, 'lawngreen': 0x7CFC00,\n\t'lemonchiffon': 0xFFFACD, 'lightblue': 0xADD8E6, 'lightcoral': 0xF08080, 'lightcyan': 0xE0FFFF, 'lightgoldenrodyellow': 0xFAFAD2, 'lightgray': 0xD3D3D3,\n\t'lightgreen': 0x90EE90, 'lightgrey': 0xD3D3D3, 'lightpink': 0xFFB6C1, 'lightsalmon': 0xFFA07A, 'lightseagreen': 0x20B2AA, 'lightskyblue': 0x87CEFA,\n\t'lightslategray': 0x778899, 'lightslategrey': 0x778899, 'lightsteelblue': 0xB0C4DE, 'lightyellow': 0xFFFFE0, 'lime': 0x00FF00, 'limegreen': 0x32CD32,\n\t'linen': 0xFAF0E6, 'magenta': 0xFF00FF, 'maroon': 0x800000, 'mediumaquamarine': 0x66CDAA, 'mediumblue': 0x0000CD, 'mediumorchid': 0xBA55D3,\n\t'mediumpurple': 0x9370DB, 'mediumseagreen': 0x3CB371, 'mediumslateblue': 0x7B68EE, 'mediumspringgreen': 0x00FA9A, 'mediumturquoise': 0x48D1CC,\n\t'mediumvioletred': 0xC71585, 'midnightblue': 0x191970, 'mintcream': 0xF5FFFA, 'mistyrose': 0xFFE4E1, 'moccasin': 0xFFE4B5, 'navajowhite': 0xFFDEAD,\n\t'navy': 0x000080, 'oldlace': 0xFDF5E6, 'olive': 0x808000, 'olivedrab': 0x6B8E23, 'orange': 0xFFA500, 'orangered': 0xFF4500, 'orchid': 0xDA70D6,\n\t'palegoldenrod': 0xEEE8AA, 'palegreen': 0x98FB98, 'paleturquoise': 0xAFEEEE, 'palevioletred': 0xDB7093, 'papayawhip': 0xFFEFD5, 'peachpuff': 0xFFDAB9,\n\t'peru': 0xCD853F, 'pink': 0xFFC0CB, 'plum': 0xDDA0DD, 'powderblue': 0xB0E0E6, 'purple': 0x800080, 'rebeccapurple': 0x663399, 'red': 0xFF0000, 'rosybrown': 0xBC8F8F,\n\t'royalblue': 0x4169E1, 'saddlebrown': 0x8B4513, 'salmon': 0xFA8072, 'sandybrown': 0xF4A460, 'seagreen': 0x2E8B57, 'seashell': 0xFFF5EE,\n\t'sienna': 0xA0522D, 'silver': 0xC0C0C0, 'skyblue': 0x87CEEB, 'slateblue': 0x6A5ACD, 'slategray': 0x708090, 'slategrey': 0x708090, 'snow': 0xFFFAFA,\n\t'springgreen': 0x00FF7F, 'steelblue': 0x4682B4, 'tan': 0xD2B48C, 'teal': 0x008080, 'thistle': 0xD8BFD8, 'tomato': 0xFF6347, 'turquoise': 0x40E0D0,\n\t'violet': 0xEE82EE, 'wheat': 0xF5DEB3, 'white': 0xFFFFFF, 'whitesmoke': 0xF5F5F5, 'yellow': 0xFFFF00, 'yellowgreen': 0x9ACD32 };\n\nconst _hslA = { h: 0, s: 0, l: 0 };\nconst _hslB = { h: 0, s: 0, l: 0 };\n\nfunction hue2rgb( p, q, t ) {\n\n\tif ( t < 0 ) t += 1;\n\tif ( t > 1 ) t -= 1;\n\tif ( t < 1 / 6 ) return p + ( q - p ) * 6 * t;\n\tif ( t < 1 / 2 ) return q;\n\tif ( t < 2 / 3 ) return p + ( q - p ) * 6 * ( 2 / 3 - t );\n\treturn p;\n\n}\n\nclass Color {\n\n\tconstructor( r, g, b ) {\n\n\t\tthis.isColor = true;\n\n\t\tthis.r = 1;\n\t\tthis.g = 1;\n\t\tthis.b = 1;\n\n\t\treturn this.set( r, g, b );\n\n\t}\n\n\tset( r, g, b ) {\n\n\t\tif ( g === undefined && b === undefined ) {\n\n\t\t\t// r is THREE.Color, hex or string\n\n\t\t\tconst value = r;\n\n\t\t\tif ( value && value.isColor ) {\n\n\t\t\t\tthis.copy( value );\n\n\t\t\t} else if ( typeof value === 'number' ) {\n\n\t\t\t\tthis.setHex( value );\n\n\t\t\t} else if ( typeof value === 'string' ) {\n\n\t\t\t\tthis.setStyle( value );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tthis.setRGB( r, g, b );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.r = scalar;\n\t\tthis.g = scalar;\n\t\tthis.b = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetHex( hex, colorSpace = SRGBColorSpace ) {\n\n\t\thex = Math.floor( hex );\n\n\t\tthis.r = ( hex >> 16 & 255 ) / 255;\n\t\tthis.g = ( hex >> 8 & 255 ) / 255;\n\t\tthis.b = ( hex & 255 ) / 255;\n\n\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\treturn this;\n\n\t}\n\n\tsetRGB( r, g, b, colorSpace = ColorManagement.workingColorSpace ) {\n\n\t\tthis.r = r;\n\t\tthis.g = g;\n\t\tthis.b = b;\n\n\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\treturn this;\n\n\t}\n\n\tsetHSL( h, s, l, colorSpace = ColorManagement.workingColorSpace ) {\n\n\t\t// h,s,l ranges are in 0.0 - 1.0\n\t\th = euclideanModulo( h, 1 );\n\t\ts = clamp( s, 0, 1 );\n\t\tl = clamp( l, 0, 1 );\n\n\t\tif ( s === 0 ) {\n\n\t\t\tthis.r = this.g = this.b = l;\n\n\t\t} else {\n\n\t\t\tconst p = l <= 0.5 ? l * ( 1 + s ) : l + s - ( l * s );\n\t\t\tconst q = ( 2 * l ) - p;\n\n\t\t\tthis.r = hue2rgb( q, p, h + 1 / 3 );\n\t\t\tthis.g = hue2rgb( q, p, h );\n\t\t\tthis.b = hue2rgb( q, p, h - 1 / 3 );\n\n\t\t}\n\n\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\treturn this;\n\n\t}\n\n\tsetStyle( style, colorSpace = SRGBColorSpace ) {\n\n\t\tfunction handleAlpha( string ) {\n\n\t\t\tif ( string === undefined ) return;\n\n\t\t\tif ( parseFloat( string ) < 1 ) {\n\n\t\t\t\tconsole.warn( 'THREE.Color: Alpha component of ' + style + ' will be ignored.' );\n\n\t\t\t}\n\n\t\t}\n\n\n\t\tlet m;\n\n\t\tif ( m = /^(\\w+)\\(([^\\)]*)\\)/.exec( style ) ) {\n\n\t\t\t// rgb / hsl\n\n\t\t\tlet color;\n\t\t\tconst name = m[ 1 ];\n\t\t\tconst components = m[ 2 ];\n\n\t\t\tswitch ( name ) {\n\n\t\t\t\tcase 'rgb':\n\t\t\t\tcase 'rgba':\n\n\t\t\t\t\tif ( color = /^\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// rgb(255,0,0) rgba(255,0,0,0.5)\n\n\t\t\t\t\t\thandleAlpha( color[ 4 ] );\n\n\t\t\t\t\t\treturn this.setRGB(\n\t\t\t\t\t\t\tMath.min( 255, parseInt( color[ 1 ], 10 ) ) / 255,\n\t\t\t\t\t\t\tMath.min( 255, parseInt( color[ 2 ], 10 ) ) / 255,\n\t\t\t\t\t\t\tMath.min( 255, parseInt( color[ 3 ], 10 ) ) / 255,\n\t\t\t\t\t\t\tcolorSpace\n\t\t\t\t\t\t);\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( color = /^\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// rgb(100%,0%,0%) rgba(100%,0%,0%,0.5)\n\n\t\t\t\t\t\thandleAlpha( color[ 4 ] );\n\n\t\t\t\t\t\treturn this.setRGB(\n\t\t\t\t\t\t\tMath.min( 100, parseInt( color[ 1 ], 10 ) ) / 100,\n\t\t\t\t\t\t\tMath.min( 100, parseInt( color[ 2 ], 10 ) ) / 100,\n\t\t\t\t\t\t\tMath.min( 100, parseInt( color[ 3 ], 10 ) ) / 100,\n\t\t\t\t\t\t\tcolorSpace\n\t\t\t\t\t\t);\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'hsl':\n\t\t\t\tcase 'hsla':\n\n\t\t\t\t\tif ( color = /^\\s*(\\d*\\.?\\d+)\\s*,\\s*(\\d*\\.?\\d+)\\%\\s*,\\s*(\\d*\\.?\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// hsl(120,50%,50%) hsla(120,50%,50%,0.5)\n\n\t\t\t\t\t\thandleAlpha( color[ 4 ] );\n\n\t\t\t\t\t\treturn this.setHSL(\n\t\t\t\t\t\t\tparseFloat( color[ 1 ] ) / 360,\n\t\t\t\t\t\t\tparseFloat( color[ 2 ] ) / 100,\n\t\t\t\t\t\t\tparseFloat( color[ 3 ] ) / 100,\n\t\t\t\t\t\t\tcolorSpace\n\t\t\t\t\t\t);\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tconsole.warn( 'THREE.Color: Unknown color model ' + style );\n\n\t\t\t}\n\n\t\t} else if ( m = /^\\#([A-Fa-f\\d]+)$/.exec( style ) ) {\n\n\t\t\t// hex color\n\n\t\t\tconst hex = m[ 1 ];\n\t\t\tconst size = hex.length;\n\n\t\t\tif ( size === 3 ) {\n\n\t\t\t\t// #ff0\n\t\t\t\treturn this.setRGB(\n\t\t\t\t\tparseInt( hex.charAt( 0 ), 16 ) / 15,\n\t\t\t\t\tparseInt( hex.charAt( 1 ), 16 ) / 15,\n\t\t\t\t\tparseInt( hex.charAt( 2 ), 16 ) / 15,\n\t\t\t\t\tcolorSpace\n\t\t\t\t);\n\n\t\t\t} else if ( size === 6 ) {\n\n\t\t\t\t// #ff0000\n\t\t\t\treturn this.setHex( parseInt( hex, 16 ), colorSpace );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.Color: Invalid hex color ' + style );\n\n\t\t\t}\n\n\t\t} else if ( style && style.length > 0 ) {\n\n\t\t\treturn this.setColorName( style, colorSpace );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetColorName( style, colorSpace = SRGBColorSpace ) {\n\n\t\t// color keywords\n\t\tconst hex = _colorKeywords[ style.toLowerCase() ];\n\n\t\tif ( hex !== undefined ) {\n\n\t\t\t// red\n\t\t\tthis.setHex( hex, colorSpace );\n\n\t\t} else {\n\n\t\t\t// unknown color\n\t\t\tconsole.warn( 'THREE.Color: Unknown color ' + style );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.r, this.g, this.b );\n\n\t}\n\n\tcopy( color ) {\n\n\t\tthis.r = color.r;\n\t\tthis.g = color.g;\n\t\tthis.b = color.b;\n\n\t\treturn this;\n\n\t}\n\n\tcopySRGBToLinear( color ) {\n\n\t\tthis.r = SRGBToLinear( color.r );\n\t\tthis.g = SRGBToLinear( color.g );\n\t\tthis.b = SRGBToLinear( color.b );\n\n\t\treturn this;\n\n\t}\n\n\tcopyLinearToSRGB( color ) {\n\n\t\tthis.r = LinearToSRGB( color.r );\n\t\tthis.g = LinearToSRGB( color.g );\n\t\tthis.b = LinearToSRGB( color.b );\n\n\t\treturn this;\n\n\t}\n\n\tconvertSRGBToLinear() {\n\n\t\tthis.copySRGBToLinear( this );\n\n\t\treturn this;\n\n\t}\n\n\tconvertLinearToSRGB() {\n\n\t\tthis.copyLinearToSRGB( this );\n\n\t\treturn this;\n\n\t}\n\n\tgetHex( colorSpace = SRGBColorSpace ) {\n\n\t\tColorManagement.fromWorkingColorSpace( _color.copy( this ), colorSpace );\n\n\t\treturn Math.round( clamp( _color.r * 255, 0, 255 ) ) * 65536 + Math.round( clamp( _color.g * 255, 0, 255 ) ) * 256 + Math.round( clamp( _color.b * 255, 0, 255 ) );\n\n\t}\n\n\tgetHexString( colorSpace = SRGBColorSpace ) {\n\n\t\treturn ( '000000' + this.getHex( colorSpace ).toString( 16 ) ).slice( - 6 );\n\n\t}\n\n\tgetHSL( target, colorSpace = ColorManagement.workingColorSpace ) {\n\n\t\t// h,s,l ranges are in 0.0 - 1.0\n\n\t\tColorManagement.fromWorkingColorSpace( _color.copy( this ), colorSpace );\n\n\t\tconst r = _color.r, g = _color.g, b = _color.b;\n\n\t\tconst max = Math.max( r, g, b );\n\t\tconst min = Math.min( r, g, b );\n\n\t\tlet hue, saturation;\n\t\tconst lightness = ( min + max ) / 2.0;\n\n\t\tif ( min === max ) {\n\n\t\t\thue = 0;\n\t\t\tsaturation = 0;\n\n\t\t} else {\n\n\t\t\tconst delta = max - min;\n\n\t\t\tsaturation = lightness <= 0.5 ? delta / ( max + min ) : delta / ( 2 - max - min );\n\n\t\t\tswitch ( max ) {\n\n\t\t\t\tcase r: hue = ( g - b ) / delta + ( g < b ? 6 : 0 ); break;\n\t\t\t\tcase g: hue = ( b - r ) / delta + 2; break;\n\t\t\t\tcase b: hue = ( r - g ) / delta + 4; break;\n\n\t\t\t}\n\n\t\t\thue /= 6;\n\n\t\t}\n\n\t\ttarget.h = hue;\n\t\ttarget.s = saturation;\n\t\ttarget.l = lightness;\n\n\t\treturn target;\n\n\t}\n\n\tgetRGB( target, colorSpace = ColorManagement.workingColorSpace ) {\n\n\t\tColorManagement.fromWorkingColorSpace( _color.copy( this ), colorSpace );\n\n\t\ttarget.r = _color.r;\n\t\ttarget.g = _color.g;\n\t\ttarget.b = _color.b;\n\n\t\treturn target;\n\n\t}\n\n\tgetStyle( colorSpace = SRGBColorSpace ) {\n\n\t\tColorManagement.fromWorkingColorSpace( _color.copy( this ), colorSpace );\n\n\t\tconst r = _color.r, g = _color.g, b = _color.b;\n\n\t\tif ( colorSpace !== SRGBColorSpace ) {\n\n\t\t\t// Requires CSS Color Module Level 4 (https://www.w3.org/TR/css-color-4/).\n\t\t\treturn `color(${ colorSpace } ${ r.toFixed( 3 ) } ${ g.toFixed( 3 ) } ${ b.toFixed( 3 ) })`;\n\n\t\t}\n\n\t\treturn `rgb(${ Math.round( r * 255 ) },${ Math.round( g * 255 ) },${ Math.round( b * 255 ) })`;\n\n\t}\n\n\toffsetHSL( h, s, l ) {\n\n\t\tthis.getHSL( _hslA );\n\n\t\treturn this.setHSL( _hslA.h + h, _hslA.s + s, _hslA.l + l );\n\n\t}\n\n\tadd( color ) {\n\n\t\tthis.r += color.r;\n\t\tthis.g += color.g;\n\t\tthis.b += color.b;\n\n\t\treturn this;\n\n\t}\n\n\taddColors( color1, color2 ) {\n\n\t\tthis.r = color1.r + color2.r;\n\t\tthis.g = color1.g + color2.g;\n\t\tthis.b = color1.b + color2.b;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.r += s;\n\t\tthis.g += s;\n\t\tthis.b += s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( color ) {\n\n\t\tthis.r = Math.max( 0, this.r - color.r );\n\t\tthis.g = Math.max( 0, this.g - color.g );\n\t\tthis.b = Math.max( 0, this.b - color.b );\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( color ) {\n\n\t\tthis.r *= color.r;\n\t\tthis.g *= color.g;\n\t\tthis.b *= color.b;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( s ) {\n\n\t\tthis.r *= s;\n\t\tthis.g *= s;\n\t\tthis.b *= s;\n\n\t\treturn this;\n\n\t}\n\n\tlerp( color, alpha ) {\n\n\t\tthis.r += ( color.r - this.r ) * alpha;\n\t\tthis.g += ( color.g - this.g ) * alpha;\n\t\tthis.b += ( color.b - this.b ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpColors( color1, color2, alpha ) {\n\n\t\tthis.r = color1.r + ( color2.r - color1.r ) * alpha;\n\t\tthis.g = color1.g + ( color2.g - color1.g ) * alpha;\n\t\tthis.b = color1.b + ( color2.b - color1.b ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpHSL( color, alpha ) {\n\n\t\tthis.getHSL( _hslA );\n\t\tcolor.getHSL( _hslB );\n\n\t\tconst h = lerp( _hslA.h, _hslB.h, alpha );\n\t\tconst s = lerp( _hslA.s, _hslB.s, alpha );\n\t\tconst l = lerp( _hslA.l, _hslB.l, alpha );\n\n\t\tthis.setHSL( h, s, l );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromVector3( v ) {\n\n\t\tthis.r = v.x;\n\t\tthis.g = v.y;\n\t\tthis.b = v.z;\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tconst r = this.r, g = this.g, b = this.b;\n\t\tconst e = m.elements;\n\n\t\tthis.r = e[ 0 ] * r + e[ 3 ] * g + e[ 6 ] * b;\n\t\tthis.g = e[ 1 ] * r + e[ 4 ] * g + e[ 7 ] * b;\n\t\tthis.b = e[ 2 ] * r + e[ 5 ] * g + e[ 8 ] * b;\n\n\t\treturn this;\n\n\t}\n\n\tequals( c ) {\n\n\t\treturn ( c.r === this.r ) && ( c.g === this.g ) && ( c.b === this.b );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.r = array[ offset ];\n\t\tthis.g = array[ offset + 1 ];\n\t\tthis.b = array[ offset + 2 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.r;\n\t\tarray[ offset + 1 ] = this.g;\n\t\tarray[ offset + 2 ] = this.b;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis.r = attribute.getX( index );\n\t\tthis.g = attribute.getY( index );\n\t\tthis.b = attribute.getZ( index );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\treturn this.getHex();\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.r;\n\t\tyield this.g;\n\t\tyield this.b;\n\n\t}\n\n}\n\nconst _color = /*@__PURE__*/ new Color();\n\nColor.NAMES = _colorKeywords;\n\nlet _materialId = 0;\n\nclass Material extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isMaterial = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _materialId ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'Material';\n\n\t\tthis.blending = NormalBlending;\n\t\tthis.side = FrontSide;\n\t\tthis.vertexColors = false;\n\n\t\tthis.opacity = 1;\n\t\tthis.transparent = false;\n\t\tthis.alphaHash = false;\n\n\t\tthis.blendSrc = SrcAlphaFactor;\n\t\tthis.blendDst = OneMinusSrcAlphaFactor;\n\t\tthis.blendEquation = AddEquation;\n\t\tthis.blendSrcAlpha = null;\n\t\tthis.blendDstAlpha = null;\n\t\tthis.blendEquationAlpha = null;\n\t\tthis.blendColor = new Color( 0, 0, 0 );\n\t\tthis.blendAlpha = 0;\n\n\t\tthis.depthFunc = LessEqualDepth;\n\t\tthis.depthTest = true;\n\t\tthis.depthWrite = true;\n\n\t\tthis.stencilWriteMask = 0xff;\n\t\tthis.stencilFunc = AlwaysStencilFunc;\n\t\tthis.stencilRef = 0;\n\t\tthis.stencilFuncMask = 0xff;\n\t\tthis.stencilFail = KeepStencilOp;\n\t\tthis.stencilZFail = KeepStencilOp;\n\t\tthis.stencilZPass = KeepStencilOp;\n\t\tthis.stencilWrite = false;\n\n\t\tthis.clippingPlanes = null;\n\t\tthis.clipIntersection = false;\n\t\tthis.clipShadows = false;\n\n\t\tthis.shadowSide = null;\n\n\t\tthis.colorWrite = true;\n\n\t\tthis.precision = null; // override the renderer's default precision for this material\n\n\t\tthis.polygonOffset = false;\n\t\tthis.polygonOffsetFactor = 0;\n\t\tthis.polygonOffsetUnits = 0;\n\n\t\tthis.dithering = false;\n\n\t\tthis.alphaToCoverage = false;\n\t\tthis.premultipliedAlpha = false;\n\t\tthis.forceSinglePass = false;\n\n\t\tthis.visible = true;\n\n\t\tthis.toneMapped = true;\n\n\t\tthis.userData = {};\n\n\t\tthis.version = 0;\n\n\t\tthis._alphaTest = 0;\n\n\t}\n\n\tget alphaTest() {\n\n\t\treturn this._alphaTest;\n\n\t}\n\n\tset alphaTest( value ) {\n\n\t\tif ( this._alphaTest > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._alphaTest = value;\n\n\t}\n\n\tonBeforeCompile( /* shaderobject, renderer */ ) {}\n\n\tcustomProgramCacheKey() {\n\n\t\treturn this.onBeforeCompile.toString();\n\n\t}\n\n\tsetValues( values ) {\n\n\t\tif ( values === undefined ) return;\n\n\t\tfor ( const key in values ) {\n\n\t\t\tconst newValue = values[ key ];\n\n\t\t\tif ( newValue === undefined ) {\n\n\t\t\t\tconsole.warn( `THREE.Material: parameter '${ key }' has value of undefined.` );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tconst currentValue = this[ key ];\n\n\t\t\tif ( currentValue === undefined ) {\n\n\t\t\t\tconsole.warn( `THREE.Material: '${ key }' is not a property of THREE.${ this.type }.` );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tif ( currentValue && currentValue.isColor ) {\n\n\t\t\t\tcurrentValue.set( newValue );\n\n\t\t\t} else if ( ( currentValue && currentValue.isVector3 ) && ( newValue && newValue.isVector3 ) ) {\n\n\t\t\t\tcurrentValue.copy( newValue );\n\n\t\t\t} else {\n\n\t\t\t\tthis[ key ] = newValue;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( isRootObject ) {\n\n\t\t\tmeta = {\n\t\t\t\ttextures: {},\n\t\t\t\timages: {}\n\t\t\t};\n\n\t\t}\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.6,\n\t\t\t\ttype: 'Material',\n\t\t\t\tgenerator: 'Material.toJSON'\n\t\t\t}\n\t\t};\n\n\t\t// standard Material serialization\n\t\tdata.uuid = this.uuid;\n\t\tdata.type = this.type;\n\n\t\tif ( this.name !== '' ) data.name = this.name;\n\n\t\tif ( this.color && this.color.isColor ) data.color = this.color.getHex();\n\n\t\tif ( this.roughness !== undefined ) data.roughness = this.roughness;\n\t\tif ( this.metalness !== undefined ) data.metalness = this.metalness;\n\n\t\tif ( this.sheen !== undefined ) data.sheen = this.sheen;\n\t\tif ( this.sheenColor && this.sheenColor.isColor ) data.sheenColor = this.sheenColor.getHex();\n\t\tif ( this.sheenRoughness !== undefined ) data.sheenRoughness = this.sheenRoughness;\n\t\tif ( this.emissive && this.emissive.isColor ) data.emissive = this.emissive.getHex();\n\t\tif ( this.emissiveIntensity !== undefined && this.emissiveIntensity !== 1 ) data.emissiveIntensity = this.emissiveIntensity;\n\n\t\tif ( this.specular && this.specular.isColor ) data.specular = this.specular.getHex();\n\t\tif ( this.specularIntensity !== undefined ) data.specularIntensity = this.specularIntensity;\n\t\tif ( this.specularColor && this.specularColor.isColor ) data.specularColor = this.specularColor.getHex();\n\t\tif ( this.shininess !== undefined ) data.shininess = this.shininess;\n\t\tif ( this.clearcoat !== undefined ) data.clearcoat = this.clearcoat;\n\t\tif ( this.clearcoatRoughness !== undefined ) data.clearcoatRoughness = this.clearcoatRoughness;\n\n\t\tif ( this.clearcoatMap && this.clearcoatMap.isTexture ) {\n\n\t\t\tdata.clearcoatMap = this.clearcoatMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.clearcoatRoughnessMap && this.clearcoatRoughnessMap.isTexture ) {\n\n\t\t\tdata.clearcoatRoughnessMap = this.clearcoatRoughnessMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.clearcoatNormalMap && this.clearcoatNormalMap.isTexture ) {\n\n\t\t\tdata.clearcoatNormalMap = this.clearcoatNormalMap.toJSON( meta ).uuid;\n\t\t\tdata.clearcoatNormalScale = this.clearcoatNormalScale.toArray();\n\n\t\t}\n\n\t\tif ( this.dispersion !== undefined ) data.dispersion = this.dispersion;\n\n\t\tif ( this.iridescence !== undefined ) data.iridescence = this.iridescence;\n\t\tif ( this.iridescenceIOR !== undefined ) data.iridescenceIOR = this.iridescenceIOR;\n\t\tif ( this.iridescenceThicknessRange !== undefined ) data.iridescenceThicknessRange = this.iridescenceThicknessRange;\n\n\t\tif ( this.iridescenceMap && this.iridescenceMap.isTexture ) {\n\n\t\t\tdata.iridescenceMap = this.iridescenceMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.iridescenceThicknessMap && this.iridescenceThicknessMap.isTexture ) {\n\n\t\t\tdata.iridescenceThicknessMap = this.iridescenceThicknessMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.anisotropy !== undefined ) data.anisotropy = this.anisotropy;\n\t\tif ( this.anisotropyRotation !== undefined ) data.anisotropyRotation = this.anisotropyRotation;\n\n\t\tif ( this.anisotropyMap && this.anisotropyMap.isTexture ) {\n\n\t\t\tdata.anisotropyMap = this.anisotropyMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.map && this.map.isTexture ) data.map = this.map.toJSON( meta ).uuid;\n\t\tif ( this.matcap && this.matcap.isTexture ) data.matcap = this.matcap.toJSON( meta ).uuid;\n\t\tif ( this.alphaMap && this.alphaMap.isTexture ) data.alphaMap = this.alphaMap.toJSON( meta ).uuid;\n\n\t\tif ( this.lightMap && this.lightMap.isTexture ) {\n\n\t\t\tdata.lightMap = this.lightMap.toJSON( meta ).uuid;\n\t\t\tdata.lightMapIntensity = this.lightMapIntensity;\n\n\t\t}\n\n\t\tif ( this.aoMap && this.aoMap.isTexture ) {\n\n\t\t\tdata.aoMap = this.aoMap.toJSON( meta ).uuid;\n\t\t\tdata.aoMapIntensity = this.aoMapIntensity;\n\n\t\t}\n\n\t\tif ( this.bumpMap && this.bumpMap.isTexture ) {\n\n\t\t\tdata.bumpMap = this.bumpMap.toJSON( meta ).uuid;\n\t\t\tdata.bumpScale = this.bumpScale;\n\n\t\t}\n\n\t\tif ( this.normalMap && this.normalMap.isTexture ) {\n\n\t\t\tdata.normalMap = this.normalMap.toJSON( meta ).uuid;\n\t\t\tdata.normalMapType = this.normalMapType;\n\t\t\tdata.normalScale = this.normalScale.toArray();\n\n\t\t}\n\n\t\tif ( this.displacementMap && this.displacementMap.isTexture ) {\n\n\t\t\tdata.displacementMap = this.displacementMap.toJSON( meta ).uuid;\n\t\t\tdata.displacementScale = this.displacementScale;\n\t\t\tdata.displacementBias = this.displacementBias;\n\n\t\t}\n\n\t\tif ( this.roughnessMap && this.roughnessMap.isTexture ) data.roughnessMap = this.roughnessMap.toJSON( meta ).uuid;\n\t\tif ( this.metalnessMap && this.metalnessMap.isTexture ) data.metalnessMap = this.metalnessMap.toJSON( meta ).uuid;\n\n\t\tif ( this.emissiveMap && this.emissiveMap.isTexture ) data.emissiveMap = this.emissiveMap.toJSON( meta ).uuid;\n\t\tif ( this.specularMap && this.specularMap.isTexture ) data.specularMap = this.specularMap.toJSON( meta ).uuid;\n\t\tif ( this.specularIntensityMap && this.specularIntensityMap.isTexture ) data.specularIntensityMap = this.specularIntensityMap.toJSON( meta ).uuid;\n\t\tif ( this.specularColorMap && this.specularColorMap.isTexture ) data.specularColorMap = this.specularColorMap.toJSON( meta ).uuid;\n\n\t\tif ( this.envMap && this.envMap.isTexture ) {\n\n\t\t\tdata.envMap = this.envMap.toJSON( meta ).uuid;\n\n\t\t\tif ( this.combine !== undefined ) data.combine = this.combine;\n\n\t\t}\n\n\t\tif ( this.envMapRotation !== undefined ) data.envMapRotation = this.envMapRotation.toArray();\n\t\tif ( this.envMapIntensity !== undefined ) data.envMapIntensity = this.envMapIntensity;\n\t\tif ( this.reflectivity !== undefined ) data.reflectivity = this.reflectivity;\n\t\tif ( this.refractionRatio !== undefined ) data.refractionRatio = this.refractionRatio;\n\n\t\tif ( this.gradientMap && this.gradientMap.isTexture ) {\n\n\t\t\tdata.gradientMap = this.gradientMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.transmission !== undefined ) data.transmission = this.transmission;\n\t\tif ( this.transmissionMap && this.transmissionMap.isTexture ) data.transmissionMap = this.transmissionMap.toJSON( meta ).uuid;\n\t\tif ( this.thickness !== undefined ) data.thickness = this.thickness;\n\t\tif ( this.thicknessMap && this.thicknessMap.isTexture ) data.thicknessMap = this.thicknessMap.toJSON( meta ).uuid;\n\t\tif ( this.attenuationDistance !== undefined && this.attenuationDistance !== Infinity ) data.attenuationDistance = this.attenuationDistance;\n\t\tif ( this.attenuationColor !== undefined ) data.attenuationColor = this.attenuationColor.getHex();\n\n\t\tif ( this.size !== undefined ) data.size = this.size;\n\t\tif ( this.shadowSide !== null ) data.shadowSide = this.shadowSide;\n\t\tif ( this.sizeAttenuation !== undefined ) data.sizeAttenuation = this.sizeAttenuation;\n\n\t\tif ( this.blending !== NormalBlending ) data.blending = this.blending;\n\t\tif ( this.side !== FrontSide ) data.side = this.side;\n\t\tif ( this.vertexColors === true ) data.vertexColors = true;\n\n\t\tif ( this.opacity < 1 ) data.opacity = this.opacity;\n\t\tif ( this.transparent === true ) data.transparent = true;\n\n\t\tif ( this.blendSrc !== SrcAlphaFactor ) data.blendSrc = this.blendSrc;\n\t\tif ( this.blendDst !== OneMinusSrcAlphaFactor ) data.blendDst = this.blendDst;\n\t\tif ( this.blendEquation !== AddEquation ) data.blendEquation = this.blendEquation;\n\t\tif ( this.blendSrcAlpha !== null ) data.blendSrcAlpha = this.blendSrcAlpha;\n\t\tif ( this.blendDstAlpha !== null ) data.blendDstAlpha = this.blendDstAlpha;\n\t\tif ( this.blendEquationAlpha !== null ) data.blendEquationAlpha = this.blendEquationAlpha;\n\t\tif ( this.blendColor && this.blendColor.isColor ) data.blendColor = this.blendColor.getHex();\n\t\tif ( this.blendAlpha !== 0 ) data.blendAlpha = this.blendAlpha;\n\n\t\tif ( this.depthFunc !== LessEqualDepth ) data.depthFunc = this.depthFunc;\n\t\tif ( this.depthTest === false ) data.depthTest = this.depthTest;\n\t\tif ( this.depthWrite === false ) data.depthWrite = this.depthWrite;\n\t\tif ( this.colorWrite === false ) data.colorWrite = this.colorWrite;\n\n\t\tif ( this.stencilWriteMask !== 0xff ) data.stencilWriteMask = this.stencilWriteMask;\n\t\tif ( this.stencilFunc !== AlwaysStencilFunc ) data.stencilFunc = this.stencilFunc;\n\t\tif ( this.stencilRef !== 0 ) data.stencilRef = this.stencilRef;\n\t\tif ( this.stencilFuncMask !== 0xff ) data.stencilFuncMask = this.stencilFuncMask;\n\t\tif ( this.stencilFail !== KeepStencilOp ) data.stencilFail = this.stencilFail;\n\t\tif ( this.stencilZFail !== KeepStencilOp ) data.stencilZFail = this.stencilZFail;\n\t\tif ( this.stencilZPass !== KeepStencilOp ) data.stencilZPass = this.stencilZPass;\n\t\tif ( this.stencilWrite === true ) data.stencilWrite = this.stencilWrite;\n\n\t\t// rotation (SpriteMaterial)\n\t\tif ( this.rotation !== undefined && this.rotation !== 0 ) data.rotation = this.rotation;\n\n\t\tif ( this.polygonOffset === true ) data.polygonOffset = true;\n\t\tif ( this.polygonOffsetFactor !== 0 ) data.polygonOffsetFactor = this.polygonOffsetFactor;\n\t\tif ( this.polygonOffsetUnits !== 0 ) data.polygonOffsetUnits = this.polygonOffsetUnits;\n\n\t\tif ( this.linewidth !== undefined && this.linewidth !== 1 ) data.linewidth = this.linewidth;\n\t\tif ( this.dashSize !== undefined ) data.dashSize = this.dashSize;\n\t\tif ( this.gapSize !== undefined ) data.gapSize = this.gapSize;\n\t\tif ( this.scale !== undefined ) data.scale = this.scale;\n\n\t\tif ( this.dithering === true ) data.dithering = true;\n\n\t\tif ( this.alphaTest > 0 ) data.alphaTest = this.alphaTest;\n\t\tif ( this.alphaHash === true ) data.alphaHash = true;\n\t\tif ( this.alphaToCoverage === true ) data.alphaToCoverage = true;\n\t\tif ( this.premultipliedAlpha === true ) data.premultipliedAlpha = true;\n\t\tif ( this.forceSinglePass === true ) data.forceSinglePass = true;\n\n\t\tif ( this.wireframe === true ) data.wireframe = true;\n\t\tif ( this.wireframeLinewidth > 1 ) data.wireframeLinewidth = this.wireframeLinewidth;\n\t\tif ( this.wireframeLinecap !== 'round' ) data.wireframeLinecap = this.wireframeLinecap;\n\t\tif ( this.wireframeLinejoin !== 'round' ) data.wireframeLinejoin = this.wireframeLinejoin;\n\n\t\tif ( this.flatShading === true ) data.flatShading = true;\n\n\t\tif ( this.visible === false ) data.visible = false;\n\n\t\tif ( this.toneMapped === false ) data.toneMapped = false;\n\n\t\tif ( this.fog === false ) data.fog = false;\n\n\t\tif ( Object.keys( this.userData ).length > 0 ) data.userData = this.userData;\n\n\t\t// TODO: Copied from Object3D.toJSON\n\n\t\tfunction extractFromCache( cache ) {\n\n\t\t\tconst values = [];\n\n\t\t\tfor ( const key in cache ) {\n\n\t\t\t\tconst data = cache[ key ];\n\t\t\t\tdelete data.metadata;\n\t\t\t\tvalues.push( data );\n\n\t\t\t}\n\n\t\t\treturn values;\n\n\t\t}\n\n\t\tif ( isRootObject ) {\n\n\t\t\tconst textures = extractFromCache( meta.textures );\n\t\t\tconst images = extractFromCache( meta.images );\n\n\t\t\tif ( textures.length > 0 ) data.textures = textures;\n\t\t\tif ( images.length > 0 ) data.images = images;\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.blending = source.blending;\n\t\tthis.side = source.side;\n\t\tthis.vertexColors = source.vertexColors;\n\n\t\tthis.opacity = source.opacity;\n\t\tthis.transparent = source.transparent;\n\n\t\tthis.blendSrc = source.blendSrc;\n\t\tthis.blendDst = source.blendDst;\n\t\tthis.blendEquation = source.blendEquation;\n\t\tthis.blendSrcAlpha = source.blendSrcAlpha;\n\t\tthis.blendDstAlpha = source.blendDstAlpha;\n\t\tthis.blendEquationAlpha = source.blendEquationAlpha;\n\t\tthis.blendColor.copy( source.blendColor );\n\t\tthis.blendAlpha = source.blendAlpha;\n\n\t\tthis.depthFunc = source.depthFunc;\n\t\tthis.depthTest = source.depthTest;\n\t\tthis.depthWrite = source.depthWrite;\n\n\t\tthis.stencilWriteMask = source.stencilWriteMask;\n\t\tthis.stencilFunc = source.stencilFunc;\n\t\tthis.stencilRef = source.stencilRef;\n\t\tthis.stencilFuncMask = source.stencilFuncMask;\n\t\tthis.stencilFail = source.stencilFail;\n\t\tthis.stencilZFail = source.stencilZFail;\n\t\tthis.stencilZPass = source.stencilZPass;\n\t\tthis.stencilWrite = source.stencilWrite;\n\n\t\tconst srcPlanes = source.clippingPlanes;\n\t\tlet dstPlanes = null;\n\n\t\tif ( srcPlanes !== null ) {\n\n\t\t\tconst n = srcPlanes.length;\n\t\t\tdstPlanes = new Array( n );\n\n\t\t\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\t\t\tdstPlanes[ i ] = srcPlanes[ i ].clone();\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.clippingPlanes = dstPlanes;\n\t\tthis.clipIntersection = source.clipIntersection;\n\t\tthis.clipShadows = source.clipShadows;\n\n\t\tthis.shadowSide = source.shadowSide;\n\n\t\tthis.colorWrite = source.colorWrite;\n\n\t\tthis.precision = source.precision;\n\n\t\tthis.polygonOffset = source.polygonOffset;\n\t\tthis.polygonOffsetFactor = source.polygonOffsetFactor;\n\t\tthis.polygonOffsetUnits = source.polygonOffsetUnits;\n\n\t\tthis.dithering = source.dithering;\n\n\t\tthis.alphaTest = source.alphaTest;\n\t\tthis.alphaHash = source.alphaHash;\n\t\tthis.alphaToCoverage = source.alphaToCoverage;\n\t\tthis.premultipliedAlpha = source.premultipliedAlpha;\n\t\tthis.forceSinglePass = source.forceSinglePass;\n\n\t\tthis.visible = source.visible;\n\n\t\tthis.toneMapped = source.toneMapped;\n\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\tonBuild( /* shaderobject, renderer */ ) {\n\n\t\tconsole.warn( 'Material: onBuild() has been removed.' ); // @deprecated, r166\n\n\t}\n\n\tonBeforeRender( /* renderer, scene, camera, geometry, object, group */ ) {\n\n\t\tconsole.warn( 'Material: onBeforeRender() has been removed.' ); // @deprecated, r166\n\n\t}\n\n\n}\n\nclass MeshBasicMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshBasicMaterial = true;\n\n\t\tthis.type = 'MeshBasicMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // emissive\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.envMapRotation = new Euler();\n\t\tthis.combine = MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.envMapRotation.copy( source.envMapRotation );\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\n// Fast Half Float Conversions, http://www.fox-toolkit.org/ftp/fasthalffloatconversion.pdf\n\nconst _tables = /*@__PURE__*/ _generateTables();\n\nfunction _generateTables() {\n\n\t// float32 to float16 helpers\n\n\tconst buffer = new ArrayBuffer( 4 );\n\tconst floatView = new Float32Array( buffer );\n\tconst uint32View = new Uint32Array( buffer );\n\n\tconst baseTable = new Uint32Array( 512 );\n\tconst shiftTable = new Uint32Array( 512 );\n\n\tfor ( let i = 0; i < 256; ++ i ) {\n\n\t\tconst e = i - 127;\n\n\t\t// very small number (0, -0)\n\n\t\tif ( e < - 27 ) {\n\n\t\t\tbaseTable[ i ] = 0x0000;\n\t\t\tbaseTable[ i | 0x100 ] = 0x8000;\n\t\t\tshiftTable[ i ] = 24;\n\t\t\tshiftTable[ i | 0x100 ] = 24;\n\n\t\t\t// small number (denorm)\n\n\t\t} else if ( e < - 14 ) {\n\n\t\t\tbaseTable[ i ] = 0x0400 >> ( - e - 14 );\n\t\t\tbaseTable[ i | 0x100 ] = ( 0x0400 >> ( - e - 14 ) ) | 0x8000;\n\t\t\tshiftTable[ i ] = - e - 1;\n\t\t\tshiftTable[ i | 0x100 ] = - e - 1;\n\n\t\t\t// normal number\n\n\t\t} else if ( e <= 15 ) {\n\n\t\t\tbaseTable[ i ] = ( e + 15 ) << 10;\n\t\t\tbaseTable[ i | 0x100 ] = ( ( e + 15 ) << 10 ) | 0x8000;\n\t\t\tshiftTable[ i ] = 13;\n\t\t\tshiftTable[ i | 0x100 ] = 13;\n\n\t\t\t// large number (Infinity, -Infinity)\n\n\t\t} else if ( e < 128 ) {\n\n\t\t\tbaseTable[ i ] = 0x7c00;\n\t\t\tbaseTable[ i | 0x100 ] = 0xfc00;\n\t\t\tshiftTable[ i ] = 24;\n\t\t\tshiftTable[ i | 0x100 ] = 24;\n\n\t\t\t// stay (NaN, Infinity, -Infinity)\n\n\t\t} else {\n\n\t\t\tbaseTable[ i ] = 0x7c00;\n\t\t\tbaseTable[ i | 0x100 ] = 0xfc00;\n\t\t\tshiftTable[ i ] = 13;\n\t\t\tshiftTable[ i | 0x100 ] = 13;\n\n\t\t}\n\n\t}\n\n\t// float16 to float32 helpers\n\n\tconst mantissaTable = new Uint32Array( 2048 );\n\tconst exponentTable = new Uint32Array( 64 );\n\tconst offsetTable = new Uint32Array( 64 );\n\n\tfor ( let i = 1; i < 1024; ++ i ) {\n\n\t\tlet m = i << 13; // zero pad mantissa bits\n\t\tlet e = 0; // zero exponent\n\n\t\t// normalized\n\t\twhile ( ( m & 0x00800000 ) === 0 ) {\n\n\t\t\tm <<= 1;\n\t\t\te -= 0x00800000; // decrement exponent\n\n\t\t}\n\n\t\tm &= ~ 0x00800000; // clear leading 1 bit\n\t\te += 0x38800000; // adjust bias\n\n\t\tmantissaTable[ i ] = m | e;\n\n\t}\n\n\tfor ( let i = 1024; i < 2048; ++ i ) {\n\n\t\tmantissaTable[ i ] = 0x38000000 + ( ( i - 1024 ) << 13 );\n\n\t}\n\n\tfor ( let i = 1; i < 31; ++ i ) {\n\n\t\texponentTable[ i ] = i << 23;\n\n\t}\n\n\texponentTable[ 31 ] = 0x47800000;\n\texponentTable[ 32 ] = 0x80000000;\n\n\tfor ( let i = 33; i < 63; ++ i ) {\n\n\t\texponentTable[ i ] = 0x80000000 + ( ( i - 32 ) << 23 );\n\n\t}\n\n\texponentTable[ 63 ] = 0xc7800000;\n\n\tfor ( let i = 1; i < 64; ++ i ) {\n\n\t\tif ( i !== 32 ) {\n\n\t\t\toffsetTable[ i ] = 1024;\n\n\t\t}\n\n\t}\n\n\treturn {\n\t\tfloatView: floatView,\n\t\tuint32View: uint32View,\n\t\tbaseTable: baseTable,\n\t\tshiftTable: shiftTable,\n\t\tmantissaTable: mantissaTable,\n\t\texponentTable: exponentTable,\n\t\toffsetTable: offsetTable\n\t};\n\n}\n\n// float32 to float16\n\nfunction toHalfFloat( val ) {\n\n\tif ( Math.abs( val ) > 65504 ) console.warn( 'THREE.DataUtils.toHalfFloat(): Value out of range.' );\n\n\tval = clamp( val, - 65504, 65504 );\n\n\t_tables.floatView[ 0 ] = val;\n\tconst f = _tables.uint32View[ 0 ];\n\tconst e = ( f >> 23 ) & 0x1ff;\n\treturn _tables.baseTable[ e ] + ( ( f & 0x007fffff ) >> _tables.shiftTable[ e ] );\n\n}\n\n// float16 to float32\n\nfunction fromHalfFloat( val ) {\n\n\tconst m = val >> 10;\n\t_tables.uint32View[ 0 ] = _tables.mantissaTable[ _tables.offsetTable[ m ] + ( val & 0x3ff ) ] + _tables.exponentTable[ m ];\n\treturn _tables.floatView[ 0 ];\n\n}\n\nconst DataUtils = {\n\ttoHalfFloat: toHalfFloat,\n\tfromHalfFloat: fromHalfFloat,\n};\n\nconst _vector$9 = /*@__PURE__*/ new Vector3();\nconst _vector2$1 = /*@__PURE__*/ new Vector2();\n\nclass BufferAttribute {\n\n\tconstructor( array, itemSize, normalized = false ) {\n\n\t\tif ( Array.isArray( array ) ) {\n\n\t\t\tthrow new TypeError( 'THREE.BufferAttribute: array should be a Typed Array.' );\n\n\t\t}\n\n\t\tthis.isBufferAttribute = true;\n\n\t\tthis.name = '';\n\n\t\tthis.array = array;\n\t\tthis.itemSize = itemSize;\n\t\tthis.count = array !== undefined ? array.length / itemSize : 0;\n\t\tthis.normalized = normalized;\n\n\t\tthis.usage = StaticDrawUsage;\n\t\tthis._updateRange = { offset: 0, count: - 1 };\n\t\tthis.updateRanges = [];\n\t\tthis.gpuType = FloatType;\n\n\t\tthis.version = 0;\n\n\t}\n\n\tonUploadCallback() {}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\tget updateRange() {\n\n\t\twarnOnce( 'THREE.BufferAttribute: updateRange() is deprecated and will be removed in r169. Use addUpdateRange() instead.' ); // @deprecated, r159\n\t\treturn this._updateRange;\n\n\t}\n\n\tsetUsage( value ) {\n\n\t\tthis.usage = value;\n\n\t\treturn this;\n\n\t}\n\n\taddUpdateRange( start, count ) {\n\n\t\tthis.updateRanges.push( { start, count } );\n\n\t}\n\n\tclearUpdateRanges() {\n\n\t\tthis.updateRanges.length = 0;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\t\tthis.array = new source.array.constructor( source.array );\n\t\tthis.itemSize = source.itemSize;\n\t\tthis.count = source.count;\n\t\tthis.normalized = source.normalized;\n\n\t\tthis.usage = source.usage;\n\t\tthis.gpuType = source.gpuType;\n\n\t\treturn this;\n\n\t}\n\n\tcopyAt( index1, attribute, index2 ) {\n\n\t\tindex1 *= this.itemSize;\n\t\tindex2 *= attribute.itemSize;\n\n\t\tfor ( let i = 0, l = this.itemSize; i < l; i ++ ) {\n\n\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcopyArray( array ) {\n\n\t\tthis.array.set( array );\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tif ( this.itemSize === 2 ) {\n\n\t\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t\t_vector2$1.fromBufferAttribute( this, i );\n\t\t\t\t_vector2$1.applyMatrix3( m );\n\n\t\t\t\tthis.setXY( i, _vector2$1.x, _vector2$1.y );\n\n\t\t\t}\n\n\t\t} else if ( this.itemSize === 3 ) {\n\n\t\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t\t_vector$9.fromBufferAttribute( this, i );\n\t\t\t\t_vector$9.applyMatrix3( m );\n\n\t\t\t\tthis.setXYZ( i, _vector$9.x, _vector$9.y, _vector$9.z );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$9.fromBufferAttribute( this, i );\n\n\t\t\t_vector$9.applyMatrix4( m );\n\n\t\t\tthis.setXYZ( i, _vector$9.x, _vector$9.y, _vector$9.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyNormalMatrix( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$9.fromBufferAttribute( this, i );\n\n\t\t\t_vector$9.applyNormalMatrix( m );\n\n\t\t\tthis.setXYZ( i, _vector$9.x, _vector$9.y, _vector$9.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttransformDirection( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$9.fromBufferAttribute( this, i );\n\n\t\t\t_vector$9.transformDirection( m );\n\n\t\t\tthis.setXYZ( i, _vector$9.x, _vector$9.y, _vector$9.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tset( value, offset = 0 ) {\n\n\t\t// Matching BufferAttribute constructor, do not normalize the array.\n\t\tthis.array.set( value, offset );\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index, component ) {\n\n\t\tlet value = this.array[ index * this.itemSize + component ];\n\n\t\tif ( this.normalized ) value = denormalize( value, this.array );\n\n\t\treturn value;\n\n\t}\n\n\tsetComponent( index, component, value ) {\n\n\t\tif ( this.normalized ) value = normalize( value, this.array );\n\n\t\tthis.array[ index * this.itemSize + component ] = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetX( index ) {\n\n\t\tlet x = this.array[ index * this.itemSize ];\n\n\t\tif ( this.normalized ) x = denormalize( x, this.array );\n\n\t\treturn x;\n\n\t}\n\n\tsetX( index, x ) {\n\n\t\tif ( this.normalized ) x = normalize( x, this.array );\n\n\t\tthis.array[ index * this.itemSize ] = x;\n\n\t\treturn this;\n\n\t}\n\n\tgetY( index ) {\n\n\t\tlet y = this.array[ index * this.itemSize + 1 ];\n\n\t\tif ( this.normalized ) y = denormalize( y, this.array );\n\n\t\treturn y;\n\n\t}\n\n\tsetY( index, y ) {\n\n\t\tif ( this.normalized ) y = normalize( y, this.array );\n\n\t\tthis.array[ index * this.itemSize + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tgetZ( index ) {\n\n\t\tlet z = this.array[ index * this.itemSize + 2 ];\n\n\t\tif ( this.normalized ) z = denormalize( z, this.array );\n\n\t\treturn z;\n\n\t}\n\n\tsetZ( index, z ) {\n\n\t\tif ( this.normalized ) z = normalize( z, this.array );\n\n\t\tthis.array[ index * this.itemSize + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tgetW( index ) {\n\n\t\tlet w = this.array[ index * this.itemSize + 3 ];\n\n\t\tif ( this.normalized ) w = denormalize( w, this.array );\n\n\t\treturn w;\n\n\t}\n\n\tsetW( index, w ) {\n\n\t\tif ( this.normalized ) w = normalize( w, this.array );\n\n\t\tthis.array[ index * this.itemSize + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetXY( index, x, y ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZ( index, x, y, z ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\t\tthis.array[ index + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZW( index, x, y, z, w ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\t\t\tw = normalize( w, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\t\tthis.array[ index + 2 ] = z;\n\t\tthis.array[ index + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tonUpload( callback ) {\n\n\t\tthis.onUploadCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.array, this.itemSize ).copy( this );\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\titemSize: this.itemSize,\n\t\t\ttype: this.array.constructor.name,\n\t\t\tarray: Array.from( this.array ),\n\t\t\tnormalized: this.normalized\n\t\t};\n\n\t\tif ( this.name !== '' ) data.name = this.name;\n\t\tif ( this.usage !== StaticDrawUsage ) data.usage = this.usage;\n\n\t\treturn data;\n\n\t}\n\n}\n\n//\n\nclass Int8BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Int8Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint8BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint8Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint8ClampedBufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint8ClampedArray( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Int16BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Int16Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint16BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint16Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Int32BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Int32Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint32BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint32Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Float16BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint16Array( array ), itemSize, normalized );\n\n\t\tthis.isFloat16BufferAttribute = true;\n\n\t}\n\n\tgetX( index ) {\n\n\t\tlet x = fromHalfFloat( this.array[ index * this.itemSize ] );\n\n\t\tif ( this.normalized ) x = denormalize( x, this.array );\n\n\t\treturn x;\n\n\t}\n\n\tsetX( index, x ) {\n\n\t\tif ( this.normalized ) x = normalize( x, this.array );\n\n\t\tthis.array[ index * this.itemSize ] = toHalfFloat( x );\n\n\t\treturn this;\n\n\t}\n\n\tgetY( index ) {\n\n\t\tlet y = fromHalfFloat( this.array[ index * this.itemSize + 1 ] );\n\n\t\tif ( this.normalized ) y = denormalize( y, this.array );\n\n\t\treturn y;\n\n\t}\n\n\tsetY( index, y ) {\n\n\t\tif ( this.normalized ) y = normalize( y, this.array );\n\n\t\tthis.array[ index * this.itemSize + 1 ] = toHalfFloat( y );\n\n\t\treturn this;\n\n\t}\n\n\tgetZ( index ) {\n\n\t\tlet z = fromHalfFloat( this.array[ index * this.itemSize + 2 ] );\n\n\t\tif ( this.normalized ) z = denormalize( z, this.array );\n\n\t\treturn z;\n\n\t}\n\n\tsetZ( index, z ) {\n\n\t\tif ( this.normalized ) z = normalize( z, this.array );\n\n\t\tthis.array[ index * this.itemSize + 2 ] = toHalfFloat( z );\n\n\t\treturn this;\n\n\t}\n\n\tgetW( index ) {\n\n\t\tlet w = fromHalfFloat( this.array[ index * this.itemSize + 3 ] );\n\n\t\tif ( this.normalized ) w = denormalize( w, this.array );\n\n\t\treturn w;\n\n\t}\n\n\tsetW( index, w ) {\n\n\t\tif ( this.normalized ) w = normalize( w, this.array );\n\n\t\tthis.array[ index * this.itemSize + 3 ] = toHalfFloat( w );\n\n\t\treturn this;\n\n\t}\n\n\tsetXY( index, x, y ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = toHalfFloat( x );\n\t\tthis.array[ index + 1 ] = toHalfFloat( y );\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZ( index, x, y, z ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = toHalfFloat( x );\n\t\tthis.array[ index + 1 ] = toHalfFloat( y );\n\t\tthis.array[ index + 2 ] = toHalfFloat( z );\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZW( index, x, y, z, w ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\t\t\tw = normalize( w, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = toHalfFloat( x );\n\t\tthis.array[ index + 1 ] = toHalfFloat( y );\n\t\tthis.array[ index + 2 ] = toHalfFloat( z );\n\t\tthis.array[ index + 3 ] = toHalfFloat( w );\n\n\t\treturn this;\n\n\t}\n\n}\n\n\nclass Float32BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Float32Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nlet _id$2 = 0;\n\nconst _m1$2 = /*@__PURE__*/ new Matrix4();\nconst _obj = /*@__PURE__*/ new Object3D();\nconst _offset = /*@__PURE__*/ new Vector3();\nconst _box$2 = /*@__PURE__*/ new Box3();\nconst _boxMorphTargets = /*@__PURE__*/ new Box3();\nconst _vector$8 = /*@__PURE__*/ new Vector3();\n\nclass BufferGeometry extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isBufferGeometry = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _id$2 ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'BufferGeometry';\n\n\t\tthis.index = null;\n\t\tthis.attributes = {};\n\n\t\tthis.morphAttributes = {};\n\t\tthis.morphTargetsRelative = false;\n\n\t\tthis.groups = [];\n\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\tthis.drawRange = { start: 0, count: Infinity };\n\n\t\tthis.userData = {};\n\n\t}\n\n\tgetIndex() {\n\n\t\treturn this.index;\n\n\t}\n\n\tsetIndex( index ) {\n\n\t\tif ( Array.isArray( index ) ) {\n\n\t\t\tthis.index = new ( arrayNeedsUint32( index ) ? Uint32BufferAttribute : Uint16BufferAttribute )( index, 1 );\n\n\t\t} else {\n\n\t\t\tthis.index = index;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetAttribute( name ) {\n\n\t\treturn this.attributes[ name ];\n\n\t}\n\n\tsetAttribute( name, attribute ) {\n\n\t\tthis.attributes[ name ] = attribute;\n\n\t\treturn this;\n\n\t}\n\n\tdeleteAttribute( name ) {\n\n\t\tdelete this.attributes[ name ];\n\n\t\treturn this;\n\n\t}\n\n\thasAttribute( name ) {\n\n\t\treturn this.attributes[ name ] !== undefined;\n\n\t}\n\n\taddGroup( start, count, materialIndex = 0 ) {\n\n\t\tthis.groups.push( {\n\n\t\t\tstart: start,\n\t\t\tcount: count,\n\t\t\tmaterialIndex: materialIndex\n\n\t\t} );\n\n\t}\n\n\tclearGroups() {\n\n\t\tthis.groups = [];\n\n\t}\n\n\tsetDrawRange( start, count ) {\n\n\t\tthis.drawRange.start = start;\n\t\tthis.drawRange.count = count;\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tconst position = this.attributes.position;\n\n\t\tif ( position !== undefined ) {\n\n\t\t\tposition.applyMatrix4( matrix );\n\n\t\t\tposition.needsUpdate = true;\n\n\t\t}\n\n\t\tconst normal = this.attributes.normal;\n\n\t\tif ( normal !== undefined ) {\n\n\t\t\tconst normalMatrix = new Matrix3().getNormalMatrix( matrix );\n\n\t\t\tnormal.applyNormalMatrix( normalMatrix );\n\n\t\t\tnormal.needsUpdate = true;\n\n\t\t}\n\n\t\tconst tangent = this.attributes.tangent;\n\n\t\tif ( tangent !== undefined ) {\n\n\t\t\ttangent.transformDirection( matrix );\n\n\t\t\ttangent.needsUpdate = true;\n\n\t\t}\n\n\t\tif ( this.boundingBox !== null ) {\n\n\t\t\tthis.computeBoundingBox();\n\n\t\t}\n\n\t\tif ( this.boundingSphere !== null ) {\n\n\t\t\tthis.computeBoundingSphere();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyQuaternion( q ) {\n\n\t\t_m1$2.makeRotationFromQuaternion( q );\n\n\t\tthis.applyMatrix4( _m1$2 );\n\n\t\treturn this;\n\n\t}\n\n\trotateX( angle ) {\n\n\t\t// rotate geometry around world x-axis\n\n\t\t_m1$2.makeRotationX( angle );\n\n\t\tthis.applyMatrix4( _m1$2 );\n\n\t\treturn this;\n\n\t}\n\n\trotateY( angle ) {\n\n\t\t// rotate geometry around world y-axis\n\n\t\t_m1$2.makeRotationY( angle );\n\n\t\tthis.applyMatrix4( _m1$2 );\n\n\t\treturn this;\n\n\t}\n\n\trotateZ( angle ) {\n\n\t\t// rotate geometry around world z-axis\n\n\t\t_m1$2.makeRotationZ( angle );\n\n\t\tthis.applyMatrix4( _m1$2 );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( x, y, z ) {\n\n\t\t// translate geometry\n\n\t\t_m1$2.makeTranslation( x, y, z );\n\n\t\tthis.applyMatrix4( _m1$2 );\n\n\t\treturn this;\n\n\t}\n\n\tscale( x, y, z ) {\n\n\t\t// scale geometry\n\n\t\t_m1$2.makeScale( x, y, z );\n\n\t\tthis.applyMatrix4( _m1$2 );\n\n\t\treturn this;\n\n\t}\n\n\tlookAt( vector ) {\n\n\t\t_obj.lookAt( vector );\n\n\t\t_obj.updateMatrix();\n\n\t\tthis.applyMatrix4( _obj.matrix );\n\n\t\treturn this;\n\n\t}\n\n\tcenter() {\n\n\t\tthis.computeBoundingBox();\n\n\t\tthis.boundingBox.getCenter( _offset ).negate();\n\n\t\tthis.translate( _offset.x, _offset.y, _offset.z );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tconst position = [];\n\n\t\tfor ( let i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\tconst point = points[ i ];\n\t\t\tposition.push( point.x, point.y, point.z || 0 );\n\n\t\t}\n\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( position, 3 ) );\n\n\t\treturn this;\n\n\t}\n\n\tcomputeBoundingBox() {\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.boundingBox = new Box3();\n\n\t\t}\n\n\t\tconst position = this.attributes.position;\n\t\tconst morphAttributesPosition = this.morphAttributes.position;\n\n\t\tif ( position && position.isGLBufferAttribute ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box.', this );\n\n\t\t\tthis.boundingBox.set(\n\t\t\t\tnew Vector3( - Infinity, - Infinity, - Infinity ),\n\t\t\t\tnew Vector3( + Infinity, + Infinity, + Infinity )\n\t\t\t);\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( position !== undefined ) {\n\n\t\t\tthis.boundingBox.setFromBufferAttribute( position );\n\n\t\t\t// process morph attributes if present\n\n\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\tfor ( let i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\t_box$2.setFromBufferAttribute( morphAttribute );\n\n\t\t\t\t\tif ( this.morphTargetsRelative ) {\n\n\t\t\t\t\t\t_vector$8.addVectors( this.boundingBox.min, _box$2.min );\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _vector$8 );\n\n\t\t\t\t\t\t_vector$8.addVectors( this.boundingBox.max, _box$2.max );\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _vector$8 );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _box$2.min );\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _box$2.max );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tthis.boundingBox.makeEmpty();\n\n\t\t}\n\n\t\tif ( isNaN( this.boundingBox.min.x ) || isNaN( this.boundingBox.min.y ) || isNaN( this.boundingBox.min.z ) ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The \"position\" attribute is likely to have NaN values.', this );\n\n\t\t}\n\n\t}\n\n\tcomputeBoundingSphere() {\n\n\t\tif ( this.boundingSphere === null ) {\n\n\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tconst position = this.attributes.position;\n\t\tconst morphAttributesPosition = this.morphAttributes.position;\n\n\t\tif ( position && position.isGLBufferAttribute ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere.', this );\n\n\t\t\tthis.boundingSphere.set( new Vector3(), Infinity );\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( position ) {\n\n\t\t\t// first, find the center of the bounding sphere\n\n\t\t\tconst center = this.boundingSphere.center;\n\n\t\t\t_box$2.setFromBufferAttribute( position );\n\n\t\t\t// process morph attributes if present\n\n\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\tfor ( let i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\t_boxMorphTargets.setFromBufferAttribute( morphAttribute );\n\n\t\t\t\t\tif ( this.morphTargetsRelative ) {\n\n\t\t\t\t\t\t_vector$8.addVectors( _box$2.min, _boxMorphTargets.min );\n\t\t\t\t\t\t_box$2.expandByPoint( _vector$8 );\n\n\t\t\t\t\t\t_vector$8.addVectors( _box$2.max, _boxMorphTargets.max );\n\t\t\t\t\t\t_box$2.expandByPoint( _vector$8 );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t_box$2.expandByPoint( _boxMorphTargets.min );\n\t\t\t\t\t\t_box$2.expandByPoint( _boxMorphTargets.max );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t_box$2.getCenter( center );\n\n\t\t\t// second, try to find a boundingSphere with a radius smaller than the\n\t\t\t// boundingSphere of the boundingBox: sqrt(3) smaller in the best case\n\n\t\t\tlet maxRadiusSq = 0;\n\n\t\t\tfor ( let i = 0, il = position.count; i < il; i ++ ) {\n\n\t\t\t\t_vector$8.fromBufferAttribute( position, i );\n\n\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( _vector$8 ) );\n\n\t\t\t}\n\n\t\t\t// process morph attributes if present\n\n\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\tfor ( let i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\tconst morphTargetsRelative = this.morphTargetsRelative;\n\n\t\t\t\t\tfor ( let j = 0, jl = morphAttribute.count; j < jl; j ++ ) {\n\n\t\t\t\t\t\t_vector$8.fromBufferAttribute( morphAttribute, j );\n\n\t\t\t\t\t\tif ( morphTargetsRelative ) {\n\n\t\t\t\t\t\t\t_offset.fromBufferAttribute( position, j );\n\t\t\t\t\t\t\t_vector$8.add( _offset );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( _vector$8 ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.boundingSphere.radius = Math.sqrt( maxRadiusSq );\n\n\t\t\tif ( isNaN( this.boundingSphere.radius ) ) {\n\n\t\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The \"position\" attribute is likely to have NaN values.', this );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcomputeTangents() {\n\n\t\tconst index = this.index;\n\t\tconst attributes = this.attributes;\n\n\t\t// based on http://www.terathon.com/code/tangent.html\n\t\t// (per vertex tangents)\n\n\t\tif ( index === null ||\n\t\t\t attributes.position === undefined ||\n\t\t\t attributes.normal === undefined ||\n\t\t\t attributes.uv === undefined ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tconst positionAttribute = attributes.position;\n\t\tconst normalAttribute = attributes.normal;\n\t\tconst uvAttribute = attributes.uv;\n\n\t\tif ( this.hasAttribute( 'tangent' ) === false ) {\n\n\t\t\tthis.setAttribute( 'tangent', new BufferAttribute( new Float32Array( 4 * positionAttribute.count ), 4 ) );\n\n\t\t}\n\n\t\tconst tangentAttribute = this.getAttribute( 'tangent' );\n\n\t\tconst tan1 = [], tan2 = [];\n\n\t\tfor ( let i = 0; i < positionAttribute.count; i ++ ) {\n\n\t\t\ttan1[ i ] = new Vector3();\n\t\t\ttan2[ i ] = new Vector3();\n\n\t\t}\n\n\t\tconst vA = new Vector3(),\n\t\t\tvB = new Vector3(),\n\t\t\tvC = new Vector3(),\n\n\t\t\tuvA = new Vector2(),\n\t\t\tuvB = new Vector2(),\n\t\t\tuvC = new Vector2(),\n\n\t\t\tsdir = new Vector3(),\n\t\t\ttdir = new Vector3();\n\n\t\tfunction handleTriangle( a, b, c ) {\n\n\t\t\tvA.fromBufferAttribute( positionAttribute, a );\n\t\t\tvB.fromBufferAttribute( positionAttribute, b );\n\t\t\tvC.fromBufferAttribute( positionAttribute, c );\n\n\t\t\tuvA.fromBufferAttribute( uvAttribute, a );\n\t\t\tuvB.fromBufferAttribute( uvAttribute, b );\n\t\t\tuvC.fromBufferAttribute( uvAttribute, c );\n\n\t\t\tvB.sub( vA );\n\t\t\tvC.sub( vA );\n\n\t\t\tuvB.sub( uvA );\n\t\t\tuvC.sub( uvA );\n\n\t\t\tconst r = 1.0 / ( uvB.x * uvC.y - uvC.x * uvB.y );\n\n\t\t\t// silently ignore degenerate uv triangles having coincident or colinear vertices\n\n\t\t\tif ( ! isFinite( r ) ) return;\n\n\t\t\tsdir.copy( vB ).multiplyScalar( uvC.y ).addScaledVector( vC, - uvB.y ).multiplyScalar( r );\n\t\t\ttdir.copy( vC ).multiplyScalar( uvB.x ).addScaledVector( vB, - uvC.x ).multiplyScalar( r );\n\n\t\t\ttan1[ a ].add( sdir );\n\t\t\ttan1[ b ].add( sdir );\n\t\t\ttan1[ c ].add( sdir );\n\n\t\t\ttan2[ a ].add( tdir );\n\t\t\ttan2[ b ].add( tdir );\n\t\t\ttan2[ c ].add( tdir );\n\n\t\t}\n\n\t\tlet groups = this.groups;\n\n\t\tif ( groups.length === 0 ) {\n\n\t\t\tgroups = [ {\n\t\t\t\tstart: 0,\n\t\t\t\tcount: index.count\n\t\t\t} ];\n\n\t\t}\n\n\t\tfor ( let i = 0, il = groups.length; i < il; ++ i ) {\n\n\t\t\tconst group = groups[ i ];\n\n\t\t\tconst start = group.start;\n\t\t\tconst count = group.count;\n\n\t\t\tfor ( let j = start, jl = start + count; j < jl; j += 3 ) {\n\n\t\t\t\thandleTriangle(\n\t\t\t\t\tindex.getX( j + 0 ),\n\t\t\t\t\tindex.getX( j + 1 ),\n\t\t\t\t\tindex.getX( j + 2 )\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst tmp = new Vector3(), tmp2 = new Vector3();\n\t\tconst n = new Vector3(), n2 = new Vector3();\n\n\t\tfunction handleVertex( v ) {\n\n\t\t\tn.fromBufferAttribute( normalAttribute, v );\n\t\t\tn2.copy( n );\n\n\t\t\tconst t = tan1[ v ];\n\n\t\t\t// Gram-Schmidt orthogonalize\n\n\t\t\ttmp.copy( t );\n\t\t\ttmp.sub( n.multiplyScalar( n.dot( t ) ) ).normalize();\n\n\t\t\t// Calculate handedness\n\n\t\t\ttmp2.crossVectors( n2, t );\n\t\t\tconst test = tmp2.dot( tan2[ v ] );\n\t\t\tconst w = ( test < 0.0 ) ? - 1.0 : 1.0;\n\n\t\t\ttangentAttribute.setXYZW( v, tmp.x, tmp.y, tmp.z, w );\n\n\t\t}\n\n\t\tfor ( let i = 0, il = groups.length; i < il; ++ i ) {\n\n\t\t\tconst group = groups[ i ];\n\n\t\t\tconst start = group.start;\n\t\t\tconst count = group.count;\n\n\t\t\tfor ( let j = start, jl = start + count; j < jl; j += 3 ) {\n\n\t\t\t\thandleVertex( index.getX( j + 0 ) );\n\t\t\t\thandleVertex( index.getX( j + 1 ) );\n\t\t\t\thandleVertex( index.getX( j + 2 ) );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcomputeVertexNormals() {\n\n\t\tconst index = this.index;\n\t\tconst positionAttribute = this.getAttribute( 'position' );\n\n\t\tif ( positionAttribute !== undefined ) {\n\n\t\t\tlet normalAttribute = this.getAttribute( 'normal' );\n\n\t\t\tif ( normalAttribute === undefined ) {\n\n\t\t\t\tnormalAttribute = new BufferAttribute( new Float32Array( positionAttribute.count * 3 ), 3 );\n\t\t\t\tthis.setAttribute( 'normal', normalAttribute );\n\n\t\t\t} else {\n\n\t\t\t\t// reset existing normals to zero\n\n\t\t\t\tfor ( let i = 0, il = normalAttribute.count; i < il; i ++ ) {\n\n\t\t\t\t\tnormalAttribute.setXYZ( i, 0, 0, 0 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst pA = new Vector3(), pB = new Vector3(), pC = new Vector3();\n\t\t\tconst nA = new Vector3(), nB = new Vector3(), nC = new Vector3();\n\t\t\tconst cb = new Vector3(), ab = new Vector3();\n\n\t\t\t// indexed elements\n\n\t\t\tif ( index ) {\n\n\t\t\t\tfor ( let i = 0, il = index.count; i < il; i += 3 ) {\n\n\t\t\t\t\tconst vA = index.getX( i + 0 );\n\t\t\t\t\tconst vB = index.getX( i + 1 );\n\t\t\t\t\tconst vC = index.getX( i + 2 );\n\n\t\t\t\t\tpA.fromBufferAttribute( positionAttribute, vA );\n\t\t\t\t\tpB.fromBufferAttribute( positionAttribute, vB );\n\t\t\t\t\tpC.fromBufferAttribute( positionAttribute, vC );\n\n\t\t\t\t\tcb.subVectors( pC, pB );\n\t\t\t\t\tab.subVectors( pA, pB );\n\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\tnA.fromBufferAttribute( normalAttribute, vA );\n\t\t\t\t\tnB.fromBufferAttribute( normalAttribute, vB );\n\t\t\t\t\tnC.fromBufferAttribute( normalAttribute, vC );\n\n\t\t\t\t\tnA.add( cb );\n\t\t\t\t\tnB.add( cb );\n\t\t\t\t\tnC.add( cb );\n\n\t\t\t\t\tnormalAttribute.setXYZ( vA, nA.x, nA.y, nA.z );\n\t\t\t\t\tnormalAttribute.setXYZ( vB, nB.x, nB.y, nB.z );\n\t\t\t\t\tnormalAttribute.setXYZ( vC, nC.x, nC.y, nC.z );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// non-indexed elements (unconnected triangle soup)\n\n\t\t\t\tfor ( let i = 0, il = positionAttribute.count; i < il; i += 3 ) {\n\n\t\t\t\t\tpA.fromBufferAttribute( positionAttribute, i + 0 );\n\t\t\t\t\tpB.fromBufferAttribute( positionAttribute, i + 1 );\n\t\t\t\t\tpC.fromBufferAttribute( positionAttribute, i + 2 );\n\n\t\t\t\t\tcb.subVectors( pC, pB );\n\t\t\t\t\tab.subVectors( pA, pB );\n\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\tnormalAttribute.setXYZ( i + 0, cb.x, cb.y, cb.z );\n\t\t\t\t\tnormalAttribute.setXYZ( i + 1, cb.x, cb.y, cb.z );\n\t\t\t\t\tnormalAttribute.setXYZ( i + 2, cb.x, cb.y, cb.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.normalizeNormals();\n\n\t\t\tnormalAttribute.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n\tnormalizeNormals() {\n\n\t\tconst normals = this.attributes.normal;\n\n\t\tfor ( let i = 0, il = normals.count; i < il; i ++ ) {\n\n\t\t\t_vector$8.fromBufferAttribute( normals, i );\n\n\t\t\t_vector$8.normalize();\n\n\t\t\tnormals.setXYZ( i, _vector$8.x, _vector$8.y, _vector$8.z );\n\n\t\t}\n\n\t}\n\n\ttoNonIndexed() {\n\n\t\tfunction convertBufferAttribute( attribute, indices ) {\n\n\t\t\tconst array = attribute.array;\n\t\t\tconst itemSize = attribute.itemSize;\n\t\t\tconst normalized = attribute.normalized;\n\n\t\t\tconst array2 = new array.constructor( indices.length * itemSize );\n\n\t\t\tlet index = 0, index2 = 0;\n\n\t\t\tfor ( let i = 0, l = indices.length; i < l; i ++ ) {\n\n\t\t\t\tif ( attribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\t\tindex = indices[ i ] * attribute.data.stride + attribute.offset;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tindex = indices[ i ] * itemSize;\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let j = 0; j < itemSize; j ++ ) {\n\n\t\t\t\t\tarray2[ index2 ++ ] = array[ index ++ ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn new BufferAttribute( array2, itemSize, normalized );\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.index === null ) {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed.' );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst geometry2 = new BufferGeometry();\n\n\t\tconst indices = this.index.array;\n\t\tconst attributes = this.attributes;\n\n\t\t// attributes\n\n\t\tfor ( const name in attributes ) {\n\n\t\t\tconst attribute = attributes[ name ];\n\n\t\t\tconst newAttribute = convertBufferAttribute( attribute, indices );\n\n\t\t\tgeometry2.setAttribute( name, newAttribute );\n\n\t\t}\n\n\t\t// morph attributes\n\n\t\tconst morphAttributes = this.morphAttributes;\n\n\t\tfor ( const name in morphAttributes ) {\n\n\t\t\tconst morphArray = [];\n\t\t\tconst morphAttribute = morphAttributes[ name ]; // morphAttribute: array of Float32BufferAttributes\n\n\t\t\tfor ( let i = 0, il = morphAttribute.length; i < il; i ++ ) {\n\n\t\t\t\tconst attribute = morphAttribute[ i ];\n\n\t\t\t\tconst newAttribute = convertBufferAttribute( attribute, indices );\n\n\t\t\t\tmorphArray.push( newAttribute );\n\n\t\t\t}\n\n\t\t\tgeometry2.morphAttributes[ name ] = morphArray;\n\n\t\t}\n\n\t\tgeometry2.morphTargetsRelative = this.morphTargetsRelative;\n\n\t\t// groups\n\n\t\tconst groups = this.groups;\n\n\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\tconst group = groups[ i ];\n\t\t\tgeometry2.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t}\n\n\t\treturn geometry2;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.6,\n\t\t\t\ttype: 'BufferGeometry',\n\t\t\t\tgenerator: 'BufferGeometry.toJSON'\n\t\t\t}\n\t\t};\n\n\t\t// standard BufferGeometry serialization\n\n\t\tdata.uuid = this.uuid;\n\t\tdata.type = this.type;\n\t\tif ( this.name !== '' ) data.name = this.name;\n\t\tif ( Object.keys( this.userData ).length > 0 ) data.userData = this.userData;\n\n\t\tif ( this.parameters !== undefined ) {\n\n\t\t\tconst parameters = this.parameters;\n\n\t\t\tfor ( const key in parameters ) {\n\n\t\t\t\tif ( parameters[ key ] !== undefined ) data[ key ] = parameters[ key ];\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\t// for simplicity the code assumes attributes are not shared across geometries, see #15811\n\n\t\tdata.data = { attributes: {} };\n\n\t\tconst index = this.index;\n\n\t\tif ( index !== null ) {\n\n\t\t\tdata.data.index = {\n\t\t\t\ttype: index.array.constructor.name,\n\t\t\t\tarray: Array.prototype.slice.call( index.array )\n\t\t\t};\n\n\t\t}\n\n\t\tconst attributes = this.attributes;\n\n\t\tfor ( const key in attributes ) {\n\n\t\t\tconst attribute = attributes[ key ];\n\n\t\t\tdata.data.attributes[ key ] = attribute.toJSON( data.data );\n\n\t\t}\n\n\t\tconst morphAttributes = {};\n\t\tlet hasMorphAttributes = false;\n\n\t\tfor ( const key in this.morphAttributes ) {\n\n\t\t\tconst attributeArray = this.morphAttributes[ key ];\n\n\t\t\tconst array = [];\n\n\t\t\tfor ( let i = 0, il = attributeArray.length; i < il; i ++ ) {\n\n\t\t\t\tconst attribute = attributeArray[ i ];\n\n\t\t\t\tarray.push( attribute.toJSON( data.data ) );\n\n\t\t\t}\n\n\t\t\tif ( array.length > 0 ) {\n\n\t\t\t\tmorphAttributes[ key ] = array;\n\n\t\t\t\thasMorphAttributes = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( hasMorphAttributes ) {\n\n\t\t\tdata.data.morphAttributes = morphAttributes;\n\t\t\tdata.data.morphTargetsRelative = this.morphTargetsRelative;\n\n\t\t}\n\n\t\tconst groups = this.groups;\n\n\t\tif ( groups.length > 0 ) {\n\n\t\t\tdata.data.groups = JSON.parse( JSON.stringify( groups ) );\n\n\t\t}\n\n\t\tconst boundingSphere = this.boundingSphere;\n\n\t\tif ( boundingSphere !== null ) {\n\n\t\t\tdata.data.boundingSphere = {\n\t\t\t\tcenter: boundingSphere.center.toArray(),\n\t\t\t\tradius: boundingSphere.radius\n\t\t\t};\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\t// reset\n\n\t\tthis.index = null;\n\t\tthis.attributes = {};\n\t\tthis.morphAttributes = {};\n\t\tthis.groups = [];\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\t// used for storing cloned, shared data\n\n\t\tconst data = {};\n\n\t\t// name\n\n\t\tthis.name = source.name;\n\n\t\t// index\n\n\t\tconst index = source.index;\n\n\t\tif ( index !== null ) {\n\n\t\t\tthis.setIndex( index.clone( data ) );\n\n\t\t}\n\n\t\t// attributes\n\n\t\tconst attributes = source.attributes;\n\n\t\tfor ( const name in attributes ) {\n\n\t\t\tconst attribute = attributes[ name ];\n\t\t\tthis.setAttribute( name, attribute.clone( data ) );\n\n\t\t}\n\n\t\t// morph attributes\n\n\t\tconst morphAttributes = source.morphAttributes;\n\n\t\tfor ( const name in morphAttributes ) {\n\n\t\t\tconst array = [];\n\t\t\tconst morphAttribute = morphAttributes[ name ]; // morphAttribute: array of Float32BufferAttributes\n\n\t\t\tfor ( let i = 0, l = morphAttribute.length; i < l; i ++ ) {\n\n\t\t\t\tarray.push( morphAttribute[ i ].clone( data ) );\n\n\t\t\t}\n\n\t\t\tthis.morphAttributes[ name ] = array;\n\n\t\t}\n\n\t\tthis.morphTargetsRelative = source.morphTargetsRelative;\n\n\t\t// groups\n\n\t\tconst groups = source.groups;\n\n\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\tconst group = groups[ i ];\n\t\t\tthis.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t}\n\n\t\t// bounding box\n\n\t\tconst boundingBox = source.boundingBox;\n\n\t\tif ( boundingBox !== null ) {\n\n\t\t\tthis.boundingBox = boundingBox.clone();\n\n\t\t}\n\n\t\t// bounding sphere\n\n\t\tconst boundingSphere = source.boundingSphere;\n\n\t\tif ( boundingSphere !== null ) {\n\n\t\t\tthis.boundingSphere = boundingSphere.clone();\n\n\t\t}\n\n\t\t// draw range\n\n\t\tthis.drawRange.start = source.drawRange.start;\n\t\tthis.drawRange.count = source.drawRange.count;\n\n\t\t// user data\n\n\t\tthis.userData = source.userData;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n}\n\nconst _inverseMatrix$3 = /*@__PURE__*/ new Matrix4();\nconst _ray$3 = /*@__PURE__*/ new Ray();\nconst _sphere$6 = /*@__PURE__*/ new Sphere();\nconst _sphereHitAt = /*@__PURE__*/ new Vector3();\n\nconst _vA$1 = /*@__PURE__*/ new Vector3();\nconst _vB$1 = /*@__PURE__*/ new Vector3();\nconst _vC$1 = /*@__PURE__*/ new Vector3();\n\nconst _tempA = /*@__PURE__*/ new Vector3();\nconst _morphA = /*@__PURE__*/ new Vector3();\n\nconst _uvA$1 = /*@__PURE__*/ new Vector2();\nconst _uvB$1 = /*@__PURE__*/ new Vector2();\nconst _uvC$1 = /*@__PURE__*/ new Vector2();\n\nconst _normalA = /*@__PURE__*/ new Vector3();\nconst _normalB = /*@__PURE__*/ new Vector3();\nconst _normalC = /*@__PURE__*/ new Vector3();\n\nconst _intersectionPoint = /*@__PURE__*/ new Vector3();\nconst _intersectionPointWorld = /*@__PURE__*/ new Vector3();\n\nclass Mesh extends Object3D {\n\n\tconstructor( geometry = new BufferGeometry(), material = new MeshBasicMaterial() ) {\n\n\t\tsuper();\n\n\t\tthis.isMesh = true;\n\n\t\tthis.type = 'Mesh';\n\n\t\tthis.geometry = geometry;\n\t\tthis.material = material;\n\n\t\tthis.updateMorphTargets();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tif ( source.morphTargetInfluences !== undefined ) {\n\n\t\t\tthis.morphTargetInfluences = source.morphTargetInfluences.slice();\n\n\t\t}\n\n\t\tif ( source.morphTargetDictionary !== undefined ) {\n\n\t\t\tthis.morphTargetDictionary = Object.assign( {}, source.morphTargetDictionary );\n\n\t\t}\n\n\t\tthis.material = Array.isArray( source.material ) ? source.material.slice() : source.material;\n\t\tthis.geometry = source.geometry;\n\n\t\treturn this;\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tconst morphAttributes = geometry.morphAttributes;\n\t\tconst keys = Object.keys( morphAttributes );\n\n\t\tif ( keys.length > 0 ) {\n\n\t\t\tconst morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\tfor ( let m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\tconst name = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tgetVertexPosition( index, target ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst position = geometry.attributes.position;\n\t\tconst morphPosition = geometry.morphAttributes.position;\n\t\tconst morphTargetsRelative = geometry.morphTargetsRelative;\n\n\t\ttarget.fromBufferAttribute( position, index );\n\n\t\tconst morphInfluences = this.morphTargetInfluences;\n\n\t\tif ( morphPosition && morphInfluences ) {\n\n\t\t\t_morphA.set( 0, 0, 0 );\n\n\t\t\tfor ( let i = 0, il = morphPosition.length; i < il; i ++ ) {\n\n\t\t\t\tconst influence = morphInfluences[ i ];\n\t\t\t\tconst morphAttribute = morphPosition[ i ];\n\n\t\t\t\tif ( influence === 0 ) continue;\n\n\t\t\t\t_tempA.fromBufferAttribute( morphAttribute, index );\n\n\t\t\t\tif ( morphTargetsRelative ) {\n\n\t\t\t\t\t_morphA.addScaledVector( _tempA, influence );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_morphA.addScaledVector( _tempA.sub( target ), influence );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\ttarget.add( _morphA );\n\n\t\t}\n\n\t\treturn target;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst material = this.material;\n\t\tconst matrixWorld = this.matrixWorld;\n\n\t\tif ( material === undefined ) return;\n\n\t\t// test with bounding sphere in world space\n\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t_sphere$6.copy( geometry.boundingSphere );\n\t\t_sphere$6.applyMatrix4( matrixWorld );\n\n\t\t// check distance from ray origin to bounding sphere\n\n\t\t_ray$3.copy( raycaster.ray ).recast( raycaster.near );\n\n\t\tif ( _sphere$6.containsPoint( _ray$3.origin ) === false ) {\n\n\t\t\tif ( _ray$3.intersectSphere( _sphere$6, _sphereHitAt ) === null ) return;\n\n\t\t\tif ( _ray$3.origin.distanceToSquared( _sphereHitAt ) > ( raycaster.far - raycaster.near ) ** 2 ) return;\n\n\t\t}\n\n\t\t// convert ray to local space of mesh\n\n\t\t_inverseMatrix$3.copy( matrixWorld ).invert();\n\t\t_ray$3.copy( raycaster.ray ).applyMatrix4( _inverseMatrix$3 );\n\n\t\t// test with bounding box in local space\n\n\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\tif ( _ray$3.intersectsBox( geometry.boundingBox ) === false ) return;\n\n\t\t}\n\n\t\t// test for intersections with geometry\n\n\t\tthis._computeIntersections( raycaster, intersects, _ray$3 );\n\n\t}\n\n\t_computeIntersections( raycaster, intersects, rayLocalSpace ) {\n\n\t\tlet intersection;\n\n\t\tconst geometry = this.geometry;\n\t\tconst material = this.material;\n\n\t\tconst index = geometry.index;\n\t\tconst position = geometry.attributes.position;\n\t\tconst uv = geometry.attributes.uv;\n\t\tconst uv1 = geometry.attributes.uv1;\n\t\tconst normal = geometry.attributes.normal;\n\t\tconst groups = geometry.groups;\n\t\tconst drawRange = geometry.drawRange;\n\n\t\tif ( index !== null ) {\n\n\t\t\t// indexed buffer geometry\n\n\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\tfor ( let i = 0, il = groups.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst group = groups[ i ];\n\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\tconst start = Math.max( group.start, drawRange.start );\n\t\t\t\t\tconst end = Math.min( index.count, Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) ) );\n\n\t\t\t\t\tfor ( let j = start, jl = end; j < jl; j += 3 ) {\n\n\t\t\t\t\t\tconst a = index.getX( j );\n\t\t\t\t\t\tconst b = index.getX( j + 1 );\n\t\t\t\t\t\tconst c = index.getX( j + 2 );\n\n\t\t\t\t\t\tintersection = checkGeometryIntersection( this, groupMaterial, raycaster, rayLocalSpace, uv, uv1, normal, a, b, c );\n\n\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( j / 3 ); // triangle number in indexed buffer semantics\n\t\t\t\t\t\t\tintersection.face.materialIndex = group.materialIndex;\n\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\t\tconst end = Math.min( index.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\t\tfor ( let i = start, il = end; i < il; i += 3 ) {\n\n\t\t\t\t\tconst a = index.getX( i );\n\t\t\t\t\tconst b = index.getX( i + 1 );\n\t\t\t\t\tconst c = index.getX( i + 2 );\n\n\t\t\t\t\tintersection = checkGeometryIntersection( this, material, raycaster, rayLocalSpace, uv, uv1, normal, a, b, c );\n\n\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\tintersection.faceIndex = Math.floor( i / 3 ); // triangle number in indexed buffer semantics\n\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else if ( position !== undefined ) {\n\n\t\t\t// non-indexed buffer geometry\n\n\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\tfor ( let i = 0, il = groups.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst group = groups[ i ];\n\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\tconst start = Math.max( group.start, drawRange.start );\n\t\t\t\t\tconst end = Math.min( position.count, Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) ) );\n\n\t\t\t\t\tfor ( let j = start, jl = end; j < jl; j += 3 ) {\n\n\t\t\t\t\t\tconst a = j;\n\t\t\t\t\t\tconst b = j + 1;\n\t\t\t\t\t\tconst c = j + 2;\n\n\t\t\t\t\t\tintersection = checkGeometryIntersection( this, groupMaterial, raycaster, rayLocalSpace, uv, uv1, normal, a, b, c );\n\n\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( j / 3 ); // triangle number in non-indexed buffer semantics\n\t\t\t\t\t\t\tintersection.face.materialIndex = group.materialIndex;\n\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\t\tconst end = Math.min( position.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\t\tfor ( let i = start, il = end; i < il; i += 3 ) {\n\n\t\t\t\t\tconst a = i;\n\t\t\t\t\tconst b = i + 1;\n\t\t\t\t\tconst c = i + 2;\n\n\t\t\t\t\tintersection = checkGeometryIntersection( this, material, raycaster, rayLocalSpace, uv, uv1, normal, a, b, c );\n\n\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\tintersection.faceIndex = Math.floor( i / 3 ); // triangle number in non-indexed buffer semantics\n\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nfunction checkIntersection$1( object, material, raycaster, ray, pA, pB, pC, point ) {\n\n\tlet intersect;\n\n\tif ( material.side === BackSide ) {\n\n\t\tintersect = ray.intersectTriangle( pC, pB, pA, true, point );\n\n\t} else {\n\n\t\tintersect = ray.intersectTriangle( pA, pB, pC, ( material.side === FrontSide ), point );\n\n\t}\n\n\tif ( intersect === null ) return null;\n\n\t_intersectionPointWorld.copy( point );\n\t_intersectionPointWorld.applyMatrix4( object.matrixWorld );\n\n\tconst distance = raycaster.ray.origin.distanceTo( _intersectionPointWorld );\n\n\tif ( distance < raycaster.near || distance > raycaster.far ) return null;\n\n\treturn {\n\t\tdistance: distance,\n\t\tpoint: _intersectionPointWorld.clone(),\n\t\tobject: object\n\t};\n\n}\n\nfunction checkGeometryIntersection( object, material, raycaster, ray, uv, uv1, normal, a, b, c ) {\n\n\tobject.getVertexPosition( a, _vA$1 );\n\tobject.getVertexPosition( b, _vB$1 );\n\tobject.getVertexPosition( c, _vC$1 );\n\n\tconst intersection = checkIntersection$1( object, material, raycaster, ray, _vA$1, _vB$1, _vC$1, _intersectionPoint );\n\n\tif ( intersection ) {\n\n\t\tif ( uv ) {\n\n\t\t\t_uvA$1.fromBufferAttribute( uv, a );\n\t\t\t_uvB$1.fromBufferAttribute( uv, b );\n\t\t\t_uvC$1.fromBufferAttribute( uv, c );\n\n\t\t\tintersection.uv = Triangle.getInterpolation( _intersectionPoint, _vA$1, _vB$1, _vC$1, _uvA$1, _uvB$1, _uvC$1, new Vector2() );\n\n\t\t}\n\n\t\tif ( uv1 ) {\n\n\t\t\t_uvA$1.fromBufferAttribute( uv1, a );\n\t\t\t_uvB$1.fromBufferAttribute( uv1, b );\n\t\t\t_uvC$1.fromBufferAttribute( uv1, c );\n\n\t\t\tintersection.uv1 = Triangle.getInterpolation( _intersectionPoint, _vA$1, _vB$1, _vC$1, _uvA$1, _uvB$1, _uvC$1, new Vector2() );\n\n\t\t}\n\n\t\tif ( normal ) {\n\n\t\t\t_normalA.fromBufferAttribute( normal, a );\n\t\t\t_normalB.fromBufferAttribute( normal, b );\n\t\t\t_normalC.fromBufferAttribute( normal, c );\n\n\t\t\tintersection.normal = Triangle.getInterpolation( _intersectionPoint, _vA$1, _vB$1, _vC$1, _normalA, _normalB, _normalC, new Vector3() );\n\n\t\t\tif ( intersection.normal.dot( ray.direction ) > 0 ) {\n\n\t\t\t\tintersection.normal.multiplyScalar( - 1 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst face = {\n\t\t\ta: a,\n\t\t\tb: b,\n\t\t\tc: c,\n\t\t\tnormal: new Vector3(),\n\t\t\tmaterialIndex: 0\n\t\t};\n\n\t\tTriangle.getNormal( _vA$1, _vB$1, _vC$1, face.normal );\n\n\t\tintersection.face = face;\n\n\t}\n\n\treturn intersection;\n\n}\n\nclass BoxGeometry extends BufferGeometry {\n\n\tconstructor( width = 1, height = 1, depth = 1, widthSegments = 1, heightSegments = 1, depthSegments = 1 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'BoxGeometry';\n\n\t\tthis.parameters = {\n\t\t\twidth: width,\n\t\t\theight: height,\n\t\t\tdepth: depth,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\tdepthSegments: depthSegments\n\t\t};\n\n\t\tconst scope = this;\n\n\t\t// segments\n\n\t\twidthSegments = Math.floor( widthSegments );\n\t\theightSegments = Math.floor( heightSegments );\n\t\tdepthSegments = Math.floor( depthSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tlet numberOfVertices = 0;\n\t\tlet groupStart = 0;\n\n\t\t// build each side of the box geometry\n\n\t\tbuildPlane( 'z', 'y', 'x', - 1, - 1, depth, height, width, depthSegments, heightSegments, 0 ); // px\n\t\tbuildPlane( 'z', 'y', 'x', 1, - 1, depth, height, - width, depthSegments, heightSegments, 1 ); // nx\n\t\tbuildPlane( 'x', 'z', 'y', 1, 1, width, depth, height, widthSegments, depthSegments, 2 ); // py\n\t\tbuildPlane( 'x', 'z', 'y', 1, - 1, width, depth, - height, widthSegments, depthSegments, 3 ); // ny\n\t\tbuildPlane( 'x', 'y', 'z', 1, - 1, width, height, depth, widthSegments, heightSegments, 4 ); // pz\n\t\tbuildPlane( 'x', 'y', 'z', - 1, - 1, width, height, - depth, widthSegments, heightSegments, 5 ); // nz\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\tfunction buildPlane( u, v, w, udir, vdir, width, height, depth, gridX, gridY, materialIndex ) {\n\n\t\t\tconst segmentWidth = width / gridX;\n\t\t\tconst segmentHeight = height / gridY;\n\n\t\t\tconst widthHalf = width / 2;\n\t\t\tconst heightHalf = height / 2;\n\t\t\tconst depthHalf = depth / 2;\n\n\t\t\tconst gridX1 = gridX + 1;\n\t\t\tconst gridY1 = gridY + 1;\n\n\t\t\tlet vertexCounter = 0;\n\t\t\tlet groupCount = 0;\n\n\t\t\tconst vector = new Vector3();\n\n\t\t\t// generate vertices, normals and uvs\n\n\t\t\tfor ( let iy = 0; iy < gridY1; iy ++ ) {\n\n\t\t\t\tconst y = iy * segmentHeight - heightHalf;\n\n\t\t\t\tfor ( let ix = 0; ix < gridX1; ix ++ ) {\n\n\t\t\t\t\tconst x = ix * segmentWidth - widthHalf;\n\n\t\t\t\t\t// set values to correct vector component\n\n\t\t\t\t\tvector[ u ] = x * udir;\n\t\t\t\t\tvector[ v ] = y * vdir;\n\t\t\t\t\tvector[ w ] = depthHalf;\n\n\t\t\t\t\t// now apply vector to vertex buffer\n\n\t\t\t\t\tvertices.push( vector.x, vector.y, vector.z );\n\n\t\t\t\t\t// set values to correct vector component\n\n\t\t\t\t\tvector[ u ] = 0;\n\t\t\t\t\tvector[ v ] = 0;\n\t\t\t\t\tvector[ w ] = depth > 0 ? 1 : - 1;\n\n\t\t\t\t\t// now apply vector to normal buffer\n\n\t\t\t\t\tnormals.push( vector.x, vector.y, vector.z );\n\n\t\t\t\t\t// uvs\n\n\t\t\t\t\tuvs.push( ix / gridX );\n\t\t\t\t\tuvs.push( 1 - ( iy / gridY ) );\n\n\t\t\t\t\t// counters\n\n\t\t\t\t\tvertexCounter += 1;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// indices\n\n\t\t\t// 1. you need three indices to draw a single face\n\t\t\t// 2. a single segment consists of two faces\n\t\t\t// 3. so we need to generate six (2*3) indices per segment\n\n\t\t\tfor ( let iy = 0; iy < gridY; iy ++ ) {\n\n\t\t\t\tfor ( let ix = 0; ix < gridX; ix ++ ) {\n\n\t\t\t\t\tconst a = numberOfVertices + ix + gridX1 * iy;\n\t\t\t\t\tconst b = numberOfVertices + ix + gridX1 * ( iy + 1 );\n\t\t\t\t\tconst c = numberOfVertices + ( ix + 1 ) + gridX1 * ( iy + 1 );\n\t\t\t\t\tconst d = numberOfVertices + ( ix + 1 ) + gridX1 * iy;\n\n\t\t\t\t\t// faces\n\n\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t\t// increase counter\n\n\t\t\t\t\tgroupCount += 6;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\t\tscope.addGroup( groupStart, groupCount, materialIndex );\n\n\t\t\t// calculate new start value for groups\n\n\t\t\tgroupStart += groupCount;\n\n\t\t\t// update total number of vertices\n\n\t\t\tnumberOfVertices += vertexCounter;\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new BoxGeometry( data.width, data.height, data.depth, data.widthSegments, data.heightSegments, data.depthSegments );\n\n\t}\n\n}\n\n/**\n * Uniform Utilities\n */\n\nfunction cloneUniforms( src ) {\n\n\tconst dst = {};\n\n\tfor ( const u in src ) {\n\n\t\tdst[ u ] = {};\n\n\t\tfor ( const p in src[ u ] ) {\n\n\t\t\tconst property = src[ u ][ p ];\n\n\t\t\tif ( property && ( property.isColor ||\n\t\t\t\tproperty.isMatrix3 || property.isMatrix4 ||\n\t\t\t\tproperty.isVector2 || property.isVector3 || property.isVector4 ||\n\t\t\t\tproperty.isTexture || property.isQuaternion ) ) {\n\n\t\t\t\tif ( property.isRenderTargetTexture ) {\n\n\t\t\t\t\tconsole.warn( 'UniformsUtils: Textures of render targets cannot be cloned via cloneUniforms() or mergeUniforms().' );\n\t\t\t\t\tdst[ u ][ p ] = null;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tdst[ u ][ p ] = property.clone();\n\n\t\t\t\t}\n\n\t\t\t} else if ( Array.isArray( property ) ) {\n\n\t\t\t\tdst[ u ][ p ] = property.slice();\n\n\t\t\t} else {\n\n\t\t\t\tdst[ u ][ p ] = property;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn dst;\n\n}\n\nfunction mergeUniforms( uniforms ) {\n\n\tconst merged = {};\n\n\tfor ( let u = 0; u < uniforms.length; u ++ ) {\n\n\t\tconst tmp = cloneUniforms( uniforms[ u ] );\n\n\t\tfor ( const p in tmp ) {\n\n\t\t\tmerged[ p ] = tmp[ p ];\n\n\t\t}\n\n\t}\n\n\treturn merged;\n\n}\n\nfunction cloneUniformsGroups( src ) {\n\n\tconst dst = [];\n\n\tfor ( let u = 0; u < src.length; u ++ ) {\n\n\t\tdst.push( src[ u ].clone() );\n\n\t}\n\n\treturn dst;\n\n}\n\nfunction getUnlitUniformColorSpace( renderer ) {\n\n\tconst currentRenderTarget = renderer.getRenderTarget();\n\n\tif ( currentRenderTarget === null ) {\n\n\t\t// https://github.com/mrdoob/three.js/pull/23937#issuecomment-1111067398\n\t\treturn renderer.outputColorSpace;\n\n\t}\n\n\t// https://github.com/mrdoob/three.js/issues/27868\n\tif ( currentRenderTarget.isXRRenderTarget === true ) {\n\n\t\treturn currentRenderTarget.texture.colorSpace;\n\n\t}\n\n\treturn ColorManagement.workingColorSpace;\n\n}\n\n// Legacy\n\nconst UniformsUtils = { clone: cloneUniforms, merge: mergeUniforms };\n\nvar default_vertex = \"void main() {\\n\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}\";\n\nvar default_fragment = \"void main() {\\n\\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\\n}\";\n\nclass ShaderMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isShaderMaterial = true;\n\n\t\tthis.type = 'ShaderMaterial';\n\n\t\tthis.defines = {};\n\t\tthis.uniforms = {};\n\t\tthis.uniformsGroups = [];\n\n\t\tthis.vertexShader = default_vertex;\n\t\tthis.fragmentShader = default_fragment;\n\n\t\tthis.linewidth = 1;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.fog = false; // set to use scene fog\n\t\tthis.lights = false; // set to use scene lights\n\t\tthis.clipping = false; // set to use user-defined clipping planes\n\n\t\tthis.forceSinglePass = true;\n\n\t\tthis.extensions = {\n\t\t\tclipCullDistance: false, // set to use vertex shader clipping\n\t\t\tmultiDraw: false // set to use vertex shader multi_draw / enable gl_DrawID\n\t\t};\n\n\t\t// When rendered geometry doesn't include these attributes but the material does,\n\t\t// use these default values in WebGL. This avoids errors when buffer data is missing.\n\t\tthis.defaultAttributeValues = {\n\t\t\t'color': [ 1, 1, 1 ],\n\t\t\t'uv': [ 0, 0 ],\n\t\t\t'uv1': [ 0, 0 ]\n\t\t};\n\n\t\tthis.index0AttributeName = undefined;\n\t\tthis.uniformsNeedUpdate = false;\n\n\t\tthis.glslVersion = null;\n\n\t\tif ( parameters !== undefined ) {\n\n\t\t\tthis.setValues( parameters );\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.fragmentShader = source.fragmentShader;\n\t\tthis.vertexShader = source.vertexShader;\n\n\t\tthis.uniforms = cloneUniforms( source.uniforms );\n\t\tthis.uniformsGroups = cloneUniformsGroups( source.uniformsGroups );\n\n\t\tthis.defines = Object.assign( {}, source.defines );\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\tthis.fog = source.fog;\n\t\tthis.lights = source.lights;\n\t\tthis.clipping = source.clipping;\n\n\t\tthis.extensions = Object.assign( {}, source.extensions );\n\n\t\tthis.glslVersion = source.glslVersion;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.glslVersion = this.glslVersion;\n\t\tdata.uniforms = {};\n\n\t\tfor ( const name in this.uniforms ) {\n\n\t\t\tconst uniform = this.uniforms[ name ];\n\t\t\tconst value = uniform.value;\n\n\t\t\tif ( value && value.isTexture ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 't',\n\t\t\t\t\tvalue: value.toJSON( meta ).uuid\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isColor ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'c',\n\t\t\t\t\tvalue: value.getHex()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isVector2 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'v2',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isVector3 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'v3',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isVector4 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'v4',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isMatrix3 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'm3',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isMatrix4 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'm4',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\tvalue: value\n\t\t\t\t};\n\n\t\t\t\t// note: the array variants v2v, v3v, v4v, m4v and tv are not supported so far\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( Object.keys( this.defines ).length > 0 ) data.defines = this.defines;\n\n\t\tdata.vertexShader = this.vertexShader;\n\t\tdata.fragmentShader = this.fragmentShader;\n\n\t\tdata.lights = this.lights;\n\t\tdata.clipping = this.clipping;\n\n\t\tconst extensions = {};\n\n\t\tfor ( const key in this.extensions ) {\n\n\t\t\tif ( this.extensions[ key ] === true ) extensions[ key ] = true;\n\n\t\t}\n\n\t\tif ( Object.keys( extensions ).length > 0 ) data.extensions = extensions;\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass Camera extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isCamera = true;\n\n\t\tthis.type = 'Camera';\n\n\t\tthis.matrixWorldInverse = new Matrix4();\n\n\t\tthis.projectionMatrix = new Matrix4();\n\t\tthis.projectionMatrixInverse = new Matrix4();\n\n\t\tthis.coordinateSystem = WebGLCoordinateSystem;\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.matrixWorldInverse.copy( source.matrixWorldInverse );\n\n\t\tthis.projectionMatrix.copy( source.projectionMatrix );\n\t\tthis.projectionMatrixInverse.copy( source.projectionMatrixInverse );\n\n\t\tthis.coordinateSystem = source.coordinateSystem;\n\n\t\treturn this;\n\n\t}\n\n\tgetWorldDirection( target ) {\n\n\t\treturn super.getWorldDirection( target ).negate();\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tthis.matrixWorldInverse.copy( this.matrixWorld ).invert();\n\n\t}\n\n\tupdateWorldMatrix( updateParents, updateChildren ) {\n\n\t\tsuper.updateWorldMatrix( updateParents, updateChildren );\n\n\t\tthis.matrixWorldInverse.copy( this.matrixWorld ).invert();\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _v3$1 = /*@__PURE__*/ new Vector3();\nconst _minTarget = /*@__PURE__*/ new Vector2();\nconst _maxTarget = /*@__PURE__*/ new Vector2();\n\n\nclass PerspectiveCamera extends Camera {\n\n\tconstructor( fov = 50, aspect = 1, near = 0.1, far = 2000 ) {\n\n\t\tsuper();\n\n\t\tthis.isPerspectiveCamera = true;\n\n\t\tthis.type = 'PerspectiveCamera';\n\n\t\tthis.fov = fov;\n\t\tthis.zoom = 1;\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\t\tthis.focus = 10;\n\n\t\tthis.aspect = aspect;\n\t\tthis.view = null;\n\n\t\tthis.filmGauge = 35;\t// width of the film (default in millimeters)\n\t\tthis.filmOffset = 0;\t// horizontal film offset (same unit as gauge)\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.fov = source.fov;\n\t\tthis.zoom = source.zoom;\n\n\t\tthis.near = source.near;\n\t\tthis.far = source.far;\n\t\tthis.focus = source.focus;\n\n\t\tthis.aspect = source.aspect;\n\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\n\n\t\tthis.filmGauge = source.filmGauge;\n\t\tthis.filmOffset = source.filmOffset;\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Sets the FOV by focal length in respect to the current .filmGauge.\n\t *\n\t * The default film gauge is 35, so that the focal length can be specified for\n\t * a 35mm (full frame) camera.\n\t *\n\t * Values for focal length and film gauge must have the same unit.\n\t */\n\tsetFocalLength( focalLength ) {\n\n\t\t/** see {@link http://www.bobatkins.com/photography/technical/field_of_view.html} */\n\t\tconst vExtentSlope = 0.5 * this.getFilmHeight() / focalLength;\n\n\t\tthis.fov = RAD2DEG * 2 * Math.atan( vExtentSlope );\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\t/**\n\t * Calculates the focal length from the current .fov and .filmGauge.\n\t */\n\tgetFocalLength() {\n\n\t\tconst vExtentSlope = Math.tan( DEG2RAD * 0.5 * this.fov );\n\n\t\treturn 0.5 * this.getFilmHeight() / vExtentSlope;\n\n\t}\n\n\tgetEffectiveFOV() {\n\n\t\treturn RAD2DEG * 2 * Math.atan(\n\t\t\tMath.tan( DEG2RAD * 0.5 * this.fov ) / this.zoom );\n\n\t}\n\n\tgetFilmWidth() {\n\n\t\t// film not completely covered in portrait format (aspect < 1)\n\t\treturn this.filmGauge * Math.min( this.aspect, 1 );\n\n\t}\n\n\tgetFilmHeight() {\n\n\t\t// film not completely covered in landscape format (aspect > 1)\n\t\treturn this.filmGauge / Math.max( this.aspect, 1 );\n\n\t}\n\n\t/**\n\t * Computes the 2D bounds of the camera's viewable rectangle at a given distance along the viewing direction.\n\t * Sets minTarget and maxTarget to the coordinates of the lower-left and upper-right corners of the view rectangle.\n\t */\n\tgetViewBounds( distance, minTarget, maxTarget ) {\n\n\t\t_v3$1.set( - 1, - 1, 0.5 ).applyMatrix4( this.projectionMatrixInverse );\n\n\t\tminTarget.set( _v3$1.x, _v3$1.y ).multiplyScalar( - distance / _v3$1.z );\n\n\t\t_v3$1.set( 1, 1, 0.5 ).applyMatrix4( this.projectionMatrixInverse );\n\n\t\tmaxTarget.set( _v3$1.x, _v3$1.y ).multiplyScalar( - distance / _v3$1.z );\n\n\t}\n\n\t/**\n\t * Computes the width and height of the camera's viewable rectangle at a given distance along the viewing direction.\n\t * Copies the result into the target Vector2, where x is width and y is height.\n\t */\n\tgetViewSize( distance, target ) {\n\n\t\tthis.getViewBounds( distance, _minTarget, _maxTarget );\n\n\t\treturn target.subVectors( _maxTarget, _minTarget );\n\n\t}\n\n\t/**\n\t * Sets an offset in a larger frustum. This is useful for multi-window or\n\t * multi-monitor/multi-machine setups.\n\t *\n\t * For example, if you have 3x2 monitors and each monitor is 1920x1080 and\n\t * the monitors are in grid like this\n\t *\n\t *   +---+---+---+\n\t *   | A | B | C |\n\t *   +---+---+---+\n\t *   | D | E | F |\n\t *   +---+---+---+\n\t *\n\t * then for each monitor you would call it like this\n\t *\n\t *   const w = 1920;\n\t *   const h = 1080;\n\t *   const fullWidth = w * 3;\n\t *   const fullHeight = h * 2;\n\t *\n\t *   --A--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 0, w, h );\n\t *   --B--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 0, w, h );\n\t *   --C--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 0, w, h );\n\t *   --D--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 1, w, h );\n\t *   --E--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 1, w, h );\n\t *   --F--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 1, w, h );\n\t *\n\t *   Note there is no reason monitors have to be the same size or in a grid.\n\t */\n\tsetViewOffset( fullWidth, fullHeight, x, y, width, height ) {\n\n\t\tthis.aspect = fullWidth / fullHeight;\n\n\t\tif ( this.view === null ) {\n\n\t\t\tthis.view = {\n\t\t\t\tenabled: true,\n\t\t\t\tfullWidth: 1,\n\t\t\t\tfullHeight: 1,\n\t\t\t\toffsetX: 0,\n\t\t\t\toffsetY: 0,\n\t\t\t\twidth: 1,\n\t\t\t\theight: 1\n\t\t\t};\n\n\t\t}\n\n\t\tthis.view.enabled = true;\n\t\tthis.view.fullWidth = fullWidth;\n\t\tthis.view.fullHeight = fullHeight;\n\t\tthis.view.offsetX = x;\n\t\tthis.view.offsetY = y;\n\t\tthis.view.width = width;\n\t\tthis.view.height = height;\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tclearViewOffset() {\n\n\t\tif ( this.view !== null ) {\n\n\t\t\tthis.view.enabled = false;\n\n\t\t}\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tupdateProjectionMatrix() {\n\n\t\tconst near = this.near;\n\t\tlet top = near * Math.tan( DEG2RAD * 0.5 * this.fov ) / this.zoom;\n\t\tlet height = 2 * top;\n\t\tlet width = this.aspect * height;\n\t\tlet left = - 0.5 * width;\n\t\tconst view = this.view;\n\n\t\tif ( this.view !== null && this.view.enabled ) {\n\n\t\t\tconst fullWidth = view.fullWidth,\n\t\t\t\tfullHeight = view.fullHeight;\n\n\t\t\tleft += view.offsetX * width / fullWidth;\n\t\t\ttop -= view.offsetY * height / fullHeight;\n\t\t\twidth *= view.width / fullWidth;\n\t\t\theight *= view.height / fullHeight;\n\n\t\t}\n\n\t\tconst skew = this.filmOffset;\n\t\tif ( skew !== 0 ) left += near * skew / this.getFilmWidth();\n\n\t\tthis.projectionMatrix.makePerspective( left, left + width, top, top - height, near, this.far, this.coordinateSystem );\n\n\t\tthis.projectionMatrixInverse.copy( this.projectionMatrix ).invert();\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.fov = this.fov;\n\t\tdata.object.zoom = this.zoom;\n\n\t\tdata.object.near = this.near;\n\t\tdata.object.far = this.far;\n\t\tdata.object.focus = this.focus;\n\n\t\tdata.object.aspect = this.aspect;\n\n\t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\n\n\t\tdata.object.filmGauge = this.filmGauge;\n\t\tdata.object.filmOffset = this.filmOffset;\n\n\t\treturn data;\n\n\t}\n\n}\n\nconst fov = - 90; // negative fov is not an error\nconst aspect = 1;\n\nclass CubeCamera extends Object3D {\n\n\tconstructor( near, far, renderTarget ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'CubeCamera';\n\n\t\tthis.renderTarget = renderTarget;\n\t\tthis.coordinateSystem = null;\n\t\tthis.activeMipmapLevel = 0;\n\n\t\tconst cameraPX = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPX.layers = this.layers;\n\t\tthis.add( cameraPX );\n\n\t\tconst cameraNX = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNX.layers = this.layers;\n\t\tthis.add( cameraNX );\n\n\t\tconst cameraPY = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPY.layers = this.layers;\n\t\tthis.add( cameraPY );\n\n\t\tconst cameraNY = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNY.layers = this.layers;\n\t\tthis.add( cameraNY );\n\n\t\tconst cameraPZ = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPZ.layers = this.layers;\n\t\tthis.add( cameraPZ );\n\n\t\tconst cameraNZ = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNZ.layers = this.layers;\n\t\tthis.add( cameraNZ );\n\n\t}\n\n\tupdateCoordinateSystem() {\n\n\t\tconst coordinateSystem = this.coordinateSystem;\n\n\t\tconst cameras = this.children.concat();\n\n\t\tconst [ cameraPX, cameraNX, cameraPY, cameraNY, cameraPZ, cameraNZ ] = cameras;\n\n\t\tfor ( const camera of cameras ) this.remove( camera );\n\n\t\tif ( coordinateSystem === WebGLCoordinateSystem ) {\n\n\t\t\tcameraPX.up.set( 0, 1, 0 );\n\t\t\tcameraPX.lookAt( 1, 0, 0 );\n\n\t\t\tcameraNX.up.set( 0, 1, 0 );\n\t\t\tcameraNX.lookAt( - 1, 0, 0 );\n\n\t\t\tcameraPY.up.set( 0, 0, - 1 );\n\t\t\tcameraPY.lookAt( 0, 1, 0 );\n\n\t\t\tcameraNY.up.set( 0, 0, 1 );\n\t\t\tcameraNY.lookAt( 0, - 1, 0 );\n\n\t\t\tcameraPZ.up.set( 0, 1, 0 );\n\t\t\tcameraPZ.lookAt( 0, 0, 1 );\n\n\t\t\tcameraNZ.up.set( 0, 1, 0 );\n\t\t\tcameraNZ.lookAt( 0, 0, - 1 );\n\n\t\t} else if ( coordinateSystem === WebGPUCoordinateSystem ) {\n\n\t\t\tcameraPX.up.set( 0, - 1, 0 );\n\t\t\tcameraPX.lookAt( - 1, 0, 0 );\n\n\t\t\tcameraNX.up.set( 0, - 1, 0 );\n\t\t\tcameraNX.lookAt( 1, 0, 0 );\n\n\t\t\tcameraPY.up.set( 0, 0, 1 );\n\t\t\tcameraPY.lookAt( 0, 1, 0 );\n\n\t\t\tcameraNY.up.set( 0, 0, - 1 );\n\t\t\tcameraNY.lookAt( 0, - 1, 0 );\n\n\t\t\tcameraPZ.up.set( 0, - 1, 0 );\n\t\t\tcameraPZ.lookAt( 0, 0, 1 );\n\n\t\t\tcameraNZ.up.set( 0, - 1, 0 );\n\t\t\tcameraNZ.lookAt( 0, 0, - 1 );\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'THREE.CubeCamera.updateCoordinateSystem(): Invalid coordinate system: ' + coordinateSystem );\n\n\t\t}\n\n\t\tfor ( const camera of cameras ) {\n\n\t\t\tthis.add( camera );\n\n\t\t\tcamera.updateMatrixWorld();\n\n\t\t}\n\n\t}\n\n\tupdate( renderer, scene ) {\n\n\t\tif ( this.parent === null ) this.updateMatrixWorld();\n\n\t\tconst { renderTarget, activeMipmapLevel } = this;\n\n\t\tif ( this.coordinateSystem !== renderer.coordinateSystem ) {\n\n\t\t\tthis.coordinateSystem = renderer.coordinateSystem;\n\n\t\t\tthis.updateCoordinateSystem();\n\n\t\t}\n\n\t\tconst [ cameraPX, cameraNX, cameraPY, cameraNY, cameraPZ, cameraNZ ] = this.children;\n\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\t\tconst currentActiveCubeFace = renderer.getActiveCubeFace();\n\t\tconst currentActiveMipmapLevel = renderer.getActiveMipmapLevel();\n\n\t\tconst currentXrEnabled = renderer.xr.enabled;\n\n\t\trenderer.xr.enabled = false;\n\n\t\tconst generateMipmaps = renderTarget.texture.generateMipmaps;\n\n\t\trenderTarget.texture.generateMipmaps = false;\n\n\t\trenderer.setRenderTarget( renderTarget, 0, activeMipmapLevel );\n\t\trenderer.render( scene, cameraPX );\n\n\t\trenderer.setRenderTarget( renderTarget, 1, activeMipmapLevel );\n\t\trenderer.render( scene, cameraNX );\n\n\t\trenderer.setRenderTarget( renderTarget, 2, activeMipmapLevel );\n\t\trenderer.render( scene, cameraPY );\n\n\t\trenderer.setRenderTarget( renderTarget, 3, activeMipmapLevel );\n\t\trenderer.render( scene, cameraNY );\n\n\t\trenderer.setRenderTarget( renderTarget, 4, activeMipmapLevel );\n\t\trenderer.render( scene, cameraPZ );\n\n\t\t// mipmaps are generated during the last call of render()\n\t\t// at this point, all sides of the cube render target are defined\n\n\t\trenderTarget.texture.generateMipmaps = generateMipmaps;\n\n\t\trenderer.setRenderTarget( renderTarget, 5, activeMipmapLevel );\n\t\trenderer.render( scene, cameraNZ );\n\n\t\trenderer.setRenderTarget( currentRenderTarget, currentActiveCubeFace, currentActiveMipmapLevel );\n\n\t\trenderer.xr.enabled = currentXrEnabled;\n\n\t\trenderTarget.texture.needsPMREMUpdate = true;\n\n\t}\n\n}\n\nclass CubeTexture extends Texture {\n\n\tconstructor( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, colorSpace ) {\n\n\t\timages = images !== undefined ? images : [];\n\t\tmapping = mapping !== undefined ? mapping : CubeReflectionMapping;\n\n\t\tsuper( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, colorSpace );\n\n\t\tthis.isCubeTexture = true;\n\n\t\tthis.flipY = false;\n\n\t}\n\n\tget images() {\n\n\t\treturn this.image;\n\n\t}\n\n\tset images( value ) {\n\n\t\tthis.image = value;\n\n\t}\n\n}\n\nclass WebGLCubeRenderTarget extends WebGLRenderTarget {\n\n\tconstructor( size = 1, options = {} ) {\n\n\t\tsuper( size, size, options );\n\n\t\tthis.isWebGLCubeRenderTarget = true;\n\n\t\tconst image = { width: size, height: size, depth: 1 };\n\t\tconst images = [ image, image, image, image, image, image ];\n\n\t\tthis.texture = new CubeTexture( images, options.mapping, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.colorSpace );\n\n\t\t// By convention -- likely based on the RenderMan spec from the 1990's -- cube maps are specified by WebGL (and three.js)\n\t\t// in a coordinate system in which positive-x is to the right when looking up the positive-z axis -- in other words,\n\t\t// in a left-handed coordinate system. By continuing this convention, preexisting cube maps continued to render correctly.\n\n\t\t// three.js uses a right-handed coordinate system. So environment maps used in three.js appear to have px and nx swapped\n\t\t// and the flag isRenderTargetTexture controls this conversion. The flip is not required when using WebGLCubeRenderTarget.texture\n\t\t// as a cube texture (this is detected when isRenderTargetTexture is set to true for cube textures).\n\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t\tthis.texture.generateMipmaps = options.generateMipmaps !== undefined ? options.generateMipmaps : false;\n\t\tthis.texture.minFilter = options.minFilter !== undefined ? options.minFilter : LinearFilter;\n\n\t}\n\n\tfromEquirectangularTexture( renderer, texture ) {\n\n\t\tthis.texture.type = texture.type;\n\t\tthis.texture.colorSpace = texture.colorSpace;\n\n\t\tthis.texture.generateMipmaps = texture.generateMipmaps;\n\t\tthis.texture.minFilter = texture.minFilter;\n\t\tthis.texture.magFilter = texture.magFilter;\n\n\t\tconst shader = {\n\n\t\t\tuniforms: {\n\t\t\t\ttEquirect: { value: null },\n\t\t\t},\n\n\t\t\tvertexShader: /* glsl */`\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\tvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\n\t\t\t\t\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n\n\t\t\t\t}\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvWorldDirection = transformDirection( position, modelMatrix );\n\n\t\t\t\t\t#include <begin_vertex>\n\t\t\t\t\t#include <project_vertex>\n\n\t\t\t\t}\n\t\t\t`,\n\n\t\t\tfragmentShader: /* glsl */`\n\n\t\t\t\tuniform sampler2D tEquirect;\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\t#include <common>\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvec3 direction = normalize( vWorldDirection );\n\n\t\t\t\t\tvec2 sampleUV = equirectUv( direction );\n\n\t\t\t\t\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\n\t\t\t\t}\n\t\t\t`\n\t\t};\n\n\t\tconst geometry = new BoxGeometry( 5, 5, 5 );\n\n\t\tconst material = new ShaderMaterial( {\n\n\t\t\tname: 'CubemapFromEquirect',\n\n\t\t\tuniforms: cloneUniforms( shader.uniforms ),\n\t\t\tvertexShader: shader.vertexShader,\n\t\t\tfragmentShader: shader.fragmentShader,\n\t\t\tside: BackSide,\n\t\t\tblending: NoBlending\n\n\t\t} );\n\n\t\tmaterial.uniforms.tEquirect.value = texture;\n\n\t\tconst mesh = new Mesh( geometry, material );\n\n\t\tconst currentMinFilter = texture.minFilter;\n\n\t\t// Avoid blurred poles\n\t\tif ( texture.minFilter === LinearMipmapLinearFilter ) texture.minFilter = LinearFilter;\n\n\t\tconst camera = new CubeCamera( 1, 10, this );\n\t\tcamera.update( renderer, mesh );\n\n\t\ttexture.minFilter = currentMinFilter;\n\n\t\tmesh.geometry.dispose();\n\t\tmesh.material.dispose();\n\n\t\treturn this;\n\n\t}\n\n\tclear( renderer, color, depth, stencil ) {\n\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\trenderer.setRenderTarget( this, i );\n\n\t\t\trenderer.clear( color, depth, stencil );\n\n\t\t}\n\n\t\trenderer.setRenderTarget( currentRenderTarget );\n\n\t}\n\n}\n\nconst _vector1 = /*@__PURE__*/ new Vector3();\nconst _vector2 = /*@__PURE__*/ new Vector3();\nconst _normalMatrix = /*@__PURE__*/ new Matrix3();\n\nclass Plane {\n\n\tconstructor( normal = new Vector3( 1, 0, 0 ), constant = 0 ) {\n\n\t\tthis.isPlane = true;\n\n\t\t// normal is assumed to be normalized\n\n\t\tthis.normal = normal;\n\t\tthis.constant = constant;\n\n\t}\n\n\tset( normal, constant ) {\n\n\t\tthis.normal.copy( normal );\n\t\tthis.constant = constant;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponents( x, y, z, w ) {\n\n\t\tthis.normal.set( x, y, z );\n\t\tthis.constant = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromNormalAndCoplanarPoint( normal, point ) {\n\n\t\tthis.normal.copy( normal );\n\t\tthis.constant = - point.dot( this.normal );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCoplanarPoints( a, b, c ) {\n\n\t\tconst normal = _vector1.subVectors( c, b ).cross( _vector2.subVectors( a, b ) ).normalize();\n\n\t\t// Q: should an error be thrown if normal is zero (e.g. degenerate plane)?\n\n\t\tthis.setFromNormalAndCoplanarPoint( normal, a );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( plane ) {\n\n\t\tthis.normal.copy( plane.normal );\n\t\tthis.constant = plane.constant;\n\n\t\treturn this;\n\n\t}\n\n\tnormalize() {\n\n\t\t// Note: will lead to a divide by zero if the plane is invalid.\n\n\t\tconst inverseNormalLength = 1.0 / this.normal.length();\n\t\tthis.normal.multiplyScalar( inverseNormalLength );\n\t\tthis.constant *= inverseNormalLength;\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.constant *= - 1;\n\t\tthis.normal.negate();\n\n\t\treturn this;\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn this.normal.dot( point ) + this.constant;\n\n\t}\n\n\tdistanceToSphere( sphere ) {\n\n\t\treturn this.distanceToPoint( sphere.center ) - sphere.radius;\n\n\t}\n\n\tprojectPoint( point, target ) {\n\n\t\treturn target.copy( point ).addScaledVector( this.normal, - this.distanceToPoint( point ) );\n\n\t}\n\n\tintersectLine( line, target ) {\n\n\t\tconst direction = line.delta( _vector1 );\n\n\t\tconst denominator = this.normal.dot( direction );\n\n\t\tif ( denominator === 0 ) {\n\n\t\t\t// line is coplanar, return origin\n\t\t\tif ( this.distanceToPoint( line.start ) === 0 ) {\n\n\t\t\t\treturn target.copy( line.start );\n\n\t\t\t}\n\n\t\t\t// Unsure if this is the correct method to handle this case.\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst t = - ( line.start.dot( this.normal ) + this.constant ) / denominator;\n\n\t\tif ( t < 0 || t > 1 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\treturn target.copy( line.start ).addScaledVector( direction, t );\n\n\t}\n\n\tintersectsLine( line ) {\n\n\t\t// Note: this tests if a line intersects the plane, not whether it (or its end-points) are coplanar with it.\n\n\t\tconst startSign = this.distanceToPoint( line.start );\n\t\tconst endSign = this.distanceToPoint( line.end );\n\n\t\treturn ( startSign < 0 && endSign > 0 ) || ( endSign < 0 && startSign > 0 );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn box.intersectsPlane( this );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\treturn sphere.intersectsPlane( this );\n\n\t}\n\n\tcoplanarPoint( target ) {\n\n\t\treturn target.copy( this.normal ).multiplyScalar( - this.constant );\n\n\t}\n\n\tapplyMatrix4( matrix, optionalNormalMatrix ) {\n\n\t\tconst normalMatrix = optionalNormalMatrix || _normalMatrix.getNormalMatrix( matrix );\n\n\t\tconst referencePoint = this.coplanarPoint( _vector1 ).applyMatrix4( matrix );\n\n\t\tconst normal = this.normal.applyMatrix3( normalMatrix ).normalize();\n\n\t\tthis.constant = - referencePoint.dot( normal );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.constant -= offset.dot( this.normal );\n\n\t\treturn this;\n\n\t}\n\n\tequals( plane ) {\n\n\t\treturn plane.normal.equals( this.normal ) && ( plane.constant === this.constant );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _sphere$5 = /*@__PURE__*/ new Sphere();\nconst _vector$7 = /*@__PURE__*/ new Vector3();\n\nclass Frustum {\n\n\tconstructor( p0 = new Plane(), p1 = new Plane(), p2 = new Plane(), p3 = new Plane(), p4 = new Plane(), p5 = new Plane() ) {\n\n\t\tthis.planes = [ p0, p1, p2, p3, p4, p5 ];\n\n\t}\n\n\tset( p0, p1, p2, p3, p4, p5 ) {\n\n\t\tconst planes = this.planes;\n\n\t\tplanes[ 0 ].copy( p0 );\n\t\tplanes[ 1 ].copy( p1 );\n\t\tplanes[ 2 ].copy( p2 );\n\t\tplanes[ 3 ].copy( p3 );\n\t\tplanes[ 4 ].copy( p4 );\n\t\tplanes[ 5 ].copy( p5 );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( frustum ) {\n\n\t\tconst planes = this.planes;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tplanes[ i ].copy( frustum.planes[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromProjectionMatrix( m, coordinateSystem = WebGLCoordinateSystem ) {\n\n\t\tconst planes = this.planes;\n\t\tconst me = m.elements;\n\t\tconst me0 = me[ 0 ], me1 = me[ 1 ], me2 = me[ 2 ], me3 = me[ 3 ];\n\t\tconst me4 = me[ 4 ], me5 = me[ 5 ], me6 = me[ 6 ], me7 = me[ 7 ];\n\t\tconst me8 = me[ 8 ], me9 = me[ 9 ], me10 = me[ 10 ], me11 = me[ 11 ];\n\t\tconst me12 = me[ 12 ], me13 = me[ 13 ], me14 = me[ 14 ], me15 = me[ 15 ];\n\n\t\tplanes[ 0 ].setComponents( me3 - me0, me7 - me4, me11 - me8, me15 - me12 ).normalize();\n\t\tplanes[ 1 ].setComponents( me3 + me0, me7 + me4, me11 + me8, me15 + me12 ).normalize();\n\t\tplanes[ 2 ].setComponents( me3 + me1, me7 + me5, me11 + me9, me15 + me13 ).normalize();\n\t\tplanes[ 3 ].setComponents( me3 - me1, me7 - me5, me11 - me9, me15 - me13 ).normalize();\n\t\tplanes[ 4 ].setComponents( me3 - me2, me7 - me6, me11 - me10, me15 - me14 ).normalize();\n\n\t\tif ( coordinateSystem === WebGLCoordinateSystem ) {\n\n\t\t\tplanes[ 5 ].setComponents( me3 + me2, me7 + me6, me11 + me10, me15 + me14 ).normalize();\n\n\t\t} else if ( coordinateSystem === WebGPUCoordinateSystem ) {\n\n\t\t\tplanes[ 5 ].setComponents( me2, me6, me10, me14 ).normalize();\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'THREE.Frustum.setFromProjectionMatrix(): Invalid coordinate system: ' + coordinateSystem );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tintersectsObject( object ) {\n\n\t\tif ( object.boundingSphere !== undefined ) {\n\n\t\t\tif ( object.boundingSphere === null ) object.computeBoundingSphere();\n\n\t\t\t_sphere$5.copy( object.boundingSphere ).applyMatrix4( object.matrixWorld );\n\n\t\t} else {\n\n\t\t\tconst geometry = object.geometry;\n\n\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t\t_sphere$5.copy( geometry.boundingSphere ).applyMatrix4( object.matrixWorld );\n\n\t\t}\n\n\t\treturn this.intersectsSphere( _sphere$5 );\n\n\t}\n\n\tintersectsSprite( sprite ) {\n\n\t\t_sphere$5.center.set( 0, 0, 0 );\n\t\t_sphere$5.radius = 0.7071067811865476;\n\t\t_sphere$5.applyMatrix4( sprite.matrixWorld );\n\n\t\treturn this.intersectsSphere( _sphere$5 );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\tconst planes = this.planes;\n\t\tconst center = sphere.center;\n\t\tconst negRadius = - sphere.radius;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tconst distance = planes[ i ].distanceToPoint( center );\n\n\t\t\tif ( distance < negRadius ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\tconst planes = this.planes;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tconst plane = planes[ i ];\n\n\t\t\t// corner at max distance\n\n\t\t\t_vector$7.x = plane.normal.x > 0 ? box.max.x : box.min.x;\n\t\t\t_vector$7.y = plane.normal.y > 0 ? box.max.y : box.min.y;\n\t\t\t_vector$7.z = plane.normal.z > 0 ? box.max.z : box.min.z;\n\n\t\t\tif ( plane.distanceToPoint( _vector$7 ) < 0 ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\tconst planes = this.planes;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tif ( planes[ i ].distanceToPoint( point ) < 0 ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nfunction WebGLAnimation() {\n\n\tlet context = null;\n\tlet isAnimating = false;\n\tlet animationLoop = null;\n\tlet requestId = null;\n\n\tfunction onAnimationFrame( time, frame ) {\n\n\t\tanimationLoop( time, frame );\n\n\t\trequestId = context.requestAnimationFrame( onAnimationFrame );\n\n\t}\n\n\treturn {\n\n\t\tstart: function () {\n\n\t\t\tif ( isAnimating === true ) return;\n\t\t\tif ( animationLoop === null ) return;\n\n\t\t\trequestId = context.requestAnimationFrame( onAnimationFrame );\n\n\t\t\tisAnimating = true;\n\n\t\t},\n\n\t\tstop: function () {\n\n\t\t\tcontext.cancelAnimationFrame( requestId );\n\n\t\t\tisAnimating = false;\n\n\t\t},\n\n\t\tsetAnimationLoop: function ( callback ) {\n\n\t\t\tanimationLoop = callback;\n\n\t\t},\n\n\t\tsetContext: function ( value ) {\n\n\t\t\tcontext = value;\n\n\t\t}\n\n\t};\n\n}\n\nfunction WebGLAttributes( gl ) {\n\n\tconst buffers = new WeakMap();\n\n\tfunction createBuffer( attribute, bufferType ) {\n\n\t\tconst array = attribute.array;\n\t\tconst usage = attribute.usage;\n\t\tconst size = array.byteLength;\n\n\t\tconst buffer = gl.createBuffer();\n\n\t\tgl.bindBuffer( bufferType, buffer );\n\t\tgl.bufferData( bufferType, array, usage );\n\n\t\tattribute.onUploadCallback();\n\n\t\tlet type;\n\n\t\tif ( array instanceof Float32Array ) {\n\n\t\t\ttype = gl.FLOAT;\n\n\t\t} else if ( array instanceof Uint16Array ) {\n\n\t\t\tif ( attribute.isFloat16BufferAttribute ) {\n\n\t\t\t\ttype = gl.HALF_FLOAT;\n\n\t\t\t} else {\n\n\t\t\t\ttype = gl.UNSIGNED_SHORT;\n\n\t\t\t}\n\n\t\t} else if ( array instanceof Int16Array ) {\n\n\t\t\ttype = gl.SHORT;\n\n\t\t} else if ( array instanceof Uint32Array ) {\n\n\t\t\ttype = gl.UNSIGNED_INT;\n\n\t\t} else if ( array instanceof Int32Array ) {\n\n\t\t\ttype = gl.INT;\n\n\t\t} else if ( array instanceof Int8Array ) {\n\n\t\t\ttype = gl.BYTE;\n\n\t\t} else if ( array instanceof Uint8Array ) {\n\n\t\t\ttype = gl.UNSIGNED_BYTE;\n\n\t\t} else if ( array instanceof Uint8ClampedArray ) {\n\n\t\t\ttype = gl.UNSIGNED_BYTE;\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'THREE.WebGLAttributes: Unsupported buffer data format: ' + array );\n\n\t\t}\n\n\t\treturn {\n\t\t\tbuffer: buffer,\n\t\t\ttype: type,\n\t\t\tbytesPerElement: array.BYTES_PER_ELEMENT,\n\t\t\tversion: attribute.version,\n\t\t\tsize: size\n\t\t};\n\n\t}\n\n\tfunction updateBuffer( buffer, attribute, bufferType ) {\n\n\t\tconst array = attribute.array;\n\t\tconst updateRange = attribute._updateRange; // @deprecated, r159\n\t\tconst updateRanges = attribute.updateRanges;\n\n\t\tgl.bindBuffer( bufferType, buffer );\n\n\t\tif ( updateRange.count === - 1 && updateRanges.length === 0 ) {\n\n\t\t\t// Not using update ranges\n\t\t\tgl.bufferSubData( bufferType, 0, array );\n\n\t\t}\n\n\t\tif ( updateRanges.length !== 0 ) {\n\n\t\t\tfor ( let i = 0, l = updateRanges.length; i < l; i ++ ) {\n\n\t\t\t\tconst range = updateRanges[ i ];\n\n\t\t\t\tgl.bufferSubData( bufferType, range.start * array.BYTES_PER_ELEMENT,\n\t\t\t\t\tarray, range.start, range.count );\n\n\t\t\t}\n\n\t\t\tattribute.clearUpdateRanges();\n\n\t\t}\n\n\t\t// @deprecated, r159\n\t\tif ( updateRange.count !== - 1 ) {\n\n\t\t\tgl.bufferSubData( bufferType, updateRange.offset * array.BYTES_PER_ELEMENT,\n\t\t\t\tarray, updateRange.offset, updateRange.count );\n\n\t\t\tupdateRange.count = - 1; // reset range\n\n\t\t}\n\n\t\tattribute.onUploadCallback();\n\n\t}\n\n\t//\n\n\tfunction get( attribute ) {\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\treturn buffers.get( attribute );\n\n\t}\n\n\tfunction remove( attribute ) {\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\tconst data = buffers.get( attribute );\n\n\t\tif ( data ) {\n\n\t\t\tgl.deleteBuffer( data.buffer );\n\n\t\t\tbuffers.delete( attribute );\n\n\t\t}\n\n\t}\n\n\tfunction update( attribute, bufferType ) {\n\n\t\tif ( attribute.isGLBufferAttribute ) {\n\n\t\t\tconst cached = buffers.get( attribute );\n\n\t\t\tif ( ! cached || cached.version < attribute.version ) {\n\n\t\t\t\tbuffers.set( attribute, {\n\t\t\t\t\tbuffer: attribute.buffer,\n\t\t\t\t\ttype: attribute.type,\n\t\t\t\t\tbytesPerElement: attribute.elementSize,\n\t\t\t\t\tversion: attribute.version\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\tconst data = buffers.get( attribute );\n\n\t\tif ( data === undefined ) {\n\n\t\t\tbuffers.set( attribute, createBuffer( attribute, bufferType ) );\n\n\t\t} else if ( data.version < attribute.version ) {\n\n\t\t\tif ( data.size !== attribute.array.byteLength ) {\n\n\t\t\t\tthrow new Error( 'THREE.WebGLAttributes: The size of the buffer attribute\\'s array buffer does not match the original size. Resizing buffer attributes is not supported.' );\n\n\t\t\t}\n\n\t\t\tupdateBuffer( data.buffer, attribute, bufferType );\n\n\t\t\tdata.version = attribute.version;\n\n\t\t}\n\n\t}\n\n\treturn {\n\n\t\tget: get,\n\t\tremove: remove,\n\t\tupdate: update\n\n\t};\n\n}\n\nclass PlaneGeometry extends BufferGeometry {\n\n\tconstructor( width = 1, height = 1, widthSegments = 1, heightSegments = 1 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'PlaneGeometry';\n\n\t\tthis.parameters = {\n\t\t\twidth: width,\n\t\t\theight: height,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments\n\t\t};\n\n\t\tconst width_half = width / 2;\n\t\tconst height_half = height / 2;\n\n\t\tconst gridX = Math.floor( widthSegments );\n\t\tconst gridY = Math.floor( heightSegments );\n\n\t\tconst gridX1 = gridX + 1;\n\t\tconst gridY1 = gridY + 1;\n\n\t\tconst segment_width = width / gridX;\n\t\tconst segment_height = height / gridY;\n\n\t\t//\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\tfor ( let iy = 0; iy < gridY1; iy ++ ) {\n\n\t\t\tconst y = iy * segment_height - height_half;\n\n\t\t\tfor ( let ix = 0; ix < gridX1; ix ++ ) {\n\n\t\t\t\tconst x = ix * segment_width - width_half;\n\n\t\t\t\tvertices.push( x, - y, 0 );\n\n\t\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t\tuvs.push( ix / gridX );\n\t\t\t\tuvs.push( 1 - ( iy / gridY ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( let iy = 0; iy < gridY; iy ++ ) {\n\n\t\t\tfor ( let ix = 0; ix < gridX; ix ++ ) {\n\n\t\t\t\tconst a = ix + gridX1 * iy;\n\t\t\t\tconst b = ix + gridX1 * ( iy + 1 );\n\t\t\t\tconst c = ( ix + 1 ) + gridX1 * ( iy + 1 );\n\t\t\t\tconst d = ( ix + 1 ) + gridX1 * iy;\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new PlaneGeometry( data.width, data.height, data.widthSegments, data.heightSegments );\n\n\t}\n\n}\n\nvar alphahash_fragment = \"#ifdef USE_ALPHAHASH\\n\\tif ( diffuseColor.a < getAlphaHashThreshold( vPosition ) ) discard;\\n#endif\";\n\nvar alphahash_pars_fragment = \"#ifdef USE_ALPHAHASH\\n\\tconst float ALPHA_HASH_SCALE = 0.05;\\n\\tfloat hash2D( vec2 value ) {\\n\\t\\treturn fract( 1.0e4 * sin( 17.0 * value.x + 0.1 * value.y ) * ( 0.1 + abs( sin( 13.0 * value.y + value.x ) ) ) );\\n\\t}\\n\\tfloat hash3D( vec3 value ) {\\n\\t\\treturn hash2D( vec2( hash2D( value.xy ), value.z ) );\\n\\t}\\n\\tfloat getAlphaHashThreshold( vec3 position ) {\\n\\t\\tfloat maxDeriv = max(\\n\\t\\t\\tlength( dFdx( position.xyz ) ),\\n\\t\\t\\tlength( dFdy( position.xyz ) )\\n\\t\\t);\\n\\t\\tfloat pixScale = 1.0 / ( ALPHA_HASH_SCALE * maxDeriv );\\n\\t\\tvec2 pixScales = vec2(\\n\\t\\t\\texp2( floor( log2( pixScale ) ) ),\\n\\t\\t\\texp2( ceil( log2( pixScale ) ) )\\n\\t\\t);\\n\\t\\tvec2 alpha = vec2(\\n\\t\\t\\thash3D( floor( pixScales.x * position.xyz ) ),\\n\\t\\t\\thash3D( floor( pixScales.y * position.xyz ) )\\n\\t\\t);\\n\\t\\tfloat lerpFactor = fract( log2( pixScale ) );\\n\\t\\tfloat x = ( 1.0 - lerpFactor ) * alpha.x + lerpFactor * alpha.y;\\n\\t\\tfloat a = min( lerpFactor, 1.0 - lerpFactor );\\n\\t\\tvec3 cases = vec3(\\n\\t\\t\\tx * x / ( 2.0 * a * ( 1.0 - a ) ),\\n\\t\\t\\t( x - 0.5 * a ) / ( 1.0 - a ),\\n\\t\\t\\t1.0 - ( ( 1.0 - x ) * ( 1.0 - x ) / ( 2.0 * a * ( 1.0 - a ) ) )\\n\\t\\t);\\n\\t\\tfloat threshold = ( x < ( 1.0 - a ) )\\n\\t\\t\\t? ( ( x < a ) ? cases.x : cases.y )\\n\\t\\t\\t: cases.z;\\n\\t\\treturn clamp( threshold , 1.0e-6, 1.0 );\\n\\t}\\n#endif\";\n\nvar alphamap_fragment = \"#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, vAlphaMapUv ).g;\\n#endif\";\n\nvar alphamap_pars_fragment = \"#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\";\n\nvar alphatest_fragment = \"#ifdef USE_ALPHATEST\\n\\t#ifdef ALPHA_TO_COVERAGE\\n\\tdiffuseColor.a = smoothstep( alphaTest, alphaTest + fwidth( diffuseColor.a ), diffuseColor.a );\\n\\tif ( diffuseColor.a == 0.0 ) discard;\\n\\t#else\\n\\tif ( diffuseColor.a < alphaTest ) discard;\\n\\t#endif\\n#endif\";\n\nvar alphatest_pars_fragment = \"#ifdef USE_ALPHATEST\\n\\tuniform float alphaTest;\\n#endif\";\n\nvar aomap_fragment = \"#ifdef USE_AOMAP\\n\\tfloat ambientOcclusion = ( texture2D( aoMap, vAoMapUv ).r - 1.0 ) * aoMapIntensity + 1.0;\\n\\treflectedLight.indirectDiffuse *= ambientOcclusion;\\n\\t#if defined( USE_CLEARCOAT ) \\n\\t\\tclearcoatSpecularIndirect *= ambientOcclusion;\\n\\t#endif\\n\\t#if defined( USE_SHEEN ) \\n\\t\\tsheenSpecularIndirect *= ambientOcclusion;\\n\\t#endif\\n\\t#if defined( USE_ENVMAP ) && defined( STANDARD )\\n\\t\\tfloat dotNV = saturate( dot( geometryNormal, geometryViewDir ) );\\n\\t\\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );\\n\\t#endif\\n#endif\";\n\nvar aomap_pars_fragment = \"#ifdef USE_AOMAP\\n\\tuniform sampler2D aoMap;\\n\\tuniform float aoMapIntensity;\\n#endif\";\n\nvar batching_pars_vertex = \"#ifdef USE_BATCHING\\n\\t#if ! defined( GL_ANGLE_multi_draw )\\n\\t#define gl_DrawID _gl_DrawID\\n\\tuniform int _gl_DrawID;\\n\\t#endif\\n\\tuniform highp sampler2D batchingTexture;\\n\\tuniform highp usampler2D batchingIdTexture;\\n\\tmat4 getBatchingMatrix( const in float i ) {\\n\\t\\tint size = textureSize( batchingTexture, 0 ).x;\\n\\t\\tint j = int( i ) * 4;\\n\\t\\tint x = j % size;\\n\\t\\tint y = j / size;\\n\\t\\tvec4 v1 = texelFetch( batchingTexture, ivec2( x, y ), 0 );\\n\\t\\tvec4 v2 = texelFetch( batchingTexture, ivec2( x + 1, y ), 0 );\\n\\t\\tvec4 v3 = texelFetch( batchingTexture, ivec2( x + 2, y ), 0 );\\n\\t\\tvec4 v4 = texelFetch( batchingTexture, ivec2( x + 3, y ), 0 );\\n\\t\\treturn mat4( v1, v2, v3, v4 );\\n\\t}\\n\\tfloat getIndirectIndex( const in int i ) {\\n\\t\\tint size = textureSize( batchingIdTexture, 0 ).x;\\n\\t\\tint x = i % size;\\n\\t\\tint y = i / size;\\n\\t\\treturn float( texelFetch( batchingIdTexture, ivec2( x, y ), 0 ).r );\\n\\t}\\n#endif\\n#ifdef USE_BATCHING_COLOR\\n\\tuniform sampler2D batchingColorTexture;\\n\\tvec3 getBatchingColor( const in float i ) {\\n\\t\\tint size = textureSize( batchingColorTexture, 0 ).x;\\n\\t\\tint j = int( i );\\n\\t\\tint x = j % size;\\n\\t\\tint y = j / size;\\n\\t\\treturn texelFetch( batchingColorTexture, ivec2( x, y ), 0 ).rgb;\\n\\t}\\n#endif\";\n\nvar batching_vertex = \"#ifdef USE_BATCHING\\n\\tmat4 batchingMatrix = getBatchingMatrix( getIndirectIndex( gl_DrawID ) );\\n#endif\";\n\nvar begin_vertex = \"vec3 transformed = vec3( position );\\n#ifdef USE_ALPHAHASH\\n\\tvPosition = vec3( position );\\n#endif\";\n\nvar beginnormal_vertex = \"vec3 objectNormal = vec3( normal );\\n#ifdef USE_TANGENT\\n\\tvec3 objectTangent = vec3( tangent.xyz );\\n#endif\";\n\nvar bsdfs = \"float G_BlinnPhong_Implicit( ) {\\n\\treturn 0.25;\\n}\\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\\n\\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\\n}\\nvec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {\\n\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, 1.0, dotVH );\\n\\tfloat G = G_BlinnPhong_Implicit( );\\n\\tfloat D = D_BlinnPhong( shininess, dotNH );\\n\\treturn F * ( G * D );\\n} // validated\";\n\nvar iridescence_fragment = \"#ifdef USE_IRIDESCENCE\\n\\tconst mat3 XYZ_TO_REC709 = mat3(\\n\\t\\t 3.2404542, -0.9692660,  0.0556434,\\n\\t\\t-1.5371385,  1.8760108, -0.2040259,\\n\\t\\t-0.4985314,  0.0415560,  1.0572252\\n\\t);\\n\\tvec3 Fresnel0ToIor( vec3 fresnel0 ) {\\n\\t\\tvec3 sqrtF0 = sqrt( fresnel0 );\\n\\t\\treturn ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );\\n\\t}\\n\\tvec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {\\n\\t\\treturn pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );\\n\\t}\\n\\tfloat IorToFresnel0( float transmittedIor, float incidentIor ) {\\n\\t\\treturn pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));\\n\\t}\\n\\tvec3 evalSensitivity( float OPD, vec3 shift ) {\\n\\t\\tfloat phase = 2.0 * PI * OPD * 1.0e-9;\\n\\t\\tvec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );\\n\\t\\tvec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );\\n\\t\\tvec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );\\n\\t\\tvec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );\\n\\t\\txyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );\\n\\t\\txyz /= 1.0685e-7;\\n\\t\\tvec3 rgb = XYZ_TO_REC709 * xyz;\\n\\t\\treturn rgb;\\n\\t}\\n\\tvec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {\\n\\t\\tvec3 I;\\n\\t\\tfloat iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );\\n\\t\\tfloat sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );\\n\\t\\tfloat cosTheta2Sq = 1.0 - sinTheta2Sq;\\n\\t\\tif ( cosTheta2Sq < 0.0 ) {\\n\\t\\t\\treturn vec3( 1.0 );\\n\\t\\t}\\n\\t\\tfloat cosTheta2 = sqrt( cosTheta2Sq );\\n\\t\\tfloat R0 = IorToFresnel0( iridescenceIOR, outsideIOR );\\n\\t\\tfloat R12 = F_Schlick( R0, 1.0, cosTheta1 );\\n\\t\\tfloat T121 = 1.0 - R12;\\n\\t\\tfloat phi12 = 0.0;\\n\\t\\tif ( iridescenceIOR < outsideIOR ) phi12 = PI;\\n\\t\\tfloat phi21 = PI - phi12;\\n\\t\\tvec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );\\t\\tvec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );\\n\\t\\tvec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );\\n\\t\\tvec3 phi23 = vec3( 0.0 );\\n\\t\\tif ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;\\n\\t\\tif ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;\\n\\t\\tif ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;\\n\\t\\tfloat OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;\\n\\t\\tvec3 phi = vec3( phi21 ) + phi23;\\n\\t\\tvec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );\\n\\t\\tvec3 r123 = sqrt( R123 );\\n\\t\\tvec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );\\n\\t\\tvec3 C0 = R12 + Rs;\\n\\t\\tI = C0;\\n\\t\\tvec3 Cm = Rs - T121;\\n\\t\\tfor ( int m = 1; m <= 2; ++ m ) {\\n\\t\\t\\tCm *= r123;\\n\\t\\t\\tvec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );\\n\\t\\t\\tI += Cm * Sm;\\n\\t\\t}\\n\\t\\treturn max( I, vec3( 0.0 ) );\\n\\t}\\n#endif\";\n\nvar bumpmap_pars_fragment = \"#ifdef USE_BUMPMAP\\n\\tuniform sampler2D bumpMap;\\n\\tuniform float bumpScale;\\n\\tvec2 dHdxy_fwd() {\\n\\t\\tvec2 dSTdx = dFdx( vBumpMapUv );\\n\\t\\tvec2 dSTdy = dFdy( vBumpMapUv );\\n\\t\\tfloat Hll = bumpScale * texture2D( bumpMap, vBumpMapUv ).x;\\n\\t\\tfloat dBx = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdx ).x - Hll;\\n\\t\\tfloat dBy = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdy ).x - Hll;\\n\\t\\treturn vec2( dBx, dBy );\\n\\t}\\n\\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {\\n\\t\\tvec3 vSigmaX = normalize( dFdx( surf_pos.xyz ) );\\n\\t\\tvec3 vSigmaY = normalize( dFdy( surf_pos.xyz ) );\\n\\t\\tvec3 vN = surf_norm;\\n\\t\\tvec3 R1 = cross( vSigmaY, vN );\\n\\t\\tvec3 R2 = cross( vN, vSigmaX );\\n\\t\\tfloat fDet = dot( vSigmaX, R1 ) * faceDirection;\\n\\t\\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\\n\\t\\treturn normalize( abs( fDet ) * surf_norm - vGrad );\\n\\t}\\n#endif\";\n\nvar clipping_planes_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvec4 plane;\\n\\t#ifdef ALPHA_TO_COVERAGE\\n\\t\\tfloat distanceToPlane, distanceGradient;\\n\\t\\tfloat clipOpacity = 1.0;\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\\n\\t\\t\\tplane = clippingPlanes[ i ];\\n\\t\\t\\tdistanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;\\n\\t\\t\\tdistanceGradient = fwidth( distanceToPlane ) / 2.0;\\n\\t\\t\\tclipOpacity *= smoothstep( - distanceGradient, distanceGradient, distanceToPlane );\\n\\t\\t\\tif ( clipOpacity == 0.0 ) discard;\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t\\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\\n\\t\\t\\tfloat unionClipOpacity = 1.0;\\n\\t\\t\\t#pragma unroll_loop_start\\n\\t\\t\\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\\n\\t\\t\\t\\tplane = clippingPlanes[ i ];\\n\\t\\t\\t\\tdistanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;\\n\\t\\t\\t\\tdistanceGradient = fwidth( distanceToPlane ) / 2.0;\\n\\t\\t\\t\\tunionClipOpacity *= 1.0 - smoothstep( - distanceGradient, distanceGradient, distanceToPlane );\\n\\t\\t\\t}\\n\\t\\t\\t#pragma unroll_loop_end\\n\\t\\t\\tclipOpacity *= 1.0 - unionClipOpacity;\\n\\t\\t#endif\\n\\t\\tdiffuseColor.a *= clipOpacity;\\n\\t\\tif ( diffuseColor.a == 0.0 ) discard;\\n\\t#else\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\\n\\t\\t\\tplane = clippingPlanes[ i ];\\n\\t\\t\\tif ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t\\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\\n\\t\\t\\tbool clipped = true;\\n\\t\\t\\t#pragma unroll_loop_start\\n\\t\\t\\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\\n\\t\\t\\t\\tplane = clippingPlanes[ i ];\\n\\t\\t\\t\\tclipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\\n\\t\\t\\t}\\n\\t\\t\\t#pragma unroll_loop_end\\n\\t\\t\\tif ( clipped ) discard;\\n\\t\\t#endif\\n\\t#endif\\n#endif\";\n\nvar clipping_planes_pars_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvarying vec3 vClipPosition;\\n\\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\\n#endif\";\n\nvar clipping_planes_pars_vertex = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvarying vec3 vClipPosition;\\n#endif\";\n\nvar clipping_planes_vertex = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvClipPosition = - mvPosition.xyz;\\n#endif\";\n\nvar color_fragment = \"#if defined( USE_COLOR_ALPHA )\\n\\tdiffuseColor *= vColor;\\n#elif defined( USE_COLOR )\\n\\tdiffuseColor.rgb *= vColor;\\n#endif\";\n\nvar color_pars_fragment = \"#if defined( USE_COLOR_ALPHA )\\n\\tvarying vec4 vColor;\\n#elif defined( USE_COLOR )\\n\\tvarying vec3 vColor;\\n#endif\";\n\nvar color_pars_vertex = \"#if defined( USE_COLOR_ALPHA )\\n\\tvarying vec4 vColor;\\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR ) || defined( USE_BATCHING_COLOR )\\n\\tvarying vec3 vColor;\\n#endif\";\n\nvar color_vertex = \"#if defined( USE_COLOR_ALPHA )\\n\\tvColor = vec4( 1.0 );\\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR ) || defined( USE_BATCHING_COLOR )\\n\\tvColor = vec3( 1.0 );\\n#endif\\n#ifdef USE_COLOR\\n\\tvColor *= color;\\n#endif\\n#ifdef USE_INSTANCING_COLOR\\n\\tvColor.xyz *= instanceColor.xyz;\\n#endif\\n#ifdef USE_BATCHING_COLOR\\n\\tvec3 batchingColor = getBatchingColor( getIndirectIndex( gl_DrawID ) );\\n\\tvColor.xyz *= batchingColor.xyz;\\n#endif\";\n\nvar common = \"#define PI 3.141592653589793\\n#define PI2 6.283185307179586\\n#define PI_HALF 1.5707963267948966\\n#define RECIPROCAL_PI 0.3183098861837907\\n#define RECIPROCAL_PI2 0.15915494309189535\\n#define EPSILON 1e-6\\n#ifndef saturate\\n#define saturate( a ) clamp( a, 0.0, 1.0 )\\n#endif\\n#define whiteComplement( a ) ( 1.0 - saturate( a ) )\\nfloat pow2( const in float x ) { return x*x; }\\nvec3 pow2( const in vec3 x ) { return x*x; }\\nfloat pow3( const in float x ) { return x*x*x; }\\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\\nfloat max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }\\nfloat average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }\\nhighp float rand( const in vec2 uv ) {\\n\\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\\n\\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\\n\\treturn fract( sin( sn ) * c );\\n}\\n#ifdef HIGH_PRECISION\\n\\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\\n#else\\n\\tfloat precisionSafeLength( vec3 v ) {\\n\\t\\tfloat maxComponent = max3( abs( v ) );\\n\\t\\treturn length( v / maxComponent ) * maxComponent;\\n\\t}\\n#endif\\nstruct IncidentLight {\\n\\tvec3 color;\\n\\tvec3 direction;\\n\\tbool visible;\\n};\\nstruct ReflectedLight {\\n\\tvec3 directDiffuse;\\n\\tvec3 directSpecular;\\n\\tvec3 indirectDiffuse;\\n\\tvec3 indirectSpecular;\\n};\\n#ifdef USE_ALPHAHASH\\n\\tvarying vec3 vPosition;\\n#endif\\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\\n}\\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\\n}\\nmat3 transposeMat3( const in mat3 m ) {\\n\\tmat3 tmp;\\n\\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\\n\\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\\n\\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\\n\\treturn tmp;\\n}\\nfloat luminance( const in vec3 rgb ) {\\n\\tconst vec3 weights = vec3( 0.2126729, 0.7151522, 0.0721750 );\\n\\treturn dot( weights, rgb );\\n}\\nbool isPerspectiveMatrix( mat4 m ) {\\n\\treturn m[ 2 ][ 3 ] == - 1.0;\\n}\\nvec2 equirectUv( in vec3 dir ) {\\n\\tfloat u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\\n\\tfloat v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\treturn vec2( u, v );\\n}\\nvec3 BRDF_Lambert( const in vec3 diffuseColor ) {\\n\\treturn RECIPROCAL_PI * diffuseColor;\\n}\\nvec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {\\n\\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\\n\\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\\n}\\nfloat F_Schlick( const in float f0, const in float f90, const in float dotVH ) {\\n\\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\\n\\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\\n} // validated\";\n\nvar cube_uv_reflection_fragment = \"#ifdef ENVMAP_TYPE_CUBE_UV\\n\\t#define cubeUV_minMipLevel 4.0\\n\\t#define cubeUV_minTileSize 16.0\\n\\tfloat getFace( vec3 direction ) {\\n\\t\\tvec3 absDirection = abs( direction );\\n\\t\\tfloat face = - 1.0;\\n\\t\\tif ( absDirection.x > absDirection.z ) {\\n\\t\\t\\tif ( absDirection.x > absDirection.y )\\n\\t\\t\\t\\tface = direction.x > 0.0 ? 0.0 : 3.0;\\n\\t\\t\\telse\\n\\t\\t\\t\\tface = direction.y > 0.0 ? 1.0 : 4.0;\\n\\t\\t} else {\\n\\t\\t\\tif ( absDirection.z > absDirection.y )\\n\\t\\t\\t\\tface = direction.z > 0.0 ? 2.0 : 5.0;\\n\\t\\t\\telse\\n\\t\\t\\t\\tface = direction.y > 0.0 ? 1.0 : 4.0;\\n\\t\\t}\\n\\t\\treturn face;\\n\\t}\\n\\tvec2 getUV( vec3 direction, float face ) {\\n\\t\\tvec2 uv;\\n\\t\\tif ( face == 0.0 ) {\\n\\t\\t\\tuv = vec2( direction.z, direction.y ) / abs( direction.x );\\n\\t\\t} else if ( face == 1.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, - direction.z ) / abs( direction.y );\\n\\t\\t} else if ( face == 2.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, direction.y ) / abs( direction.z );\\n\\t\\t} else if ( face == 3.0 ) {\\n\\t\\t\\tuv = vec2( - direction.z, direction.y ) / abs( direction.x );\\n\\t\\t} else if ( face == 4.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, direction.z ) / abs( direction.y );\\n\\t\\t} else {\\n\\t\\t\\tuv = vec2( direction.x, direction.y ) / abs( direction.z );\\n\\t\\t}\\n\\t\\treturn 0.5 * ( uv + 1.0 );\\n\\t}\\n\\tvec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\\n\\t\\tfloat face = getFace( direction );\\n\\t\\tfloat filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\\n\\t\\tmipInt = max( mipInt, cubeUV_minMipLevel );\\n\\t\\tfloat faceSize = exp2( mipInt );\\n\\t\\thighp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;\\n\\t\\tif ( face > 2.0 ) {\\n\\t\\t\\tuv.y += faceSize;\\n\\t\\t\\tface -= 3.0;\\n\\t\\t}\\n\\t\\tuv.x += face * faceSize;\\n\\t\\tuv.x += filterInt * 3.0 * cubeUV_minTileSize;\\n\\t\\tuv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );\\n\\t\\tuv.x *= CUBEUV_TEXEL_WIDTH;\\n\\t\\tuv.y *= CUBEUV_TEXEL_HEIGHT;\\n\\t\\t#ifdef texture2DGradEXT\\n\\t\\t\\treturn texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;\\n\\t\\t#else\\n\\t\\t\\treturn texture2D( envMap, uv ).rgb;\\n\\t\\t#endif\\n\\t}\\n\\t#define cubeUV_r0 1.0\\n\\t#define cubeUV_m0 - 2.0\\n\\t#define cubeUV_r1 0.8\\n\\t#define cubeUV_m1 - 1.0\\n\\t#define cubeUV_r4 0.4\\n\\t#define cubeUV_m4 2.0\\n\\t#define cubeUV_r5 0.305\\n\\t#define cubeUV_m5 3.0\\n\\t#define cubeUV_r6 0.21\\n\\t#define cubeUV_m6 4.0\\n\\tfloat roughnessToMip( float roughness ) {\\n\\t\\tfloat mip = 0.0;\\n\\t\\tif ( roughness >= cubeUV_r1 ) {\\n\\t\\t\\tmip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;\\n\\t\\t} else if ( roughness >= cubeUV_r4 ) {\\n\\t\\t\\tmip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;\\n\\t\\t} else if ( roughness >= cubeUV_r5 ) {\\n\\t\\t\\tmip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;\\n\\t\\t} else if ( roughness >= cubeUV_r6 ) {\\n\\t\\t\\tmip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;\\n\\t\\t} else {\\n\\t\\t\\tmip = - 2.0 * log2( 1.16 * roughness );\\t\\t}\\n\\t\\treturn mip;\\n\\t}\\n\\tvec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\\n\\t\\tfloat mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );\\n\\t\\tfloat mipF = fract( mip );\\n\\t\\tfloat mipInt = floor( mip );\\n\\t\\tvec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\\n\\t\\tif ( mipF == 0.0 ) {\\n\\t\\t\\treturn vec4( color0, 1.0 );\\n\\t\\t} else {\\n\\t\\t\\tvec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\\n\\t\\t\\treturn vec4( mix( color0, color1, mipF ), 1.0 );\\n\\t\\t}\\n\\t}\\n#endif\";\n\nvar defaultnormal_vertex = \"vec3 transformedNormal = objectNormal;\\n#ifdef USE_TANGENT\\n\\tvec3 transformedTangent = objectTangent;\\n#endif\\n#ifdef USE_BATCHING\\n\\tmat3 bm = mat3( batchingMatrix );\\n\\ttransformedNormal /= vec3( dot( bm[ 0 ], bm[ 0 ] ), dot( bm[ 1 ], bm[ 1 ] ), dot( bm[ 2 ], bm[ 2 ] ) );\\n\\ttransformedNormal = bm * transformedNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\ttransformedTangent = bm * transformedTangent;\\n\\t#endif\\n#endif\\n#ifdef USE_INSTANCING\\n\\tmat3 im = mat3( instanceMatrix );\\n\\ttransformedNormal /= vec3( dot( im[ 0 ], im[ 0 ] ), dot( im[ 1 ], im[ 1 ] ), dot( im[ 2 ], im[ 2 ] ) );\\n\\ttransformedNormal = im * transformedNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\ttransformedTangent = im * transformedTangent;\\n\\t#endif\\n#endif\\ntransformedNormal = normalMatrix * transformedNormal;\\n#ifdef FLIP_SIDED\\n\\ttransformedNormal = - transformedNormal;\\n#endif\\n#ifdef USE_TANGENT\\n\\ttransformedTangent = ( modelViewMatrix * vec4( transformedTangent, 0.0 ) ).xyz;\\n\\t#ifdef FLIP_SIDED\\n\\t\\ttransformedTangent = - transformedTangent;\\n\\t#endif\\n#endif\";\n\nvar displacementmap_pars_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\tuniform sampler2D displacementMap;\\n\\tuniform float displacementScale;\\n\\tuniform float displacementBias;\\n#endif\";\n\nvar displacementmap_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vDisplacementMapUv ).x * displacementScale + displacementBias );\\n#endif\";\n\nvar emissivemap_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tvec4 emissiveColor = texture2D( emissiveMap, vEmissiveMapUv );\\n\\ttotalEmissiveRadiance *= emissiveColor.rgb;\\n#endif\";\n\nvar emissivemap_pars_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tuniform sampler2D emissiveMap;\\n#endif\";\n\nvar colorspace_fragment = \"gl_FragColor = linearToOutputTexel( gl_FragColor );\";\n\nvar colorspace_pars_fragment = \"\\nconst mat3 LINEAR_SRGB_TO_LINEAR_DISPLAY_P3 = mat3(\\n\\tvec3( 0.8224621, 0.177538, 0.0 ),\\n\\tvec3( 0.0331941, 0.9668058, 0.0 ),\\n\\tvec3( 0.0170827, 0.0723974, 0.9105199 )\\n);\\nconst mat3 LINEAR_DISPLAY_P3_TO_LINEAR_SRGB = mat3(\\n\\tvec3( 1.2249401, - 0.2249404, 0.0 ),\\n\\tvec3( - 0.0420569, 1.0420571, 0.0 ),\\n\\tvec3( - 0.0196376, - 0.0786361, 1.0982735 )\\n);\\nvec4 LinearSRGBToLinearDisplayP3( in vec4 value ) {\\n\\treturn vec4( value.rgb * LINEAR_SRGB_TO_LINEAR_DISPLAY_P3, value.a );\\n}\\nvec4 LinearDisplayP3ToLinearSRGB( in vec4 value ) {\\n\\treturn vec4( value.rgb * LINEAR_DISPLAY_P3_TO_LINEAR_SRGB, value.a );\\n}\\nvec4 LinearTransferOETF( in vec4 value ) {\\n\\treturn value;\\n}\\nvec4 sRGBTransferOETF( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\\n}\\nvec4 LinearToLinear( in vec4 value ) {\\n\\treturn value;\\n}\\nvec4 LinearTosRGB( in vec4 value ) {\\n\\treturn sRGBTransferOETF( value );\\n}\";\n\nvar envmap_fragment = \"#ifdef USE_ENVMAP\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvec3 cameraToFrag;\\n\\t\\tif ( isOrthographic ) {\\n\\t\\t\\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\\n\\t\\t} else {\\n\\t\\t\\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\\n\\t\\t}\\n\\t\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#else\\n\\t\\tvec3 reflectVec = vReflect;\\n\\t#endif\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tvec4 envColor = textureCube( envMap, envMapRotation * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\\n\\t#else\\n\\t\\tvec4 envColor = vec4( 0.0 );\\n\\t#endif\\n\\t#ifdef ENVMAP_BLENDING_MULTIPLY\\n\\t\\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_MIX )\\n\\t\\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_ADD )\\n\\t\\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\\n\\t#endif\\n#endif\";\n\nvar envmap_common_pars_fragment = \"#ifdef USE_ENVMAP\\n\\tuniform float envMapIntensity;\\n\\tuniform float flipEnvMap;\\n\\tuniform mat3 envMapRotation;\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tuniform samplerCube envMap;\\n\\t#else\\n\\t\\tuniform sampler2D envMap;\\n\\t#endif\\n\\t\\n#endif\";\n\nvar envmap_pars_fragment = \"#ifdef USE_ENVMAP\\n\\tuniform float reflectivity;\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )\\n\\t\\t#define ENV_WORLDPOS\\n\\t#endif\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t\\tuniform float refractionRatio;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t#endif\\n#endif\";\n\nvar envmap_pars_vertex = \"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )\\n\\t\\t#define ENV_WORLDPOS\\n\\t#endif\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\t\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t\\tuniform float refractionRatio;\\n\\t#endif\\n#endif\";\n\nvar envmap_vertex = \"#ifdef USE_ENVMAP\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvWorldPosition = worldPosition.xyz;\\n\\t#else\\n\\t\\tvec3 cameraToVertex;\\n\\t\\tif ( isOrthographic ) {\\n\\t\\t\\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\\n\\t\\t} else {\\n\\t\\t\\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\\n\\t\\t}\\n\\t\\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvReflect = reflect( cameraToVertex, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#endif\\n#endif\";\n\nvar fog_vertex = \"#ifdef USE_FOG\\n\\tvFogDepth = - mvPosition.z;\\n#endif\";\n\nvar fog_pars_vertex = \"#ifdef USE_FOG\\n\\tvarying float vFogDepth;\\n#endif\";\n\nvar fog_fragment = \"#ifdef USE_FOG\\n\\t#ifdef FOG_EXP2\\n\\t\\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );\\n\\t#else\\n\\t\\tfloat fogFactor = smoothstep( fogNear, fogFar, vFogDepth );\\n\\t#endif\\n\\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\\n#endif\";\n\nvar fog_pars_fragment = \"#ifdef USE_FOG\\n\\tuniform vec3 fogColor;\\n\\tvarying float vFogDepth;\\n\\t#ifdef FOG_EXP2\\n\\t\\tuniform float fogDensity;\\n\\t#else\\n\\t\\tuniform float fogNear;\\n\\t\\tuniform float fogFar;\\n\\t#endif\\n#endif\";\n\nvar gradientmap_pars_fragment = \"#ifdef USE_GRADIENTMAP\\n\\tuniform sampler2D gradientMap;\\n#endif\\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\\n\\tfloat dotNL = dot( normal, lightDirection );\\n\\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\\n\\t#ifdef USE_GRADIENTMAP\\n\\t\\treturn vec3( texture2D( gradientMap, coord ).r );\\n\\t#else\\n\\t\\tvec2 fw = fwidth( coord ) * 0.5;\\n\\t\\treturn mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );\\n\\t#endif\\n}\";\n\nvar lightmap_pars_fragment = \"#ifdef USE_LIGHTMAP\\n\\tuniform sampler2D lightMap;\\n\\tuniform float lightMapIntensity;\\n#endif\";\n\nvar lights_lambert_fragment = \"LambertMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\\nmaterial.specularStrength = specularStrength;\";\n\nvar lights_lambert_pars_fragment = \"varying vec3 vViewPosition;\\nstruct LambertMaterial {\\n\\tvec3 diffuseColor;\\n\\tfloat specularStrength;\\n};\\nvoid RE_Direct_Lambert( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometryNormal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Lambert\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Lambert\";\n\nvar lights_pars_begin = \"uniform bool receiveShadow;\\nuniform vec3 ambientLightColor;\\n#if defined( USE_LIGHT_PROBES )\\n\\tuniform vec3 lightProbe[ 9 ];\\n#endif\\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\\n\\tfloat x = normal.x, y = normal.y, z = normal.z;\\n\\tvec3 result = shCoefficients[ 0 ] * 0.886227;\\n\\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\\n\\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\\n\\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\\n\\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\\n\\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\\n\\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\\n\\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\\n\\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\\n\\treturn result;\\n}\\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {\\n\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\\n\\treturn irradiance;\\n}\\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\\n\\tvec3 irradiance = ambientLightColor;\\n\\treturn irradiance;\\n}\\nfloat getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\\n\\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\\n\\tif ( cutoffDistance > 0.0 ) {\\n\\t\\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\\n\\t}\\n\\treturn distanceFalloff;\\n}\\nfloat getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {\\n\\treturn smoothstep( coneCosine, penumbraCosine, angleCosine );\\n}\\n#if NUM_DIR_LIGHTS > 0\\n\\tstruct DirectionalLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t};\\n\\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\\n\\tvoid getDirectionalLightInfo( const in DirectionalLight directionalLight, out IncidentLight light ) {\\n\\t\\tlight.color = directionalLight.color;\\n\\t\\tlight.direction = directionalLight.direction;\\n\\t\\tlight.visible = true;\\n\\t}\\n#endif\\n#if NUM_POINT_LIGHTS > 0\\n\\tstruct PointLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t};\\n\\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\\n\\tvoid getPointLightInfo( const in PointLight pointLight, const in vec3 geometryPosition, out IncidentLight light ) {\\n\\t\\tvec3 lVector = pointLight.position - geometryPosition;\\n\\t\\tlight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tlight.color = pointLight.color;\\n\\t\\tlight.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );\\n\\t\\tlight.visible = ( light.color != vec3( 0.0 ) );\\n\\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\tstruct SpotLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t\\tfloat coneCos;\\n\\t\\tfloat penumbraCos;\\n\\t};\\n\\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\\n\\tvoid getSpotLightInfo( const in SpotLight spotLight, const in vec3 geometryPosition, out IncidentLight light ) {\\n\\t\\tvec3 lVector = spotLight.position - geometryPosition;\\n\\t\\tlight.direction = normalize( lVector );\\n\\t\\tfloat angleCos = dot( light.direction, spotLight.direction );\\n\\t\\tfloat spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );\\n\\t\\tif ( spotAttenuation > 0.0 ) {\\n\\t\\t\\tfloat lightDistance = length( lVector );\\n\\t\\t\\tlight.color = spotLight.color * spotAttenuation;\\n\\t\\t\\tlight.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );\\n\\t\\t\\tlight.visible = ( light.color != vec3( 0.0 ) );\\n\\t\\t} else {\\n\\t\\t\\tlight.color = vec3( 0.0 );\\n\\t\\t\\tlight.visible = false;\\n\\t\\t}\\n\\t}\\n#endif\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tstruct RectAreaLight {\\n\\t\\tvec3 color;\\n\\t\\tvec3 position;\\n\\t\\tvec3 halfWidth;\\n\\t\\tvec3 halfHeight;\\n\\t};\\n\\tuniform sampler2D ltc_1;\\tuniform sampler2D ltc_2;\\n\\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\tstruct HemisphereLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 skyColor;\\n\\t\\tvec3 groundColor;\\n\\t};\\n\\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\\n\\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {\\n\\t\\tfloat dotNL = dot( normal, hemiLight.direction );\\n\\t\\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\\n\\t\\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\\n\\t\\treturn irradiance;\\n\\t}\\n#endif\";\n\nvar envmap_physical_pars_fragment = \"#ifdef USE_ENVMAP\\n\\tvec3 getIBLIrradiance( const in vec3 normal ) {\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE_UV\\n\\t\\t\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( envMap, envMapRotation * worldNormal, 1.0 );\\n\\t\\t\\treturn PI * envMapColor.rgb * envMapIntensity;\\n\\t\\t#else\\n\\t\\t\\treturn vec3( 0.0 );\\n\\t\\t#endif\\n\\t}\\n\\tvec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE_UV\\n\\t\\t\\tvec3 reflectVec = reflect( - viewDir, normal );\\n\\t\\t\\treflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\\n\\t\\t\\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( envMap, envMapRotation * reflectVec, roughness );\\n\\t\\t\\treturn envMapColor.rgb * envMapIntensity;\\n\\t\\t#else\\n\\t\\t\\treturn vec3( 0.0 );\\n\\t\\t#endif\\n\\t}\\n\\t#ifdef USE_ANISOTROPY\\n\\t\\tvec3 getIBLAnisotropyRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in vec3 bitangent, const in float anisotropy ) {\\n\\t\\t\\t#ifdef ENVMAP_TYPE_CUBE_UV\\n\\t\\t\\t\\tvec3 bentNormal = cross( bitangent, viewDir );\\n\\t\\t\\t\\tbentNormal = normalize( cross( bentNormal, bitangent ) );\\n\\t\\t\\t\\tbentNormal = normalize( mix( bentNormal, normal, pow2( pow2( 1.0 - anisotropy * ( 1.0 - roughness ) ) ) ) );\\n\\t\\t\\t\\treturn getIBLRadiance( viewDir, bentNormal, roughness );\\n\\t\\t\\t#else\\n\\t\\t\\t\\treturn vec3( 0.0 );\\n\\t\\t\\t#endif\\n\\t\\t}\\n\\t#endif\\n#endif\";\n\nvar lights_toon_fragment = \"ToonMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\";\n\nvar lights_toon_pars_fragment = \"varying vec3 vViewPosition;\\nstruct ToonMaterial {\\n\\tvec3 diffuseColor;\\n};\\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tvec3 irradiance = getGradientIrradiance( geometryNormal, directLight.direction ) * directLight.color;\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Toon\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Toon\";\n\nvar lights_phong_fragment = \"BlinnPhongMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\\nmaterial.specularColor = specular;\\nmaterial.specularShininess = shininess;\\nmaterial.specularStrength = specularStrength;\";\n\nvar lights_phong_pars_fragment = \"varying vec3 vViewPosition;\\nstruct BlinnPhongMaterial {\\n\\tvec3 diffuseColor;\\n\\tvec3 specularColor;\\n\\tfloat specularShininess;\\n\\tfloat specularStrength;\\n};\\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometryNormal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n\\treflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometryViewDir, geometryNormal, material.specularColor, material.specularShininess ) * material.specularStrength;\\n}\\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_BlinnPhong\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_BlinnPhong\";\n\nvar lights_physical_fragment = \"PhysicalMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\\nvec3 dxy = max( abs( dFdx( nonPerturbedNormal ) ), abs( dFdy( nonPerturbedNormal ) ) );\\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\\nmaterial.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;\\nmaterial.roughness = min( material.roughness, 1.0 );\\n#ifdef IOR\\n\\tmaterial.ior = ior;\\n\\t#ifdef USE_SPECULAR\\n\\t\\tfloat specularIntensityFactor = specularIntensity;\\n\\t\\tvec3 specularColorFactor = specularColor;\\n\\t\\t#ifdef USE_SPECULAR_COLORMAP\\n\\t\\t\\tspecularColorFactor *= texture2D( specularColorMap, vSpecularColorMapUv ).rgb;\\n\\t\\t#endif\\n\\t\\t#ifdef USE_SPECULAR_INTENSITYMAP\\n\\t\\t\\tspecularIntensityFactor *= texture2D( specularIntensityMap, vSpecularIntensityMapUv ).a;\\n\\t\\t#endif\\n\\t\\tmaterial.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );\\n\\t#else\\n\\t\\tfloat specularIntensityFactor = 1.0;\\n\\t\\tvec3 specularColorFactor = vec3( 1.0 );\\n\\t\\tmaterial.specularF90 = 1.0;\\n\\t#endif\\n\\tmaterial.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );\\n#else\\n\\tmaterial.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );\\n\\tmaterial.specularF90 = 1.0;\\n#endif\\n#ifdef USE_CLEARCOAT\\n\\tmaterial.clearcoat = clearcoat;\\n\\tmaterial.clearcoatRoughness = clearcoatRoughness;\\n\\tmaterial.clearcoatF0 = vec3( 0.04 );\\n\\tmaterial.clearcoatF90 = 1.0;\\n\\t#ifdef USE_CLEARCOATMAP\\n\\t\\tmaterial.clearcoat *= texture2D( clearcoatMap, vClearcoatMapUv ).x;\\n\\t#endif\\n\\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\t\\tmaterial.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vClearcoatRoughnessMapUv ).y;\\n\\t#endif\\n\\tmaterial.clearcoat = saturate( material.clearcoat );\\tmaterial.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\\n\\tmaterial.clearcoatRoughness += geometryRoughness;\\n\\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\\n#endif\\n#ifdef USE_DISPERSION\\n\\tmaterial.dispersion = dispersion;\\n#endif\\n#ifdef USE_IRIDESCENCE\\n\\tmaterial.iridescence = iridescence;\\n\\tmaterial.iridescenceIOR = iridescenceIOR;\\n\\t#ifdef USE_IRIDESCENCEMAP\\n\\t\\tmaterial.iridescence *= texture2D( iridescenceMap, vIridescenceMapUv ).r;\\n\\t#endif\\n\\t#ifdef USE_IRIDESCENCE_THICKNESSMAP\\n\\t\\tmaterial.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vIridescenceThicknessMapUv ).g + iridescenceThicknessMinimum;\\n\\t#else\\n\\t\\tmaterial.iridescenceThickness = iridescenceThicknessMaximum;\\n\\t#endif\\n#endif\\n#ifdef USE_SHEEN\\n\\tmaterial.sheenColor = sheenColor;\\n\\t#ifdef USE_SHEEN_COLORMAP\\n\\t\\tmaterial.sheenColor *= texture2D( sheenColorMap, vSheenColorMapUv ).rgb;\\n\\t#endif\\n\\tmaterial.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );\\n\\t#ifdef USE_SHEEN_ROUGHNESSMAP\\n\\t\\tmaterial.sheenRoughness *= texture2D( sheenRoughnessMap, vSheenRoughnessMapUv ).a;\\n\\t#endif\\n#endif\\n#ifdef USE_ANISOTROPY\\n\\t#ifdef USE_ANISOTROPYMAP\\n\\t\\tmat2 anisotropyMat = mat2( anisotropyVector.x, anisotropyVector.y, - anisotropyVector.y, anisotropyVector.x );\\n\\t\\tvec3 anisotropyPolar = texture2D( anisotropyMap, vAnisotropyMapUv ).rgb;\\n\\t\\tvec2 anisotropyV = anisotropyMat * normalize( 2.0 * anisotropyPolar.rg - vec2( 1.0 ) ) * anisotropyPolar.b;\\n\\t#else\\n\\t\\tvec2 anisotropyV = anisotropyVector;\\n\\t#endif\\n\\tmaterial.anisotropy = length( anisotropyV );\\n\\tif( material.anisotropy == 0.0 ) {\\n\\t\\tanisotropyV = vec2( 1.0, 0.0 );\\n\\t} else {\\n\\t\\tanisotropyV /= material.anisotropy;\\n\\t\\tmaterial.anisotropy = saturate( material.anisotropy );\\n\\t}\\n\\tmaterial.alphaT = mix( pow2( material.roughness ), 1.0, pow2( material.anisotropy ) );\\n\\tmaterial.anisotropyT = tbn[ 0 ] * anisotropyV.x + tbn[ 1 ] * anisotropyV.y;\\n\\tmaterial.anisotropyB = tbn[ 1 ] * anisotropyV.x - tbn[ 0 ] * anisotropyV.y;\\n#endif\";\n\nvar lights_physical_pars_fragment = \"struct PhysicalMaterial {\\n\\tvec3 diffuseColor;\\n\\tfloat roughness;\\n\\tvec3 specularColor;\\n\\tfloat specularF90;\\n\\tfloat dispersion;\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tfloat clearcoat;\\n\\t\\tfloat clearcoatRoughness;\\n\\t\\tvec3 clearcoatF0;\\n\\t\\tfloat clearcoatF90;\\n\\t#endif\\n\\t#ifdef USE_IRIDESCENCE\\n\\t\\tfloat iridescence;\\n\\t\\tfloat iridescenceIOR;\\n\\t\\tfloat iridescenceThickness;\\n\\t\\tvec3 iridescenceFresnel;\\n\\t\\tvec3 iridescenceF0;\\n\\t#endif\\n\\t#ifdef USE_SHEEN\\n\\t\\tvec3 sheenColor;\\n\\t\\tfloat sheenRoughness;\\n\\t#endif\\n\\t#ifdef IOR\\n\\t\\tfloat ior;\\n\\t#endif\\n\\t#ifdef USE_TRANSMISSION\\n\\t\\tfloat transmission;\\n\\t\\tfloat transmissionAlpha;\\n\\t\\tfloat thickness;\\n\\t\\tfloat attenuationDistance;\\n\\t\\tvec3 attenuationColor;\\n\\t#endif\\n\\t#ifdef USE_ANISOTROPY\\n\\t\\tfloat anisotropy;\\n\\t\\tfloat alphaT;\\n\\t\\tvec3 anisotropyT;\\n\\t\\tvec3 anisotropyB;\\n\\t#endif\\n};\\nvec3 clearcoatSpecularDirect = vec3( 0.0 );\\nvec3 clearcoatSpecularIndirect = vec3( 0.0 );\\nvec3 sheenSpecularDirect = vec3( 0.0 );\\nvec3 sheenSpecularIndirect = vec3(0.0 );\\nvec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {\\n    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );\\n    float x2 = x * x;\\n    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );\\n    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );\\n}\\nfloat V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\treturn 0.5 / max( gv + gl, EPSILON );\\n}\\nfloat D_GGX( const in float alpha, const in float dotNH ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\\n\\treturn RECIPROCAL_PI * a2 / pow2( denom );\\n}\\n#ifdef USE_ANISOTROPY\\n\\tfloat V_GGX_SmithCorrelated_Anisotropic( const in float alphaT, const in float alphaB, const in float dotTV, const in float dotBV, const in float dotTL, const in float dotBL, const in float dotNV, const in float dotNL ) {\\n\\t\\tfloat gv = dotNL * length( vec3( alphaT * dotTV, alphaB * dotBV, dotNV ) );\\n\\t\\tfloat gl = dotNV * length( vec3( alphaT * dotTL, alphaB * dotBL, dotNL ) );\\n\\t\\tfloat v = 0.5 / ( gv + gl );\\n\\t\\treturn saturate(v);\\n\\t}\\n\\tfloat D_GGX_Anisotropic( const in float alphaT, const in float alphaB, const in float dotNH, const in float dotTH, const in float dotBH ) {\\n\\t\\tfloat a2 = alphaT * alphaB;\\n\\t\\thighp vec3 v = vec3( alphaB * dotTH, alphaT * dotBH, a2 * dotNH );\\n\\t\\thighp float v2 = dot( v, v );\\n\\t\\tfloat w2 = a2 / v2;\\n\\t\\treturn RECIPROCAL_PI * a2 * pow2 ( w2 );\\n\\t}\\n#endif\\n#ifdef USE_CLEARCOAT\\n\\tvec3 BRDF_GGX_Clearcoat( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material) {\\n\\t\\tvec3 f0 = material.clearcoatF0;\\n\\t\\tfloat f90 = material.clearcoatF90;\\n\\t\\tfloat roughness = material.clearcoatRoughness;\\n\\t\\tfloat alpha = pow2( roughness );\\n\\t\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\t\\tfloat dotNL = saturate( dot( normal, lightDir ) );\\n\\t\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\t\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\t\\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\\n\\t\\tvec3 F = F_Schlick( f0, f90, dotVH );\\n\\t\\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\\n\\t\\tfloat D = D_GGX( alpha, dotNH );\\n\\t\\treturn F * ( V * D );\\n\\t}\\n#endif\\nvec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material ) {\\n\\tvec3 f0 = material.specularColor;\\n\\tfloat f90 = material.specularF90;\\n\\tfloat roughness = material.roughness;\\n\\tfloat alpha = pow2( roughness );\\n\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\tfloat dotNL = saturate( dot( normal, lightDir ) );\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\\n\\tvec3 F = F_Schlick( f0, f90, dotVH );\\n\\t#ifdef USE_IRIDESCENCE\\n\\t\\tF = mix( F, material.iridescenceFresnel, material.iridescence );\\n\\t#endif\\n\\t#ifdef USE_ANISOTROPY\\n\\t\\tfloat dotTL = dot( material.anisotropyT, lightDir );\\n\\t\\tfloat dotTV = dot( material.anisotropyT, viewDir );\\n\\t\\tfloat dotTH = dot( material.anisotropyT, halfDir );\\n\\t\\tfloat dotBL = dot( material.anisotropyB, lightDir );\\n\\t\\tfloat dotBV = dot( material.anisotropyB, viewDir );\\n\\t\\tfloat dotBH = dot( material.anisotropyB, halfDir );\\n\\t\\tfloat V = V_GGX_SmithCorrelated_Anisotropic( material.alphaT, alpha, dotTV, dotBV, dotTL, dotBL, dotNV, dotNL );\\n\\t\\tfloat D = D_GGX_Anisotropic( material.alphaT, alpha, dotNH, dotTH, dotBH );\\n\\t#else\\n\\t\\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\\n\\t\\tfloat D = D_GGX( alpha, dotNH );\\n\\t#endif\\n\\treturn F * ( V * D );\\n}\\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\\n\\tconst float LUT_SIZE = 64.0;\\n\\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\\n\\tconst float LUT_BIAS = 0.5 / LUT_SIZE;\\n\\tfloat dotNV = saturate( dot( N, V ) );\\n\\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\\n\\tuv = uv * LUT_SCALE + LUT_BIAS;\\n\\treturn uv;\\n}\\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\\n\\tfloat l = length( f );\\n\\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\\n}\\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\\n\\tfloat x = dot( v1, v2 );\\n\\tfloat y = abs( x );\\n\\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\\n\\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\\n\\tfloat v = a / b;\\n\\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\\n\\treturn cross( v1, v2 ) * theta_sintheta;\\n}\\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\\n\\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\\n\\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\\n\\tvec3 lightNormal = cross( v1, v2 );\\n\\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\\n\\tvec3 T1, T2;\\n\\tT1 = normalize( V - N * dot( V, N ) );\\n\\tT2 = - cross( N, T1 );\\n\\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\\n\\tvec3 coords[ 4 ];\\n\\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\\n\\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\\n\\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\\n\\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\\n\\tcoords[ 0 ] = normalize( coords[ 0 ] );\\n\\tcoords[ 1 ] = normalize( coords[ 1 ] );\\n\\tcoords[ 2 ] = normalize( coords[ 2 ] );\\n\\tcoords[ 3 ] = normalize( coords[ 3 ] );\\n\\tvec3 vectorFormFactor = vec3( 0.0 );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\\n\\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\\n\\treturn vec3( result );\\n}\\n#if defined( USE_SHEEN )\\nfloat D_Charlie( float roughness, float dotNH ) {\\n\\tfloat alpha = pow2( roughness );\\n\\tfloat invAlpha = 1.0 / alpha;\\n\\tfloat cos2h = dotNH * dotNH;\\n\\tfloat sin2h = max( 1.0 - cos2h, 0.0078125 );\\n\\treturn ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );\\n}\\nfloat V_Neubelt( float dotNV, float dotNL ) {\\n\\treturn saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );\\n}\\nvec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {\\n\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\tfloat dotNL = saturate( dot( normal, lightDir ) );\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\tfloat D = D_Charlie( sheenRoughness, dotNH );\\n\\tfloat V = V_Neubelt( dotNV, dotNL );\\n\\treturn sheenColor * ( D * V );\\n}\\n#endif\\nfloat IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tfloat r2 = roughness * roughness;\\n\\tfloat a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;\\n\\tfloat b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;\\n\\tfloat DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );\\n\\treturn saturate( DG * RECIPROCAL_PI );\\n}\\nvec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\\n\\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\\n\\tvec4 r = roughness * c0 + c1;\\n\\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\\n\\tvec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;\\n\\treturn fab;\\n}\\nvec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {\\n\\tvec2 fab = DFGApprox( normal, viewDir, roughness );\\n\\treturn specularColor * fab.x + specularF90 * fab.y;\\n}\\n#ifdef USE_IRIDESCENCE\\nvoid computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\\n#else\\nvoid computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\\n#endif\\n\\tvec2 fab = DFGApprox( normal, viewDir, roughness );\\n\\t#ifdef USE_IRIDESCENCE\\n\\t\\tvec3 Fr = mix( specularColor, iridescenceF0, iridescence );\\n\\t#else\\n\\t\\tvec3 Fr = specularColor;\\n\\t#endif\\n\\tvec3 FssEss = Fr * fab.x + specularF90 * fab.y;\\n\\tfloat Ess = fab.x + fab.y;\\n\\tfloat Ems = 1.0 - Ess;\\n\\tvec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;\\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\\n\\tsingleScatter += FssEss;\\n\\tmultiScatter += Fms * Ems;\\n}\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t\\tvec3 normal = geometryNormal;\\n\\t\\tvec3 viewDir = geometryViewDir;\\n\\t\\tvec3 position = geometryPosition;\\n\\t\\tvec3 lightPos = rectAreaLight.position;\\n\\t\\tvec3 halfWidth = rectAreaLight.halfWidth;\\n\\t\\tvec3 halfHeight = rectAreaLight.halfHeight;\\n\\t\\tvec3 lightColor = rectAreaLight.color;\\n\\t\\tfloat roughness = material.roughness;\\n\\t\\tvec3 rectCoords[ 4 ];\\n\\t\\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\\t\\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\\n\\t\\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\\n\\t\\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\\n\\t\\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\\n\\t\\tvec4 t1 = texture2D( ltc_1, uv );\\n\\t\\tvec4 t2 = texture2D( ltc_2, uv );\\n\\t\\tmat3 mInv = mat3(\\n\\t\\t\\tvec3( t1.x, 0, t1.y ),\\n\\t\\t\\tvec3(    0, 1,    0 ),\\n\\t\\t\\tvec3( t1.z, 0, t1.w )\\n\\t\\t);\\n\\t\\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\\n\\t\\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\\n\\t\\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\\n\\t}\\n#endif\\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometryNormal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tfloat dotNLcc = saturate( dot( geometryClearcoatNormal, directLight.direction ) );\\n\\t\\tvec3 ccIrradiance = dotNLcc * directLight.color;\\n\\t\\tclearcoatSpecularDirect += ccIrradiance * BRDF_GGX_Clearcoat( directLight.direction, geometryViewDir, geometryClearcoatNormal, material );\\n\\t#endif\\n\\t#ifdef USE_SHEEN\\n\\t\\tsheenSpecularDirect += irradiance * BRDF_Sheen( directLight.direction, geometryViewDir, geometryNormal, material.sheenColor, material.sheenRoughness );\\n\\t#endif\\n\\treflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometryViewDir, geometryNormal, material );\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tclearcoatSpecularIndirect += clearcoatRadiance * EnvironmentBRDF( geometryClearcoatNormal, geometryViewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\\n\\t#endif\\n\\t#ifdef USE_SHEEN\\n\\t\\tsheenSpecularIndirect += irradiance * material.sheenColor * IBLSheenBRDF( geometryNormal, geometryViewDir, material.sheenRoughness );\\n\\t#endif\\n\\tvec3 singleScattering = vec3( 0.0 );\\n\\tvec3 multiScattering = vec3( 0.0 );\\n\\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\\n\\t#ifdef USE_IRIDESCENCE\\n\\t\\tcomputeMultiscatteringIridescence( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );\\n\\t#else\\n\\t\\tcomputeMultiscattering( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );\\n\\t#endif\\n\\tvec3 totalScattering = singleScattering + multiScattering;\\n\\tvec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );\\n\\treflectedLight.indirectSpecular += radiance * singleScattering;\\n\\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\\n\\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Physical\\n#define RE_Direct_RectArea\\t\\tRE_Direct_RectArea_Physical\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Physical\\n#define RE_IndirectSpecular\\t\\tRE_IndirectSpecular_Physical\\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\\n\\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\\n}\";\n\nvar lights_fragment_begin = \"\\nvec3 geometryPosition = - vViewPosition;\\nvec3 geometryNormal = normal;\\nvec3 geometryViewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\\nvec3 geometryClearcoatNormal = vec3( 0.0 );\\n#ifdef USE_CLEARCOAT\\n\\tgeometryClearcoatNormal = clearcoatNormal;\\n#endif\\n#ifdef USE_IRIDESCENCE\\n\\tfloat dotNVi = saturate( dot( normal, geometryViewDir ) );\\n\\tif ( material.iridescenceThickness == 0.0 ) {\\n\\t\\tmaterial.iridescence = 0.0;\\n\\t} else {\\n\\t\\tmaterial.iridescence = saturate( material.iridescence );\\n\\t}\\n\\tif ( material.iridescence > 0.0 ) {\\n\\t\\tmaterial.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );\\n\\t\\tmaterial.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );\\n\\t}\\n#endif\\nIncidentLight directLight;\\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tPointLight pointLight;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\\n\\tPointLightShadow pointLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tpointLight = pointLights[ i ];\\n\\t\\tgetPointLightInfo( pointLight, geometryPosition, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\\n\\t\\tpointLightShadow = pointLightShadows[ i ];\\n\\t\\tdirectLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowIntensity, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tSpotLight spotLight;\\n\\tvec4 spotColor;\\n\\tvec3 spotLightCoord;\\n\\tbool inSpotLightMap;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\\n\\tSpotLightShadow spotLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tspotLight = spotLights[ i ];\\n\\t\\tgetSpotLightInfo( spotLight, geometryPosition, directLight );\\n\\t\\t#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )\\n\\t\\t#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX\\n\\t\\t#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\\n\\t\\t#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS\\n\\t\\t#else\\n\\t\\t#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )\\n\\t\\t#endif\\n\\t\\t#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )\\n\\t\\t\\tspotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;\\n\\t\\t\\tinSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );\\n\\t\\t\\tspotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );\\n\\t\\t\\tdirectLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;\\n\\t\\t#endif\\n\\t\\t#undef SPOT_LIGHT_MAP_INDEX\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\\n\\t\\tspotLightShadow = spotLightShadows[ i ];\\n\\t\\tdirectLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowIntensity, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tDirectionalLight directionalLight;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\\n\\tDirectionalLightShadow directionalLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLights[ i ];\\n\\t\\tgetDirectionalLightInfo( directionalLight, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\\n\\t\\tdirectionalLightShadow = directionalLightShadows[ i ];\\n\\t\\tdirectLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowIntensity, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\\n\\tRectAreaLight rectAreaLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\\n\\t\\trectAreaLight = rectAreaLights[ i ];\\n\\t\\tRE_Direct_RectArea( rectAreaLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if defined( RE_IndirectDiffuse )\\n\\tvec3 iblIrradiance = vec3( 0.0 );\\n\\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\\n\\t#if defined( USE_LIGHT_PROBES )\\n\\t\\tirradiance += getLightProbeIrradiance( lightProbe, geometryNormal );\\n\\t#endif\\n\\t#if ( NUM_HEMI_LIGHTS > 0 )\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\t\\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometryNormal );\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t#endif\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tvec3 radiance = vec3( 0.0 );\\n\\tvec3 clearcoatRadiance = vec3( 0.0 );\\n#endif\";\n\nvar lights_fragment_maps = \"#if defined( RE_IndirectDiffuse )\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\tvec4 lightMapTexel = texture2D( lightMap, vLightMapUv );\\n\\t\\tvec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\\n\\t\\tirradiance += lightMapIrradiance;\\n\\t#endif\\n\\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tiblIrradiance += getIBLIrradiance( geometryNormal );\\n\\t#endif\\n#endif\\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\\n\\t#ifdef USE_ANISOTROPY\\n\\t\\tradiance += getIBLAnisotropyRadiance( geometryViewDir, geometryNormal, material.roughness, material.anisotropyB, material.anisotropy );\\n\\t#else\\n\\t\\tradiance += getIBLRadiance( geometryViewDir, geometryNormal, material.roughness );\\n\\t#endif\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tclearcoatRadiance += getIBLRadiance( geometryViewDir, geometryClearcoatNormal, material.clearcoatRoughness );\\n\\t#endif\\n#endif\";\n\nvar lights_fragment_end = \"#if defined( RE_IndirectDiffuse )\\n\\tRE_IndirectDiffuse( irradiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\\n#endif\";\n\nvar logdepthbuf_fragment = \"#if defined( USE_LOGDEPTHBUF )\\n\\tgl_FragDepth = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\\n#endif\";\n\nvar logdepthbuf_pars_fragment = \"#if defined( USE_LOGDEPTHBUF )\\n\\tuniform float logDepthBufFC;\\n\\tvarying float vFragDepth;\\n\\tvarying float vIsPerspective;\\n#endif\";\n\nvar logdepthbuf_pars_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\tvarying float vFragDepth;\\n\\tvarying float vIsPerspective;\\n#endif\";\n\nvar logdepthbuf_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\tvFragDepth = 1.0 + gl_Position.w;\\n\\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\\n#endif\";\n\nvar map_fragment = \"#ifdef USE_MAP\\n\\tvec4 sampledDiffuseColor = texture2D( map, vMapUv );\\n\\t#ifdef DECODE_VIDEO_TEXTURE\\n\\t\\tsampledDiffuseColor = vec4( mix( pow( sampledDiffuseColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), sampledDiffuseColor.rgb * 0.0773993808, vec3( lessThanEqual( sampledDiffuseColor.rgb, vec3( 0.04045 ) ) ) ), sampledDiffuseColor.w );\\n\\t\\n\\t#endif\\n\\tdiffuseColor *= sampledDiffuseColor;\\n#endif\";\n\nvar map_pars_fragment = \"#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\";\n\nvar map_particle_fragment = \"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\\n\\t#if defined( USE_POINTS_UV )\\n\\t\\tvec2 uv = vUv;\\n\\t#else\\n\\t\\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\\n\\t#endif\\n#endif\\n#ifdef USE_MAP\\n\\tdiffuseColor *= texture2D( map, uv );\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\\n#endif\";\n\nvar map_particle_pars_fragment = \"#if defined( USE_POINTS_UV )\\n\\tvarying vec2 vUv;\\n#else\\n\\t#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\\n\\t\\tuniform mat3 uvTransform;\\n\\t#endif\\n#endif\\n#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\";\n\nvar metalnessmap_fragment = \"float metalnessFactor = metalness;\\n#ifdef USE_METALNESSMAP\\n\\tvec4 texelMetalness = texture2D( metalnessMap, vMetalnessMapUv );\\n\\tmetalnessFactor *= texelMetalness.b;\\n#endif\";\n\nvar metalnessmap_pars_fragment = \"#ifdef USE_METALNESSMAP\\n\\tuniform sampler2D metalnessMap;\\n#endif\";\n\nvar morphinstance_vertex = \"#ifdef USE_INSTANCING_MORPH\\n\\tfloat morphTargetInfluences[ MORPHTARGETS_COUNT ];\\n\\tfloat morphTargetBaseInfluence = texelFetch( morphTexture, ivec2( 0, gl_InstanceID ), 0 ).r;\\n\\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\\n\\t\\tmorphTargetInfluences[i] =  texelFetch( morphTexture, ivec2( i + 1, gl_InstanceID ), 0 ).r;\\n\\t}\\n#endif\";\n\nvar morphcolor_vertex = \"#if defined( USE_MORPHCOLORS )\\n\\tvColor *= morphTargetBaseInfluence;\\n\\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\\n\\t\\t#if defined( USE_COLOR_ALPHA )\\n\\t\\t\\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];\\n\\t\\t#elif defined( USE_COLOR )\\n\\t\\t\\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];\\n\\t\\t#endif\\n\\t}\\n#endif\";\n\nvar morphnormal_vertex = \"#ifdef USE_MORPHNORMALS\\n\\tobjectNormal *= morphTargetBaseInfluence;\\n\\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\\n\\t\\tif ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];\\n\\t}\\n#endif\";\n\nvar morphtarget_pars_vertex = \"#ifdef USE_MORPHTARGETS\\n\\t#ifndef USE_INSTANCING_MORPH\\n\\t\\tuniform float morphTargetBaseInfluence;\\n\\t\\tuniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];\\n\\t#endif\\n\\tuniform sampler2DArray morphTargetsTexture;\\n\\tuniform ivec2 morphTargetsTextureSize;\\n\\tvec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {\\n\\t\\tint texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;\\n\\t\\tint y = texelIndex / morphTargetsTextureSize.x;\\n\\t\\tint x = texelIndex - y * morphTargetsTextureSize.x;\\n\\t\\tivec3 morphUV = ivec3( x, y, morphTargetIndex );\\n\\t\\treturn texelFetch( morphTargetsTexture, morphUV, 0 );\\n\\t}\\n#endif\";\n\nvar morphtarget_vertex = \"#ifdef USE_MORPHTARGETS\\n\\ttransformed *= morphTargetBaseInfluence;\\n\\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\\n\\t\\tif ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];\\n\\t}\\n#endif\";\n\nvar normal_fragment_begin = \"float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;\\n#ifdef FLAT_SHADED\\n\\tvec3 fdx = dFdx( vViewPosition );\\n\\tvec3 fdy = dFdy( vViewPosition );\\n\\tvec3 normal = normalize( cross( fdx, fdy ) );\\n#else\\n\\tvec3 normal = normalize( vNormal );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tnormal *= faceDirection;\\n\\t#endif\\n#endif\\n#if defined( USE_NORMALMAP_TANGENTSPACE ) || defined( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY )\\n\\t#ifdef USE_TANGENT\\n\\t\\tmat3 tbn = mat3( normalize( vTangent ), normalize( vBitangent ), normal );\\n\\t#else\\n\\t\\tmat3 tbn = getTangentFrame( - vViewPosition, normal,\\n\\t\\t#if defined( USE_NORMALMAP )\\n\\t\\t\\tvNormalMapUv\\n\\t\\t#elif defined( USE_CLEARCOAT_NORMALMAP )\\n\\t\\t\\tvClearcoatNormalMapUv\\n\\t\\t#else\\n\\t\\t\\tvUv\\n\\t\\t#endif\\n\\t\\t);\\n\\t#endif\\n\\t#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )\\n\\t\\ttbn[0] *= faceDirection;\\n\\t\\ttbn[1] *= faceDirection;\\n\\t#endif\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\t#ifdef USE_TANGENT\\n\\t\\tmat3 tbn2 = mat3( normalize( vTangent ), normalize( vBitangent ), normal );\\n\\t#else\\n\\t\\tmat3 tbn2 = getTangentFrame( - vViewPosition, normal, vClearcoatNormalMapUv );\\n\\t#endif\\n\\t#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )\\n\\t\\ttbn2[0] *= faceDirection;\\n\\t\\ttbn2[1] *= faceDirection;\\n\\t#endif\\n#endif\\nvec3 nonPerturbedNormal = normal;\";\n\nvar normal_fragment_maps = \"#ifdef USE_NORMALMAP_OBJECTSPACE\\n\\tnormal = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;\\n\\t#ifdef FLIP_SIDED\\n\\t\\tnormal = - normal;\\n\\t#endif\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tnormal = normal * faceDirection;\\n\\t#endif\\n\\tnormal = normalize( normalMatrix * normal );\\n#elif defined( USE_NORMALMAP_TANGENTSPACE )\\n\\tvec3 mapN = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;\\n\\tmapN.xy *= normalScale;\\n\\tnormal = normalize( tbn * mapN );\\n#elif defined( USE_BUMPMAP )\\n\\tnormal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );\\n#endif\";\n\nvar normal_pars_fragment = \"#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\";\n\nvar normal_pars_vertex = \"#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\";\n\nvar normal_vertex = \"#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n\\t#ifdef USE_TANGENT\\n\\t\\tvTangent = normalize( transformedTangent );\\n\\t\\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\\n\\t#endif\\n#endif\";\n\nvar normalmap_pars_fragment = \"#ifdef USE_NORMALMAP\\n\\tuniform sampler2D normalMap;\\n\\tuniform vec2 normalScale;\\n#endif\\n#ifdef USE_NORMALMAP_OBJECTSPACE\\n\\tuniform mat3 normalMatrix;\\n#endif\\n#if ! defined ( USE_TANGENT ) && ( defined ( USE_NORMALMAP_TANGENTSPACE ) || defined ( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY ) )\\n\\tmat3 getTangentFrame( vec3 eye_pos, vec3 surf_norm, vec2 uv ) {\\n\\t\\tvec3 q0 = dFdx( eye_pos.xyz );\\n\\t\\tvec3 q1 = dFdy( eye_pos.xyz );\\n\\t\\tvec2 st0 = dFdx( uv.st );\\n\\t\\tvec2 st1 = dFdy( uv.st );\\n\\t\\tvec3 N = surf_norm;\\n\\t\\tvec3 q1perp = cross( q1, N );\\n\\t\\tvec3 q0perp = cross( N, q0 );\\n\\t\\tvec3 T = q1perp * st0.x + q0perp * st1.x;\\n\\t\\tvec3 B = q1perp * st0.y + q0perp * st1.y;\\n\\t\\tfloat det = max( dot( T, T ), dot( B, B ) );\\n\\t\\tfloat scale = ( det == 0.0 ) ? 0.0 : inversesqrt( det );\\n\\t\\treturn mat3( T * scale, B * scale, N );\\n\\t}\\n#endif\";\n\nvar clearcoat_normal_fragment_begin = \"#ifdef USE_CLEARCOAT\\n\\tvec3 clearcoatNormal = nonPerturbedNormal;\\n#endif\";\n\nvar clearcoat_normal_fragment_maps = \"#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vClearcoatNormalMapUv ).xyz * 2.0 - 1.0;\\n\\tclearcoatMapN.xy *= clearcoatNormalScale;\\n\\tclearcoatNormal = normalize( tbn2 * clearcoatMapN );\\n#endif\";\n\nvar clearcoat_pars_fragment = \"#ifdef USE_CLEARCOATMAP\\n\\tuniform sampler2D clearcoatMap;\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tuniform sampler2D clearcoatNormalMap;\\n\\tuniform vec2 clearcoatNormalScale;\\n#endif\\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\tuniform sampler2D clearcoatRoughnessMap;\\n#endif\";\n\nvar iridescence_pars_fragment = \"#ifdef USE_IRIDESCENCEMAP\\n\\tuniform sampler2D iridescenceMap;\\n#endif\\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\\n\\tuniform sampler2D iridescenceThicknessMap;\\n#endif\";\n\nvar opaque_fragment = \"#ifdef OPAQUE\\ndiffuseColor.a = 1.0;\\n#endif\\n#ifdef USE_TRANSMISSION\\ndiffuseColor.a *= material.transmissionAlpha;\\n#endif\\ngl_FragColor = vec4( outgoingLight, diffuseColor.a );\";\n\nvar packing = \"vec3 packNormalToRGB( const in vec3 normal ) {\\n\\treturn normalize( normal ) * 0.5 + 0.5;\\n}\\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\\n\\treturn 2.0 * rgb.xyz - 1.0;\\n}\\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );\\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\\nconst float ShiftRight8 = 1. / 256.;\\nvec4 packDepthToRGBA( const in float v ) {\\n\\tvec4 r = vec4( fract( v * PackFactors ), v );\\n\\tr.yzw -= r.xyz * ShiftRight8;\\treturn r * PackUpscale;\\n}\\nfloat unpackRGBAToDepth( const in vec4 v ) {\\n\\treturn dot( v, UnpackFactors );\\n}\\nvec2 packDepthToRG( in highp float v ) {\\n\\treturn packDepthToRGBA( v ).yx;\\n}\\nfloat unpackRGToDepth( const in highp vec2 v ) {\\n\\treturn unpackRGBAToDepth( vec4( v.xy, 0.0, 0.0 ) );\\n}\\nvec4 pack2HalfToRGBA( vec2 v ) {\\n\\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );\\n\\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );\\n}\\nvec2 unpackRGBATo2Half( vec4 v ) {\\n\\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\\n}\\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn ( viewZ + near ) / ( near - far );\\n}\\nfloat orthographicDepthToViewZ( const in float depth, const in float near, const in float far ) {\\n\\treturn depth * ( near - far ) - near;\\n}\\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );\\n}\\nfloat perspectiveDepthToViewZ( const in float depth, const in float near, const in float far ) {\\n\\treturn ( near * far ) / ( ( far - near ) * depth - far );\\n}\";\n\nvar premultiplied_alpha_fragment = \"#ifdef PREMULTIPLIED_ALPHA\\n\\tgl_FragColor.rgb *= gl_FragColor.a;\\n#endif\";\n\nvar project_vertex = \"vec4 mvPosition = vec4( transformed, 1.0 );\\n#ifdef USE_BATCHING\\n\\tmvPosition = batchingMatrix * mvPosition;\\n#endif\\n#ifdef USE_INSTANCING\\n\\tmvPosition = instanceMatrix * mvPosition;\\n#endif\\nmvPosition = modelViewMatrix * mvPosition;\\ngl_Position = projectionMatrix * mvPosition;\";\n\nvar dithering_fragment = \"#ifdef DITHERING\\n\\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\\n#endif\";\n\nvar dithering_pars_fragment = \"#ifdef DITHERING\\n\\tvec3 dithering( vec3 color ) {\\n\\t\\tfloat grid_position = rand( gl_FragCoord.xy );\\n\\t\\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\\n\\t\\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\\n\\t\\treturn color + dither_shift_RGB;\\n\\t}\\n#endif\";\n\nvar roughnessmap_fragment = \"float roughnessFactor = roughness;\\n#ifdef USE_ROUGHNESSMAP\\n\\tvec4 texelRoughness = texture2D( roughnessMap, vRoughnessMapUv );\\n\\troughnessFactor *= texelRoughness.g;\\n#endif\";\n\nvar roughnessmap_pars_fragment = \"#ifdef USE_ROUGHNESSMAP\\n\\tuniform sampler2D roughnessMap;\\n#endif\";\n\nvar shadowmap_pars_fragment = \"#if NUM_SPOT_LIGHT_COORDS > 0\\n\\tvarying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];\\n#endif\\n#if NUM_SPOT_LIGHT_MAPS > 0\\n\\tuniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];\\n#endif\\n#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tstruct DirectionalLightShadow {\\n\\t\\t\\tfloat shadowIntensity;\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t\\tstruct SpotLightShadow {\\n\\t\\t\\tfloat shadowIntensity;\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tstruct PointLightShadow {\\n\\t\\t\\tfloat shadowIntensity;\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t\\tfloat shadowCameraNear;\\n\\t\\t\\tfloat shadowCameraFar;\\n\\t\\t};\\n\\t\\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\\n\\t\\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\\n\\t}\\n\\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\\n\\t\\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\\n\\t}\\n\\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\\n\\t\\tfloat occlusion = 1.0;\\n\\t\\tvec2 distribution = texture2DDistribution( shadow, uv );\\n\\t\\tfloat hard_shadow = step( compare , distribution.x );\\n\\t\\tif (hard_shadow != 1.0 ) {\\n\\t\\t\\tfloat distance = compare - distribution.x ;\\n\\t\\t\\tfloat variance = max( 0.00000, distribution.y * distribution.y );\\n\\t\\t\\tfloat softness_probability = variance / (variance + distance * distance );\\t\\t\\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\\t\\t\\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\\n\\t\\t}\\n\\t\\treturn occlusion;\\n\\t}\\n\\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowIntensity, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\\n\\t\\tfloat shadow = 1.0;\\n\\t\\tshadowCoord.xyz /= shadowCoord.w;\\n\\t\\tshadowCoord.z += shadowBias;\\n\\t\\tbool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;\\n\\t\\tbool frustumTest = inFrustum && shadowCoord.z <= 1.0;\\n\\t\\tif ( frustumTest ) {\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx0 = - texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy0 = - texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx1 = + texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy1 = + texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx2 = dx0 / 2.0;\\n\\t\\t\\tfloat dy2 = dy0 / 2.0;\\n\\t\\t\\tfloat dx3 = dx1 / 2.0;\\n\\t\\t\\tfloat dy3 = dy1 / 2.0;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\\t\\t\\t) * ( 1.0 / 17.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx = texelSize.x;\\n\\t\\t\\tfloat dy = texelSize.y;\\n\\t\\t\\tvec2 uv = shadowCoord.xy;\\n\\t\\t\\tvec2 f = fract( uv * shadowMapSize + 0.5 );\\n\\t\\t\\tuv -= f * texelSize;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.x ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.x ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.y ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.y ) +\\n\\t\\t\\t\\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  f.x ),\\n\\t\\t\\t\\t\\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  f.x ),\\n\\t\\t\\t\\t\\t f.y )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_VSM )\\n\\t\\t\\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#else\\n\\t\\t\\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#endif\\n\\t\\t}\\n\\t\\treturn mix( 1.0, shadow, shadowIntensity );\\n\\t}\\n\\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\\n\\t\\tvec3 absV = abs( v );\\n\\t\\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\\n\\t\\tabsV *= scaleToCube;\\n\\t\\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\\n\\t\\tvec2 planar = v.xy;\\n\\t\\tfloat almostATexel = 1.5 * texelSizeY;\\n\\t\\tfloat almostOne = 1.0 - almostATexel;\\n\\t\\tif ( absV.z >= almostOne ) {\\n\\t\\t\\tif ( v.z > 0.0 )\\n\\t\\t\\t\\tplanar.x = 4.0 - v.x;\\n\\t\\t} else if ( absV.x >= almostOne ) {\\n\\t\\t\\tfloat signX = sign( v.x );\\n\\t\\t\\tplanar.x = v.z * signX + 2.0 * signX;\\n\\t\\t} else if ( absV.y >= almostOne ) {\\n\\t\\t\\tfloat signY = sign( v.y );\\n\\t\\t\\tplanar.x = v.x + 2.0 * signY + 2.0;\\n\\t\\t\\tplanar.y = v.z * signY - 2.0;\\n\\t\\t}\\n\\t\\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\\n\\t}\\n\\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowIntensity, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\\n\\t\\tfloat shadow = 1.0;\\n\\t\\tvec3 lightToPosition = shadowCoord.xyz;\\n\\t\\t\\n\\t\\tfloat lightToPositionLength = length( lightToPosition );\\n\\t\\tif ( lightToPositionLength - shadowCameraFar <= 0.0 && lightToPositionLength - shadowCameraNear >= 0.0 ) {\\n\\t\\t\\tfloat dp = ( lightToPositionLength - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\\t\\t\\tdp += shadowBias;\\n\\t\\t\\tvec3 bd3D = normalize( lightToPosition );\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\\n\\t\\t\\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\\n\\t\\t\\t\\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\\n\\t\\t\\t\\tshadow = (\\n\\t\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\\n\\t\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\\n\\t\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\\n\\t\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tshadow = texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\\n\\t\\t\\t#endif\\n\\t\\t}\\n\\t\\treturn mix( 1.0, shadow, shadowIntensity );\\n\\t}\\n#endif\";\n\nvar shadowmap_pars_vertex = \"#if NUM_SPOT_LIGHT_COORDS > 0\\n\\tuniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];\\n\\tvarying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];\\n#endif\\n#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tstruct DirectionalLightShadow {\\n\\t\\t\\tfloat shadowIntensity;\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t\\tstruct SpotLightShadow {\\n\\t\\t\\tfloat shadowIntensity;\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tstruct PointLightShadow {\\n\\t\\t\\tfloat shadowIntensity;\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t\\tfloat shadowCameraNear;\\n\\t\\t\\tfloat shadowCameraFar;\\n\\t\\t};\\n\\t\\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t#endif\\n#endif\";\n\nvar shadowmap_vertex = \"#if ( defined( USE_SHADOWMAP ) && ( NUM_DIR_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0 ) ) || ( NUM_SPOT_LIGHT_COORDS > 0 )\\n\\tvec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\tvec4 shadowWorldPosition;\\n#endif\\n#if defined( USE_SHADOWMAP )\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\\n\\t\\t\\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\\n\\t\\t\\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\t\\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\\n\\t\\t\\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t#endif\\n#endif\\n#if NUM_SPOT_LIGHT_COORDS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {\\n\\t\\tshadowWorldPosition = worldPosition;\\n\\t\\t#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\\n\\t\\t\\tshadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;\\n\\t\\t#endif\\n\\t\\tvSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\";\n\nvar shadowmask_pars_fragment = \"float getShadowMask() {\\n\\tfloat shadow = 1.0;\\n\\t#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\tDirectionalLightShadow directionalLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowIntensity, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\tSpotLightShadow spotLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tspotLight = spotLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowIntensity, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\tPointLightShadow pointLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tpointLight = pointLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowIntensity, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#endif\\n\\treturn shadow;\\n}\";\n\nvar skinbase_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\\n\\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\\n\\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\\n\\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\\n#endif\";\n\nvar skinning_pars_vertex = \"#ifdef USE_SKINNING\\n\\tuniform mat4 bindMatrix;\\n\\tuniform mat4 bindMatrixInverse;\\n\\tuniform highp sampler2D boneTexture;\\n\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\tint size = textureSize( boneTexture, 0 ).x;\\n\\t\\tint j = int( i ) * 4;\\n\\t\\tint x = j % size;\\n\\t\\tint y = j / size;\\n\\t\\tvec4 v1 = texelFetch( boneTexture, ivec2( x, y ), 0 );\\n\\t\\tvec4 v2 = texelFetch( boneTexture, ivec2( x + 1, y ), 0 );\\n\\t\\tvec4 v3 = texelFetch( boneTexture, ivec2( x + 2, y ), 0 );\\n\\t\\tvec4 v4 = texelFetch( boneTexture, ivec2( x + 3, y ), 0 );\\n\\t\\treturn mat4( v1, v2, v3, v4 );\\n\\t}\\n#endif\";\n\nvar skinning_vertex = \"#ifdef USE_SKINNING\\n\\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\\n\\tvec4 skinned = vec4( 0.0 );\\n\\tskinned += boneMatX * skinVertex * skinWeight.x;\\n\\tskinned += boneMatY * skinVertex * skinWeight.y;\\n\\tskinned += boneMatZ * skinVertex * skinWeight.z;\\n\\tskinned += boneMatW * skinVertex * skinWeight.w;\\n\\ttransformed = ( bindMatrixInverse * skinned ).xyz;\\n#endif\";\n\nvar skinnormal_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 skinMatrix = mat4( 0.0 );\\n\\tskinMatrix += skinWeight.x * boneMatX;\\n\\tskinMatrix += skinWeight.y * boneMatY;\\n\\tskinMatrix += skinWeight.z * boneMatZ;\\n\\tskinMatrix += skinWeight.w * boneMatW;\\n\\tskinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\\n\\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\\n\\t#ifdef USE_TANGENT\\n\\t\\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\\n\\t#endif\\n#endif\";\n\nvar specularmap_fragment = \"float specularStrength;\\n#ifdef USE_SPECULARMAP\\n\\tvec4 texelSpecular = texture2D( specularMap, vSpecularMapUv );\\n\\tspecularStrength = texelSpecular.r;\\n#else\\n\\tspecularStrength = 1.0;\\n#endif\";\n\nvar specularmap_pars_fragment = \"#ifdef USE_SPECULARMAP\\n\\tuniform sampler2D specularMap;\\n#endif\";\n\nvar tonemapping_fragment = \"#if defined( TONE_MAPPING )\\n\\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\\n#endif\";\n\nvar tonemapping_pars_fragment = \"#ifndef saturate\\n#define saturate( a ) clamp( a, 0.0, 1.0 )\\n#endif\\nuniform float toneMappingExposure;\\nvec3 LinearToneMapping( vec3 color ) {\\n\\treturn saturate( toneMappingExposure * color );\\n}\\nvec3 ReinhardToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\treturn saturate( color / ( vec3( 1.0 ) + color ) );\\n}\\nvec3 OptimizedCineonToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\tcolor = max( vec3( 0.0 ), color - 0.004 );\\n\\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\\n}\\nvec3 RRTAndODTFit( vec3 v ) {\\n\\tvec3 a = v * ( v + 0.0245786 ) - 0.000090537;\\n\\tvec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\\n\\treturn a / b;\\n}\\nvec3 ACESFilmicToneMapping( vec3 color ) {\\n\\tconst mat3 ACESInputMat = mat3(\\n\\t\\tvec3( 0.59719, 0.07600, 0.02840 ),\\t\\tvec3( 0.35458, 0.90834, 0.13383 ),\\n\\t\\tvec3( 0.04823, 0.01566, 0.83777 )\\n\\t);\\n\\tconst mat3 ACESOutputMat = mat3(\\n\\t\\tvec3(  1.60475, -0.10208, -0.00327 ),\\t\\tvec3( -0.53108,  1.10813, -0.07276 ),\\n\\t\\tvec3( -0.07367, -0.00605,  1.07602 )\\n\\t);\\n\\tcolor *= toneMappingExposure / 0.6;\\n\\tcolor = ACESInputMat * color;\\n\\tcolor = RRTAndODTFit( color );\\n\\tcolor = ACESOutputMat * color;\\n\\treturn saturate( color );\\n}\\nconst mat3 LINEAR_REC2020_TO_LINEAR_SRGB = mat3(\\n\\tvec3( 1.6605, - 0.1246, - 0.0182 ),\\n\\tvec3( - 0.5876, 1.1329, - 0.1006 ),\\n\\tvec3( - 0.0728, - 0.0083, 1.1187 )\\n);\\nconst mat3 LINEAR_SRGB_TO_LINEAR_REC2020 = mat3(\\n\\tvec3( 0.6274, 0.0691, 0.0164 ),\\n\\tvec3( 0.3293, 0.9195, 0.0880 ),\\n\\tvec3( 0.0433, 0.0113, 0.8956 )\\n);\\nvec3 agxDefaultContrastApprox( vec3 x ) {\\n\\tvec3 x2 = x * x;\\n\\tvec3 x4 = x2 * x2;\\n\\treturn + 15.5 * x4 * x2\\n\\t\\t- 40.14 * x4 * x\\n\\t\\t+ 31.96 * x4\\n\\t\\t- 6.868 * x2 * x\\n\\t\\t+ 0.4298 * x2\\n\\t\\t+ 0.1191 * x\\n\\t\\t- 0.00232;\\n}\\nvec3 AgXToneMapping( vec3 color ) {\\n\\tconst mat3 AgXInsetMatrix = mat3(\\n\\t\\tvec3( 0.856627153315983, 0.137318972929847, 0.11189821299995 ),\\n\\t\\tvec3( 0.0951212405381588, 0.761241990602591, 0.0767994186031903 ),\\n\\t\\tvec3( 0.0482516061458583, 0.101439036467562, 0.811302368396859 )\\n\\t);\\n\\tconst mat3 AgXOutsetMatrix = mat3(\\n\\t\\tvec3( 1.1271005818144368, - 0.1413297634984383, - 0.14132976349843826 ),\\n\\t\\tvec3( - 0.11060664309660323, 1.157823702216272, - 0.11060664309660294 ),\\n\\t\\tvec3( - 0.016493938717834573, - 0.016493938717834257, 1.2519364065950405 )\\n\\t);\\n\\tconst float AgxMinEv = - 12.47393;\\tconst float AgxMaxEv = 4.026069;\\n\\tcolor *= toneMappingExposure;\\n\\tcolor = LINEAR_SRGB_TO_LINEAR_REC2020 * color;\\n\\tcolor = AgXInsetMatrix * color;\\n\\tcolor = max( color, 1e-10 );\\tcolor = log2( color );\\n\\tcolor = ( color - AgxMinEv ) / ( AgxMaxEv - AgxMinEv );\\n\\tcolor = clamp( color, 0.0, 1.0 );\\n\\tcolor = agxDefaultContrastApprox( color );\\n\\tcolor = AgXOutsetMatrix * color;\\n\\tcolor = pow( max( vec3( 0.0 ), color ), vec3( 2.2 ) );\\n\\tcolor = LINEAR_REC2020_TO_LINEAR_SRGB * color;\\n\\tcolor = clamp( color, 0.0, 1.0 );\\n\\treturn color;\\n}\\nvec3 NeutralToneMapping( vec3 color ) {\\n\\tconst float StartCompression = 0.8 - 0.04;\\n\\tconst float Desaturation = 0.15;\\n\\tcolor *= toneMappingExposure;\\n\\tfloat x = min( color.r, min( color.g, color.b ) );\\n\\tfloat offset = x < 0.08 ? x - 6.25 * x * x : 0.04;\\n\\tcolor -= offset;\\n\\tfloat peak = max( color.r, max( color.g, color.b ) );\\n\\tif ( peak < StartCompression ) return color;\\n\\tfloat d = 1. - StartCompression;\\n\\tfloat newPeak = 1. - d * d / ( peak + d - StartCompression );\\n\\tcolor *= newPeak / peak;\\n\\tfloat g = 1. - 1. / ( Desaturation * ( peak - newPeak ) + 1. );\\n\\treturn mix( color, vec3( newPeak ), g );\\n}\\nvec3 CustomToneMapping( vec3 color ) { return color; }\";\n\nvar transmission_fragment = \"#ifdef USE_TRANSMISSION\\n\\tmaterial.transmission = transmission;\\n\\tmaterial.transmissionAlpha = 1.0;\\n\\tmaterial.thickness = thickness;\\n\\tmaterial.attenuationDistance = attenuationDistance;\\n\\tmaterial.attenuationColor = attenuationColor;\\n\\t#ifdef USE_TRANSMISSIONMAP\\n\\t\\tmaterial.transmission *= texture2D( transmissionMap, vTransmissionMapUv ).r;\\n\\t#endif\\n\\t#ifdef USE_THICKNESSMAP\\n\\t\\tmaterial.thickness *= texture2D( thicknessMap, vThicknessMapUv ).g;\\n\\t#endif\\n\\tvec3 pos = vWorldPosition;\\n\\tvec3 v = normalize( cameraPosition - pos );\\n\\tvec3 n = inverseTransformDirection( normal, viewMatrix );\\n\\tvec4 transmitted = getIBLVolumeRefraction(\\n\\t\\tn, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,\\n\\t\\tpos, modelMatrix, viewMatrix, projectionMatrix, material.dispersion, material.ior, material.thickness,\\n\\t\\tmaterial.attenuationColor, material.attenuationDistance );\\n\\tmaterial.transmissionAlpha = mix( material.transmissionAlpha, transmitted.a, material.transmission );\\n\\ttotalDiffuse = mix( totalDiffuse, transmitted.rgb, material.transmission );\\n#endif\";\n\nvar transmission_pars_fragment = \"#ifdef USE_TRANSMISSION\\n\\tuniform float transmission;\\n\\tuniform float thickness;\\n\\tuniform float attenuationDistance;\\n\\tuniform vec3 attenuationColor;\\n\\t#ifdef USE_TRANSMISSIONMAP\\n\\t\\tuniform sampler2D transmissionMap;\\n\\t#endif\\n\\t#ifdef USE_THICKNESSMAP\\n\\t\\tuniform sampler2D thicknessMap;\\n\\t#endif\\n\\tuniform vec2 transmissionSamplerSize;\\n\\tuniform sampler2D transmissionSamplerMap;\\n\\tuniform mat4 modelMatrix;\\n\\tuniform mat4 projectionMatrix;\\n\\tvarying vec3 vWorldPosition;\\n\\tfloat w0( float a ) {\\n\\t\\treturn ( 1.0 / 6.0 ) * ( a * ( a * ( - a + 3.0 ) - 3.0 ) + 1.0 );\\n\\t}\\n\\tfloat w1( float a ) {\\n\\t\\treturn ( 1.0 / 6.0 ) * ( a *  a * ( 3.0 * a - 6.0 ) + 4.0 );\\n\\t}\\n\\tfloat w2( float a ){\\n\\t\\treturn ( 1.0 / 6.0 ) * ( a * ( a * ( - 3.0 * a + 3.0 ) + 3.0 ) + 1.0 );\\n\\t}\\n\\tfloat w3( float a ) {\\n\\t\\treturn ( 1.0 / 6.0 ) * ( a * a * a );\\n\\t}\\n\\tfloat g0( float a ) {\\n\\t\\treturn w0( a ) + w1( a );\\n\\t}\\n\\tfloat g1( float a ) {\\n\\t\\treturn w2( a ) + w3( a );\\n\\t}\\n\\tfloat h0( float a ) {\\n\\t\\treturn - 1.0 + w1( a ) / ( w0( a ) + w1( a ) );\\n\\t}\\n\\tfloat h1( float a ) {\\n\\t\\treturn 1.0 + w3( a ) / ( w2( a ) + w3( a ) );\\n\\t}\\n\\tvec4 bicubic( sampler2D tex, vec2 uv, vec4 texelSize, float lod ) {\\n\\t\\tuv = uv * texelSize.zw + 0.5;\\n\\t\\tvec2 iuv = floor( uv );\\n\\t\\tvec2 fuv = fract( uv );\\n\\t\\tfloat g0x = g0( fuv.x );\\n\\t\\tfloat g1x = g1( fuv.x );\\n\\t\\tfloat h0x = h0( fuv.x );\\n\\t\\tfloat h1x = h1( fuv.x );\\n\\t\\tfloat h0y = h0( fuv.y );\\n\\t\\tfloat h1y = h1( fuv.y );\\n\\t\\tvec2 p0 = ( vec2( iuv.x + h0x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;\\n\\t\\tvec2 p1 = ( vec2( iuv.x + h1x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;\\n\\t\\tvec2 p2 = ( vec2( iuv.x + h0x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;\\n\\t\\tvec2 p3 = ( vec2( iuv.x + h1x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;\\n\\t\\treturn g0( fuv.y ) * ( g0x * textureLod( tex, p0, lod ) + g1x * textureLod( tex, p1, lod ) ) +\\n\\t\\t\\tg1( fuv.y ) * ( g0x * textureLod( tex, p2, lod ) + g1x * textureLod( tex, p3, lod ) );\\n\\t}\\n\\tvec4 textureBicubic( sampler2D sampler, vec2 uv, float lod ) {\\n\\t\\tvec2 fLodSize = vec2( textureSize( sampler, int( lod ) ) );\\n\\t\\tvec2 cLodSize = vec2( textureSize( sampler, int( lod + 1.0 ) ) );\\n\\t\\tvec2 fLodSizeInv = 1.0 / fLodSize;\\n\\t\\tvec2 cLodSizeInv = 1.0 / cLodSize;\\n\\t\\tvec4 fSample = bicubic( sampler, uv, vec4( fLodSizeInv, fLodSize ), floor( lod ) );\\n\\t\\tvec4 cSample = bicubic( sampler, uv, vec4( cLodSizeInv, cLodSize ), ceil( lod ) );\\n\\t\\treturn mix( fSample, cSample, fract( lod ) );\\n\\t}\\n\\tvec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {\\n\\t\\tvec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );\\n\\t\\tvec3 modelScale;\\n\\t\\tmodelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );\\n\\t\\tmodelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );\\n\\t\\tmodelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );\\n\\t\\treturn normalize( refractionVector ) * thickness * modelScale;\\n\\t}\\n\\tfloat applyIorToRoughness( const in float roughness, const in float ior ) {\\n\\t\\treturn roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );\\n\\t}\\n\\tvec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {\\n\\t\\tfloat lod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );\\n\\t\\treturn textureBicubic( transmissionSamplerMap, fragCoord.xy, lod );\\n\\t}\\n\\tvec3 volumeAttenuation( const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {\\n\\t\\tif ( isinf( attenuationDistance ) ) {\\n\\t\\t\\treturn vec3( 1.0 );\\n\\t\\t} else {\\n\\t\\t\\tvec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;\\n\\t\\t\\tvec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );\\t\\t\\treturn transmittance;\\n\\t\\t}\\n\\t}\\n\\tvec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,\\n\\t\\tconst in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,\\n\\t\\tconst in mat4 viewMatrix, const in mat4 projMatrix, const in float dispersion, const in float ior, const in float thickness,\\n\\t\\tconst in vec3 attenuationColor, const in float attenuationDistance ) {\\n\\t\\tvec4 transmittedLight;\\n\\t\\tvec3 transmittance;\\n\\t\\t#ifdef USE_DISPERSION\\n\\t\\t\\tfloat halfSpread = ( ior - 1.0 ) * 0.025 * dispersion;\\n\\t\\t\\tvec3 iors = vec3( ior - halfSpread, ior, ior + halfSpread );\\n\\t\\t\\tfor ( int i = 0; i < 3; i ++ ) {\\n\\t\\t\\t\\tvec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, iors[ i ], modelMatrix );\\n\\t\\t\\t\\tvec3 refractedRayExit = position + transmissionRay;\\n\\t\\t\\n\\t\\t\\t\\tvec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );\\n\\t\\t\\t\\tvec2 refractionCoords = ndcPos.xy / ndcPos.w;\\n\\t\\t\\t\\trefractionCoords += 1.0;\\n\\t\\t\\t\\trefractionCoords /= 2.0;\\n\\t\\t\\n\\t\\t\\t\\tvec4 transmissionSample = getTransmissionSample( refractionCoords, roughness, iors[ i ] );\\n\\t\\t\\t\\ttransmittedLight[ i ] = transmissionSample[ i ];\\n\\t\\t\\t\\ttransmittedLight.a += transmissionSample.a;\\n\\t\\t\\t\\ttransmittance[ i ] = diffuseColor[ i ] * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance )[ i ];\\n\\t\\t\\t}\\n\\t\\t\\ttransmittedLight.a /= 3.0;\\n\\t\\t\\n\\t\\t#else\\n\\t\\t\\n\\t\\t\\tvec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );\\n\\t\\t\\tvec3 refractedRayExit = position + transmissionRay;\\n\\t\\t\\tvec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );\\n\\t\\t\\tvec2 refractionCoords = ndcPos.xy / ndcPos.w;\\n\\t\\t\\trefractionCoords += 1.0;\\n\\t\\t\\trefractionCoords /= 2.0;\\n\\t\\t\\ttransmittedLight = getTransmissionSample( refractionCoords, roughness, ior );\\n\\t\\t\\ttransmittance = diffuseColor * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance );\\n\\t\\t\\n\\t\\t#endif\\n\\t\\tvec3 attenuatedColor = transmittance * transmittedLight.rgb;\\n\\t\\tvec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );\\n\\t\\tfloat transmittanceFactor = ( transmittance.r + transmittance.g + transmittance.b ) / 3.0;\\n\\t\\treturn vec4( ( 1.0 - F ) * attenuatedColor, 1.0 - ( 1.0 - transmittedLight.a ) * transmittanceFactor );\\n\\t}\\n#endif\";\n\nvar uv_pars_fragment = \"#if defined( USE_UV ) || defined( USE_ANISOTROPY )\\n\\tvarying vec2 vUv;\\n#endif\\n#ifdef USE_MAP\\n\\tvarying vec2 vMapUv;\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tvarying vec2 vAlphaMapUv;\\n#endif\\n#ifdef USE_LIGHTMAP\\n\\tvarying vec2 vLightMapUv;\\n#endif\\n#ifdef USE_AOMAP\\n\\tvarying vec2 vAoMapUv;\\n#endif\\n#ifdef USE_BUMPMAP\\n\\tvarying vec2 vBumpMapUv;\\n#endif\\n#ifdef USE_NORMALMAP\\n\\tvarying vec2 vNormalMapUv;\\n#endif\\n#ifdef USE_EMISSIVEMAP\\n\\tvarying vec2 vEmissiveMapUv;\\n#endif\\n#ifdef USE_METALNESSMAP\\n\\tvarying vec2 vMetalnessMapUv;\\n#endif\\n#ifdef USE_ROUGHNESSMAP\\n\\tvarying vec2 vRoughnessMapUv;\\n#endif\\n#ifdef USE_ANISOTROPYMAP\\n\\tvarying vec2 vAnisotropyMapUv;\\n#endif\\n#ifdef USE_CLEARCOATMAP\\n\\tvarying vec2 vClearcoatMapUv;\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tvarying vec2 vClearcoatNormalMapUv;\\n#endif\\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\tvarying vec2 vClearcoatRoughnessMapUv;\\n#endif\\n#ifdef USE_IRIDESCENCEMAP\\n\\tvarying vec2 vIridescenceMapUv;\\n#endif\\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\\n\\tvarying vec2 vIridescenceThicknessMapUv;\\n#endif\\n#ifdef USE_SHEEN_COLORMAP\\n\\tvarying vec2 vSheenColorMapUv;\\n#endif\\n#ifdef USE_SHEEN_ROUGHNESSMAP\\n\\tvarying vec2 vSheenRoughnessMapUv;\\n#endif\\n#ifdef USE_SPECULARMAP\\n\\tvarying vec2 vSpecularMapUv;\\n#endif\\n#ifdef USE_SPECULAR_COLORMAP\\n\\tvarying vec2 vSpecularColorMapUv;\\n#endif\\n#ifdef USE_SPECULAR_INTENSITYMAP\\n\\tvarying vec2 vSpecularIntensityMapUv;\\n#endif\\n#ifdef USE_TRANSMISSIONMAP\\n\\tuniform mat3 transmissionMapTransform;\\n\\tvarying vec2 vTransmissionMapUv;\\n#endif\\n#ifdef USE_THICKNESSMAP\\n\\tuniform mat3 thicknessMapTransform;\\n\\tvarying vec2 vThicknessMapUv;\\n#endif\";\n\nvar uv_pars_vertex = \"#if defined( USE_UV ) || defined( USE_ANISOTROPY )\\n\\tvarying vec2 vUv;\\n#endif\\n#ifdef USE_MAP\\n\\tuniform mat3 mapTransform;\\n\\tvarying vec2 vMapUv;\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tuniform mat3 alphaMapTransform;\\n\\tvarying vec2 vAlphaMapUv;\\n#endif\\n#ifdef USE_LIGHTMAP\\n\\tuniform mat3 lightMapTransform;\\n\\tvarying vec2 vLightMapUv;\\n#endif\\n#ifdef USE_AOMAP\\n\\tuniform mat3 aoMapTransform;\\n\\tvarying vec2 vAoMapUv;\\n#endif\\n#ifdef USE_BUMPMAP\\n\\tuniform mat3 bumpMapTransform;\\n\\tvarying vec2 vBumpMapUv;\\n#endif\\n#ifdef USE_NORMALMAP\\n\\tuniform mat3 normalMapTransform;\\n\\tvarying vec2 vNormalMapUv;\\n#endif\\n#ifdef USE_DISPLACEMENTMAP\\n\\tuniform mat3 displacementMapTransform;\\n\\tvarying vec2 vDisplacementMapUv;\\n#endif\\n#ifdef USE_EMISSIVEMAP\\n\\tuniform mat3 emissiveMapTransform;\\n\\tvarying vec2 vEmissiveMapUv;\\n#endif\\n#ifdef USE_METALNESSMAP\\n\\tuniform mat3 metalnessMapTransform;\\n\\tvarying vec2 vMetalnessMapUv;\\n#endif\\n#ifdef USE_ROUGHNESSMAP\\n\\tuniform mat3 roughnessMapTransform;\\n\\tvarying vec2 vRoughnessMapUv;\\n#endif\\n#ifdef USE_ANISOTROPYMAP\\n\\tuniform mat3 anisotropyMapTransform;\\n\\tvarying vec2 vAnisotropyMapUv;\\n#endif\\n#ifdef USE_CLEARCOATMAP\\n\\tuniform mat3 clearcoatMapTransform;\\n\\tvarying vec2 vClearcoatMapUv;\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tuniform mat3 clearcoatNormalMapTransform;\\n\\tvarying vec2 vClearcoatNormalMapUv;\\n#endif\\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\tuniform mat3 clearcoatRoughnessMapTransform;\\n\\tvarying vec2 vClearcoatRoughnessMapUv;\\n#endif\\n#ifdef USE_SHEEN_COLORMAP\\n\\tuniform mat3 sheenColorMapTransform;\\n\\tvarying vec2 vSheenColorMapUv;\\n#endif\\n#ifdef USE_SHEEN_ROUGHNESSMAP\\n\\tuniform mat3 sheenRoughnessMapTransform;\\n\\tvarying vec2 vSheenRoughnessMapUv;\\n#endif\\n#ifdef USE_IRIDESCENCEMAP\\n\\tuniform mat3 iridescenceMapTransform;\\n\\tvarying vec2 vIridescenceMapUv;\\n#endif\\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\\n\\tuniform mat3 iridescenceThicknessMapTransform;\\n\\tvarying vec2 vIridescenceThicknessMapUv;\\n#endif\\n#ifdef USE_SPECULARMAP\\n\\tuniform mat3 specularMapTransform;\\n\\tvarying vec2 vSpecularMapUv;\\n#endif\\n#ifdef USE_SPECULAR_COLORMAP\\n\\tuniform mat3 specularColorMapTransform;\\n\\tvarying vec2 vSpecularColorMapUv;\\n#endif\\n#ifdef USE_SPECULAR_INTENSITYMAP\\n\\tuniform mat3 specularIntensityMapTransform;\\n\\tvarying vec2 vSpecularIntensityMapUv;\\n#endif\\n#ifdef USE_TRANSMISSIONMAP\\n\\tuniform mat3 transmissionMapTransform;\\n\\tvarying vec2 vTransmissionMapUv;\\n#endif\\n#ifdef USE_THICKNESSMAP\\n\\tuniform mat3 thicknessMapTransform;\\n\\tvarying vec2 vThicknessMapUv;\\n#endif\";\n\nvar uv_vertex = \"#if defined( USE_UV ) || defined( USE_ANISOTROPY )\\n\\tvUv = vec3( uv, 1 ).xy;\\n#endif\\n#ifdef USE_MAP\\n\\tvMapUv = ( mapTransform * vec3( MAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tvAlphaMapUv = ( alphaMapTransform * vec3( ALPHAMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_LIGHTMAP\\n\\tvLightMapUv = ( lightMapTransform * vec3( LIGHTMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_AOMAP\\n\\tvAoMapUv = ( aoMapTransform * vec3( AOMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_BUMPMAP\\n\\tvBumpMapUv = ( bumpMapTransform * vec3( BUMPMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_NORMALMAP\\n\\tvNormalMapUv = ( normalMapTransform * vec3( NORMALMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_DISPLACEMENTMAP\\n\\tvDisplacementMapUv = ( displacementMapTransform * vec3( DISPLACEMENTMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_EMISSIVEMAP\\n\\tvEmissiveMapUv = ( emissiveMapTransform * vec3( EMISSIVEMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_METALNESSMAP\\n\\tvMetalnessMapUv = ( metalnessMapTransform * vec3( METALNESSMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_ROUGHNESSMAP\\n\\tvRoughnessMapUv = ( roughnessMapTransform * vec3( ROUGHNESSMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_ANISOTROPYMAP\\n\\tvAnisotropyMapUv = ( anisotropyMapTransform * vec3( ANISOTROPYMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_CLEARCOATMAP\\n\\tvClearcoatMapUv = ( clearcoatMapTransform * vec3( CLEARCOATMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tvClearcoatNormalMapUv = ( clearcoatNormalMapTransform * vec3( CLEARCOAT_NORMALMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\tvClearcoatRoughnessMapUv = ( clearcoatRoughnessMapTransform * vec3( CLEARCOAT_ROUGHNESSMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_IRIDESCENCEMAP\\n\\tvIridescenceMapUv = ( iridescenceMapTransform * vec3( IRIDESCENCEMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\\n\\tvIridescenceThicknessMapUv = ( iridescenceThicknessMapTransform * vec3( IRIDESCENCE_THICKNESSMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_SHEEN_COLORMAP\\n\\tvSheenColorMapUv = ( sheenColorMapTransform * vec3( SHEEN_COLORMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_SHEEN_ROUGHNESSMAP\\n\\tvSheenRoughnessMapUv = ( sheenRoughnessMapTransform * vec3( SHEEN_ROUGHNESSMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_SPECULARMAP\\n\\tvSpecularMapUv = ( specularMapTransform * vec3( SPECULARMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_SPECULAR_COLORMAP\\n\\tvSpecularColorMapUv = ( specularColorMapTransform * vec3( SPECULAR_COLORMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_SPECULAR_INTENSITYMAP\\n\\tvSpecularIntensityMapUv = ( specularIntensityMapTransform * vec3( SPECULAR_INTENSITYMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_TRANSMISSIONMAP\\n\\tvTransmissionMapUv = ( transmissionMapTransform * vec3( TRANSMISSIONMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_THICKNESSMAP\\n\\tvThicknessMapUv = ( thicknessMapTransform * vec3( THICKNESSMAP_UV, 1 ) ).xy;\\n#endif\";\n\nvar worldpos_vertex = \"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0\\n\\tvec4 worldPosition = vec4( transformed, 1.0 );\\n\\t#ifdef USE_BATCHING\\n\\t\\tworldPosition = batchingMatrix * worldPosition;\\n\\t#endif\\n\\t#ifdef USE_INSTANCING\\n\\t\\tworldPosition = instanceMatrix * worldPosition;\\n\\t#endif\\n\\tworldPosition = modelMatrix * worldPosition;\\n#endif\";\n\nconst vertex$h = \"varying vec2 vUv;\\nuniform mat3 uvTransform;\\nvoid main() {\\n\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n\\tgl_Position = vec4( position.xy, 1.0, 1.0 );\\n}\";\n\nconst fragment$h = \"uniform sampler2D t2D;\\nuniform float backgroundIntensity;\\nvarying vec2 vUv;\\nvoid main() {\\n\\tvec4 texColor = texture2D( t2D, vUv );\\n\\t#ifdef DECODE_VIDEO_TEXTURE\\n\\t\\ttexColor = vec4( mix( pow( texColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), texColor.rgb * 0.0773993808, vec3( lessThanEqual( texColor.rgb, vec3( 0.04045 ) ) ) ), texColor.w );\\n\\t#endif\\n\\ttexColor.rgb *= backgroundIntensity;\\n\\tgl_FragColor = texColor;\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n}\";\n\nconst vertex$g = \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\tgl_Position.z = gl_Position.w;\\n}\";\n\nconst fragment$g = \"#ifdef ENVMAP_TYPE_CUBE\\n\\tuniform samplerCube envMap;\\n#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\tuniform sampler2D envMap;\\n#endif\\nuniform float flipEnvMap;\\nuniform float backgroundBlurriness;\\nuniform float backgroundIntensity;\\nuniform mat3 backgroundRotation;\\nvarying vec3 vWorldDirection;\\n#include <cube_uv_reflection_fragment>\\nvoid main() {\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tvec4 texColor = textureCube( envMap, backgroundRotation * vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );\\n\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tvec4 texColor = textureCubeUV( envMap, backgroundRotation * vWorldDirection, backgroundBlurriness );\\n\\t#else\\n\\t\\tvec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );\\n\\t#endif\\n\\ttexColor.rgb *= backgroundIntensity;\\n\\tgl_FragColor = texColor;\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n}\";\n\nconst vertex$f = \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\tgl_Position.z = gl_Position.w;\\n}\";\n\nconst fragment$f = \"uniform samplerCube tCube;\\nuniform float tFlip;\\nuniform float opacity;\\nvarying vec3 vWorldDirection;\\nvoid main() {\\n\\tvec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );\\n\\tgl_FragColor = texColor;\\n\\tgl_FragColor.a *= opacity;\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n}\";\n\nconst vertex$e = \"#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvarying vec2 vHighPrecisionZW;\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <batching_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <morphinstance_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvHighPrecisionZW = gl_Position.zw;\\n}\";\n\nconst fragment$e = \"#if DEPTH_PACKING == 3200\\n\\tuniform float opacity;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvarying vec2 vHighPrecisionZW;\\nvoid main() {\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#include <clipping_planes_fragment>\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tdiffuseColor.a = opacity;\\n\\t#endif\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\\n\\t#elif DEPTH_PACKING == 3201\\n\\t\\tgl_FragColor = packDepthToRGBA( fragCoordZ );\\n\\t#endif\\n}\";\n\nconst vertex$d = \"#define DISTANCE\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <batching_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <morphinstance_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvWorldPosition = worldPosition.xyz;\\n}\";\n\nconst fragment$d = \"#define DISTANCE\\nuniform vec3 referencePosition;\\nuniform float nearDistance;\\nuniform float farDistance;\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main () {\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#include <clipping_planes_fragment>\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\tfloat dist = length( vWorldPosition - referencePosition );\\n\\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\\n\\tdist = saturate( dist );\\n\\tgl_FragColor = packDepthToRGBA( dist );\\n}\";\n\nconst vertex$c = \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n}\";\n\nconst fragment$c = \"uniform sampler2D tEquirect;\\nvarying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvec3 direction = normalize( vWorldDirection );\\n\\tvec2 sampleUV = equirectUv( direction );\\n\\tgl_FragColor = texture2D( tEquirect, sampleUV );\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n}\";\n\nconst vertex$b = \"uniform float scale;\\nattribute float lineDistance;\\nvarying float vLineDistance;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\tvLineDistance = scale * lineDistance;\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphinstance_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$b = \"uniform vec3 diffuse;\\nuniform float opacity;\\nuniform float dashSize;\\nuniform float totalSize;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <clipping_planes_fragment>\\n\\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\\n\\t\\tdiscard;\\n\\t}\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n}\";\n\nconst vertex$a = \"#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphinstance_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <batching_vertex>\\n\\t#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinbase_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t\\t#include <defaultnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$a = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <clipping_planes_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <specularmap_fragment>\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\tvec4 lightMapTexel = texture2D( lightMap, vLightMapUv );\\n\\t\\treflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;\\n\\t#else\\n\\t\\treflectedLight.indirectDiffuse += vec3( 1.0 );\\n\\t#endif\\n\\t#include <aomap_fragment>\\n\\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\\n\\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\\n\\t#include <envmap_fragment>\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$9 = \"#define LAMBERT\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphinstance_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <batching_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$9 = \"#define LAMBERT\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_lambert_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <clipping_planes_fragment>\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_lambert_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$8 = \"#define MATCAP\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <color_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphinstance_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <batching_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n}\";\n\nconst fragment$8 = \"#define MATCAP\\nuniform vec3 diffuse;\\nuniform float opacity;\\nuniform sampler2D matcap;\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <normal_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <clipping_planes_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tvec3 viewDir = normalize( vViewPosition );\\n\\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\\n\\tvec3 y = cross( viewDir, x );\\n\\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\\n\\t#ifdef USE_MATCAP\\n\\t\\tvec4 matcapColor = texture2D( matcap, uv );\\n\\t#else\\n\\t\\tvec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );\\n\\t#endif\\n\\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$7 = \"#define NORMAL\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <batching_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphinstance_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\\n\\tvViewPosition = - mvPosition.xyz;\\n#endif\\n}\";\n\nconst fragment$7 = \"#define NORMAL\\nuniform float opacity;\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <normal_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\tvec4 diffuseColor = vec4( 0.0, 0.0, 0.0, opacity );\\n\\t#include <clipping_planes_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tgl_FragColor = vec4( packNormalToRGB( normal ), diffuseColor.a );\\n\\t#ifdef OPAQUE\\n\\t\\tgl_FragColor.a = 1.0;\\n\\t#endif\\n}\";\n\nconst vertex$6 = \"#define PHONG\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <batching_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphinstance_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$6 = \"#define PHONG\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform vec3 specular;\\nuniform float shininess;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_phong_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <clipping_planes_fragment>\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_phong_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$5 = \"#define STANDARD\\nvarying vec3 vViewPosition;\\n#ifdef USE_TRANSMISSION\\n\\tvarying vec3 vWorldPosition;\\n#endif\\n#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphinstance_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <batching_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n#ifdef USE_TRANSMISSION\\n\\tvWorldPosition = worldPosition.xyz;\\n#endif\\n}\";\n\nconst fragment$5 = \"#define STANDARD\\n#ifdef PHYSICAL\\n\\t#define IOR\\n\\t#define USE_SPECULAR\\n#endif\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float roughness;\\nuniform float metalness;\\nuniform float opacity;\\n#ifdef IOR\\n\\tuniform float ior;\\n#endif\\n#ifdef USE_SPECULAR\\n\\tuniform float specularIntensity;\\n\\tuniform vec3 specularColor;\\n\\t#ifdef USE_SPECULAR_COLORMAP\\n\\t\\tuniform sampler2D specularColorMap;\\n\\t#endif\\n\\t#ifdef USE_SPECULAR_INTENSITYMAP\\n\\t\\tuniform sampler2D specularIntensityMap;\\n\\t#endif\\n#endif\\n#ifdef USE_CLEARCOAT\\n\\tuniform float clearcoat;\\n\\tuniform float clearcoatRoughness;\\n#endif\\n#ifdef USE_DISPERSION\\n\\tuniform float dispersion;\\n#endif\\n#ifdef USE_IRIDESCENCE\\n\\tuniform float iridescence;\\n\\tuniform float iridescenceIOR;\\n\\tuniform float iridescenceThicknessMinimum;\\n\\tuniform float iridescenceThicknessMaximum;\\n#endif\\n#ifdef USE_SHEEN\\n\\tuniform vec3 sheenColor;\\n\\tuniform float sheenRoughness;\\n\\t#ifdef USE_SHEEN_COLORMAP\\n\\t\\tuniform sampler2D sheenColorMap;\\n\\t#endif\\n\\t#ifdef USE_SHEEN_ROUGHNESSMAP\\n\\t\\tuniform sampler2D sheenRoughnessMap;\\n\\t#endif\\n#endif\\n#ifdef USE_ANISOTROPY\\n\\tuniform vec2 anisotropyVector;\\n\\t#ifdef USE_ANISOTROPYMAP\\n\\t\\tuniform sampler2D anisotropyMap;\\n\\t#endif\\n#endif\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <iridescence_fragment>\\n#include <cube_uv_reflection_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_physical_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_physical_pars_fragment>\\n#include <transmission_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <clearcoat_pars_fragment>\\n#include <iridescence_pars_fragment>\\n#include <roughnessmap_pars_fragment>\\n#include <metalnessmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <clipping_planes_fragment>\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <roughnessmap_fragment>\\n\\t#include <metalnessmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <clearcoat_normal_fragment_begin>\\n\\t#include <clearcoat_normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_physical_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;\\n\\tvec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;\\n\\t#include <transmission_fragment>\\n\\tvec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;\\n\\t#ifdef USE_SHEEN\\n\\t\\tfloat sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );\\n\\t\\toutgoingLight = outgoingLight * sheenEnergyComp + sheenSpecularDirect + sheenSpecularIndirect;\\n\\t#endif\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tfloat dotNVcc = saturate( dot( geometryClearcoatNormal, geometryViewDir ) );\\n\\t\\tvec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );\\n\\t\\toutgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + ( clearcoatSpecularDirect + clearcoatSpecularIndirect ) * material.clearcoat;\\n\\t#endif\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$4 = \"#define TOON\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphinstance_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <batching_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$4 = \"#define TOON\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <gradientmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_toon_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <clipping_planes_fragment>\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_toon_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$3 = \"uniform float size;\\nuniform float scale;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\n#ifdef USE_POINTS_UV\\n\\tvarying vec2 vUv;\\n\\tuniform mat3 uvTransform;\\n#endif\\nvoid main() {\\n\\t#ifdef USE_POINTS_UV\\n\\t\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n\\t#endif\\n\\t#include <color_vertex>\\n\\t#include <morphinstance_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <project_vertex>\\n\\tgl_PointSize = size;\\n\\t#ifdef USE_SIZEATTENUATION\\n\\t\\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\\n\\t\\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\\n\\t#endif\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$3 = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <map_particle_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_particle_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n}\";\n\nconst vertex$2 = \"#include <common>\\n#include <batching_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <shadowmap_pars_vertex>\\nvoid main() {\\n\\t#include <batching_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphinstance_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$2 = \"uniform vec3 color;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <logdepthbuf_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\nvoid main() {\\n\\t#include <logdepthbuf_fragment>\\n\\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n}\";\n\nconst vertex$1 = \"uniform float rotation;\\nuniform vec2 center;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\\n\\tvec2 scale;\\n\\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\\n\\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\\n\\t#ifndef USE_SIZEATTENUATION\\n\\t\\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\\n\\t\\tif ( isPerspective ) scale *= - mvPosition.z;\\n\\t#endif\\n\\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\\n\\tvec2 rotatedPosition;\\n\\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\\n\\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\\n\\tmvPosition.xy += rotatedPosition;\\n\\tgl_Position = projectionMatrix * mvPosition;\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$1 = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n}\";\n\nconst ShaderChunk = {\n\talphahash_fragment: alphahash_fragment,\n\talphahash_pars_fragment: alphahash_pars_fragment,\n\talphamap_fragment: alphamap_fragment,\n\talphamap_pars_fragment: alphamap_pars_fragment,\n\talphatest_fragment: alphatest_fragment,\n\talphatest_pars_fragment: alphatest_pars_fragment,\n\taomap_fragment: aomap_fragment,\n\taomap_pars_fragment: aomap_pars_fragment,\n\tbatching_pars_vertex: batching_pars_vertex,\n\tbatching_vertex: batching_vertex,\n\tbegin_vertex: begin_vertex,\n\tbeginnormal_vertex: beginnormal_vertex,\n\tbsdfs: bsdfs,\n\tiridescence_fragment: iridescence_fragment,\n\tbumpmap_pars_fragment: bumpmap_pars_fragment,\n\tclipping_planes_fragment: clipping_planes_fragment,\n\tclipping_planes_pars_fragment: clipping_planes_pars_fragment,\n\tclipping_planes_pars_vertex: clipping_planes_pars_vertex,\n\tclipping_planes_vertex: clipping_planes_vertex,\n\tcolor_fragment: color_fragment,\n\tcolor_pars_fragment: color_pars_fragment,\n\tcolor_pars_vertex: color_pars_vertex,\n\tcolor_vertex: color_vertex,\n\tcommon: common,\n\tcube_uv_reflection_fragment: cube_uv_reflection_fragment,\n\tdefaultnormal_vertex: defaultnormal_vertex,\n\tdisplacementmap_pars_vertex: displacementmap_pars_vertex,\n\tdisplacementmap_vertex: displacementmap_vertex,\n\temissivemap_fragment: emissivemap_fragment,\n\temissivemap_pars_fragment: emissivemap_pars_fragment,\n\tcolorspace_fragment: colorspace_fragment,\n\tcolorspace_pars_fragment: colorspace_pars_fragment,\n\tenvmap_fragment: envmap_fragment,\n\tenvmap_common_pars_fragment: envmap_common_pars_fragment,\n\tenvmap_pars_fragment: envmap_pars_fragment,\n\tenvmap_pars_vertex: envmap_pars_vertex,\n\tenvmap_physical_pars_fragment: envmap_physical_pars_fragment,\n\tenvmap_vertex: envmap_vertex,\n\tfog_vertex: fog_vertex,\n\tfog_pars_vertex: fog_pars_vertex,\n\tfog_fragment: fog_fragment,\n\tfog_pars_fragment: fog_pars_fragment,\n\tgradientmap_pars_fragment: gradientmap_pars_fragment,\n\tlightmap_pars_fragment: lightmap_pars_fragment,\n\tlights_lambert_fragment: lights_lambert_fragment,\n\tlights_lambert_pars_fragment: lights_lambert_pars_fragment,\n\tlights_pars_begin: lights_pars_begin,\n\tlights_toon_fragment: lights_toon_fragment,\n\tlights_toon_pars_fragment: lights_toon_pars_fragment,\n\tlights_phong_fragment: lights_phong_fragment,\n\tlights_phong_pars_fragment: lights_phong_pars_fragment,\n\tlights_physical_fragment: lights_physical_fragment,\n\tlights_physical_pars_fragment: lights_physical_pars_fragment,\n\tlights_fragment_begin: lights_fragment_begin,\n\tlights_fragment_maps: lights_fragment_maps,\n\tlights_fragment_end: lights_fragment_end,\n\tlogdepthbuf_fragment: logdepthbuf_fragment,\n\tlogdepthbuf_pars_fragment: logdepthbuf_pars_fragment,\n\tlogdepthbuf_pars_vertex: logdepthbuf_pars_vertex,\n\tlogdepthbuf_vertex: logdepthbuf_vertex,\n\tmap_fragment: map_fragment,\n\tmap_pars_fragment: map_pars_fragment,\n\tmap_particle_fragment: map_particle_fragment,\n\tmap_particle_pars_fragment: map_particle_pars_fragment,\n\tmetalnessmap_fragment: metalnessmap_fragment,\n\tmetalnessmap_pars_fragment: metalnessmap_pars_fragment,\n\tmorphinstance_vertex: morphinstance_vertex,\n\tmorphcolor_vertex: morphcolor_vertex,\n\tmorphnormal_vertex: morphnormal_vertex,\n\tmorphtarget_pars_vertex: morphtarget_pars_vertex,\n\tmorphtarget_vertex: morphtarget_vertex,\n\tnormal_fragment_begin: normal_fragment_begin,\n\tnormal_fragment_maps: normal_fragment_maps,\n\tnormal_pars_fragment: normal_pars_fragment,\n\tnormal_pars_vertex: normal_pars_vertex,\n\tnormal_vertex: normal_vertex,\n\tnormalmap_pars_fragment: normalmap_pars_fragment,\n\tclearcoat_normal_fragment_begin: clearcoat_normal_fragment_begin,\n\tclearcoat_normal_fragment_maps: clearcoat_normal_fragment_maps,\n\tclearcoat_pars_fragment: clearcoat_pars_fragment,\n\tiridescence_pars_fragment: iridescence_pars_fragment,\n\topaque_fragment: opaque_fragment,\n\tpacking: packing,\n\tpremultiplied_alpha_fragment: premultiplied_alpha_fragment,\n\tproject_vertex: project_vertex,\n\tdithering_fragment: dithering_fragment,\n\tdithering_pars_fragment: dithering_pars_fragment,\n\troughnessmap_fragment: roughnessmap_fragment,\n\troughnessmap_pars_fragment: roughnessmap_pars_fragment,\n\tshadowmap_pars_fragment: shadowmap_pars_fragment,\n\tshadowmap_pars_vertex: shadowmap_pars_vertex,\n\tshadowmap_vertex: shadowmap_vertex,\n\tshadowmask_pars_fragment: shadowmask_pars_fragment,\n\tskinbase_vertex: skinbase_vertex,\n\tskinning_pars_vertex: skinning_pars_vertex,\n\tskinning_vertex: skinning_vertex,\n\tskinnormal_vertex: skinnormal_vertex,\n\tspecularmap_fragment: specularmap_fragment,\n\tspecularmap_pars_fragment: specularmap_pars_fragment,\n\ttonemapping_fragment: tonemapping_fragment,\n\ttonemapping_pars_fragment: tonemapping_pars_fragment,\n\ttransmission_fragment: transmission_fragment,\n\ttransmission_pars_fragment: transmission_pars_fragment,\n\tuv_pars_fragment: uv_pars_fragment,\n\tuv_pars_vertex: uv_pars_vertex,\n\tuv_vertex: uv_vertex,\n\tworldpos_vertex: worldpos_vertex,\n\n\tbackground_vert: vertex$h,\n\tbackground_frag: fragment$h,\n\tbackgroundCube_vert: vertex$g,\n\tbackgroundCube_frag: fragment$g,\n\tcube_vert: vertex$f,\n\tcube_frag: fragment$f,\n\tdepth_vert: vertex$e,\n\tdepth_frag: fragment$e,\n\tdistanceRGBA_vert: vertex$d,\n\tdistanceRGBA_frag: fragment$d,\n\tequirect_vert: vertex$c,\n\tequirect_frag: fragment$c,\n\tlinedashed_vert: vertex$b,\n\tlinedashed_frag: fragment$b,\n\tmeshbasic_vert: vertex$a,\n\tmeshbasic_frag: fragment$a,\n\tmeshlambert_vert: vertex$9,\n\tmeshlambert_frag: fragment$9,\n\tmeshmatcap_vert: vertex$8,\n\tmeshmatcap_frag: fragment$8,\n\tmeshnormal_vert: vertex$7,\n\tmeshnormal_frag: fragment$7,\n\tmeshphong_vert: vertex$6,\n\tmeshphong_frag: fragment$6,\n\tmeshphysical_vert: vertex$5,\n\tmeshphysical_frag: fragment$5,\n\tmeshtoon_vert: vertex$4,\n\tmeshtoon_frag: fragment$4,\n\tpoints_vert: vertex$3,\n\tpoints_frag: fragment$3,\n\tshadow_vert: vertex$2,\n\tshadow_frag: fragment$2,\n\tsprite_vert: vertex$1,\n\tsprite_frag: fragment$1\n};\n\n/**\n * Uniforms library for shared webgl shaders\n */\n\nconst UniformsLib = {\n\n\tcommon: {\n\n\t\tdiffuse: { value: /*@__PURE__*/ new Color( 0xffffff ) },\n\t\topacity: { value: 1.0 },\n\n\t\tmap: { value: null },\n\t\tmapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\n\t\talphaMap: { value: null },\n\t\talphaMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\n\t\talphaTest: { value: 0 }\n\n\t},\n\n\tspecularmap: {\n\n\t\tspecularMap: { value: null },\n\t\tspecularMapTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\tenvmap: {\n\n\t\tenvMap: { value: null },\n\t\tenvMapRotation: { value: /*@__PURE__*/ new Matrix3() },\n\t\tflipEnvMap: { value: - 1 },\n\t\treflectivity: { value: 1.0 }, // basic, lambert, phong\n\t\tior: { value: 1.5 }, // physical\n\t\trefractionRatio: { value: 0.98 }, // basic, lambert, phong\n\n\t},\n\n\taomap: {\n\n\t\taoMap: { value: null },\n\t\taoMapIntensity: { value: 1 },\n\t\taoMapTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\tlightmap: {\n\n\t\tlightMap: { value: null },\n\t\tlightMapIntensity: { value: 1 },\n\t\tlightMapTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\tbumpmap: {\n\n\t\tbumpMap: { value: null },\n\t\tbumpMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\tbumpScale: { value: 1 }\n\n\t},\n\n\tnormalmap: {\n\n\t\tnormalMap: { value: null },\n\t\tnormalMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\tnormalScale: { value: /*@__PURE__*/ new Vector2( 1, 1 ) }\n\n\t},\n\n\tdisplacementmap: {\n\n\t\tdisplacementMap: { value: null },\n\t\tdisplacementMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\tdisplacementScale: { value: 1 },\n\t\tdisplacementBias: { value: 0 }\n\n\t},\n\n\temissivemap: {\n\n\t\temissiveMap: { value: null },\n\t\temissiveMapTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\tmetalnessmap: {\n\n\t\tmetalnessMap: { value: null },\n\t\tmetalnessMapTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\troughnessmap: {\n\n\t\troughnessMap: { value: null },\n\t\troughnessMapTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\tgradientmap: {\n\n\t\tgradientMap: { value: null }\n\n\t},\n\n\tfog: {\n\n\t\tfogDensity: { value: 0.00025 },\n\t\tfogNear: { value: 1 },\n\t\tfogFar: { value: 2000 },\n\t\tfogColor: { value: /*@__PURE__*/ new Color( 0xffffff ) }\n\n\t},\n\n\tlights: {\n\n\t\tambientLightColor: { value: [] },\n\n\t\tlightProbe: { value: [] },\n\n\t\tdirectionalLights: { value: [], properties: {\n\t\t\tdirection: {},\n\t\t\tcolor: {}\n\t\t} },\n\n\t\tdirectionalLightShadows: { value: [], properties: {\n\t\t\tshadowIntensity: 1,\n\t\t\tshadowBias: {},\n\t\t\tshadowNormalBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {}\n\t\t} },\n\n\t\tdirectionalShadowMap: { value: [] },\n\t\tdirectionalShadowMatrix: { value: [] },\n\n\t\tspotLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\tdirection: {},\n\t\t\tdistance: {},\n\t\t\tconeCos: {},\n\t\t\tpenumbraCos: {},\n\t\t\tdecay: {}\n\t\t} },\n\n\t\tspotLightShadows: { value: [], properties: {\n\t\t\tshadowIntensity: 1,\n\t\t\tshadowBias: {},\n\t\t\tshadowNormalBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {}\n\t\t} },\n\n\t\tspotLightMap: { value: [] },\n\t\tspotShadowMap: { value: [] },\n\t\tspotLightMatrix: { value: [] },\n\n\t\tpointLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\tdecay: {},\n\t\t\tdistance: {}\n\t\t} },\n\n\t\tpointLightShadows: { value: [], properties: {\n\t\t\tshadowIntensity: 1,\n\t\t\tshadowBias: {},\n\t\t\tshadowNormalBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {},\n\t\t\tshadowCameraNear: {},\n\t\t\tshadowCameraFar: {}\n\t\t} },\n\n\t\tpointShadowMap: { value: [] },\n\t\tpointShadowMatrix: { value: [] },\n\n\t\themisphereLights: { value: [], properties: {\n\t\t\tdirection: {},\n\t\t\tskyColor: {},\n\t\t\tgroundColor: {}\n\t\t} },\n\n\t\t// TODO (abelnation): RectAreaLight BRDF data needs to be moved from example to main src\n\t\trectAreaLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\twidth: {},\n\t\t\theight: {}\n\t\t} },\n\n\t\tltc_1: { value: null },\n\t\tltc_2: { value: null }\n\n\t},\n\n\tpoints: {\n\n\t\tdiffuse: { value: /*@__PURE__*/ new Color( 0xffffff ) },\n\t\topacity: { value: 1.0 },\n\t\tsize: { value: 1.0 },\n\t\tscale: { value: 1.0 },\n\t\tmap: { value: null },\n\t\talphaMap: { value: null },\n\t\talphaMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\talphaTest: { value: 0 },\n\t\tuvTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\tsprite: {\n\n\t\tdiffuse: { value: /*@__PURE__*/ new Color( 0xffffff ) },\n\t\topacity: { value: 1.0 },\n\t\tcenter: { value: /*@__PURE__*/ new Vector2( 0.5, 0.5 ) },\n\t\trotation: { value: 0.0 },\n\t\tmap: { value: null },\n\t\tmapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\talphaMap: { value: null },\n\t\talphaMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\talphaTest: { value: 0 }\n\n\t}\n\n};\n\nconst ShaderLib = {\n\n\tbasic: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshbasic_vert,\n\t\tfragmentShader: ShaderChunk.meshbasic_frag\n\n\t},\n\n\tlambert: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: /*@__PURE__*/ new Color( 0x000000 ) }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshlambert_vert,\n\t\tfragmentShader: ShaderChunk.meshlambert_frag\n\n\t},\n\n\tphong: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: /*@__PURE__*/ new Color( 0x000000 ) },\n\t\t\t\tspecular: { value: /*@__PURE__*/ new Color( 0x111111 ) },\n\t\t\t\tshininess: { value: 30 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshphong_vert,\n\t\tfragmentShader: ShaderChunk.meshphong_frag\n\n\t},\n\n\tstandard: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.roughnessmap,\n\t\t\tUniformsLib.metalnessmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: /*@__PURE__*/ new Color( 0x000000 ) },\n\t\t\t\troughness: { value: 1.0 },\n\t\t\t\tmetalness: { value: 0.0 },\n\t\t\t\tenvMapIntensity: { value: 1 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshphysical_vert,\n\t\tfragmentShader: ShaderChunk.meshphysical_frag\n\n\t},\n\n\ttoon: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.gradientmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: /*@__PURE__*/ new Color( 0x000000 ) }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshtoon_vert,\n\t\tfragmentShader: ShaderChunk.meshtoon_frag\n\n\t},\n\n\tmatcap: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tmatcap: { value: null }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshmatcap_vert,\n\t\tfragmentShader: ShaderChunk.meshmatcap_frag\n\n\t},\n\n\tpoints: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.points,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.points_vert,\n\t\tfragmentShader: ShaderChunk.points_frag\n\n\t},\n\n\tdashed: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tscale: { value: 1 },\n\t\t\t\tdashSize: { value: 1 },\n\t\t\t\ttotalSize: { value: 2 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.linedashed_vert,\n\t\tfragmentShader: ShaderChunk.linedashed_frag\n\n\t},\n\n\tdepth: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.displacementmap\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.depth_vert,\n\t\tfragmentShader: ShaderChunk.depth_frag\n\n\t},\n\n\tnormal: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\t{\n\t\t\t\topacity: { value: 1.0 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshnormal_vert,\n\t\tfragmentShader: ShaderChunk.meshnormal_frag\n\n\t},\n\n\tsprite: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.sprite,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.sprite_vert,\n\t\tfragmentShader: ShaderChunk.sprite_frag\n\n\t},\n\n\tbackground: {\n\n\t\tuniforms: {\n\t\t\tuvTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tt2D: { value: null },\n\t\t\tbackgroundIntensity: { value: 1 }\n\t\t},\n\n\t\tvertexShader: ShaderChunk.background_vert,\n\t\tfragmentShader: ShaderChunk.background_frag\n\n\t},\n\n\tbackgroundCube: {\n\n\t\tuniforms: {\n\t\t\tenvMap: { value: null },\n\t\t\tflipEnvMap: { value: - 1 },\n\t\t\tbackgroundBlurriness: { value: 0 },\n\t\t\tbackgroundIntensity: { value: 1 },\n\t\t\tbackgroundRotation: { value: /*@__PURE__*/ new Matrix3() }\n\t\t},\n\n\t\tvertexShader: ShaderChunk.backgroundCube_vert,\n\t\tfragmentShader: ShaderChunk.backgroundCube_frag\n\n\t},\n\n\tcube: {\n\n\t\tuniforms: {\n\t\t\ttCube: { value: null },\n\t\t\ttFlip: { value: - 1 },\n\t\t\topacity: { value: 1.0 }\n\t\t},\n\n\t\tvertexShader: ShaderChunk.cube_vert,\n\t\tfragmentShader: ShaderChunk.cube_frag\n\n\t},\n\n\tequirect: {\n\n\t\tuniforms: {\n\t\t\ttEquirect: { value: null },\n\t\t},\n\n\t\tvertexShader: ShaderChunk.equirect_vert,\n\t\tfragmentShader: ShaderChunk.equirect_frag\n\n\t},\n\n\tdistanceRGBA: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.displacementmap,\n\t\t\t{\n\t\t\t\treferencePosition: { value: /*@__PURE__*/ new Vector3() },\n\t\t\t\tnearDistance: { value: 1 },\n\t\t\t\tfarDistance: { value: 1000 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.distanceRGBA_vert,\n\t\tfragmentShader: ShaderChunk.distanceRGBA_frag\n\n\t},\n\n\tshadow: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.lights,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tcolor: { value: /*@__PURE__*/ new Color( 0x00000 ) },\n\t\t\t\topacity: { value: 1.0 }\n\t\t\t},\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.shadow_vert,\n\t\tfragmentShader: ShaderChunk.shadow_frag\n\n\t}\n\n};\n\nShaderLib.physical = {\n\n\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\tShaderLib.standard.uniforms,\n\t\t{\n\t\t\tclearcoat: { value: 0 },\n\t\t\tclearcoatMap: { value: null },\n\t\t\tclearcoatMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tclearcoatNormalMap: { value: null },\n\t\t\tclearcoatNormalMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tclearcoatNormalScale: { value: /*@__PURE__*/ new Vector2( 1, 1 ) },\n\t\t\tclearcoatRoughness: { value: 0 },\n\t\t\tclearcoatRoughnessMap: { value: null },\n\t\t\tclearcoatRoughnessMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tdispersion: { value: 0 },\n\t\t\tiridescence: { value: 0 },\n\t\t\tiridescenceMap: { value: null },\n\t\t\tiridescenceMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tiridescenceIOR: { value: 1.3 },\n\t\t\tiridescenceThicknessMinimum: { value: 100 },\n\t\t\tiridescenceThicknessMaximum: { value: 400 },\n\t\t\tiridescenceThicknessMap: { value: null },\n\t\t\tiridescenceThicknessMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tsheen: { value: 0 },\n\t\t\tsheenColor: { value: /*@__PURE__*/ new Color( 0x000000 ) },\n\t\t\tsheenColorMap: { value: null },\n\t\t\tsheenColorMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tsheenRoughness: { value: 1 },\n\t\t\tsheenRoughnessMap: { value: null },\n\t\t\tsheenRoughnessMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\ttransmission: { value: 0 },\n\t\t\ttransmissionMap: { value: null },\n\t\t\ttransmissionMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\ttransmissionSamplerSize: { value: /*@__PURE__*/ new Vector2() },\n\t\t\ttransmissionSamplerMap: { value: null },\n\t\t\tthickness: { value: 0 },\n\t\t\tthicknessMap: { value: null },\n\t\t\tthicknessMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tattenuationDistance: { value: 0 },\n\t\t\tattenuationColor: { value: /*@__PURE__*/ new Color( 0x000000 ) },\n\t\t\tspecularColor: { value: /*@__PURE__*/ new Color( 1, 1, 1 ) },\n\t\t\tspecularColorMap: { value: null },\n\t\t\tspecularColorMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tspecularIntensity: { value: 1 },\n\t\t\tspecularIntensityMap: { value: null },\n\t\t\tspecularIntensityMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tanisotropyVector: { value: /*@__PURE__*/ new Vector2() },\n\t\t\tanisotropyMap: { value: null },\n\t\t\tanisotropyMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t}\n\t] ),\n\n\tvertexShader: ShaderChunk.meshphysical_vert,\n\tfragmentShader: ShaderChunk.meshphysical_frag\n\n};\n\nconst _rgb = { r: 0, b: 0, g: 0 };\nconst _e1$1 = /*@__PURE__*/ new Euler();\nconst _m1$1 = /*@__PURE__*/ new Matrix4();\n\nfunction WebGLBackground( renderer, cubemaps, cubeuvmaps, state, objects, alpha, premultipliedAlpha ) {\n\n\tconst clearColor = new Color( 0x000000 );\n\tlet clearAlpha = alpha === true ? 0 : 1;\n\n\tlet planeMesh;\n\tlet boxMesh;\n\n\tlet currentBackground = null;\n\tlet currentBackgroundVersion = 0;\n\tlet currentTonemapping = null;\n\n\tfunction getBackground( scene ) {\n\n\t\tlet background = scene.isScene === true ? scene.background : null;\n\n\t\tif ( background && background.isTexture ) {\n\n\t\t\tconst usePMREM = scene.backgroundBlurriness > 0; // use PMREM if the user wants to blur the background\n\t\t\tbackground = ( usePMREM ? cubeuvmaps : cubemaps ).get( background );\n\n\t\t}\n\n\t\treturn background;\n\n\t}\n\n\tfunction render( scene ) {\n\n\t\tlet forceClear = false;\n\t\tconst background = getBackground( scene );\n\n\t\tif ( background === null ) {\n\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t} else if ( background && background.isColor ) {\n\n\t\t\tsetClear( background, 1 );\n\t\t\tforceClear = true;\n\n\t\t}\n\n\t\tconst environmentBlendMode = renderer.xr.getEnvironmentBlendMode();\n\n\t\tif ( environmentBlendMode === 'additive' ) {\n\n\t\t\tstate.buffers.color.setClear( 0, 0, 0, 1, premultipliedAlpha );\n\n\t\t} else if ( environmentBlendMode === 'alpha-blend' ) {\n\n\t\t\tstate.buffers.color.setClear( 0, 0, 0, 0, premultipliedAlpha );\n\n\t\t}\n\n\t\tif ( renderer.autoClear || forceClear ) {\n\n\t\t\t// buffers might not be writable which is required to ensure a correct clear\n\n\t\t\tstate.buffers.depth.setTest( true );\n\t\t\tstate.buffers.depth.setMask( true );\n\t\t\tstate.buffers.color.setMask( true );\n\n\t\t\trenderer.clear( renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil );\n\n\t\t}\n\n\t}\n\n\tfunction addToRenderList( renderList, scene ) {\n\n\t\tconst background = getBackground( scene );\n\n\t\tif ( background && ( background.isCubeTexture || background.mapping === CubeUVReflectionMapping ) ) {\n\n\t\t\tif ( boxMesh === undefined ) {\n\n\t\t\t\tboxMesh = new Mesh(\n\t\t\t\t\tnew BoxGeometry( 1, 1, 1 ),\n\t\t\t\t\tnew ShaderMaterial( {\n\t\t\t\t\t\tname: 'BackgroundCubeMaterial',\n\t\t\t\t\t\tuniforms: cloneUniforms( ShaderLib.backgroundCube.uniforms ),\n\t\t\t\t\t\tvertexShader: ShaderLib.backgroundCube.vertexShader,\n\t\t\t\t\t\tfragmentShader: ShaderLib.backgroundCube.fragmentShader,\n\t\t\t\t\t\tside: BackSide,\n\t\t\t\t\t\tdepthTest: false,\n\t\t\t\t\t\tdepthWrite: false,\n\t\t\t\t\t\tfog: false\n\t\t\t\t\t} )\n\t\t\t\t);\n\n\t\t\t\tboxMesh.geometry.deleteAttribute( 'normal' );\n\t\t\t\tboxMesh.geometry.deleteAttribute( 'uv' );\n\n\t\t\t\tboxMesh.onBeforeRender = function ( renderer, scene, camera ) {\n\n\t\t\t\t\tthis.matrixWorld.copyPosition( camera.matrixWorld );\n\n\t\t\t\t};\n\n\t\t\t\t// add \"envMap\" material property so the renderer can evaluate it like for built-in materials\n\t\t\t\tObject.defineProperty( boxMesh.material, 'envMap', {\n\n\t\t\t\t\tget: function () {\n\n\t\t\t\t\t\treturn this.uniforms.envMap.value;\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t\tobjects.update( boxMesh );\n\n\t\t\t}\n\n\t\t\t_e1$1.copy( scene.backgroundRotation );\n\n\t\t\t// accommodate left-handed frame\n\t\t\t_e1$1.x *= - 1; _e1$1.y *= - 1; _e1$1.z *= - 1;\n\n\t\t\tif ( background.isCubeTexture && background.isRenderTargetTexture === false ) {\n\n\t\t\t\t// environment maps which are not cube render targets or PMREMs follow a different convention\n\t\t\t\t_e1$1.y *= - 1;\n\t\t\t\t_e1$1.z *= - 1;\n\n\t\t\t}\n\n\t\t\tboxMesh.material.uniforms.envMap.value = background;\n\t\t\tboxMesh.material.uniforms.flipEnvMap.value = ( background.isCubeTexture && background.isRenderTargetTexture === false ) ? - 1 : 1;\n\t\t\tboxMesh.material.uniforms.backgroundBlurriness.value = scene.backgroundBlurriness;\n\t\t\tboxMesh.material.uniforms.backgroundIntensity.value = scene.backgroundIntensity;\n\t\t\tboxMesh.material.uniforms.backgroundRotation.value.setFromMatrix4( _m1$1.makeRotationFromEuler( _e1$1 ) );\n\t\t\tboxMesh.material.toneMapped = ColorManagement.getTransfer( background.colorSpace ) !== SRGBTransfer;\n\n\t\t\tif ( currentBackground !== background ||\n\t\t\t\tcurrentBackgroundVersion !== background.version ||\n\t\t\t\tcurrentTonemapping !== renderer.toneMapping ) {\n\n\t\t\t\tboxMesh.material.needsUpdate = true;\n\n\t\t\t\tcurrentBackground = background;\n\t\t\t\tcurrentBackgroundVersion = background.version;\n\t\t\t\tcurrentTonemapping = renderer.toneMapping;\n\n\t\t\t}\n\n\t\t\tboxMesh.layers.enableAll();\n\n\t\t\t// push to the pre-sorted opaque render list\n\t\t\trenderList.unshift( boxMesh, boxMesh.geometry, boxMesh.material, 0, 0, null );\n\n\t\t} else if ( background && background.isTexture ) {\n\n\t\t\tif ( planeMesh === undefined ) {\n\n\t\t\t\tplaneMesh = new Mesh(\n\t\t\t\t\tnew PlaneGeometry( 2, 2 ),\n\t\t\t\t\tnew ShaderMaterial( {\n\t\t\t\t\t\tname: 'BackgroundMaterial',\n\t\t\t\t\t\tuniforms: cloneUniforms( ShaderLib.background.uniforms ),\n\t\t\t\t\t\tvertexShader: ShaderLib.background.vertexShader,\n\t\t\t\t\t\tfragmentShader: ShaderLib.background.fragmentShader,\n\t\t\t\t\t\tside: FrontSide,\n\t\t\t\t\t\tdepthTest: false,\n\t\t\t\t\t\tdepthWrite: false,\n\t\t\t\t\t\tfog: false\n\t\t\t\t\t} )\n\t\t\t\t);\n\n\t\t\t\tplaneMesh.geometry.deleteAttribute( 'normal' );\n\n\t\t\t\t// add \"map\" material property so the renderer can evaluate it like for built-in materials\n\t\t\t\tObject.defineProperty( planeMesh.material, 'map', {\n\n\t\t\t\t\tget: function () {\n\n\t\t\t\t\t\treturn this.uniforms.t2D.value;\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t\tobjects.update( planeMesh );\n\n\t\t\t}\n\n\t\t\tplaneMesh.material.uniforms.t2D.value = background;\n\t\t\tplaneMesh.material.uniforms.backgroundIntensity.value = scene.backgroundIntensity;\n\t\t\tplaneMesh.material.toneMapped = ColorManagement.getTransfer( background.colorSpace ) !== SRGBTransfer;\n\n\t\t\tif ( background.matrixAutoUpdate === true ) {\n\n\t\t\t\tbackground.updateMatrix();\n\n\t\t\t}\n\n\t\t\tplaneMesh.material.uniforms.uvTransform.value.copy( background.matrix );\n\n\t\t\tif ( currentBackground !== background ||\n\t\t\t\tcurrentBackgroundVersion !== background.version ||\n\t\t\t\tcurrentTonemapping !== renderer.toneMapping ) {\n\n\t\t\t\tplaneMesh.material.needsUpdate = true;\n\n\t\t\t\tcurrentBackground = background;\n\t\t\t\tcurrentBackgroundVersion = background.version;\n\t\t\t\tcurrentTonemapping = renderer.toneMapping;\n\n\t\t\t}\n\n\t\t\tplaneMesh.layers.enableAll();\n\n\t\t\t// push to the pre-sorted opaque render list\n\t\t\trenderList.unshift( planeMesh, planeMesh.geometry, planeMesh.material, 0, 0, null );\n\n\t\t}\n\n\t}\n\n\tfunction setClear( color, alpha ) {\n\n\t\tcolor.getRGB( _rgb, getUnlitUniformColorSpace( renderer ) );\n\n\t\tstate.buffers.color.setClear( _rgb.r, _rgb.g, _rgb.b, alpha, premultipliedAlpha );\n\n\t}\n\n\treturn {\n\n\t\tgetClearColor: function () {\n\n\t\t\treturn clearColor;\n\n\t\t},\n\t\tsetClearColor: function ( color, alpha = 1 ) {\n\n\t\t\tclearColor.set( color );\n\t\t\tclearAlpha = alpha;\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t},\n\t\tgetClearAlpha: function () {\n\n\t\t\treturn clearAlpha;\n\n\t\t},\n\t\tsetClearAlpha: function ( alpha ) {\n\n\t\t\tclearAlpha = alpha;\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t},\n\t\trender: render,\n\t\taddToRenderList: addToRenderList\n\n\t};\n\n}\n\nfunction WebGLBindingStates( gl, attributes ) {\n\n\tconst maxVertexAttributes = gl.getParameter( gl.MAX_VERTEX_ATTRIBS );\n\n\tconst bindingStates = {};\n\n\tconst defaultState = createBindingState( null );\n\tlet currentState = defaultState;\n\tlet forceUpdate = false;\n\n\tfunction setup( object, material, program, geometry, index ) {\n\n\t\tlet updateBuffers = false;\n\n\t\tconst state = getBindingState( geometry, program, material );\n\n\t\tif ( currentState !== state ) {\n\n\t\t\tcurrentState = state;\n\t\t\tbindVertexArrayObject( currentState.object );\n\n\t\t}\n\n\t\tupdateBuffers = needsUpdate( object, geometry, program, index );\n\n\t\tif ( updateBuffers ) saveCache( object, geometry, program, index );\n\n\t\tif ( index !== null ) {\n\n\t\t\tattributes.update( index, gl.ELEMENT_ARRAY_BUFFER );\n\n\t\t}\n\n\t\tif ( updateBuffers || forceUpdate ) {\n\n\t\t\tforceUpdate = false;\n\n\t\t\tsetupVertexAttributes( object, material, program, geometry );\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, attributes.get( index ).buffer );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction createVertexArrayObject() {\n\n\t\treturn gl.createVertexArray();\n\n\t}\n\n\tfunction bindVertexArrayObject( vao ) {\n\n\t\treturn gl.bindVertexArray( vao );\n\n\t}\n\n\tfunction deleteVertexArrayObject( vao ) {\n\n\t\treturn gl.deleteVertexArray( vao );\n\n\t}\n\n\tfunction getBindingState( geometry, program, material ) {\n\n\t\tconst wireframe = ( material.wireframe === true );\n\n\t\tlet programMap = bindingStates[ geometry.id ];\n\n\t\tif ( programMap === undefined ) {\n\n\t\t\tprogramMap = {};\n\t\t\tbindingStates[ geometry.id ] = programMap;\n\n\t\t}\n\n\t\tlet stateMap = programMap[ program.id ];\n\n\t\tif ( stateMap === undefined ) {\n\n\t\t\tstateMap = {};\n\t\t\tprogramMap[ program.id ] = stateMap;\n\n\t\t}\n\n\t\tlet state = stateMap[ wireframe ];\n\n\t\tif ( state === undefined ) {\n\n\t\t\tstate = createBindingState( createVertexArrayObject() );\n\t\t\tstateMap[ wireframe ] = state;\n\n\t\t}\n\n\t\treturn state;\n\n\t}\n\n\tfunction createBindingState( vao ) {\n\n\t\tconst newAttributes = [];\n\t\tconst enabledAttributes = [];\n\t\tconst attributeDivisors = [];\n\n\t\tfor ( let i = 0; i < maxVertexAttributes; i ++ ) {\n\n\t\t\tnewAttributes[ i ] = 0;\n\t\t\tenabledAttributes[ i ] = 0;\n\t\t\tattributeDivisors[ i ] = 0;\n\n\t\t}\n\n\t\treturn {\n\n\t\t\t// for backward compatibility on non-VAO support browser\n\t\t\tgeometry: null,\n\t\t\tprogram: null,\n\t\t\twireframe: false,\n\n\t\t\tnewAttributes: newAttributes,\n\t\t\tenabledAttributes: enabledAttributes,\n\t\t\tattributeDivisors: attributeDivisors,\n\t\t\tobject: vao,\n\t\t\tattributes: {},\n\t\t\tindex: null\n\n\t\t};\n\n\t}\n\n\tfunction needsUpdate( object, geometry, program, index ) {\n\n\t\tconst cachedAttributes = currentState.attributes;\n\t\tconst geometryAttributes = geometry.attributes;\n\n\t\tlet attributesNum = 0;\n\n\t\tconst programAttributes = program.getAttributes();\n\n\t\tfor ( const name in programAttributes ) {\n\n\t\t\tconst programAttribute = programAttributes[ name ];\n\n\t\t\tif ( programAttribute.location >= 0 ) {\n\n\t\t\t\tconst cachedAttribute = cachedAttributes[ name ];\n\t\t\t\tlet geometryAttribute = geometryAttributes[ name ];\n\n\t\t\t\tif ( geometryAttribute === undefined ) {\n\n\t\t\t\t\tif ( name === 'instanceMatrix' && object.instanceMatrix ) geometryAttribute = object.instanceMatrix;\n\t\t\t\t\tif ( name === 'instanceColor' && object.instanceColor ) geometryAttribute = object.instanceColor;\n\n\t\t\t\t}\n\n\t\t\t\tif ( cachedAttribute === undefined ) return true;\n\n\t\t\t\tif ( cachedAttribute.attribute !== geometryAttribute ) return true;\n\n\t\t\t\tif ( geometryAttribute && cachedAttribute.data !== geometryAttribute.data ) return true;\n\n\t\t\t\tattributesNum ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( currentState.attributesNum !== attributesNum ) return true;\n\n\t\tif ( currentState.index !== index ) return true;\n\n\t\treturn false;\n\n\t}\n\n\tfunction saveCache( object, geometry, program, index ) {\n\n\t\tconst cache = {};\n\t\tconst attributes = geometry.attributes;\n\t\tlet attributesNum = 0;\n\n\t\tconst programAttributes = program.getAttributes();\n\n\t\tfor ( const name in programAttributes ) {\n\n\t\t\tconst programAttribute = programAttributes[ name ];\n\n\t\t\tif ( programAttribute.location >= 0 ) {\n\n\t\t\t\tlet attribute = attributes[ name ];\n\n\t\t\t\tif ( attribute === undefined ) {\n\n\t\t\t\t\tif ( name === 'instanceMatrix' && object.instanceMatrix ) attribute = object.instanceMatrix;\n\t\t\t\t\tif ( name === 'instanceColor' && object.instanceColor ) attribute = object.instanceColor;\n\n\t\t\t\t}\n\n\t\t\t\tconst data = {};\n\t\t\t\tdata.attribute = attribute;\n\n\t\t\t\tif ( attribute && attribute.data ) {\n\n\t\t\t\t\tdata.data = attribute.data;\n\n\t\t\t\t}\n\n\t\t\t\tcache[ name ] = data;\n\n\t\t\t\tattributesNum ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\tcurrentState.attributes = cache;\n\t\tcurrentState.attributesNum = attributesNum;\n\n\t\tcurrentState.index = index;\n\n\t}\n\n\tfunction initAttributes() {\n\n\t\tconst newAttributes = currentState.newAttributes;\n\n\t\tfor ( let i = 0, il = newAttributes.length; i < il; i ++ ) {\n\n\t\t\tnewAttributes[ i ] = 0;\n\n\t\t}\n\n\t}\n\n\tfunction enableAttribute( attribute ) {\n\n\t\tenableAttributeAndDivisor( attribute, 0 );\n\n\t}\n\n\tfunction enableAttributeAndDivisor( attribute, meshPerAttribute ) {\n\n\t\tconst newAttributes = currentState.newAttributes;\n\t\tconst enabledAttributes = currentState.enabledAttributes;\n\t\tconst attributeDivisors = currentState.attributeDivisors;\n\n\t\tnewAttributes[ attribute ] = 1;\n\n\t\tif ( enabledAttributes[ attribute ] === 0 ) {\n\n\t\t\tgl.enableVertexAttribArray( attribute );\n\t\t\tenabledAttributes[ attribute ] = 1;\n\n\t\t}\n\n\t\tif ( attributeDivisors[ attribute ] !== meshPerAttribute ) {\n\n\t\t\tgl.vertexAttribDivisor( attribute, meshPerAttribute );\n\t\t\tattributeDivisors[ attribute ] = meshPerAttribute;\n\n\t\t}\n\n\t}\n\n\tfunction disableUnusedAttributes() {\n\n\t\tconst newAttributes = currentState.newAttributes;\n\t\tconst enabledAttributes = currentState.enabledAttributes;\n\n\t\tfor ( let i = 0, il = enabledAttributes.length; i < il; i ++ ) {\n\n\t\t\tif ( enabledAttributes[ i ] !== newAttributes[ i ] ) {\n\n\t\t\t\tgl.disableVertexAttribArray( i );\n\t\t\t\tenabledAttributes[ i ] = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction vertexAttribPointer( index, size, type, normalized, stride, offset, integer ) {\n\n\t\tif ( integer === true ) {\n\n\t\t\tgl.vertexAttribIPointer( index, size, type, stride, offset );\n\n\t\t} else {\n\n\t\t\tgl.vertexAttribPointer( index, size, type, normalized, stride, offset );\n\n\t\t}\n\n\t}\n\n\tfunction setupVertexAttributes( object, material, program, geometry ) {\n\n\t\tinitAttributes();\n\n\t\tconst geometryAttributes = geometry.attributes;\n\n\t\tconst programAttributes = program.getAttributes();\n\n\t\tconst materialDefaultAttributeValues = material.defaultAttributeValues;\n\n\t\tfor ( const name in programAttributes ) {\n\n\t\t\tconst programAttribute = programAttributes[ name ];\n\n\t\t\tif ( programAttribute.location >= 0 ) {\n\n\t\t\t\tlet geometryAttribute = geometryAttributes[ name ];\n\n\t\t\t\tif ( geometryAttribute === undefined ) {\n\n\t\t\t\t\tif ( name === 'instanceMatrix' && object.instanceMatrix ) geometryAttribute = object.instanceMatrix;\n\t\t\t\t\tif ( name === 'instanceColor' && object.instanceColor ) geometryAttribute = object.instanceColor;\n\n\t\t\t\t}\n\n\t\t\t\tif ( geometryAttribute !== undefined ) {\n\n\t\t\t\t\tconst normalized = geometryAttribute.normalized;\n\t\t\t\t\tconst size = geometryAttribute.itemSize;\n\n\t\t\t\t\tconst attribute = attributes.get( geometryAttribute );\n\n\t\t\t\t\t// TODO Attribute may not be available on context restore\n\n\t\t\t\t\tif ( attribute === undefined ) continue;\n\n\t\t\t\t\tconst buffer = attribute.buffer;\n\t\t\t\t\tconst type = attribute.type;\n\t\t\t\t\tconst bytesPerElement = attribute.bytesPerElement;\n\n\t\t\t\t\t// check for integer attributes\n\n\t\t\t\t\tconst integer = ( type === gl.INT || type === gl.UNSIGNED_INT || geometryAttribute.gpuType === IntType );\n\n\t\t\t\t\tif ( geometryAttribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\t\t\tconst data = geometryAttribute.data;\n\t\t\t\t\t\tconst stride = data.stride;\n\t\t\t\t\t\tconst offset = geometryAttribute.offset;\n\n\t\t\t\t\t\tif ( data.isInstancedInterleavedBuffer ) {\n\n\t\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\t\tenableAttributeAndDivisor( programAttribute.location + i, data.meshPerAttribute );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( object.isInstancedMesh !== true && geometry._maxInstanceCount === undefined ) {\n\n\t\t\t\t\t\t\t\tgeometry._maxInstanceCount = data.meshPerAttribute * data.count;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\t\tenableAttribute( programAttribute.location + i );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgl.bindBuffer( gl.ARRAY_BUFFER, buffer );\n\n\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\tvertexAttribPointer(\n\t\t\t\t\t\t\t\tprogramAttribute.location + i,\n\t\t\t\t\t\t\t\tsize / programAttribute.locationSize,\n\t\t\t\t\t\t\t\ttype,\n\t\t\t\t\t\t\t\tnormalized,\n\t\t\t\t\t\t\t\tstride * bytesPerElement,\n\t\t\t\t\t\t\t\t( offset + ( size / programAttribute.locationSize ) * i ) * bytesPerElement,\n\t\t\t\t\t\t\t\tinteger\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( geometryAttribute.isInstancedBufferAttribute ) {\n\n\t\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\t\tenableAttributeAndDivisor( programAttribute.location + i, geometryAttribute.meshPerAttribute );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( object.isInstancedMesh !== true && geometry._maxInstanceCount === undefined ) {\n\n\t\t\t\t\t\t\t\tgeometry._maxInstanceCount = geometryAttribute.meshPerAttribute * geometryAttribute.count;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\t\tenableAttribute( programAttribute.location + i );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgl.bindBuffer( gl.ARRAY_BUFFER, buffer );\n\n\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\tvertexAttribPointer(\n\t\t\t\t\t\t\t\tprogramAttribute.location + i,\n\t\t\t\t\t\t\t\tsize / programAttribute.locationSize,\n\t\t\t\t\t\t\t\ttype,\n\t\t\t\t\t\t\t\tnormalized,\n\t\t\t\t\t\t\t\tsize * bytesPerElement,\n\t\t\t\t\t\t\t\t( size / programAttribute.locationSize ) * i * bytesPerElement,\n\t\t\t\t\t\t\t\tinteger\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( materialDefaultAttributeValues !== undefined ) {\n\n\t\t\t\t\tconst value = materialDefaultAttributeValues[ name ];\n\n\t\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\t\tswitch ( value.length ) {\n\n\t\t\t\t\t\t\tcase 2:\n\t\t\t\t\t\t\t\tgl.vertexAttrib2fv( programAttribute.location, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 3:\n\t\t\t\t\t\t\t\tgl.vertexAttrib3fv( programAttribute.location, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 4:\n\t\t\t\t\t\t\t\tgl.vertexAttrib4fv( programAttribute.location, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\tgl.vertexAttrib1fv( programAttribute.location, value );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tdisableUnusedAttributes();\n\n\t}\n\n\tfunction dispose() {\n\n\t\treset();\n\n\t\tfor ( const geometryId in bindingStates ) {\n\n\t\t\tconst programMap = bindingStates[ geometryId ];\n\n\t\t\tfor ( const programId in programMap ) {\n\n\t\t\t\tconst stateMap = programMap[ programId ];\n\n\t\t\t\tfor ( const wireframe in stateMap ) {\n\n\t\t\t\t\tdeleteVertexArrayObject( stateMap[ wireframe ].object );\n\n\t\t\t\t\tdelete stateMap[ wireframe ];\n\n\t\t\t\t}\n\n\t\t\t\tdelete programMap[ programId ];\n\n\t\t\t}\n\n\t\t\tdelete bindingStates[ geometryId ];\n\n\t\t}\n\n\t}\n\n\tfunction releaseStatesOfGeometry( geometry ) {\n\n\t\tif ( bindingStates[ geometry.id ] === undefined ) return;\n\n\t\tconst programMap = bindingStates[ geometry.id ];\n\n\t\tfor ( const programId in programMap ) {\n\n\t\t\tconst stateMap = programMap[ programId ];\n\n\t\t\tfor ( const wireframe in stateMap ) {\n\n\t\t\t\tdeleteVertexArrayObject( stateMap[ wireframe ].object );\n\n\t\t\t\tdelete stateMap[ wireframe ];\n\n\t\t\t}\n\n\t\t\tdelete programMap[ programId ];\n\n\t\t}\n\n\t\tdelete bindingStates[ geometry.id ];\n\n\t}\n\n\tfunction releaseStatesOfProgram( program ) {\n\n\t\tfor ( const geometryId in bindingStates ) {\n\n\t\t\tconst programMap = bindingStates[ geometryId ];\n\n\t\t\tif ( programMap[ program.id ] === undefined ) continue;\n\n\t\t\tconst stateMap = programMap[ program.id ];\n\n\t\t\tfor ( const wireframe in stateMap ) {\n\n\t\t\t\tdeleteVertexArrayObject( stateMap[ wireframe ].object );\n\n\t\t\t\tdelete stateMap[ wireframe ];\n\n\t\t\t}\n\n\t\t\tdelete programMap[ program.id ];\n\n\t\t}\n\n\t}\n\n\tfunction reset() {\n\n\t\tresetDefaultState();\n\t\tforceUpdate = true;\n\n\t\tif ( currentState === defaultState ) return;\n\n\t\tcurrentState = defaultState;\n\t\tbindVertexArrayObject( currentState.object );\n\n\t}\n\n\t// for backward-compatibility\n\n\tfunction resetDefaultState() {\n\n\t\tdefaultState.geometry = null;\n\t\tdefaultState.program = null;\n\t\tdefaultState.wireframe = false;\n\n\t}\n\n\treturn {\n\n\t\tsetup: setup,\n\t\treset: reset,\n\t\tresetDefaultState: resetDefaultState,\n\t\tdispose: dispose,\n\t\treleaseStatesOfGeometry: releaseStatesOfGeometry,\n\t\treleaseStatesOfProgram: releaseStatesOfProgram,\n\n\t\tinitAttributes: initAttributes,\n\t\tenableAttribute: enableAttribute,\n\t\tdisableUnusedAttributes: disableUnusedAttributes\n\n\t};\n\n}\n\nfunction WebGLBufferRenderer( gl, extensions, info ) {\n\n\tlet mode;\n\n\tfunction setMode( value ) {\n\n\t\tmode = value;\n\n\t}\n\n\tfunction render( start, count ) {\n\n\t\tgl.drawArrays( mode, start, count );\n\n\t\tinfo.update( count, mode, 1 );\n\n\t}\n\n\tfunction renderInstances( start, count, primcount ) {\n\n\t\tif ( primcount === 0 ) return;\n\n\t\tgl.drawArraysInstanced( mode, start, count, primcount );\n\n\t\tinfo.update( count, mode, primcount );\n\n\t}\n\n\tfunction renderMultiDraw( starts, counts, drawCount ) {\n\n\t\tif ( drawCount === 0 ) return;\n\n\t\tconst extension = extensions.get( 'WEBGL_multi_draw' );\n\t\textension.multiDrawArraysWEBGL( mode, starts, 0, counts, 0, drawCount );\n\n\t\tlet elementCount = 0;\n\t\tfor ( let i = 0; i < drawCount; i ++ ) {\n\n\t\t\telementCount += counts[ i ];\n\n\t\t}\n\n\t\tinfo.update( elementCount, mode, 1 );\n\n\t}\n\n\tfunction renderMultiDrawInstances( starts, counts, drawCount, primcount ) {\n\n\t\tif ( drawCount === 0 ) return;\n\n\t\tconst extension = extensions.get( 'WEBGL_multi_draw' );\n\n\t\tif ( extension === null ) {\n\n\t\t\tfor ( let i = 0; i < starts.length; i ++ ) {\n\n\t\t\t\trenderInstances( starts[ i ], counts[ i ], primcount[ i ] );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\textension.multiDrawArraysInstancedWEBGL( mode, starts, 0, counts, 0, primcount, 0, drawCount );\n\n\t\t\tlet elementCount = 0;\n\t\t\tfor ( let i = 0; i < drawCount; i ++ ) {\n\n\t\t\t\telementCount += counts[ i ];\n\n\t\t\t}\n\n\t\t\tfor ( let i = 0; i < primcount.length; i ++ ) {\n\n\t\t\t\tinfo.update( elementCount, mode, primcount[ i ] );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t//\n\n\tthis.setMode = setMode;\n\tthis.render = render;\n\tthis.renderInstances = renderInstances;\n\tthis.renderMultiDraw = renderMultiDraw;\n\tthis.renderMultiDrawInstances = renderMultiDrawInstances;\n\n}\n\nfunction WebGLCapabilities( gl, extensions, parameters, utils ) {\n\n\tlet maxAnisotropy;\n\n\tfunction getMaxAnisotropy() {\n\n\t\tif ( maxAnisotropy !== undefined ) return maxAnisotropy;\n\n\t\tif ( extensions.has( 'EXT_texture_filter_anisotropic' ) === true ) {\n\n\t\t\tconst extension = extensions.get( 'EXT_texture_filter_anisotropic' );\n\n\t\t\tmaxAnisotropy = gl.getParameter( extension.MAX_TEXTURE_MAX_ANISOTROPY_EXT );\n\n\t\t} else {\n\n\t\t\tmaxAnisotropy = 0;\n\n\t\t}\n\n\t\treturn maxAnisotropy;\n\n\t}\n\n\tfunction textureFormatReadable( textureFormat ) {\n\n\t\tif ( textureFormat !== RGBAFormat && utils.convert( textureFormat ) !== gl.getParameter( gl.IMPLEMENTATION_COLOR_READ_FORMAT ) ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tfunction textureTypeReadable( textureType ) {\n\n\t\tconst halfFloatSupportedByExt = ( textureType === HalfFloatType ) && ( extensions.has( 'EXT_color_buffer_half_float' ) || extensions.has( 'EXT_color_buffer_float' ) );\n\n\t\tif ( textureType !== UnsignedByteType && utils.convert( textureType ) !== gl.getParameter( gl.IMPLEMENTATION_COLOR_READ_TYPE ) && // Edge and Chrome Mac < 52 (#9513)\n\t\t\ttextureType !== FloatType && ! halfFloatSupportedByExt ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tfunction getMaxPrecision( precision ) {\n\n\t\tif ( precision === 'highp' ) {\n\n\t\t\tif ( gl.getShaderPrecisionFormat( gl.VERTEX_SHADER, gl.HIGH_FLOAT ).precision > 0 &&\n\t\t\t\tgl.getShaderPrecisionFormat( gl.FRAGMENT_SHADER, gl.HIGH_FLOAT ).precision > 0 ) {\n\n\t\t\t\treturn 'highp';\n\n\t\t\t}\n\n\t\t\tprecision = 'mediump';\n\n\t\t}\n\n\t\tif ( precision === 'mediump' ) {\n\n\t\t\tif ( gl.getShaderPrecisionFormat( gl.VERTEX_SHADER, gl.MEDIUM_FLOAT ).precision > 0 &&\n\t\t\t\tgl.getShaderPrecisionFormat( gl.FRAGMENT_SHADER, gl.MEDIUM_FLOAT ).precision > 0 ) {\n\n\t\t\t\treturn 'mediump';\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn 'lowp';\n\n\t}\n\n\tlet precision = parameters.precision !== undefined ? parameters.precision : 'highp';\n\tconst maxPrecision = getMaxPrecision( precision );\n\n\tif ( maxPrecision !== precision ) {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer:', precision, 'not supported, using', maxPrecision, 'instead.' );\n\t\tprecision = maxPrecision;\n\n\t}\n\n\tconst logarithmicDepthBuffer = parameters.logarithmicDepthBuffer === true;\n\n\tconst maxTextures = gl.getParameter( gl.MAX_TEXTURE_IMAGE_UNITS );\n\tconst maxVertexTextures = gl.getParameter( gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS );\n\tconst maxTextureSize = gl.getParameter( gl.MAX_TEXTURE_SIZE );\n\tconst maxCubemapSize = gl.getParameter( gl.MAX_CUBE_MAP_TEXTURE_SIZE );\n\n\tconst maxAttributes = gl.getParameter( gl.MAX_VERTEX_ATTRIBS );\n\tconst maxVertexUniforms = gl.getParameter( gl.MAX_VERTEX_UNIFORM_VECTORS );\n\tconst maxVaryings = gl.getParameter( gl.MAX_VARYING_VECTORS );\n\tconst maxFragmentUniforms = gl.getParameter( gl.MAX_FRAGMENT_UNIFORM_VECTORS );\n\n\tconst vertexTextures = maxVertexTextures > 0;\n\n\tconst maxSamples = gl.getParameter( gl.MAX_SAMPLES );\n\n\treturn {\n\n\t\tisWebGL2: true, // keeping this for backwards compatibility\n\n\t\tgetMaxAnisotropy: getMaxAnisotropy,\n\t\tgetMaxPrecision: getMaxPrecision,\n\n\t\ttextureFormatReadable: textureFormatReadable,\n\t\ttextureTypeReadable: textureTypeReadable,\n\n\t\tprecision: precision,\n\t\tlogarithmicDepthBuffer: logarithmicDepthBuffer,\n\n\t\tmaxTextures: maxTextures,\n\t\tmaxVertexTextures: maxVertexTextures,\n\t\tmaxTextureSize: maxTextureSize,\n\t\tmaxCubemapSize: maxCubemapSize,\n\n\t\tmaxAttributes: maxAttributes,\n\t\tmaxVertexUniforms: maxVertexUniforms,\n\t\tmaxVaryings: maxVaryings,\n\t\tmaxFragmentUniforms: maxFragmentUniforms,\n\n\t\tvertexTextures: vertexTextures,\n\n\t\tmaxSamples: maxSamples\n\n\t};\n\n}\n\nfunction WebGLClipping( properties ) {\n\n\tconst scope = this;\n\n\tlet globalState = null,\n\t\tnumGlobalPlanes = 0,\n\t\tlocalClippingEnabled = false,\n\t\trenderingShadows = false;\n\n\tconst plane = new Plane(),\n\t\tviewNormalMatrix = new Matrix3(),\n\n\t\tuniform = { value: null, needsUpdate: false };\n\n\tthis.uniform = uniform;\n\tthis.numPlanes = 0;\n\tthis.numIntersection = 0;\n\n\tthis.init = function ( planes, enableLocalClipping ) {\n\n\t\tconst enabled =\n\t\t\tplanes.length !== 0 ||\n\t\t\tenableLocalClipping ||\n\t\t\t// enable state of previous frame - the clipping code has to\n\t\t\t// run another frame in order to reset the state:\n\t\t\tnumGlobalPlanes !== 0 ||\n\t\t\tlocalClippingEnabled;\n\n\t\tlocalClippingEnabled = enableLocalClipping;\n\n\t\tnumGlobalPlanes = planes.length;\n\n\t\treturn enabled;\n\n\t};\n\n\tthis.beginShadows = function () {\n\n\t\trenderingShadows = true;\n\t\tprojectPlanes( null );\n\n\t};\n\n\tthis.endShadows = function () {\n\n\t\trenderingShadows = false;\n\n\t};\n\n\tthis.setGlobalState = function ( planes, camera ) {\n\n\t\tglobalState = projectPlanes( planes, camera, 0 );\n\n\t};\n\n\tthis.setState = function ( material, camera, useCache ) {\n\n\t\tconst planes = material.clippingPlanes,\n\t\t\tclipIntersection = material.clipIntersection,\n\t\t\tclipShadows = material.clipShadows;\n\n\t\tconst materialProperties = properties.get( material );\n\n\t\tif ( ! localClippingEnabled || planes === null || planes.length === 0 || renderingShadows && ! clipShadows ) {\n\n\t\t\t// there's no local clipping\n\n\t\t\tif ( renderingShadows ) {\n\n\t\t\t\t// there's no global clipping\n\n\t\t\t\tprojectPlanes( null );\n\n\t\t\t} else {\n\n\t\t\t\tresetGlobalState();\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst nGlobal = renderingShadows ? 0 : numGlobalPlanes,\n\t\t\t\tlGlobal = nGlobal * 4;\n\n\t\t\tlet dstArray = materialProperties.clippingState || null;\n\n\t\t\tuniform.value = dstArray; // ensure unique state\n\n\t\t\tdstArray = projectPlanes( planes, camera, lGlobal, useCache );\n\n\t\t\tfor ( let i = 0; i !== lGlobal; ++ i ) {\n\n\t\t\t\tdstArray[ i ] = globalState[ i ];\n\n\t\t\t}\n\n\t\t\tmaterialProperties.clippingState = dstArray;\n\t\t\tthis.numIntersection = clipIntersection ? this.numPlanes : 0;\n\t\t\tthis.numPlanes += nGlobal;\n\n\t\t}\n\n\n\t};\n\n\tfunction resetGlobalState() {\n\n\t\tif ( uniform.value !== globalState ) {\n\n\t\t\tuniform.value = globalState;\n\t\t\tuniform.needsUpdate = numGlobalPlanes > 0;\n\n\t\t}\n\n\t\tscope.numPlanes = numGlobalPlanes;\n\t\tscope.numIntersection = 0;\n\n\t}\n\n\tfunction projectPlanes( planes, camera, dstOffset, skipTransform ) {\n\n\t\tconst nPlanes = planes !== null ? planes.length : 0;\n\t\tlet dstArray = null;\n\n\t\tif ( nPlanes !== 0 ) {\n\n\t\t\tdstArray = uniform.value;\n\n\t\t\tif ( skipTransform !== true || dstArray === null ) {\n\n\t\t\t\tconst flatSize = dstOffset + nPlanes * 4,\n\t\t\t\t\tviewMatrix = camera.matrixWorldInverse;\n\n\t\t\t\tviewNormalMatrix.getNormalMatrix( viewMatrix );\n\n\t\t\t\tif ( dstArray === null || dstArray.length < flatSize ) {\n\n\t\t\t\t\tdstArray = new Float32Array( flatSize );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0, i4 = dstOffset; i !== nPlanes; ++ i, i4 += 4 ) {\n\n\t\t\t\t\tplane.copy( planes[ i ] ).applyMatrix4( viewMatrix, viewNormalMatrix );\n\n\t\t\t\t\tplane.normal.toArray( dstArray, i4 );\n\t\t\t\t\tdstArray[ i4 + 3 ] = plane.constant;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tuniform.value = dstArray;\n\t\t\tuniform.needsUpdate = true;\n\n\t\t}\n\n\t\tscope.numPlanes = nPlanes;\n\t\tscope.numIntersection = 0;\n\n\t\treturn dstArray;\n\n\t}\n\n}\n\nfunction WebGLCubeMaps( renderer ) {\n\n\tlet cubemaps = new WeakMap();\n\n\tfunction mapTextureMapping( texture, mapping ) {\n\n\t\tif ( mapping === EquirectangularReflectionMapping ) {\n\n\t\t\ttexture.mapping = CubeReflectionMapping;\n\n\t\t} else if ( mapping === EquirectangularRefractionMapping ) {\n\n\t\t\ttexture.mapping = CubeRefractionMapping;\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tfunction get( texture ) {\n\n\t\tif ( texture && texture.isTexture ) {\n\n\t\t\tconst mapping = texture.mapping;\n\n\t\t\tif ( mapping === EquirectangularReflectionMapping || mapping === EquirectangularRefractionMapping ) {\n\n\t\t\t\tif ( cubemaps.has( texture ) ) {\n\n\t\t\t\t\tconst cubemap = cubemaps.get( texture ).texture;\n\t\t\t\t\treturn mapTextureMapping( cubemap, texture.mapping );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconst image = texture.image;\n\n\t\t\t\t\tif ( image && image.height > 0 ) {\n\n\t\t\t\t\t\tconst renderTarget = new WebGLCubeRenderTarget( image.height );\n\t\t\t\t\t\trenderTarget.fromEquirectangularTexture( renderer, texture );\n\t\t\t\t\t\tcubemaps.set( texture, renderTarget );\n\n\t\t\t\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t\t\t\t\treturn mapTextureMapping( renderTarget.texture, texture.mapping );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// image not yet ready. try the conversion next frame\n\n\t\t\t\t\t\treturn null;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tfunction onTextureDispose( event ) {\n\n\t\tconst texture = event.target;\n\n\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\n\n\t\tconst cubemap = cubemaps.get( texture );\n\n\t\tif ( cubemap !== undefined ) {\n\n\t\t\tcubemaps.delete( texture );\n\t\t\tcubemap.dispose();\n\n\t\t}\n\n\t}\n\n\tfunction dispose() {\n\n\t\tcubemaps = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\nclass OrthographicCamera extends Camera {\n\n\tconstructor( left = - 1, right = 1, top = 1, bottom = - 1, near = 0.1, far = 2000 ) {\n\n\t\tsuper();\n\n\t\tthis.isOrthographicCamera = true;\n\n\t\tthis.type = 'OrthographicCamera';\n\n\t\tthis.zoom = 1;\n\t\tthis.view = null;\n\n\t\tthis.left = left;\n\t\tthis.right = right;\n\t\tthis.top = top;\n\t\tthis.bottom = bottom;\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.left = source.left;\n\t\tthis.right = source.right;\n\t\tthis.top = source.top;\n\t\tthis.bottom = source.bottom;\n\t\tthis.near = source.near;\n\t\tthis.far = source.far;\n\n\t\tthis.zoom = source.zoom;\n\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\n\n\t\treturn this;\n\n\t}\n\n\tsetViewOffset( fullWidth, fullHeight, x, y, width, height ) {\n\n\t\tif ( this.view === null ) {\n\n\t\t\tthis.view = {\n\t\t\t\tenabled: true,\n\t\t\t\tfullWidth: 1,\n\t\t\t\tfullHeight: 1,\n\t\t\t\toffsetX: 0,\n\t\t\t\toffsetY: 0,\n\t\t\t\twidth: 1,\n\t\t\t\theight: 1\n\t\t\t};\n\n\t\t}\n\n\t\tthis.view.enabled = true;\n\t\tthis.view.fullWidth = fullWidth;\n\t\tthis.view.fullHeight = fullHeight;\n\t\tthis.view.offsetX = x;\n\t\tthis.view.offsetY = y;\n\t\tthis.view.width = width;\n\t\tthis.view.height = height;\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tclearViewOffset() {\n\n\t\tif ( this.view !== null ) {\n\n\t\t\tthis.view.enabled = false;\n\n\t\t}\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tupdateProjectionMatrix() {\n\n\t\tconst dx = ( this.right - this.left ) / ( 2 * this.zoom );\n\t\tconst dy = ( this.top - this.bottom ) / ( 2 * this.zoom );\n\t\tconst cx = ( this.right + this.left ) / 2;\n\t\tconst cy = ( this.top + this.bottom ) / 2;\n\n\t\tlet left = cx - dx;\n\t\tlet right = cx + dx;\n\t\tlet top = cy + dy;\n\t\tlet bottom = cy - dy;\n\n\t\tif ( this.view !== null && this.view.enabled ) {\n\n\t\t\tconst scaleW = ( this.right - this.left ) / this.view.fullWidth / this.zoom;\n\t\t\tconst scaleH = ( this.top - this.bottom ) / this.view.fullHeight / this.zoom;\n\n\t\t\tleft += scaleW * this.view.offsetX;\n\t\t\tright = left + scaleW * this.view.width;\n\t\t\ttop -= scaleH * this.view.offsetY;\n\t\t\tbottom = top - scaleH * this.view.height;\n\n\t\t}\n\n\t\tthis.projectionMatrix.makeOrthographic( left, right, top, bottom, this.near, this.far, this.coordinateSystem );\n\n\t\tthis.projectionMatrixInverse.copy( this.projectionMatrix ).invert();\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.zoom = this.zoom;\n\t\tdata.object.left = this.left;\n\t\tdata.object.right = this.right;\n\t\tdata.object.top = this.top;\n\t\tdata.object.bottom = this.bottom;\n\t\tdata.object.near = this.near;\n\t\tdata.object.far = this.far;\n\n\t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\n\n\t\treturn data;\n\n\t}\n\n}\n\nconst LOD_MIN = 4;\n\n// The standard deviations (radians) associated with the extra mips. These are\n// chosen to approximate a Trowbridge-Reitz distribution function times the\n// geometric shadowing function. These sigma values squared must match the\n// variance #defines in cube_uv_reflection_fragment.glsl.js.\nconst EXTRA_LOD_SIGMA = [ 0.125, 0.215, 0.35, 0.446, 0.526, 0.582 ];\n\n// The maximum length of the blur for loop. Smaller sigmas will use fewer\n// samples and exit early, but not recompile the shader.\nconst MAX_SAMPLES = 20;\n\nconst _flatCamera = /*@__PURE__*/ new OrthographicCamera();\nconst _clearColor = /*@__PURE__*/ new Color();\nlet _oldTarget = null;\nlet _oldActiveCubeFace = 0;\nlet _oldActiveMipmapLevel = 0;\nlet _oldXrEnabled = false;\n\n// Golden Ratio\nconst PHI = ( 1 + Math.sqrt( 5 ) ) / 2;\nconst INV_PHI = 1 / PHI;\n\n// Vertices of a dodecahedron (except the opposites, which represent the\n// same axis), used as axis directions evenly spread on a sphere.\nconst _axisDirections = [\n\t/*@__PURE__*/ new Vector3( - PHI, INV_PHI, 0 ),\n\t/*@__PURE__*/ new Vector3( PHI, INV_PHI, 0 ),\n\t/*@__PURE__*/ new Vector3( - INV_PHI, 0, PHI ),\n\t/*@__PURE__*/ new Vector3( INV_PHI, 0, PHI ),\n\t/*@__PURE__*/ new Vector3( 0, PHI, - INV_PHI ),\n\t/*@__PURE__*/ new Vector3( 0, PHI, INV_PHI ),\n\t/*@__PURE__*/ new Vector3( - 1, 1, - 1 ),\n\t/*@__PURE__*/ new Vector3( 1, 1, - 1 ),\n\t/*@__PURE__*/ new Vector3( - 1, 1, 1 ),\n\t/*@__PURE__*/ new Vector3( 1, 1, 1 ) ];\n\n/**\n * This class generates a Prefiltered, Mipmapped Radiance Environment Map\n * (PMREM) from a cubeMap environment texture. This allows different levels of\n * blur to be quickly accessed based on material roughness. It is packed into a\n * special CubeUV format that allows us to perform custom interpolation so that\n * we can support nonlinear formats such as RGBE. Unlike a traditional mipmap\n * chain, it only goes down to the LOD_MIN level (above), and then creates extra\n * even more filtered 'mips' at the same LOD_MIN resolution, associated with\n * higher roughness levels. In this way we maintain resolution to smoothly\n * interpolate diffuse lighting while limiting sampling computation.\n *\n * Paper: Fast, Accurate Image-Based Lighting\n * https://drive.google.com/file/d/15y8r_UpKlU9SvV4ILb0C3qCPecS8pvLz/view\n*/\n\nclass PMREMGenerator {\n\n\tconstructor( renderer ) {\n\n\t\tthis._renderer = renderer;\n\t\tthis._pingPongRenderTarget = null;\n\n\t\tthis._lodMax = 0;\n\t\tthis._cubeSize = 0;\n\t\tthis._lodPlanes = [];\n\t\tthis._sizeLods = [];\n\t\tthis._sigmas = [];\n\n\t\tthis._blurMaterial = null;\n\t\tthis._cubemapMaterial = null;\n\t\tthis._equirectMaterial = null;\n\n\t\tthis._compileMaterial( this._blurMaterial );\n\n\t}\n\n\t/**\n\t * Generates a PMREM from a supplied Scene, which can be faster than using an\n\t * image if networking bandwidth is low. Optional sigma specifies a blur radius\n\t * in radians to be applied to the scene before PMREM generation. Optional near\n\t * and far planes ensure the scene is rendered in its entirety (the cubeCamera\n\t * is placed at the origin).\n\t */\n\tfromScene( scene, sigma = 0, near = 0.1, far = 100 ) {\n\n\t\t_oldTarget = this._renderer.getRenderTarget();\n\t\t_oldActiveCubeFace = this._renderer.getActiveCubeFace();\n\t\t_oldActiveMipmapLevel = this._renderer.getActiveMipmapLevel();\n\t\t_oldXrEnabled = this._renderer.xr.enabled;\n\n\t\tthis._renderer.xr.enabled = false;\n\n\t\tthis._setSize( 256 );\n\n\t\tconst cubeUVRenderTarget = this._allocateTargets();\n\t\tcubeUVRenderTarget.depthBuffer = true;\n\n\t\tthis._sceneToCubeUV( scene, near, far, cubeUVRenderTarget );\n\n\t\tif ( sigma > 0 ) {\n\n\t\t\tthis._blur( cubeUVRenderTarget, 0, 0, sigma );\n\n\t\t}\n\n\t\tthis._applyPMREM( cubeUVRenderTarget );\n\t\tthis._cleanup( cubeUVRenderTarget );\n\n\t\treturn cubeUVRenderTarget;\n\n\t}\n\n\t/**\n\t * Generates a PMREM from an equirectangular texture, which can be either LDR\n\t * or HDR. The ideal input image size is 1k (1024 x 512),\n\t * as this matches best with the 256 x 256 cubemap output.\n\t * The smallest supported equirectangular image size is 64 x 32.\n\t */\n\tfromEquirectangular( equirectangular, renderTarget = null ) {\n\n\t\treturn this._fromTexture( equirectangular, renderTarget );\n\n\t}\n\n\t/**\n\t * Generates a PMREM from an cubemap texture, which can be either LDR\n\t * or HDR. The ideal input cube size is 256 x 256,\n\t * as this matches best with the 256 x 256 cubemap output.\n\t * The smallest supported cube size is 16 x 16.\n\t */\n\tfromCubemap( cubemap, renderTarget = null ) {\n\n\t\treturn this._fromTexture( cubemap, renderTarget );\n\n\t}\n\n\t/**\n\t * Pre-compiles the cubemap shader. You can get faster start-up by invoking this method during\n\t * your texture's network fetch for increased concurrency.\n\t */\n\tcompileCubemapShader() {\n\n\t\tif ( this._cubemapMaterial === null ) {\n\n\t\t\tthis._cubemapMaterial = _getCubemapMaterial();\n\t\t\tthis._compileMaterial( this._cubemapMaterial );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Pre-compiles the equirectangular shader. You can get faster start-up by invoking this method during\n\t * your texture's network fetch for increased concurrency.\n\t */\n\tcompileEquirectangularShader() {\n\n\t\tif ( this._equirectMaterial === null ) {\n\n\t\t\tthis._equirectMaterial = _getEquirectMaterial();\n\t\t\tthis._compileMaterial( this._equirectMaterial );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Disposes of the PMREMGenerator's internal memory. Note that PMREMGenerator is a static class,\n\t * so you should not need more than one PMREMGenerator object. If you do, calling dispose() on\n\t * one of them will cause any others to also become unusable.\n\t */\n\tdispose() {\n\n\t\tthis._dispose();\n\n\t\tif ( this._cubemapMaterial !== null ) this._cubemapMaterial.dispose();\n\t\tif ( this._equirectMaterial !== null ) this._equirectMaterial.dispose();\n\n\t}\n\n\t// private interface\n\n\t_setSize( cubeSize ) {\n\n\t\tthis._lodMax = Math.floor( Math.log2( cubeSize ) );\n\t\tthis._cubeSize = Math.pow( 2, this._lodMax );\n\n\t}\n\n\t_dispose() {\n\n\t\tif ( this._blurMaterial !== null ) this._blurMaterial.dispose();\n\n\t\tif ( this._pingPongRenderTarget !== null ) this._pingPongRenderTarget.dispose();\n\n\t\tfor ( let i = 0; i < this._lodPlanes.length; i ++ ) {\n\n\t\t\tthis._lodPlanes[ i ].dispose();\n\n\t\t}\n\n\t}\n\n\t_cleanup( outputTarget ) {\n\n\t\tthis._renderer.setRenderTarget( _oldTarget, _oldActiveCubeFace, _oldActiveMipmapLevel );\n\t\tthis._renderer.xr.enabled = _oldXrEnabled;\n\n\t\toutputTarget.scissorTest = false;\n\t\t_setViewport( outputTarget, 0, 0, outputTarget.width, outputTarget.height );\n\n\t}\n\n\t_fromTexture( texture, renderTarget ) {\n\n\t\tif ( texture.mapping === CubeReflectionMapping || texture.mapping === CubeRefractionMapping ) {\n\n\t\t\tthis._setSize( texture.image.length === 0 ? 16 : ( texture.image[ 0 ].width || texture.image[ 0 ].image.width ) );\n\n\t\t} else { // Equirectangular\n\n\t\t\tthis._setSize( texture.image.width / 4 );\n\n\t\t}\n\n\t\t_oldTarget = this._renderer.getRenderTarget();\n\t\t_oldActiveCubeFace = this._renderer.getActiveCubeFace();\n\t\t_oldActiveMipmapLevel = this._renderer.getActiveMipmapLevel();\n\t\t_oldXrEnabled = this._renderer.xr.enabled;\n\n\t\tthis._renderer.xr.enabled = false;\n\n\t\tconst cubeUVRenderTarget = renderTarget || this._allocateTargets();\n\t\tthis._textureToCubeUV( texture, cubeUVRenderTarget );\n\t\tthis._applyPMREM( cubeUVRenderTarget );\n\t\tthis._cleanup( cubeUVRenderTarget );\n\n\t\treturn cubeUVRenderTarget;\n\n\t}\n\n\t_allocateTargets() {\n\n\t\tconst width = 3 * Math.max( this._cubeSize, 16 * 7 );\n\t\tconst height = 4 * this._cubeSize;\n\n\t\tconst params = {\n\t\t\tmagFilter: LinearFilter,\n\t\t\tminFilter: LinearFilter,\n\t\t\tgenerateMipmaps: false,\n\t\t\ttype: HalfFloatType,\n\t\t\tformat: RGBAFormat,\n\t\t\tcolorSpace: LinearSRGBColorSpace,\n\t\t\tdepthBuffer: false\n\t\t};\n\n\t\tconst cubeUVRenderTarget = _createRenderTarget( width, height, params );\n\n\t\tif ( this._pingPongRenderTarget === null || this._pingPongRenderTarget.width !== width || this._pingPongRenderTarget.height !== height ) {\n\n\t\t\tif ( this._pingPongRenderTarget !== null ) {\n\n\t\t\t\tthis._dispose();\n\n\t\t\t}\n\n\t\t\tthis._pingPongRenderTarget = _createRenderTarget( width, height, params );\n\n\t\t\tconst { _lodMax } = this;\n\t\t\t( { sizeLods: this._sizeLods, lodPlanes: this._lodPlanes, sigmas: this._sigmas } = _createPlanes( _lodMax ) );\n\n\t\t\tthis._blurMaterial = _getBlurShader( _lodMax, width, height );\n\n\t\t}\n\n\t\treturn cubeUVRenderTarget;\n\n\t}\n\n\t_compileMaterial( material ) {\n\n\t\tconst tmpMesh = new Mesh( this._lodPlanes[ 0 ], material );\n\t\tthis._renderer.compile( tmpMesh, _flatCamera );\n\n\t}\n\n\t_sceneToCubeUV( scene, near, far, cubeUVRenderTarget ) {\n\n\t\tconst fov = 90;\n\t\tconst aspect = 1;\n\t\tconst cubeCamera = new PerspectiveCamera( fov, aspect, near, far );\n\t\tconst upSign = [ 1, - 1, 1, 1, 1, 1 ];\n\t\tconst forwardSign = [ 1, 1, 1, - 1, - 1, - 1 ];\n\t\tconst renderer = this._renderer;\n\n\t\tconst originalAutoClear = renderer.autoClear;\n\t\tconst toneMapping = renderer.toneMapping;\n\t\trenderer.getClearColor( _clearColor );\n\n\t\trenderer.toneMapping = NoToneMapping;\n\t\trenderer.autoClear = false;\n\n\t\tconst backgroundMaterial = new MeshBasicMaterial( {\n\t\t\tname: 'PMREM.Background',\n\t\t\tside: BackSide,\n\t\t\tdepthWrite: false,\n\t\t\tdepthTest: false,\n\t\t} );\n\n\t\tconst backgroundBox = new Mesh( new BoxGeometry(), backgroundMaterial );\n\n\t\tlet useSolidColor = false;\n\t\tconst background = scene.background;\n\n\t\tif ( background ) {\n\n\t\t\tif ( background.isColor ) {\n\n\t\t\t\tbackgroundMaterial.color.copy( background );\n\t\t\t\tscene.background = null;\n\t\t\t\tuseSolidColor = true;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tbackgroundMaterial.color.copy( _clearColor );\n\t\t\tuseSolidColor = true;\n\n\t\t}\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tconst col = i % 3;\n\n\t\t\tif ( col === 0 ) {\n\n\t\t\t\tcubeCamera.up.set( 0, upSign[ i ], 0 );\n\t\t\t\tcubeCamera.lookAt( forwardSign[ i ], 0, 0 );\n\n\t\t\t} else if ( col === 1 ) {\n\n\t\t\t\tcubeCamera.up.set( 0, 0, upSign[ i ] );\n\t\t\t\tcubeCamera.lookAt( 0, forwardSign[ i ], 0 );\n\n\t\t\t} else {\n\n\t\t\t\tcubeCamera.up.set( 0, upSign[ i ], 0 );\n\t\t\t\tcubeCamera.lookAt( 0, 0, forwardSign[ i ] );\n\n\t\t\t}\n\n\t\t\tconst size = this._cubeSize;\n\n\t\t\t_setViewport( cubeUVRenderTarget, col * size, i > 2 ? size : 0, size, size );\n\n\t\t\trenderer.setRenderTarget( cubeUVRenderTarget );\n\n\t\t\tif ( useSolidColor ) {\n\n\t\t\t\trenderer.render( backgroundBox, cubeCamera );\n\n\t\t\t}\n\n\t\t\trenderer.render( scene, cubeCamera );\n\n\t\t}\n\n\t\tbackgroundBox.geometry.dispose();\n\t\tbackgroundBox.material.dispose();\n\n\t\trenderer.toneMapping = toneMapping;\n\t\trenderer.autoClear = originalAutoClear;\n\t\tscene.background = background;\n\n\t}\n\n\t_textureToCubeUV( texture, cubeUVRenderTarget ) {\n\n\t\tconst renderer = this._renderer;\n\n\t\tconst isCubeTexture = ( texture.mapping === CubeReflectionMapping || texture.mapping === CubeRefractionMapping );\n\n\t\tif ( isCubeTexture ) {\n\n\t\t\tif ( this._cubemapMaterial === null ) {\n\n\t\t\t\tthis._cubemapMaterial = _getCubemapMaterial();\n\n\t\t\t}\n\n\t\t\tthis._cubemapMaterial.uniforms.flipEnvMap.value = ( texture.isRenderTargetTexture === false ) ? - 1 : 1;\n\n\t\t} else {\n\n\t\t\tif ( this._equirectMaterial === null ) {\n\n\t\t\t\tthis._equirectMaterial = _getEquirectMaterial();\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst material = isCubeTexture ? this._cubemapMaterial : this._equirectMaterial;\n\t\tconst mesh = new Mesh( this._lodPlanes[ 0 ], material );\n\n\t\tconst uniforms = material.uniforms;\n\n\t\tuniforms[ 'envMap' ].value = texture;\n\n\t\tconst size = this._cubeSize;\n\n\t\t_setViewport( cubeUVRenderTarget, 0, 0, 3 * size, 2 * size );\n\n\t\trenderer.setRenderTarget( cubeUVRenderTarget );\n\t\trenderer.render( mesh, _flatCamera );\n\n\t}\n\n\t_applyPMREM( cubeUVRenderTarget ) {\n\n\t\tconst renderer = this._renderer;\n\t\tconst autoClear = renderer.autoClear;\n\t\trenderer.autoClear = false;\n\t\tconst n = this._lodPlanes.length;\n\n\t\tfor ( let i = 1; i < n; i ++ ) {\n\n\t\t\tconst sigma = Math.sqrt( this._sigmas[ i ] * this._sigmas[ i ] - this._sigmas[ i - 1 ] * this._sigmas[ i - 1 ] );\n\n\t\t\tconst poleAxis = _axisDirections[ ( n - i - 1 ) % _axisDirections.length ];\n\n\t\t\tthis._blur( cubeUVRenderTarget, i - 1, i, sigma, poleAxis );\n\n\t\t}\n\n\t\trenderer.autoClear = autoClear;\n\n\t}\n\n\t/**\n\t * This is a two-pass Gaussian blur for a cubemap. Normally this is done\n\t * vertically and horizontally, but this breaks down on a cube. Here we apply\n\t * the blur latitudinally (around the poles), and then longitudinally (towards\n\t * the poles) to approximate the orthogonally-separable blur. It is least\n\t * accurate at the poles, but still does a decent job.\n\t */\n\t_blur( cubeUVRenderTarget, lodIn, lodOut, sigma, poleAxis ) {\n\n\t\tconst pingPongRenderTarget = this._pingPongRenderTarget;\n\n\t\tthis._halfBlur(\n\t\t\tcubeUVRenderTarget,\n\t\t\tpingPongRenderTarget,\n\t\t\tlodIn,\n\t\t\tlodOut,\n\t\t\tsigma,\n\t\t\t'latitudinal',\n\t\t\tpoleAxis );\n\n\t\tthis._halfBlur(\n\t\t\tpingPongRenderTarget,\n\t\t\tcubeUVRenderTarget,\n\t\t\tlodOut,\n\t\t\tlodOut,\n\t\t\tsigma,\n\t\t\t'longitudinal',\n\t\t\tpoleAxis );\n\n\t}\n\n\t_halfBlur( targetIn, targetOut, lodIn, lodOut, sigmaRadians, direction, poleAxis ) {\n\n\t\tconst renderer = this._renderer;\n\t\tconst blurMaterial = this._blurMaterial;\n\n\t\tif ( direction !== 'latitudinal' && direction !== 'longitudinal' ) {\n\n\t\t\tconsole.error(\n\t\t\t\t'blur direction must be either latitudinal or longitudinal!' );\n\n\t\t}\n\n\t\t// Number of standard deviations at which to cut off the discrete approximation.\n\t\tconst STANDARD_DEVIATIONS = 3;\n\n\t\tconst blurMesh = new Mesh( this._lodPlanes[ lodOut ], blurMaterial );\n\t\tconst blurUniforms = blurMaterial.uniforms;\n\n\t\tconst pixels = this._sizeLods[ lodIn ] - 1;\n\t\tconst radiansPerPixel = isFinite( sigmaRadians ) ? Math.PI / ( 2 * pixels ) : 2 * Math.PI / ( 2 * MAX_SAMPLES - 1 );\n\t\tconst sigmaPixels = sigmaRadians / radiansPerPixel;\n\t\tconst samples = isFinite( sigmaRadians ) ? 1 + Math.floor( STANDARD_DEVIATIONS * sigmaPixels ) : MAX_SAMPLES;\n\n\t\tif ( samples > MAX_SAMPLES ) {\n\n\t\t\tconsole.warn( `sigmaRadians, ${\n\t\t\t\tsigmaRadians}, is too large and will clip, as it requested ${\n\t\t\t\tsamples} samples when the maximum is set to ${MAX_SAMPLES}` );\n\n\t\t}\n\n\t\tconst weights = [];\n\t\tlet sum = 0;\n\n\t\tfor ( let i = 0; i < MAX_SAMPLES; ++ i ) {\n\n\t\t\tconst x = i / sigmaPixels;\n\t\t\tconst weight = Math.exp( - x * x / 2 );\n\t\t\tweights.push( weight );\n\n\t\t\tif ( i === 0 ) {\n\n\t\t\t\tsum += weight;\n\n\t\t\t} else if ( i < samples ) {\n\n\t\t\t\tsum += 2 * weight;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( let i = 0; i < weights.length; i ++ ) {\n\n\t\t\tweights[ i ] = weights[ i ] / sum;\n\n\t\t}\n\n\t\tblurUniforms[ 'envMap' ].value = targetIn.texture;\n\t\tblurUniforms[ 'samples' ].value = samples;\n\t\tblurUniforms[ 'weights' ].value = weights;\n\t\tblurUniforms[ 'latitudinal' ].value = direction === 'latitudinal';\n\n\t\tif ( poleAxis ) {\n\n\t\t\tblurUniforms[ 'poleAxis' ].value = poleAxis;\n\n\t\t}\n\n\t\tconst { _lodMax } = this;\n\t\tblurUniforms[ 'dTheta' ].value = radiansPerPixel;\n\t\tblurUniforms[ 'mipInt' ].value = _lodMax - lodIn;\n\n\t\tconst outputSize = this._sizeLods[ lodOut ];\n\t\tconst x = 3 * outputSize * ( lodOut > _lodMax - LOD_MIN ? lodOut - _lodMax + LOD_MIN : 0 );\n\t\tconst y = 4 * ( this._cubeSize - outputSize );\n\n\t\t_setViewport( targetOut, x, y, 3 * outputSize, 2 * outputSize );\n\t\trenderer.setRenderTarget( targetOut );\n\t\trenderer.render( blurMesh, _flatCamera );\n\n\t}\n\n}\n\n\n\nfunction _createPlanes( lodMax ) {\n\n\tconst lodPlanes = [];\n\tconst sizeLods = [];\n\tconst sigmas = [];\n\n\tlet lod = lodMax;\n\n\tconst totalLods = lodMax - LOD_MIN + 1 + EXTRA_LOD_SIGMA.length;\n\n\tfor ( let i = 0; i < totalLods; i ++ ) {\n\n\t\tconst sizeLod = Math.pow( 2, lod );\n\t\tsizeLods.push( sizeLod );\n\t\tlet sigma = 1.0 / sizeLod;\n\n\t\tif ( i > lodMax - LOD_MIN ) {\n\n\t\t\tsigma = EXTRA_LOD_SIGMA[ i - lodMax + LOD_MIN - 1 ];\n\n\t\t} else if ( i === 0 ) {\n\n\t\t\tsigma = 0;\n\n\t\t}\n\n\t\tsigmas.push( sigma );\n\n\t\tconst texelSize = 1.0 / ( sizeLod - 2 );\n\t\tconst min = - texelSize;\n\t\tconst max = 1 + texelSize;\n\t\tconst uv1 = [ min, min, max, min, max, max, min, min, max, max, min, max ];\n\n\t\tconst cubeFaces = 6;\n\t\tconst vertices = 6;\n\t\tconst positionSize = 3;\n\t\tconst uvSize = 2;\n\t\tconst faceIndexSize = 1;\n\n\t\tconst position = new Float32Array( positionSize * vertices * cubeFaces );\n\t\tconst uv = new Float32Array( uvSize * vertices * cubeFaces );\n\t\tconst faceIndex = new Float32Array( faceIndexSize * vertices * cubeFaces );\n\n\t\tfor ( let face = 0; face < cubeFaces; face ++ ) {\n\n\t\t\tconst x = ( face % 3 ) * 2 / 3 - 1;\n\t\t\tconst y = face > 2 ? 0 : - 1;\n\t\t\tconst coordinates = [\n\t\t\t\tx, y, 0,\n\t\t\t\tx + 2 / 3, y, 0,\n\t\t\t\tx + 2 / 3, y + 1, 0,\n\t\t\t\tx, y, 0,\n\t\t\t\tx + 2 / 3, y + 1, 0,\n\t\t\t\tx, y + 1, 0\n\t\t\t];\n\t\t\tposition.set( coordinates, positionSize * vertices * face );\n\t\t\tuv.set( uv1, uvSize * vertices * face );\n\t\t\tconst fill = [ face, face, face, face, face, face ];\n\t\t\tfaceIndex.set( fill, faceIndexSize * vertices * face );\n\n\t\t}\n\n\t\tconst planes = new BufferGeometry();\n\t\tplanes.setAttribute( 'position', new BufferAttribute( position, positionSize ) );\n\t\tplanes.setAttribute( 'uv', new BufferAttribute( uv, uvSize ) );\n\t\tplanes.setAttribute( 'faceIndex', new BufferAttribute( faceIndex, faceIndexSize ) );\n\t\tlodPlanes.push( planes );\n\n\t\tif ( lod > LOD_MIN ) {\n\n\t\t\tlod --;\n\n\t\t}\n\n\t}\n\n\treturn { lodPlanes, sizeLods, sigmas };\n\n}\n\nfunction _createRenderTarget( width, height, params ) {\n\n\tconst cubeUVRenderTarget = new WebGLRenderTarget( width, height, params );\n\tcubeUVRenderTarget.texture.mapping = CubeUVReflectionMapping;\n\tcubeUVRenderTarget.texture.name = 'PMREM.cubeUv';\n\tcubeUVRenderTarget.scissorTest = true;\n\treturn cubeUVRenderTarget;\n\n}\n\nfunction _setViewport( target, x, y, width, height ) {\n\n\ttarget.viewport.set( x, y, width, height );\n\ttarget.scissor.set( x, y, width, height );\n\n}\n\nfunction _getBlurShader( lodMax, width, height ) {\n\n\tconst weights = new Float32Array( MAX_SAMPLES );\n\tconst poleAxis = new Vector3( 0, 1, 0 );\n\tconst shaderMaterial = new ShaderMaterial( {\n\n\t\tname: 'SphericalGaussianBlur',\n\n\t\tdefines: {\n\t\t\t'n': MAX_SAMPLES,\n\t\t\t'CUBEUV_TEXEL_WIDTH': 1.0 / width,\n\t\t\t'CUBEUV_TEXEL_HEIGHT': 1.0 / height,\n\t\t\t'CUBEUV_MAX_MIP': `${lodMax}.0`,\n\t\t},\n\n\t\tuniforms: {\n\t\t\t'envMap': { value: null },\n\t\t\t'samples': { value: 1 },\n\t\t\t'weights': { value: weights },\n\t\t\t'latitudinal': { value: false },\n\t\t\t'dTheta': { value: 0 },\n\t\t\t'mipInt': { value: 0 },\n\t\t\t'poleAxis': { value: poleAxis }\n\t\t},\n\n\t\tvertexShader: _getCommonVertexShader(),\n\n\t\tfragmentShader: /* glsl */`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\t\t\tuniform int samples;\n\t\t\tuniform float weights[ n ];\n\t\t\tuniform bool latitudinal;\n\t\t\tuniform float dTheta;\n\t\t\tuniform float mipInt;\n\t\t\tuniform vec3 poleAxis;\n\n\t\t\t#define ENVMAP_TYPE_CUBE_UV\n\t\t\t#include <cube_uv_reflection_fragment>\n\n\t\t\tvec3 getSample( float theta, vec3 axis ) {\n\n\t\t\t\tfloat cosTheta = cos( theta );\n\t\t\t\t// Rodrigues' axis-angle rotation\n\t\t\t\tvec3 sampleDirection = vOutputDirection * cosTheta\n\t\t\t\t\t+ cross( axis, vOutputDirection ) * sin( theta )\n\t\t\t\t\t+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );\n\n\t\t\t\treturn bilinearCubeUV( envMap, sampleDirection, mipInt );\n\n\t\t\t}\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );\n\n\t\t\t\tif ( all( equal( axis, vec3( 0.0 ) ) ) ) {\n\n\t\t\t\t\taxis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );\n\n\t\t\t\t}\n\n\t\t\t\taxis = normalize( axis );\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t\t\t\tgl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );\n\n\t\t\t\tfor ( int i = 1; i < n; i++ ) {\n\n\t\t\t\t\tif ( i >= samples ) {\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfloat theta = dTheta * float( i );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( theta, axis );\n\n\t\t\t\t}\n\n\t\t\t}\n\t\t`,\n\n\t\tblending: NoBlending,\n\t\tdepthTest: false,\n\t\tdepthWrite: false\n\n\t} );\n\n\treturn shaderMaterial;\n\n}\n\nfunction _getEquirectMaterial() {\n\n\treturn new ShaderMaterial( {\n\n\t\tname: 'EquirectangularToCubeUV',\n\n\t\tuniforms: {\n\t\t\t'envMap': { value: null }\n\t\t},\n\n\t\tvertexShader: _getCommonVertexShader(),\n\n\t\tfragmentShader: /* glsl */`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\n\t\t\t#include <common>\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 outputDirection = normalize( vOutputDirection );\n\t\t\t\tvec2 uv = equirectUv( outputDirection );\n\n\t\t\t\tgl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );\n\n\t\t\t}\n\t\t`,\n\n\t\tblending: NoBlending,\n\t\tdepthTest: false,\n\t\tdepthWrite: false\n\n\t} );\n\n}\n\nfunction _getCubemapMaterial() {\n\n\treturn new ShaderMaterial( {\n\n\t\tname: 'CubemapToCubeUV',\n\n\t\tuniforms: {\n\t\t\t'envMap': { value: null },\n\t\t\t'flipEnvMap': { value: - 1 }\n\t\t},\n\n\t\tvertexShader: _getCommonVertexShader(),\n\n\t\tfragmentShader: /* glsl */`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tuniform float flipEnvMap;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform samplerCube envMap;\n\n\t\t\tvoid main() {\n\n\t\t\t\tgl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );\n\n\t\t\t}\n\t\t`,\n\n\t\tblending: NoBlending,\n\t\tdepthTest: false,\n\t\tdepthWrite: false\n\n\t} );\n\n}\n\nfunction _getCommonVertexShader() {\n\n\treturn /* glsl */`\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t`;\n\n}\n\nfunction WebGLCubeUVMaps( renderer ) {\n\n\tlet cubeUVmaps = new WeakMap();\n\n\tlet pmremGenerator = null;\n\n\tfunction get( texture ) {\n\n\t\tif ( texture && texture.isTexture ) {\n\n\t\t\tconst mapping = texture.mapping;\n\n\t\t\tconst isEquirectMap = ( mapping === EquirectangularReflectionMapping || mapping === EquirectangularRefractionMapping );\n\t\t\tconst isCubeMap = ( mapping === CubeReflectionMapping || mapping === CubeRefractionMapping );\n\n\t\t\t// equirect/cube map to cubeUV conversion\n\n\t\t\tif ( isEquirectMap || isCubeMap ) {\n\n\t\t\t\tlet renderTarget = cubeUVmaps.get( texture );\n\n\t\t\t\tconst currentPMREMVersion = renderTarget !== undefined ? renderTarget.texture.pmremVersion : 0;\n\n\t\t\t\tif ( texture.isRenderTargetTexture && texture.pmremVersion !== currentPMREMVersion ) {\n\n\t\t\t\t\tif ( pmremGenerator === null ) pmremGenerator = new PMREMGenerator( renderer );\n\n\t\t\t\t\trenderTarget = isEquirectMap ? pmremGenerator.fromEquirectangular( texture, renderTarget ) : pmremGenerator.fromCubemap( texture, renderTarget );\n\t\t\t\t\trenderTarget.texture.pmremVersion = texture.pmremVersion;\n\n\t\t\t\t\tcubeUVmaps.set( texture, renderTarget );\n\n\t\t\t\t\treturn renderTarget.texture;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( renderTarget !== undefined ) {\n\n\t\t\t\t\t\treturn renderTarget.texture;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst image = texture.image;\n\n\t\t\t\t\t\tif ( ( isEquirectMap && image && image.height > 0 ) || ( isCubeMap && image && isCubeTextureComplete( image ) ) ) {\n\n\t\t\t\t\t\t\tif ( pmremGenerator === null ) pmremGenerator = new PMREMGenerator( renderer );\n\n\t\t\t\t\t\t\trenderTarget = isEquirectMap ? pmremGenerator.fromEquirectangular( texture ) : pmremGenerator.fromCubemap( texture );\n\t\t\t\t\t\t\trenderTarget.texture.pmremVersion = texture.pmremVersion;\n\n\t\t\t\t\t\t\tcubeUVmaps.set( texture, renderTarget );\n\n\t\t\t\t\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t\t\t\t\t\treturn renderTarget.texture;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// image not yet ready. try the conversion next frame\n\n\t\t\t\t\t\t\treturn null;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tfunction isCubeTextureComplete( image ) {\n\n\t\tlet count = 0;\n\t\tconst length = 6;\n\n\t\tfor ( let i = 0; i < length; i ++ ) {\n\n\t\t\tif ( image[ i ] !== undefined ) count ++;\n\n\t\t}\n\n\t\treturn count === length;\n\n\n\t}\n\n\tfunction onTextureDispose( event ) {\n\n\t\tconst texture = event.target;\n\n\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\n\n\t\tconst cubemapUV = cubeUVmaps.get( texture );\n\n\t\tif ( cubemapUV !== undefined ) {\n\n\t\t\tcubeUVmaps.delete( texture );\n\t\t\tcubemapUV.dispose();\n\n\t\t}\n\n\t}\n\n\tfunction dispose() {\n\n\t\tcubeUVmaps = new WeakMap();\n\n\t\tif ( pmremGenerator !== null ) {\n\n\t\t\tpmremGenerator.dispose();\n\t\t\tpmremGenerator = null;\n\n\t\t}\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\nfunction WebGLExtensions( gl ) {\n\n\tconst extensions = {};\n\n\tfunction getExtension( name ) {\n\n\t\tif ( extensions[ name ] !== undefined ) {\n\n\t\t\treturn extensions[ name ];\n\n\t\t}\n\n\t\tlet extension;\n\n\t\tswitch ( name ) {\n\n\t\t\tcase 'WEBGL_depth_texture':\n\t\t\t\textension = gl.getExtension( 'WEBGL_depth_texture' ) || gl.getExtension( 'MOZ_WEBGL_depth_texture' ) || gl.getExtension( 'WEBKIT_WEBGL_depth_texture' );\n\t\t\t\tbreak;\n\n\t\t\tcase 'EXT_texture_filter_anisotropic':\n\t\t\t\textension = gl.getExtension( 'EXT_texture_filter_anisotropic' ) || gl.getExtension( 'MOZ_EXT_texture_filter_anisotropic' ) || gl.getExtension( 'WEBKIT_EXT_texture_filter_anisotropic' );\n\t\t\t\tbreak;\n\n\t\t\tcase 'WEBGL_compressed_texture_s3tc':\n\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'MOZ_WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_s3tc' );\n\t\t\t\tbreak;\n\n\t\t\tcase 'WEBGL_compressed_texture_pvrtc':\n\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_pvrtc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_pvrtc' );\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\textension = gl.getExtension( name );\n\n\t\t}\n\n\t\textensions[ name ] = extension;\n\n\t\treturn extension;\n\n\t}\n\n\treturn {\n\n\t\thas: function ( name ) {\n\n\t\t\treturn getExtension( name ) !== null;\n\n\t\t},\n\n\t\tinit: function () {\n\n\t\t\tgetExtension( 'EXT_color_buffer_float' );\n\t\t\tgetExtension( 'WEBGL_clip_cull_distance' );\n\t\t\tgetExtension( 'OES_texture_float_linear' );\n\t\t\tgetExtension( 'EXT_color_buffer_half_float' );\n\t\t\tgetExtension( 'WEBGL_multisampled_render_to_texture' );\n\t\t\tgetExtension( 'WEBGL_render_shared_exponent' );\n\n\t\t},\n\n\t\tget: function ( name ) {\n\n\t\t\tconst extension = getExtension( name );\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\twarnOnce( 'THREE.WebGLRenderer: ' + name + ' extension not supported.' );\n\n\t\t\t}\n\n\t\t\treturn extension;\n\n\t\t}\n\n\t};\n\n}\n\nfunction WebGLGeometries( gl, attributes, info, bindingStates ) {\n\n\tconst geometries = {};\n\tconst wireframeAttributes = new WeakMap();\n\n\tfunction onGeometryDispose( event ) {\n\n\t\tconst geometry = event.target;\n\n\t\tif ( geometry.index !== null ) {\n\n\t\t\tattributes.remove( geometry.index );\n\n\t\t}\n\n\t\tfor ( const name in geometry.attributes ) {\n\n\t\t\tattributes.remove( geometry.attributes[ name ] );\n\n\t\t}\n\n\t\tfor ( const name in geometry.morphAttributes ) {\n\n\t\t\tconst array = geometry.morphAttributes[ name ];\n\n\t\t\tfor ( let i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\tattributes.remove( array[ i ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeometry.removeEventListener( 'dispose', onGeometryDispose );\n\n\t\tdelete geometries[ geometry.id ];\n\n\t\tconst attribute = wireframeAttributes.get( geometry );\n\n\t\tif ( attribute ) {\n\n\t\t\tattributes.remove( attribute );\n\t\t\twireframeAttributes.delete( geometry );\n\n\t\t}\n\n\t\tbindingStates.releaseStatesOfGeometry( geometry );\n\n\t\tif ( geometry.isInstancedBufferGeometry === true ) {\n\n\t\t\tdelete geometry._maxInstanceCount;\n\n\t\t}\n\n\t\t//\n\n\t\tinfo.memory.geometries --;\n\n\t}\n\n\tfunction get( object, geometry ) {\n\n\t\tif ( geometries[ geometry.id ] === true ) return geometry;\n\n\t\tgeometry.addEventListener( 'dispose', onGeometryDispose );\n\n\t\tgeometries[ geometry.id ] = true;\n\n\t\tinfo.memory.geometries ++;\n\n\t\treturn geometry;\n\n\t}\n\n\tfunction update( geometry ) {\n\n\t\tconst geometryAttributes = geometry.attributes;\n\n\t\t// Updating index buffer in VAO now. See WebGLBindingStates.\n\n\t\tfor ( const name in geometryAttributes ) {\n\n\t\t\tattributes.update( geometryAttributes[ name ], gl.ARRAY_BUFFER );\n\n\t\t}\n\n\t\t// morph targets\n\n\t\tconst morphAttributes = geometry.morphAttributes;\n\n\t\tfor ( const name in morphAttributes ) {\n\n\t\t\tconst array = morphAttributes[ name ];\n\n\t\t\tfor ( let i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\tattributes.update( array[ i ], gl.ARRAY_BUFFER );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction updateWireframeAttribute( geometry ) {\n\n\t\tconst indices = [];\n\n\t\tconst geometryIndex = geometry.index;\n\t\tconst geometryPosition = geometry.attributes.position;\n\t\tlet version = 0;\n\n\t\tif ( geometryIndex !== null ) {\n\n\t\t\tconst array = geometryIndex.array;\n\t\t\tversion = geometryIndex.version;\n\n\t\t\tfor ( let i = 0, l = array.length; i < l; i += 3 ) {\n\n\t\t\t\tconst a = array[ i + 0 ];\n\t\t\t\tconst b = array[ i + 1 ];\n\t\t\t\tconst c = array[ i + 2 ];\n\n\t\t\t\tindices.push( a, b, b, c, c, a );\n\n\t\t\t}\n\n\t\t} else if ( geometryPosition !== undefined ) {\n\n\t\t\tconst array = geometryPosition.array;\n\t\t\tversion = geometryPosition.version;\n\n\t\t\tfor ( let i = 0, l = ( array.length / 3 ) - 1; i < l; i += 3 ) {\n\n\t\t\t\tconst a = i + 0;\n\t\t\t\tconst b = i + 1;\n\t\t\t\tconst c = i + 2;\n\n\t\t\t\tindices.push( a, b, b, c, c, a );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tconst attribute = new ( arrayNeedsUint32( indices ) ? Uint32BufferAttribute : Uint16BufferAttribute )( indices, 1 );\n\t\tattribute.version = version;\n\n\t\t// Updating index buffer in VAO now. See WebGLBindingStates\n\n\t\t//\n\n\t\tconst previousAttribute = wireframeAttributes.get( geometry );\n\n\t\tif ( previousAttribute ) attributes.remove( previousAttribute );\n\n\t\t//\n\n\t\twireframeAttributes.set( geometry, attribute );\n\n\t}\n\n\tfunction getWireframeAttribute( geometry ) {\n\n\t\tconst currentAttribute = wireframeAttributes.get( geometry );\n\n\t\tif ( currentAttribute ) {\n\n\t\t\tconst geometryIndex = geometry.index;\n\n\t\t\tif ( geometryIndex !== null ) {\n\n\t\t\t\t// if the attribute is obsolete, create a new one\n\n\t\t\t\tif ( currentAttribute.version < geometryIndex.version ) {\n\n\t\t\t\t\tupdateWireframeAttribute( geometry );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tupdateWireframeAttribute( geometry );\n\n\t\t}\n\n\t\treturn wireframeAttributes.get( geometry );\n\n\t}\n\n\treturn {\n\n\t\tget: get,\n\t\tupdate: update,\n\n\t\tgetWireframeAttribute: getWireframeAttribute\n\n\t};\n\n}\n\nfunction WebGLIndexedBufferRenderer( gl, extensions, info ) {\n\n\tlet mode;\n\n\tfunction setMode( value ) {\n\n\t\tmode = value;\n\n\t}\n\n\tlet type, bytesPerElement;\n\n\tfunction setIndex( value ) {\n\n\t\ttype = value.type;\n\t\tbytesPerElement = value.bytesPerElement;\n\n\t}\n\n\tfunction render( start, count ) {\n\n\t\tgl.drawElements( mode, count, type, start * bytesPerElement );\n\n\t\tinfo.update( count, mode, 1 );\n\n\t}\n\n\tfunction renderInstances( start, count, primcount ) {\n\n\t\tif ( primcount === 0 ) return;\n\n\t\tgl.drawElementsInstanced( mode, count, type, start * bytesPerElement, primcount );\n\n\t\tinfo.update( count, mode, primcount );\n\n\t}\n\n\tfunction renderMultiDraw( starts, counts, drawCount ) {\n\n\t\tif ( drawCount === 0 ) return;\n\n\t\tconst extension = extensions.get( 'WEBGL_multi_draw' );\n\t\textension.multiDrawElementsWEBGL( mode, counts, 0, type, starts, 0, drawCount );\n\n\t\tlet elementCount = 0;\n\t\tfor ( let i = 0; i < drawCount; i ++ ) {\n\n\t\t\telementCount += counts[ i ];\n\n\t\t}\n\n\t\tinfo.update( elementCount, mode, 1 );\n\n\n\t}\n\n\tfunction renderMultiDrawInstances( starts, counts, drawCount, primcount ) {\n\n\t\tif ( drawCount === 0 ) return;\n\n\t\tconst extension = extensions.get( 'WEBGL_multi_draw' );\n\n\t\tif ( extension === null ) {\n\n\t\t\tfor ( let i = 0; i < starts.length; i ++ ) {\n\n\t\t\t\trenderInstances( starts[ i ] / bytesPerElement, counts[ i ], primcount[ i ] );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\textension.multiDrawElementsInstancedWEBGL( mode, counts, 0, type, starts, 0, primcount, 0, drawCount );\n\n\t\t\tlet elementCount = 0;\n\t\t\tfor ( let i = 0; i < drawCount; i ++ ) {\n\n\t\t\t\telementCount += counts[ i ];\n\n\t\t\t}\n\n\t\t\tfor ( let i = 0; i < primcount.length; i ++ ) {\n\n\t\t\t\tinfo.update( elementCount, mode, primcount[ i ] );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t//\n\n\tthis.setMode = setMode;\n\tthis.setIndex = setIndex;\n\tthis.render = render;\n\tthis.renderInstances = renderInstances;\n\tthis.renderMultiDraw = renderMultiDraw;\n\tthis.renderMultiDrawInstances = renderMultiDrawInstances;\n\n}\n\nfunction WebGLInfo( gl ) {\n\n\tconst memory = {\n\t\tgeometries: 0,\n\t\ttextures: 0\n\t};\n\n\tconst render = {\n\t\tframe: 0,\n\t\tcalls: 0,\n\t\ttriangles: 0,\n\t\tpoints: 0,\n\t\tlines: 0\n\t};\n\n\tfunction update( count, mode, instanceCount ) {\n\n\t\trender.calls ++;\n\n\t\tswitch ( mode ) {\n\n\t\t\tcase gl.TRIANGLES:\n\t\t\t\trender.triangles += instanceCount * ( count / 3 );\n\t\t\t\tbreak;\n\n\t\t\tcase gl.LINES:\n\t\t\t\trender.lines += instanceCount * ( count / 2 );\n\t\t\t\tbreak;\n\n\t\t\tcase gl.LINE_STRIP:\n\t\t\t\trender.lines += instanceCount * ( count - 1 );\n\t\t\t\tbreak;\n\n\t\t\tcase gl.LINE_LOOP:\n\t\t\t\trender.lines += instanceCount * count;\n\t\t\t\tbreak;\n\n\t\t\tcase gl.POINTS:\n\t\t\t\trender.points += instanceCount * count;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tconsole.error( 'THREE.WebGLInfo: Unknown draw mode:', mode );\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\tfunction reset() {\n\n\t\trender.calls = 0;\n\t\trender.triangles = 0;\n\t\trender.points = 0;\n\t\trender.lines = 0;\n\n\t}\n\n\treturn {\n\t\tmemory: memory,\n\t\trender: render,\n\t\tprograms: null,\n\t\tautoReset: true,\n\t\treset: reset,\n\t\tupdate: update\n\t};\n\n}\n\nfunction WebGLMorphtargets( gl, capabilities, textures ) {\n\n\tconst morphTextures = new WeakMap();\n\tconst morph = new Vector4();\n\n\tfunction update( object, geometry, program ) {\n\n\t\tconst objectInfluences = object.morphTargetInfluences;\n\n\t\t// the following encodes morph targets into an array of data textures. Each layer represents a single morph target.\n\n\t\tconst morphAttribute = geometry.morphAttributes.position || geometry.morphAttributes.normal || geometry.morphAttributes.color;\n\t\tconst morphTargetsCount = ( morphAttribute !== undefined ) ? morphAttribute.length : 0;\n\n\t\tlet entry = morphTextures.get( geometry );\n\n\t\tif ( entry === undefined || entry.count !== morphTargetsCount ) {\n\n\t\t\tif ( entry !== undefined ) entry.texture.dispose();\n\n\t\t\tconst hasMorphPosition = geometry.morphAttributes.position !== undefined;\n\t\t\tconst hasMorphNormals = geometry.morphAttributes.normal !== undefined;\n\t\t\tconst hasMorphColors = geometry.morphAttributes.color !== undefined;\n\n\t\t\tconst morphTargets = geometry.morphAttributes.position || [];\n\t\t\tconst morphNormals = geometry.morphAttributes.normal || [];\n\t\t\tconst morphColors = geometry.morphAttributes.color || [];\n\n\t\t\tlet vertexDataCount = 0;\n\n\t\t\tif ( hasMorphPosition === true ) vertexDataCount = 1;\n\t\t\tif ( hasMorphNormals === true ) vertexDataCount = 2;\n\t\t\tif ( hasMorphColors === true ) vertexDataCount = 3;\n\n\t\t\tlet width = geometry.attributes.position.count * vertexDataCount;\n\t\t\tlet height = 1;\n\n\t\t\tif ( width > capabilities.maxTextureSize ) {\n\n\t\t\t\theight = Math.ceil( width / capabilities.maxTextureSize );\n\t\t\t\twidth = capabilities.maxTextureSize;\n\n\t\t\t}\n\n\t\t\tconst buffer = new Float32Array( width * height * 4 * morphTargetsCount );\n\n\t\t\tconst texture = new DataArrayTexture( buffer, width, height, morphTargetsCount );\n\t\t\ttexture.type = FloatType;\n\t\t\ttexture.needsUpdate = true;\n\n\t\t\t// fill buffer\n\n\t\t\tconst vertexDataStride = vertexDataCount * 4;\n\n\t\t\tfor ( let i = 0; i < morphTargetsCount; i ++ ) {\n\n\t\t\t\tconst morphTarget = morphTargets[ i ];\n\t\t\t\tconst morphNormal = morphNormals[ i ];\n\t\t\t\tconst morphColor = morphColors[ i ];\n\n\t\t\t\tconst offset = width * height * 4 * i;\n\n\t\t\t\tfor ( let j = 0; j < morphTarget.count; j ++ ) {\n\n\t\t\t\t\tconst stride = j * vertexDataStride;\n\n\t\t\t\t\tif ( hasMorphPosition === true ) {\n\n\t\t\t\t\t\tmorph.fromBufferAttribute( morphTarget, j );\n\n\t\t\t\t\t\tbuffer[ offset + stride + 0 ] = morph.x;\n\t\t\t\t\t\tbuffer[ offset + stride + 1 ] = morph.y;\n\t\t\t\t\t\tbuffer[ offset + stride + 2 ] = morph.z;\n\t\t\t\t\t\tbuffer[ offset + stride + 3 ] = 0;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( hasMorphNormals === true ) {\n\n\t\t\t\t\t\tmorph.fromBufferAttribute( morphNormal, j );\n\n\t\t\t\t\t\tbuffer[ offset + stride + 4 ] = morph.x;\n\t\t\t\t\t\tbuffer[ offset + stride + 5 ] = morph.y;\n\t\t\t\t\t\tbuffer[ offset + stride + 6 ] = morph.z;\n\t\t\t\t\t\tbuffer[ offset + stride + 7 ] = 0;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( hasMorphColors === true ) {\n\n\t\t\t\t\t\tmorph.fromBufferAttribute( morphColor, j );\n\n\t\t\t\t\t\tbuffer[ offset + stride + 8 ] = morph.x;\n\t\t\t\t\t\tbuffer[ offset + stride + 9 ] = morph.y;\n\t\t\t\t\t\tbuffer[ offset + stride + 10 ] = morph.z;\n\t\t\t\t\t\tbuffer[ offset + stride + 11 ] = ( morphColor.itemSize === 4 ) ? morph.w : 1;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tentry = {\n\t\t\t\tcount: morphTargetsCount,\n\t\t\t\ttexture: texture,\n\t\t\t\tsize: new Vector2( width, height )\n\t\t\t};\n\n\t\t\tmorphTextures.set( geometry, entry );\n\n\t\t\tfunction disposeTexture() {\n\n\t\t\t\ttexture.dispose();\n\n\t\t\t\tmorphTextures.delete( geometry );\n\n\t\t\t\tgeometry.removeEventListener( 'dispose', disposeTexture );\n\n\t\t\t}\n\n\t\t\tgeometry.addEventListener( 'dispose', disposeTexture );\n\n\t\t}\n\n\t\t//\n\t\tif ( object.isInstancedMesh === true && object.morphTexture !== null ) {\n\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTexture', object.morphTexture, textures );\n\n\t\t} else {\n\n\t\t\tlet morphInfluencesSum = 0;\n\n\t\t\tfor ( let i = 0; i < objectInfluences.length; i ++ ) {\n\n\t\t\t\tmorphInfluencesSum += objectInfluences[ i ];\n\n\t\t\t}\n\n\t\t\tconst morphBaseInfluence = geometry.morphTargetsRelative ? 1 : 1 - morphInfluencesSum;\n\n\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetBaseInfluence', morphBaseInfluence );\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetInfluences', objectInfluences );\n\n\t\t}\n\n\t\tprogram.getUniforms().setValue( gl, 'morphTargetsTexture', entry.texture, textures );\n\t\tprogram.getUniforms().setValue( gl, 'morphTargetsTextureSize', entry.size );\n\n\t}\n\n\treturn {\n\n\t\tupdate: update\n\n\t};\n\n}\n\nfunction WebGLObjects( gl, geometries, attributes, info ) {\n\n\tlet updateMap = new WeakMap();\n\n\tfunction update( object ) {\n\n\t\tconst frame = info.render.frame;\n\n\t\tconst geometry = object.geometry;\n\t\tconst buffergeometry = geometries.get( object, geometry );\n\n\t\t// Update once per frame\n\n\t\tif ( updateMap.get( buffergeometry ) !== frame ) {\n\n\t\t\tgeometries.update( buffergeometry );\n\n\t\t\tupdateMap.set( buffergeometry, frame );\n\n\t\t}\n\n\t\tif ( object.isInstancedMesh ) {\n\n\t\t\tif ( object.hasEventListener( 'dispose', onInstancedMeshDispose ) === false ) {\n\n\t\t\t\tobject.addEventListener( 'dispose', onInstancedMeshDispose );\n\n\t\t\t}\n\n\t\t\tif ( updateMap.get( object ) !== frame ) {\n\n\t\t\t\tattributes.update( object.instanceMatrix, gl.ARRAY_BUFFER );\n\n\t\t\t\tif ( object.instanceColor !== null ) {\n\n\t\t\t\t\tattributes.update( object.instanceColor, gl.ARRAY_BUFFER );\n\n\t\t\t\t}\n\n\t\t\t\tupdateMap.set( object, frame );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( object.isSkinnedMesh ) {\n\n\t\t\tconst skeleton = object.skeleton;\n\n\t\t\tif ( updateMap.get( skeleton ) !== frame ) {\n\n\t\t\t\tskeleton.update();\n\n\t\t\t\tupdateMap.set( skeleton, frame );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn buffergeometry;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tupdateMap = new WeakMap();\n\n\t}\n\n\tfunction onInstancedMeshDispose( event ) {\n\n\t\tconst instancedMesh = event.target;\n\n\t\tinstancedMesh.removeEventListener( 'dispose', onInstancedMeshDispose );\n\n\t\tattributes.remove( instancedMesh.instanceMatrix );\n\n\t\tif ( instancedMesh.instanceColor !== null ) attributes.remove( instancedMesh.instanceColor );\n\n\t}\n\n\treturn {\n\n\t\tupdate: update,\n\t\tdispose: dispose\n\n\t};\n\n}\n\nclass DepthTexture extends Texture {\n\n\tconstructor( width, height, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, format = DepthFormat ) {\n\n\t\tif ( format !== DepthFormat && format !== DepthStencilFormat ) {\n\n\t\t\tthrow new Error( 'DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat' );\n\n\t\t}\n\n\t\tif ( type === undefined && format === DepthFormat ) type = UnsignedIntType;\n\t\tif ( type === undefined && format === DepthStencilFormat ) type = UnsignedInt248Type;\n\n\t\tsuper( null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\tthis.isDepthTexture = true;\n\n\t\tthis.image = { width: width, height: height };\n\n\t\tthis.magFilter = magFilter !== undefined ? magFilter : NearestFilter;\n\t\tthis.minFilter = minFilter !== undefined ? minFilter : NearestFilter;\n\n\t\tthis.flipY = false;\n\t\tthis.generateMipmaps = false;\n\n\t\tthis.compareFunction = null;\n\n\t}\n\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.compareFunction = source.compareFunction;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tif ( this.compareFunction !== null ) data.compareFunction = this.compareFunction;\n\n\t\treturn data;\n\n\t}\n\n}\n\n/**\n * Uniforms of a program.\n * Those form a tree structure with a special top-level container for the root,\n * which you get by calling 'new WebGLUniforms( gl, program )'.\n *\n *\n * Properties of inner nodes including the top-level container:\n *\n * .seq - array of nested uniforms\n * .map - nested uniforms by name\n *\n *\n * Methods of all nodes except the top-level container:\n *\n * .setValue( gl, value, [textures] )\n *\n * \t\tuploads a uniform value(s)\n *  \tthe 'textures' parameter is needed for sampler uniforms\n *\n *\n * Static methods of the top-level container (textures factorizations):\n *\n * .upload( gl, seq, values, textures )\n *\n * \t\tsets uniforms in 'seq' to 'values[id].value'\n *\n * .seqWithValue( seq, values ) : filteredSeq\n *\n * \t\tfilters 'seq' entries with corresponding entry in values\n *\n *\n * Methods of the top-level container (textures factorizations):\n *\n * .setValue( gl, name, value, textures )\n *\n * \t\tsets uniform with  name 'name' to 'value'\n *\n * .setOptional( gl, obj, prop )\n *\n * \t\tlike .set for an optional property of the object\n *\n */\n\n\nconst emptyTexture = /*@__PURE__*/ new Texture();\n\nconst emptyShadowTexture = /*@__PURE__*/ new DepthTexture( 1, 1 );\n\nconst emptyArrayTexture = /*@__PURE__*/ new DataArrayTexture();\nconst empty3dTexture = /*@__PURE__*/ new Data3DTexture();\nconst emptyCubeTexture = /*@__PURE__*/ new CubeTexture();\n\n// --- Utilities ---\n\n// Array Caches (provide typed arrays for temporary by size)\n\nconst arrayCacheF32 = [];\nconst arrayCacheI32 = [];\n\n// Float32Array caches used for uploading Matrix uniforms\n\nconst mat4array = new Float32Array( 16 );\nconst mat3array = new Float32Array( 9 );\nconst mat2array = new Float32Array( 4 );\n\n// Flattening for arrays of vectors and matrices\n\nfunction flatten( array, nBlocks, blockSize ) {\n\n\tconst firstElem = array[ 0 ];\n\n\tif ( firstElem <= 0 || firstElem > 0 ) return array;\n\t// unoptimized: ! isNaN( firstElem )\n\t// see http://jacksondunstan.com/articles/983\n\n\tconst n = nBlocks * blockSize;\n\tlet r = arrayCacheF32[ n ];\n\n\tif ( r === undefined ) {\n\n\t\tr = new Float32Array( n );\n\t\tarrayCacheF32[ n ] = r;\n\n\t}\n\n\tif ( nBlocks !== 0 ) {\n\n\t\tfirstElem.toArray( r, 0 );\n\n\t\tfor ( let i = 1, offset = 0; i !== nBlocks; ++ i ) {\n\n\t\t\toffset += blockSize;\n\t\t\tarray[ i ].toArray( r, offset );\n\n\t\t}\n\n\t}\n\n\treturn r;\n\n}\n\nfunction arraysEqual( a, b ) {\n\n\tif ( a.length !== b.length ) return false;\n\n\tfor ( let i = 0, l = a.length; i < l; i ++ ) {\n\n\t\tif ( a[ i ] !== b[ i ] ) return false;\n\n\t}\n\n\treturn true;\n\n}\n\nfunction copyArray( a, b ) {\n\n\tfor ( let i = 0, l = b.length; i < l; i ++ ) {\n\n\t\ta[ i ] = b[ i ];\n\n\t}\n\n}\n\n// Texture unit allocation\n\nfunction allocTexUnits( textures, n ) {\n\n\tlet r = arrayCacheI32[ n ];\n\n\tif ( r === undefined ) {\n\n\t\tr = new Int32Array( n );\n\t\tarrayCacheI32[ n ] = r;\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\tr[ i ] = textures.allocateTextureUnit();\n\n\t}\n\n\treturn r;\n\n}\n\n// --- Setters ---\n\n// Note: Defining these methods externally, because they come in a bunch\n// and this way their names minify.\n\n// Single scalar\n\nfunction setValueV1f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1f( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\n// Single float vector (from flat array or THREE.VectorN)\n\nfunction setValueV2f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y ) {\n\n\t\t\tgl.uniform2f( this.addr, v.x, v.y );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform2fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV3f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z ) {\n\n\t\t\tgl.uniform3f( this.addr, v.x, v.y, v.z );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\n\t\t}\n\n\t} else if ( v.r !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.r || cache[ 1 ] !== v.g || cache[ 2 ] !== v.b ) {\n\n\t\t\tgl.uniform3f( this.addr, v.r, v.g, v.b );\n\n\t\t\tcache[ 0 ] = v.r;\n\t\t\tcache[ 1 ] = v.g;\n\t\t\tcache[ 2 ] = v.b;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform3fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV4f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z || cache[ 3 ] !== v.w ) {\n\n\t\t\tgl.uniform4f( this.addr, v.x, v.y, v.z, v.w );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\t\t\tcache[ 3 ] = v.w;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform4fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\n// Single matrix (from flat array or THREE.MatrixN)\n\nfunction setValueM2( gl, v ) {\n\n\tconst cache = this.cache;\n\tconst elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix2fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat2array.set( elements );\n\n\t\tgl.uniformMatrix2fv( this.addr, false, mat2array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\nfunction setValueM3( gl, v ) {\n\n\tconst cache = this.cache;\n\tconst elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix3fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat3array.set( elements );\n\n\t\tgl.uniformMatrix3fv( this.addr, false, mat3array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\nfunction setValueM4( gl, v ) {\n\n\tconst cache = this.cache;\n\tconst elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix4fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat4array.set( elements );\n\n\t\tgl.uniformMatrix4fv( this.addr, false, mat4array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\n// Single integer / boolean\n\nfunction setValueV1i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1i( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\n// Single integer / boolean vector (from flat array or THREE.VectorN)\n\nfunction setValueV2i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y ) {\n\n\t\t\tgl.uniform2i( this.addr, v.x, v.y );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform2iv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV3i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z ) {\n\n\t\t\tgl.uniform3i( this.addr, v.x, v.y, v.z );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform3iv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV4i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z || cache[ 3 ] !== v.w ) {\n\n\t\t\tgl.uniform4i( this.addr, v.x, v.y, v.z, v.w );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\t\t\tcache[ 3 ] = v.w;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform4iv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\n// Single unsigned integer\n\nfunction setValueV1ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1ui( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\n// Single unsigned integer vector (from flat array or THREE.VectorN)\n\nfunction setValueV2ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y ) {\n\n\t\t\tgl.uniform2ui( this.addr, v.x, v.y );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform2uiv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV3ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z ) {\n\n\t\t\tgl.uniform3ui( this.addr, v.x, v.y, v.z );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform3uiv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV4ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z || cache[ 3 ] !== v.w ) {\n\n\t\t\tgl.uniform4ui( this.addr, v.x, v.y, v.z, v.w );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\t\t\tcache[ 3 ] = v.w;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform4uiv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\n\n// Single texture (2D / Cube)\n\nfunction setValueT1( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\tlet emptyTexture2D;\n\n\tif ( this.type === gl.SAMPLER_2D_SHADOW ) {\n\n\t\temptyShadowTexture.compareFunction = LessEqualCompare; // #28670\n\t\temptyTexture2D = emptyShadowTexture;\n\n\t} else {\n\n\t\temptyTexture2D = emptyTexture;\n\n\t}\n\n\ttextures.setTexture2D( v || emptyTexture2D, unit );\n\n}\n\nfunction setValueT3D1( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.setTexture3D( v || empty3dTexture, unit );\n\n}\n\nfunction setValueT6( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.setTextureCube( v || emptyCubeTexture, unit );\n\n}\n\nfunction setValueT2DArray1( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.setTexture2DArray( v || emptyArrayTexture, unit );\n\n}\n\n// Helper to pick the right setter for the singular case\n\nfunction getSingularSetter( type ) {\n\n\tswitch ( type ) {\n\n\t\tcase 0x1406: return setValueV1f; // FLOAT\n\t\tcase 0x8b50: return setValueV2f; // _VEC2\n\t\tcase 0x8b51: return setValueV3f; // _VEC3\n\t\tcase 0x8b52: return setValueV4f; // _VEC4\n\n\t\tcase 0x8b5a: return setValueM2; // _MAT2\n\t\tcase 0x8b5b: return setValueM3; // _MAT3\n\t\tcase 0x8b5c: return setValueM4; // _MAT4\n\n\t\tcase 0x1404: case 0x8b56: return setValueV1i; // INT, BOOL\n\t\tcase 0x8b53: case 0x8b57: return setValueV2i; // _VEC2\n\t\tcase 0x8b54: case 0x8b58: return setValueV3i; // _VEC3\n\t\tcase 0x8b55: case 0x8b59: return setValueV4i; // _VEC4\n\n\t\tcase 0x1405: return setValueV1ui; // UINT\n\t\tcase 0x8dc6: return setValueV2ui; // _VEC2\n\t\tcase 0x8dc7: return setValueV3ui; // _VEC3\n\t\tcase 0x8dc8: return setValueV4ui; // _VEC4\n\n\t\tcase 0x8b5e: // SAMPLER_2D\n\t\tcase 0x8d66: // SAMPLER_EXTERNAL_OES\n\t\tcase 0x8dca: // INT_SAMPLER_2D\n\t\tcase 0x8dd2: // UNSIGNED_INT_SAMPLER_2D\n\t\tcase 0x8b62: // SAMPLER_2D_SHADOW\n\t\t\treturn setValueT1;\n\n\t\tcase 0x8b5f: // SAMPLER_3D\n\t\tcase 0x8dcb: // INT_SAMPLER_3D\n\t\tcase 0x8dd3: // UNSIGNED_INT_SAMPLER_3D\n\t\t\treturn setValueT3D1;\n\n\t\tcase 0x8b60: // SAMPLER_CUBE\n\t\tcase 0x8dcc: // INT_SAMPLER_CUBE\n\t\tcase 0x8dd4: // UNSIGNED_INT_SAMPLER_CUBE\n\t\tcase 0x8dc5: // SAMPLER_CUBE_SHADOW\n\t\t\treturn setValueT6;\n\n\t\tcase 0x8dc1: // SAMPLER_2D_ARRAY\n\t\tcase 0x8dcf: // INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dd7: // UNSIGNED_INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dc4: // SAMPLER_2D_ARRAY_SHADOW\n\t\t\treturn setValueT2DArray1;\n\n\t}\n\n}\n\n\n// Array of scalars\n\nfunction setValueV1fArray( gl, v ) {\n\n\tgl.uniform1fv( this.addr, v );\n\n}\n\n// Array of vectors (from flat array or array of THREE.VectorN)\n\nfunction setValueV2fArray( gl, v ) {\n\n\tconst data = flatten( v, this.size, 2 );\n\n\tgl.uniform2fv( this.addr, data );\n\n}\n\nfunction setValueV3fArray( gl, v ) {\n\n\tconst data = flatten( v, this.size, 3 );\n\n\tgl.uniform3fv( this.addr, data );\n\n}\n\nfunction setValueV4fArray( gl, v ) {\n\n\tconst data = flatten( v, this.size, 4 );\n\n\tgl.uniform4fv( this.addr, data );\n\n}\n\n// Array of matrices (from flat array or array of THREE.MatrixN)\n\nfunction setValueM2Array( gl, v ) {\n\n\tconst data = flatten( v, this.size, 4 );\n\n\tgl.uniformMatrix2fv( this.addr, false, data );\n\n}\n\nfunction setValueM3Array( gl, v ) {\n\n\tconst data = flatten( v, this.size, 9 );\n\n\tgl.uniformMatrix3fv( this.addr, false, data );\n\n}\n\nfunction setValueM4Array( gl, v ) {\n\n\tconst data = flatten( v, this.size, 16 );\n\n\tgl.uniformMatrix4fv( this.addr, false, data );\n\n}\n\n// Array of integer / boolean\n\nfunction setValueV1iArray( gl, v ) {\n\n\tgl.uniform1iv( this.addr, v );\n\n}\n\n// Array of integer / boolean vectors (from flat array)\n\nfunction setValueV2iArray( gl, v ) {\n\n\tgl.uniform2iv( this.addr, v );\n\n}\n\nfunction setValueV3iArray( gl, v ) {\n\n\tgl.uniform3iv( this.addr, v );\n\n}\n\nfunction setValueV4iArray( gl, v ) {\n\n\tgl.uniform4iv( this.addr, v );\n\n}\n\n// Array of unsigned integer\n\nfunction setValueV1uiArray( gl, v ) {\n\n\tgl.uniform1uiv( this.addr, v );\n\n}\n\n// Array of unsigned integer vectors (from flat array)\n\nfunction setValueV2uiArray( gl, v ) {\n\n\tgl.uniform2uiv( this.addr, v );\n\n}\n\nfunction setValueV3uiArray( gl, v ) {\n\n\tgl.uniform3uiv( this.addr, v );\n\n}\n\nfunction setValueV4uiArray( gl, v ) {\n\n\tgl.uniform4uiv( this.addr, v );\n\n}\n\n\n// Array of textures (2D / 3D / Cube / 2DArray)\n\nfunction setValueT1Array( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tif ( ! arraysEqual( cache, units ) ) {\n\n\t\tgl.uniform1iv( this.addr, units );\n\n\t\tcopyArray( cache, units );\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.setTexture2D( v[ i ] || emptyTexture, units[ i ] );\n\n\t}\n\n}\n\nfunction setValueT3DArray( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tif ( ! arraysEqual( cache, units ) ) {\n\n\t\tgl.uniform1iv( this.addr, units );\n\n\t\tcopyArray( cache, units );\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.setTexture3D( v[ i ] || empty3dTexture, units[ i ] );\n\n\t}\n\n}\n\nfunction setValueT6Array( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tif ( ! arraysEqual( cache, units ) ) {\n\n\t\tgl.uniform1iv( this.addr, units );\n\n\t\tcopyArray( cache, units );\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.setTextureCube( v[ i ] || emptyCubeTexture, units[ i ] );\n\n\t}\n\n}\n\nfunction setValueT2DArrayArray( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tif ( ! arraysEqual( cache, units ) ) {\n\n\t\tgl.uniform1iv( this.addr, units );\n\n\t\tcopyArray( cache, units );\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.setTexture2DArray( v[ i ] || emptyArrayTexture, units[ i ] );\n\n\t}\n\n}\n\n\n// Helper to pick the right setter for a pure (bottom-level) array\n\nfunction getPureArraySetter( type ) {\n\n\tswitch ( type ) {\n\n\t\tcase 0x1406: return setValueV1fArray; // FLOAT\n\t\tcase 0x8b50: return setValueV2fArray; // _VEC2\n\t\tcase 0x8b51: return setValueV3fArray; // _VEC3\n\t\tcase 0x8b52: return setValueV4fArray; // _VEC4\n\n\t\tcase 0x8b5a: return setValueM2Array; // _MAT2\n\t\tcase 0x8b5b: return setValueM3Array; // _MAT3\n\t\tcase 0x8b5c: return setValueM4Array; // _MAT4\n\n\t\tcase 0x1404: case 0x8b56: return setValueV1iArray; // INT, BOOL\n\t\tcase 0x8b53: case 0x8b57: return setValueV2iArray; // _VEC2\n\t\tcase 0x8b54: case 0x8b58: return setValueV3iArray; // _VEC3\n\t\tcase 0x8b55: case 0x8b59: return setValueV4iArray; // _VEC4\n\n\t\tcase 0x1405: return setValueV1uiArray; // UINT\n\t\tcase 0x8dc6: return setValueV2uiArray; // _VEC2\n\t\tcase 0x8dc7: return setValueV3uiArray; // _VEC3\n\t\tcase 0x8dc8: return setValueV4uiArray; // _VEC4\n\n\t\tcase 0x8b5e: // SAMPLER_2D\n\t\tcase 0x8d66: // SAMPLER_EXTERNAL_OES\n\t\tcase 0x8dca: // INT_SAMPLER_2D\n\t\tcase 0x8dd2: // UNSIGNED_INT_SAMPLER_2D\n\t\tcase 0x8b62: // SAMPLER_2D_SHADOW\n\t\t\treturn setValueT1Array;\n\n\t\tcase 0x8b5f: // SAMPLER_3D\n\t\tcase 0x8dcb: // INT_SAMPLER_3D\n\t\tcase 0x8dd3: // UNSIGNED_INT_SAMPLER_3D\n\t\t\treturn setValueT3DArray;\n\n\t\tcase 0x8b60: // SAMPLER_CUBE\n\t\tcase 0x8dcc: // INT_SAMPLER_CUBE\n\t\tcase 0x8dd4: // UNSIGNED_INT_SAMPLER_CUBE\n\t\tcase 0x8dc5: // SAMPLER_CUBE_SHADOW\n\t\t\treturn setValueT6Array;\n\n\t\tcase 0x8dc1: // SAMPLER_2D_ARRAY\n\t\tcase 0x8dcf: // INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dd7: // UNSIGNED_INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dc4: // SAMPLER_2D_ARRAY_SHADOW\n\t\t\treturn setValueT2DArrayArray;\n\n\t}\n\n}\n\n// --- Uniform Classes ---\n\nclass SingleUniform {\n\n\tconstructor( id, activeInfo, addr ) {\n\n\t\tthis.id = id;\n\t\tthis.addr = addr;\n\t\tthis.cache = [];\n\t\tthis.type = activeInfo.type;\n\t\tthis.setValue = getSingularSetter( activeInfo.type );\n\n\t\t// this.path = activeInfo.name; // DEBUG\n\n\t}\n\n}\n\nclass PureArrayUniform {\n\n\tconstructor( id, activeInfo, addr ) {\n\n\t\tthis.id = id;\n\t\tthis.addr = addr;\n\t\tthis.cache = [];\n\t\tthis.type = activeInfo.type;\n\t\tthis.size = activeInfo.size;\n\t\tthis.setValue = getPureArraySetter( activeInfo.type );\n\n\t\t// this.path = activeInfo.name; // DEBUG\n\n\t}\n\n}\n\nclass StructuredUniform {\n\n\tconstructor( id ) {\n\n\t\tthis.id = id;\n\n\t\tthis.seq = [];\n\t\tthis.map = {};\n\n\t}\n\n\tsetValue( gl, value, textures ) {\n\n\t\tconst seq = this.seq;\n\n\t\tfor ( let i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\t\tconst u = seq[ i ];\n\t\t\tu.setValue( gl, value[ u.id ], textures );\n\n\t\t}\n\n\t}\n\n}\n\n// --- Top-level ---\n\n// Parser - builds up the property tree from the path strings\n\nconst RePathPart = /(\\w+)(\\])?(\\[|\\.)?/g;\n\n// extracts\n// \t- the identifier (member name or array index)\n//  - followed by an optional right bracket (found when array index)\n//  - followed by an optional left bracket or dot (type of subscript)\n//\n// Note: These portions can be read in a non-overlapping fashion and\n// allow straightforward parsing of the hierarchy that WebGL encodes\n// in the uniform names.\n\nfunction addUniform( container, uniformObject ) {\n\n\tcontainer.seq.push( uniformObject );\n\tcontainer.map[ uniformObject.id ] = uniformObject;\n\n}\n\nfunction parseUniform( activeInfo, addr, container ) {\n\n\tconst path = activeInfo.name,\n\t\tpathLength = path.length;\n\n\t// reset RegExp object, because of the early exit of a previous run\n\tRePathPart.lastIndex = 0;\n\n\twhile ( true ) {\n\n\t\tconst match = RePathPart.exec( path ),\n\t\t\tmatchEnd = RePathPart.lastIndex;\n\n\t\tlet id = match[ 1 ];\n\t\tconst idIsIndex = match[ 2 ] === ']',\n\t\t\tsubscript = match[ 3 ];\n\n\t\tif ( idIsIndex ) id = id | 0; // convert to integer\n\n\t\tif ( subscript === undefined || subscript === '[' && matchEnd + 2 === pathLength ) {\n\n\t\t\t// bare name or \"pure\" bottom-level array \"[0]\" suffix\n\n\t\t\taddUniform( container, subscript === undefined ?\n\t\t\t\tnew SingleUniform( id, activeInfo, addr ) :\n\t\t\t\tnew PureArrayUniform( id, activeInfo, addr ) );\n\n\t\t\tbreak;\n\n\t\t} else {\n\n\t\t\t// step into inner node / create it in case it doesn't exist\n\n\t\t\tconst map = container.map;\n\t\t\tlet next = map[ id ];\n\n\t\t\tif ( next === undefined ) {\n\n\t\t\t\tnext = new StructuredUniform( id );\n\t\t\t\taddUniform( container, next );\n\n\t\t\t}\n\n\t\t\tcontainer = next;\n\n\t\t}\n\n\t}\n\n}\n\n// Root Container\n\nclass WebGLUniforms {\n\n\tconstructor( gl, program ) {\n\n\t\tthis.seq = [];\n\t\tthis.map = {};\n\n\t\tconst n = gl.getProgramParameter( program, gl.ACTIVE_UNIFORMS );\n\n\t\tfor ( let i = 0; i < n; ++ i ) {\n\n\t\t\tconst info = gl.getActiveUniform( program, i ),\n\t\t\t\taddr = gl.getUniformLocation( program, info.name );\n\n\t\t\tparseUniform( info, addr, this );\n\n\t\t}\n\n\t}\n\n\tsetValue( gl, name, value, textures ) {\n\n\t\tconst u = this.map[ name ];\n\n\t\tif ( u !== undefined ) u.setValue( gl, value, textures );\n\n\t}\n\n\tsetOptional( gl, object, name ) {\n\n\t\tconst v = object[ name ];\n\n\t\tif ( v !== undefined ) this.setValue( gl, name, v );\n\n\t}\n\n\tstatic upload( gl, seq, values, textures ) {\n\n\t\tfor ( let i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\t\tconst u = seq[ i ],\n\t\t\t\tv = values[ u.id ];\n\n\t\t\tif ( v.needsUpdate !== false ) {\n\n\t\t\t\t// note: always updating when .needsUpdate is undefined\n\t\t\t\tu.setValue( gl, v.value, textures );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tstatic seqWithValue( seq, values ) {\n\n\t\tconst r = [];\n\n\t\tfor ( let i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\t\tconst u = seq[ i ];\n\t\t\tif ( u.id in values ) r.push( u );\n\n\t\t}\n\n\t\treturn r;\n\n\t}\n\n}\n\nfunction WebGLShader( gl, type, string ) {\n\n\tconst shader = gl.createShader( type );\n\n\tgl.shaderSource( shader, string );\n\tgl.compileShader( shader );\n\n\treturn shader;\n\n}\n\n// From https://www.khronos.org/registry/webgl/extensions/KHR_parallel_shader_compile/\nconst COMPLETION_STATUS_KHR = 0x91B1;\n\nlet programIdCount = 0;\n\nfunction handleSource( string, errorLine ) {\n\n\tconst lines = string.split( '\\n' );\n\tconst lines2 = [];\n\n\tconst from = Math.max( errorLine - 6, 0 );\n\tconst to = Math.min( errorLine + 6, lines.length );\n\n\tfor ( let i = from; i < to; i ++ ) {\n\n\t\tconst line = i + 1;\n\t\tlines2.push( `${line === errorLine ? '>' : ' '} ${line}: ${lines[ i ]}` );\n\n\t}\n\n\treturn lines2.join( '\\n' );\n\n}\n\nfunction getEncodingComponents( colorSpace ) {\n\n\tconst workingPrimaries = ColorManagement.getPrimaries( ColorManagement.workingColorSpace );\n\tconst encodingPrimaries = ColorManagement.getPrimaries( colorSpace );\n\n\tlet gamutMapping;\n\n\tif ( workingPrimaries === encodingPrimaries ) {\n\n\t\tgamutMapping = '';\n\n\t} else if ( workingPrimaries === P3Primaries && encodingPrimaries === Rec709Primaries ) {\n\n\t\tgamutMapping = 'LinearDisplayP3ToLinearSRGB';\n\n\t} else if ( workingPrimaries === Rec709Primaries && encodingPrimaries === P3Primaries ) {\n\n\t\tgamutMapping = 'LinearSRGBToLinearDisplayP3';\n\n\t}\n\n\tswitch ( colorSpace ) {\n\n\t\tcase LinearSRGBColorSpace:\n\t\tcase LinearDisplayP3ColorSpace:\n\t\t\treturn [ gamutMapping, 'LinearTransferOETF' ];\n\n\t\tcase SRGBColorSpace:\n\t\tcase DisplayP3ColorSpace:\n\t\t\treturn [ gamutMapping, 'sRGBTransferOETF' ];\n\n\t\tdefault:\n\t\t\tconsole.warn( 'THREE.WebGLProgram: Unsupported color space:', colorSpace );\n\t\t\treturn [ gamutMapping, 'LinearTransferOETF' ];\n\n\t}\n\n}\n\nfunction getShaderErrors( gl, shader, type ) {\n\n\tconst status = gl.getShaderParameter( shader, gl.COMPILE_STATUS );\n\tconst errors = gl.getShaderInfoLog( shader ).trim();\n\n\tif ( status && errors === '' ) return '';\n\n\tconst errorMatches = /ERROR: 0:(\\d+)/.exec( errors );\n\tif ( errorMatches ) {\n\n\t\t// --enable-privileged-webgl-extension\n\t\t// console.log( '**' + type + '**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( shader ) );\n\n\t\tconst errorLine = parseInt( errorMatches[ 1 ] );\n\t\treturn type.toUpperCase() + '\\n\\n' + errors + '\\n\\n' + handleSource( gl.getShaderSource( shader ), errorLine );\n\n\t} else {\n\n\t\treturn errors;\n\n\t}\n\n}\n\nfunction getTexelEncodingFunction( functionName, colorSpace ) {\n\n\tconst components = getEncodingComponents( colorSpace );\n\treturn `vec4 ${functionName}( vec4 value ) { return ${components[ 0 ]}( ${components[ 1 ]}( value ) ); }`;\n\n}\n\nfunction getToneMappingFunction( functionName, toneMapping ) {\n\n\tlet toneMappingName;\n\n\tswitch ( toneMapping ) {\n\n\t\tcase LinearToneMapping:\n\t\t\ttoneMappingName = 'Linear';\n\t\t\tbreak;\n\n\t\tcase ReinhardToneMapping:\n\t\t\ttoneMappingName = 'Reinhard';\n\t\t\tbreak;\n\n\t\tcase CineonToneMapping:\n\t\t\ttoneMappingName = 'OptimizedCineon';\n\t\t\tbreak;\n\n\t\tcase ACESFilmicToneMapping:\n\t\t\ttoneMappingName = 'ACESFilmic';\n\t\t\tbreak;\n\n\t\tcase AgXToneMapping:\n\t\t\ttoneMappingName = 'AgX';\n\t\t\tbreak;\n\n\t\tcase NeutralToneMapping:\n\t\t\ttoneMappingName = 'Neutral';\n\t\t\tbreak;\n\n\t\tcase CustomToneMapping:\n\t\t\ttoneMappingName = 'Custom';\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tconsole.warn( 'THREE.WebGLProgram: Unsupported toneMapping:', toneMapping );\n\t\t\ttoneMappingName = 'Linear';\n\n\t}\n\n\treturn 'vec3 ' + functionName + '( vec3 color ) { return ' + toneMappingName + 'ToneMapping( color ); }';\n\n}\n\nfunction generateVertexExtensions( parameters ) {\n\n\tconst chunks = [\n\t\tparameters.extensionClipCullDistance ? '#extension GL_ANGLE_clip_cull_distance : require' : '',\n\t\tparameters.extensionMultiDraw ? '#extension GL_ANGLE_multi_draw : require' : '',\n\t];\n\n\treturn chunks.filter( filterEmptyLine ).join( '\\n' );\n\n}\n\nfunction generateDefines( defines ) {\n\n\tconst chunks = [];\n\n\tfor ( const name in defines ) {\n\n\t\tconst value = defines[ name ];\n\n\t\tif ( value === false ) continue;\n\n\t\tchunks.push( '#define ' + name + ' ' + value );\n\n\t}\n\n\treturn chunks.join( '\\n' );\n\n}\n\nfunction fetchAttributeLocations( gl, program ) {\n\n\tconst attributes = {};\n\n\tconst n = gl.getProgramParameter( program, gl.ACTIVE_ATTRIBUTES );\n\n\tfor ( let i = 0; i < n; i ++ ) {\n\n\t\tconst info = gl.getActiveAttrib( program, i );\n\t\tconst name = info.name;\n\n\t\tlet locationSize = 1;\n\t\tif ( info.type === gl.FLOAT_MAT2 ) locationSize = 2;\n\t\tif ( info.type === gl.FLOAT_MAT3 ) locationSize = 3;\n\t\tif ( info.type === gl.FLOAT_MAT4 ) locationSize = 4;\n\n\t\t// console.log( 'THREE.WebGLProgram: ACTIVE VERTEX ATTRIBUTE:', name, i );\n\n\t\tattributes[ name ] = {\n\t\t\ttype: info.type,\n\t\t\tlocation: gl.getAttribLocation( program, name ),\n\t\t\tlocationSize: locationSize\n\t\t};\n\n\t}\n\n\treturn attributes;\n\n}\n\nfunction filterEmptyLine( string ) {\n\n\treturn string !== '';\n\n}\n\nfunction replaceLightNums( string, parameters ) {\n\n\tconst numSpotLightCoords = parameters.numSpotLightShadows + parameters.numSpotLightMaps - parameters.numSpotLightShadowsWithMaps;\n\n\treturn string\n\t\t.replace( /NUM_DIR_LIGHTS/g, parameters.numDirLights )\n\t\t.replace( /NUM_SPOT_LIGHTS/g, parameters.numSpotLights )\n\t\t.replace( /NUM_SPOT_LIGHT_MAPS/g, parameters.numSpotLightMaps )\n\t\t.replace( /NUM_SPOT_LIGHT_COORDS/g, numSpotLightCoords )\n\t\t.replace( /NUM_RECT_AREA_LIGHTS/g, parameters.numRectAreaLights )\n\t\t.replace( /NUM_POINT_LIGHTS/g, parameters.numPointLights )\n\t\t.replace( /NUM_HEMI_LIGHTS/g, parameters.numHemiLights )\n\t\t.replace( /NUM_DIR_LIGHT_SHADOWS/g, parameters.numDirLightShadows )\n\t\t.replace( /NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g, parameters.numSpotLightShadowsWithMaps )\n\t\t.replace( /NUM_SPOT_LIGHT_SHADOWS/g, parameters.numSpotLightShadows )\n\t\t.replace( /NUM_POINT_LIGHT_SHADOWS/g, parameters.numPointLightShadows );\n\n}\n\nfunction replaceClippingPlaneNums( string, parameters ) {\n\n\treturn string\n\t\t.replace( /NUM_CLIPPING_PLANES/g, parameters.numClippingPlanes )\n\t\t.replace( /UNION_CLIPPING_PLANES/g, ( parameters.numClippingPlanes - parameters.numClipIntersection ) );\n\n}\n\n// Resolve Includes\n\nconst includePattern = /^[ \\t]*#include +<([\\w\\d./]+)>/gm;\n\nfunction resolveIncludes( string ) {\n\n\treturn string.replace( includePattern, includeReplacer );\n\n}\n\nconst shaderChunkMap = new Map();\n\nfunction includeReplacer( match, include ) {\n\n\tlet string = ShaderChunk[ include ];\n\n\tif ( string === undefined ) {\n\n\t\tconst newInclude = shaderChunkMap.get( include );\n\n\t\tif ( newInclude !== undefined ) {\n\n\t\t\tstring = ShaderChunk[ newInclude ];\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Shader chunk \"%s\" has been deprecated. Use \"%s\" instead.', include, newInclude );\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'Can not resolve #include <' + include + '>' );\n\n\t\t}\n\n\t}\n\n\treturn resolveIncludes( string );\n\n}\n\n// Unroll Loops\n\nconst unrollLoopPattern = /#pragma unroll_loop_start\\s+for\\s*\\(\\s*int\\s+i\\s*=\\s*(\\d+)\\s*;\\s*i\\s*<\\s*(\\d+)\\s*;\\s*i\\s*\\+\\+\\s*\\)\\s*{([\\s\\S]+?)}\\s+#pragma unroll_loop_end/g;\n\nfunction unrollLoops( string ) {\n\n\treturn string.replace( unrollLoopPattern, loopReplacer );\n\n}\n\nfunction loopReplacer( match, start, end, snippet ) {\n\n\tlet string = '';\n\n\tfor ( let i = parseInt( start ); i < parseInt( end ); i ++ ) {\n\n\t\tstring += snippet\n\t\t\t.replace( /\\[\\s*i\\s*\\]/g, '[ ' + i + ' ]' )\n\t\t\t.replace( /UNROLLED_LOOP_INDEX/g, i );\n\n\t}\n\n\treturn string;\n\n}\n\n//\n\nfunction generatePrecision( parameters ) {\n\n\tlet precisionstring = `precision ${parameters.precision} float;\n\tprecision ${parameters.precision} int;\n\tprecision ${parameters.precision} sampler2D;\n\tprecision ${parameters.precision} samplerCube;\n\tprecision ${parameters.precision} sampler3D;\n\tprecision ${parameters.precision} sampler2DArray;\n\tprecision ${parameters.precision} sampler2DShadow;\n\tprecision ${parameters.precision} samplerCubeShadow;\n\tprecision ${parameters.precision} sampler2DArrayShadow;\n\tprecision ${parameters.precision} isampler2D;\n\tprecision ${parameters.precision} isampler3D;\n\tprecision ${parameters.precision} isamplerCube;\n\tprecision ${parameters.precision} isampler2DArray;\n\tprecision ${parameters.precision} usampler2D;\n\tprecision ${parameters.precision} usampler3D;\n\tprecision ${parameters.precision} usamplerCube;\n\tprecision ${parameters.precision} usampler2DArray;\n\t`;\n\n\tif ( parameters.precision === 'highp' ) {\n\n\t\tprecisionstring += '\\n#define HIGH_PRECISION';\n\n\t} else if ( parameters.precision === 'mediump' ) {\n\n\t\tprecisionstring += '\\n#define MEDIUM_PRECISION';\n\n\t} else if ( parameters.precision === 'lowp' ) {\n\n\t\tprecisionstring += '\\n#define LOW_PRECISION';\n\n\t}\n\n\treturn precisionstring;\n\n}\n\nfunction generateShadowMapTypeDefine( parameters ) {\n\n\tlet shadowMapTypeDefine = 'SHADOWMAP_TYPE_BASIC';\n\n\tif ( parameters.shadowMapType === PCFShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF';\n\n\t} else if ( parameters.shadowMapType === PCFSoftShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF_SOFT';\n\n\t} else if ( parameters.shadowMapType === VSMShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_VSM';\n\n\t}\n\n\treturn shadowMapTypeDefine;\n\n}\n\nfunction generateEnvMapTypeDefine( parameters ) {\n\n\tlet envMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\n\tif ( parameters.envMap ) {\n\n\t\tswitch ( parameters.envMapMode ) {\n\n\t\t\tcase CubeReflectionMapping:\n\t\t\tcase CubeRefractionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\t\t\t\tbreak;\n\n\t\t\tcase CubeUVReflectionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE_UV';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\treturn envMapTypeDefine;\n\n}\n\nfunction generateEnvMapModeDefine( parameters ) {\n\n\tlet envMapModeDefine = 'ENVMAP_MODE_REFLECTION';\n\n\tif ( parameters.envMap ) {\n\n\t\tswitch ( parameters.envMapMode ) {\n\n\t\t\tcase CubeRefractionMapping:\n\n\t\t\t\tenvMapModeDefine = 'ENVMAP_MODE_REFRACTION';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\treturn envMapModeDefine;\n\n}\n\nfunction generateEnvMapBlendingDefine( parameters ) {\n\n\tlet envMapBlendingDefine = 'ENVMAP_BLENDING_NONE';\n\n\tif ( parameters.envMap ) {\n\n\t\tswitch ( parameters.combine ) {\n\n\t\t\tcase MultiplyOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\n\t\t\t\tbreak;\n\n\t\t\tcase MixOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MIX';\n\t\t\t\tbreak;\n\n\t\t\tcase AddOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_ADD';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\treturn envMapBlendingDefine;\n\n}\n\nfunction generateCubeUVSize( parameters ) {\n\n\tconst imageHeight = parameters.envMapCubeUVHeight;\n\n\tif ( imageHeight === null ) return null;\n\n\tconst maxMip = Math.log2( imageHeight ) - 2;\n\n\tconst texelHeight = 1.0 / imageHeight;\n\n\tconst texelWidth = 1.0 / ( 3 * Math.max( Math.pow( 2, maxMip ), 7 * 16 ) );\n\n\treturn { texelWidth, texelHeight, maxMip };\n\n}\n\nfunction WebGLProgram( renderer, cacheKey, parameters, bindingStates ) {\n\n\t// TODO Send this event to Three.js DevTools\n\t// console.log( 'WebGLProgram', cacheKey );\n\n\tconst gl = renderer.getContext();\n\n\tconst defines = parameters.defines;\n\n\tlet vertexShader = parameters.vertexShader;\n\tlet fragmentShader = parameters.fragmentShader;\n\n\tconst shadowMapTypeDefine = generateShadowMapTypeDefine( parameters );\n\tconst envMapTypeDefine = generateEnvMapTypeDefine( parameters );\n\tconst envMapModeDefine = generateEnvMapModeDefine( parameters );\n\tconst envMapBlendingDefine = generateEnvMapBlendingDefine( parameters );\n\tconst envMapCubeUVSize = generateCubeUVSize( parameters );\n\n\tconst customVertexExtensions = generateVertexExtensions( parameters );\n\n\tconst customDefines = generateDefines( defines );\n\n\tconst program = gl.createProgram();\n\n\tlet prefixVertex, prefixFragment;\n\tlet versionString = parameters.glslVersion ? '#version ' + parameters.glslVersion + '\\n' : '';\n\n\tif ( parameters.isRawShaderMaterial ) {\n\n\t\tprefixVertex = [\n\n\t\t\t'#define SHADER_TYPE ' + parameters.shaderType,\n\t\t\t'#define SHADER_NAME ' + parameters.shaderName,\n\n\t\t\tcustomDefines\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tif ( prefixVertex.length > 0 ) {\n\n\t\t\tprefixVertex += '\\n';\n\n\t\t}\n\n\t\tprefixFragment = [\n\n\t\t\t'#define SHADER_TYPE ' + parameters.shaderType,\n\t\t\t'#define SHADER_NAME ' + parameters.shaderName,\n\n\t\t\tcustomDefines\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tif ( prefixFragment.length > 0 ) {\n\n\t\t\tprefixFragment += '\\n';\n\n\t\t}\n\n\t} else {\n\n\t\tprefixVertex = [\n\n\t\t\tgeneratePrecision( parameters ),\n\n\t\t\t'#define SHADER_TYPE ' + parameters.shaderType,\n\t\t\t'#define SHADER_NAME ' + parameters.shaderName,\n\n\t\t\tcustomDefines,\n\n\t\t\tparameters.extensionClipCullDistance ? '#define USE_CLIP_DISTANCE' : '',\n\t\t\tparameters.batching ? '#define USE_BATCHING' : '',\n\t\t\tparameters.batchingColor ? '#define USE_BATCHING_COLOR' : '',\n\t\t\tparameters.instancing ? '#define USE_INSTANCING' : '',\n\t\t\tparameters.instancingColor ? '#define USE_INSTANCING_COLOR' : '',\n\t\t\tparameters.instancingMorph ? '#define USE_INSTANCING_MORPH' : '',\n\n\t\t\tparameters.useFog && parameters.fog ? '#define USE_FOG' : '',\n\t\t\tparameters.useFog && parameters.fogExp2 ? '#define FOG_EXP2' : '',\n\n\t\t\tparameters.map ? '#define USE_MAP' : '',\n\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\n\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\n\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\n\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\n\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\n\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\n\t\t\tparameters.normalMapObjectSpace ? '#define USE_NORMALMAP_OBJECTSPACE' : '',\n\t\t\tparameters.normalMapTangentSpace ? '#define USE_NORMALMAP_TANGENTSPACE' : '',\n\t\t\tparameters.displacementMap ? '#define USE_DISPLACEMENTMAP' : '',\n\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n\n\t\t\tparameters.anisotropy ? '#define USE_ANISOTROPY' : '',\n\t\t\tparameters.anisotropyMap ? '#define USE_ANISOTROPYMAP' : '',\n\n\t\t\tparameters.clearcoatMap ? '#define USE_CLEARCOATMAP' : '',\n\t\t\tparameters.clearcoatRoughnessMap ? '#define USE_CLEARCOAT_ROUGHNESSMAP' : '',\n\t\t\tparameters.clearcoatNormalMap ? '#define USE_CLEARCOAT_NORMALMAP' : '',\n\n\t\t\tparameters.iridescenceMap ? '#define USE_IRIDESCENCEMAP' : '',\n\t\t\tparameters.iridescenceThicknessMap ? '#define USE_IRIDESCENCE_THICKNESSMAP' : '',\n\n\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\n\t\t\tparameters.specularColorMap ? '#define USE_SPECULAR_COLORMAP' : '',\n\t\t\tparameters.specularIntensityMap ? '#define USE_SPECULAR_INTENSITYMAP' : '',\n\n\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n\t\t\tparameters.alphaHash ? '#define USE_ALPHAHASH' : '',\n\n\t\t\tparameters.transmission ? '#define USE_TRANSMISSION' : '',\n\t\t\tparameters.transmissionMap ? '#define USE_TRANSMISSIONMAP' : '',\n\t\t\tparameters.thicknessMap ? '#define USE_THICKNESSMAP' : '',\n\n\t\t\tparameters.sheenColorMap ? '#define USE_SHEEN_COLORMAP' : '',\n\t\t\tparameters.sheenRoughnessMap ? '#define USE_SHEEN_ROUGHNESSMAP' : '',\n\n\t\t\t//\n\n\t\t\tparameters.mapUv ? '#define MAP_UV ' + parameters.mapUv : '',\n\t\t\tparameters.alphaMapUv ? '#define ALPHAMAP_UV ' + parameters.alphaMapUv : '',\n\t\t\tparameters.lightMapUv ? '#define LIGHTMAP_UV ' + parameters.lightMapUv : '',\n\t\t\tparameters.aoMapUv ? '#define AOMAP_UV ' + parameters.aoMapUv : '',\n\t\t\tparameters.emissiveMapUv ? '#define EMISSIVEMAP_UV ' + parameters.emissiveMapUv : '',\n\t\t\tparameters.bumpMapUv ? '#define BUMPMAP_UV ' + parameters.bumpMapUv : '',\n\t\t\tparameters.normalMapUv ? '#define NORMALMAP_UV ' + parameters.normalMapUv : '',\n\t\t\tparameters.displacementMapUv ? '#define DISPLACEMENTMAP_UV ' + parameters.displacementMapUv : '',\n\n\t\t\tparameters.metalnessMapUv ? '#define METALNESSMAP_UV ' + parameters.metalnessMapUv : '',\n\t\t\tparameters.roughnessMapUv ? '#define ROUGHNESSMAP_UV ' + parameters.roughnessMapUv : '',\n\n\t\t\tparameters.anisotropyMapUv ? '#define ANISOTROPYMAP_UV ' + parameters.anisotropyMapUv : '',\n\n\t\t\tparameters.clearcoatMapUv ? '#define CLEARCOATMAP_UV ' + parameters.clearcoatMapUv : '',\n\t\t\tparameters.clearcoatNormalMapUv ? '#define CLEARCOAT_NORMALMAP_UV ' + parameters.clearcoatNormalMapUv : '',\n\t\t\tparameters.clearcoatRoughnessMapUv ? '#define CLEARCOAT_ROUGHNESSMAP_UV ' + parameters.clearcoatRoughnessMapUv : '',\n\n\t\t\tparameters.iridescenceMapUv ? '#define IRIDESCENCEMAP_UV ' + parameters.iridescenceMapUv : '',\n\t\t\tparameters.iridescenceThicknessMapUv ? '#define IRIDESCENCE_THICKNESSMAP_UV ' + parameters.iridescenceThicknessMapUv : '',\n\n\t\t\tparameters.sheenColorMapUv ? '#define SHEEN_COLORMAP_UV ' + parameters.sheenColorMapUv : '',\n\t\t\tparameters.sheenRoughnessMapUv ? '#define SHEEN_ROUGHNESSMAP_UV ' + parameters.sheenRoughnessMapUv : '',\n\n\t\t\tparameters.specularMapUv ? '#define SPECULARMAP_UV ' + parameters.specularMapUv : '',\n\t\t\tparameters.specularColorMapUv ? '#define SPECULAR_COLORMAP_UV ' + parameters.specularColorMapUv : '',\n\t\t\tparameters.specularIntensityMapUv ? '#define SPECULAR_INTENSITYMAP_UV ' + parameters.specularIntensityMapUv : '',\n\n\t\t\tparameters.transmissionMapUv ? '#define TRANSMISSIONMAP_UV ' + parameters.transmissionMapUv : '',\n\t\t\tparameters.thicknessMapUv ? '#define THICKNESSMAP_UV ' + parameters.thicknessMapUv : '',\n\n\t\t\t//\n\n\t\t\tparameters.vertexTangents && parameters.flatShading === false ? '#define USE_TANGENT' : '',\n\t\t\tparameters.vertexColors ? '#define USE_COLOR' : '',\n\t\t\tparameters.vertexAlphas ? '#define USE_COLOR_ALPHA' : '',\n\t\t\tparameters.vertexUv1s ? '#define USE_UV1' : '',\n\t\t\tparameters.vertexUv2s ? '#define USE_UV2' : '',\n\t\t\tparameters.vertexUv3s ? '#define USE_UV3' : '',\n\n\t\t\tparameters.pointsUvs ? '#define USE_POINTS_UV' : '',\n\n\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\n\n\t\t\tparameters.skinning ? '#define USE_SKINNING' : '',\n\n\t\t\tparameters.morphTargets ? '#define USE_MORPHTARGETS' : '',\n\t\t\tparameters.morphNormals && parameters.flatShading === false ? '#define USE_MORPHNORMALS' : '',\n\t\t\t( parameters.morphColors ) ? '#define USE_MORPHCOLORS' : '',\n\t\t\t( parameters.morphTargetsCount > 0 ) ? '#define MORPHTARGETS_TEXTURE_STRIDE ' + parameters.morphTextureStride : '',\n\t\t\t( parameters.morphTargetsCount > 0 ) ? '#define MORPHTARGETS_COUNT ' + parameters.morphTargetsCount : '',\n\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\n\n\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n\n\t\t\tparameters.sizeAttenuation ? '#define USE_SIZEATTENUATION' : '',\n\n\t\t\tparameters.numLightProbes > 0 ? '#define USE_LIGHT_PROBES' : '',\n\n\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n\n\t\t\t'uniform mat4 modelMatrix;',\n\t\t\t'uniform mat4 modelViewMatrix;',\n\t\t\t'uniform mat4 projectionMatrix;',\n\t\t\t'uniform mat4 viewMatrix;',\n\t\t\t'uniform mat3 normalMatrix;',\n\t\t\t'uniform vec3 cameraPosition;',\n\t\t\t'uniform bool isOrthographic;',\n\n\t\t\t'#ifdef USE_INSTANCING',\n\n\t\t\t'\tattribute mat4 instanceMatrix;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_INSTANCING_COLOR',\n\n\t\t\t'\tattribute vec3 instanceColor;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_INSTANCING_MORPH',\n\n\t\t\t'\tuniform sampler2D morphTexture;',\n\n\t\t\t'#endif',\n\n\t\t\t'attribute vec3 position;',\n\t\t\t'attribute vec3 normal;',\n\t\t\t'attribute vec2 uv;',\n\n\t\t\t'#ifdef USE_UV1',\n\n\t\t\t'\tattribute vec2 uv1;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_UV2',\n\n\t\t\t'\tattribute vec2 uv2;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_UV3',\n\n\t\t\t'\tattribute vec2 uv3;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_TANGENT',\n\n\t\t\t'\tattribute vec4 tangent;',\n\n\t\t\t'#endif',\n\n\t\t\t'#if defined( USE_COLOR_ALPHA )',\n\n\t\t\t'\tattribute vec4 color;',\n\n\t\t\t'#elif defined( USE_COLOR )',\n\n\t\t\t'\tattribute vec3 color;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_SKINNING',\n\n\t\t\t'\tattribute vec4 skinIndex;',\n\t\t\t'\tattribute vec4 skinWeight;',\n\n\t\t\t'#endif',\n\n\t\t\t'\\n'\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tprefixFragment = [\n\n\t\t\tgeneratePrecision( parameters ),\n\n\t\t\t'#define SHADER_TYPE ' + parameters.shaderType,\n\t\t\t'#define SHADER_NAME ' + parameters.shaderName,\n\n\t\t\tcustomDefines,\n\n\t\t\tparameters.useFog && parameters.fog ? '#define USE_FOG' : '',\n\t\t\tparameters.useFog && parameters.fogExp2 ? '#define FOG_EXP2' : '',\n\n\t\t\tparameters.alphaToCoverage ? '#define ALPHA_TO_COVERAGE' : '',\n\t\t\tparameters.map ? '#define USE_MAP' : '',\n\t\t\tparameters.matcap ? '#define USE_MATCAP' : '',\n\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\n\t\t\tparameters.envMap ? '#define ' + envMapTypeDefine : '',\n\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\n\t\t\tparameters.envMap ? '#define ' + envMapBlendingDefine : '',\n\t\t\tenvMapCubeUVSize ? '#define CUBEUV_TEXEL_WIDTH ' + envMapCubeUVSize.texelWidth : '',\n\t\t\tenvMapCubeUVSize ? '#define CUBEUV_TEXEL_HEIGHT ' + envMapCubeUVSize.texelHeight : '',\n\t\t\tenvMapCubeUVSize ? '#define CUBEUV_MAX_MIP ' + envMapCubeUVSize.maxMip + '.0' : '',\n\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\n\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\n\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\n\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\n\t\t\tparameters.normalMapObjectSpace ? '#define USE_NORMALMAP_OBJECTSPACE' : '',\n\t\t\tparameters.normalMapTangentSpace ? '#define USE_NORMALMAP_TANGENTSPACE' : '',\n\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n\n\t\t\tparameters.anisotropy ? '#define USE_ANISOTROPY' : '',\n\t\t\tparameters.anisotropyMap ? '#define USE_ANISOTROPYMAP' : '',\n\n\t\t\tparameters.clearcoat ? '#define USE_CLEARCOAT' : '',\n\t\t\tparameters.clearcoatMap ? '#define USE_CLEARCOATMAP' : '',\n\t\t\tparameters.clearcoatRoughnessMap ? '#define USE_CLEARCOAT_ROUGHNESSMAP' : '',\n\t\t\tparameters.clearcoatNormalMap ? '#define USE_CLEARCOAT_NORMALMAP' : '',\n\n\t\t\tparameters.dispersion ? '#define USE_DISPERSION' : '',\n\n\t\t\tparameters.iridescence ? '#define USE_IRIDESCENCE' : '',\n\t\t\tparameters.iridescenceMap ? '#define USE_IRIDESCENCEMAP' : '',\n\t\t\tparameters.iridescenceThicknessMap ? '#define USE_IRIDESCENCE_THICKNESSMAP' : '',\n\n\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\n\t\t\tparameters.specularColorMap ? '#define USE_SPECULAR_COLORMAP' : '',\n\t\t\tparameters.specularIntensityMap ? '#define USE_SPECULAR_INTENSITYMAP' : '',\n\n\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n\n\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n\t\t\tparameters.alphaTest ? '#define USE_ALPHATEST' : '',\n\t\t\tparameters.alphaHash ? '#define USE_ALPHAHASH' : '',\n\n\t\t\tparameters.sheen ? '#define USE_SHEEN' : '',\n\t\t\tparameters.sheenColorMap ? '#define USE_SHEEN_COLORMAP' : '',\n\t\t\tparameters.sheenRoughnessMap ? '#define USE_SHEEN_ROUGHNESSMAP' : '',\n\n\t\t\tparameters.transmission ? '#define USE_TRANSMISSION' : '',\n\t\t\tparameters.transmissionMap ? '#define USE_TRANSMISSIONMAP' : '',\n\t\t\tparameters.thicknessMap ? '#define USE_THICKNESSMAP' : '',\n\n\t\t\tparameters.vertexTangents && parameters.flatShading === false ? '#define USE_TANGENT' : '',\n\t\t\tparameters.vertexColors || parameters.instancingColor || parameters.batchingColor ? '#define USE_COLOR' : '',\n\t\t\tparameters.vertexAlphas ? '#define USE_COLOR_ALPHA' : '',\n\t\t\tparameters.vertexUv1s ? '#define USE_UV1' : '',\n\t\t\tparameters.vertexUv2s ? '#define USE_UV2' : '',\n\t\t\tparameters.vertexUv3s ? '#define USE_UV3' : '',\n\n\t\t\tparameters.pointsUvs ? '#define USE_POINTS_UV' : '',\n\n\t\t\tparameters.gradientMap ? '#define USE_GRADIENTMAP' : '',\n\n\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\n\n\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\n\n\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n\n\t\t\tparameters.premultipliedAlpha ? '#define PREMULTIPLIED_ALPHA' : '',\n\n\t\t\tparameters.numLightProbes > 0 ? '#define USE_LIGHT_PROBES' : '',\n\n\t\t\tparameters.decodeVideoTexture ? '#define DECODE_VIDEO_TEXTURE' : '',\n\n\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n\n\t\t\t'uniform mat4 viewMatrix;',\n\t\t\t'uniform vec3 cameraPosition;',\n\t\t\t'uniform bool isOrthographic;',\n\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? '#define TONE_MAPPING' : '',\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? ShaderChunk[ 'tonemapping_pars_fragment' ] : '', // this code is required here because it is used by the toneMapping() function defined below\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? getToneMappingFunction( 'toneMapping', parameters.toneMapping ) : '',\n\n\t\t\tparameters.dithering ? '#define DITHERING' : '',\n\t\t\tparameters.opaque ? '#define OPAQUE' : '',\n\n\t\t\tShaderChunk[ 'colorspace_pars_fragment' ], // this code is required here because it is used by the various encoding/decoding function defined below\n\t\t\tgetTexelEncodingFunction( 'linearToOutputTexel', parameters.outputColorSpace ),\n\n\t\t\tparameters.useDepthPacking ? '#define DEPTH_PACKING ' + parameters.depthPacking : '',\n\n\t\t\t'\\n'\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t}\n\n\tvertexShader = resolveIncludes( vertexShader );\n\tvertexShader = replaceLightNums( vertexShader, parameters );\n\tvertexShader = replaceClippingPlaneNums( vertexShader, parameters );\n\n\tfragmentShader = resolveIncludes( fragmentShader );\n\tfragmentShader = replaceLightNums( fragmentShader, parameters );\n\tfragmentShader = replaceClippingPlaneNums( fragmentShader, parameters );\n\n\tvertexShader = unrollLoops( vertexShader );\n\tfragmentShader = unrollLoops( fragmentShader );\n\n\tif ( parameters.isRawShaderMaterial !== true ) {\n\n\t\t// GLSL 3.0 conversion for built-in materials and ShaderMaterial\n\n\t\tversionString = '#version 300 es\\n';\n\n\t\tprefixVertex = [\n\t\t\tcustomVertexExtensions,\n\t\t\t'#define attribute in',\n\t\t\t'#define varying out',\n\t\t\t'#define texture2D texture'\n\t\t].join( '\\n' ) + '\\n' + prefixVertex;\n\n\t\tprefixFragment = [\n\t\t\t'#define varying in',\n\t\t\t( parameters.glslVersion === GLSL3 ) ? '' : 'layout(location = 0) out highp vec4 pc_fragColor;',\n\t\t\t( parameters.glslVersion === GLSL3 ) ? '' : '#define gl_FragColor pc_fragColor',\n\t\t\t'#define gl_FragDepthEXT gl_FragDepth',\n\t\t\t'#define texture2D texture',\n\t\t\t'#define textureCube texture',\n\t\t\t'#define texture2DProj textureProj',\n\t\t\t'#define texture2DLodEXT textureLod',\n\t\t\t'#define texture2DProjLodEXT textureProjLod',\n\t\t\t'#define textureCubeLodEXT textureLod',\n\t\t\t'#define texture2DGradEXT textureGrad',\n\t\t\t'#define texture2DProjGradEXT textureProjGrad',\n\t\t\t'#define textureCubeGradEXT textureGrad'\n\t\t].join( '\\n' ) + '\\n' + prefixFragment;\n\n\t}\n\n\tconst vertexGlsl = versionString + prefixVertex + vertexShader;\n\tconst fragmentGlsl = versionString + prefixFragment + fragmentShader;\n\n\t// console.log( '*VERTEX*', vertexGlsl );\n\t// console.log( '*FRAGMENT*', fragmentGlsl );\n\n\tconst glVertexShader = WebGLShader( gl, gl.VERTEX_SHADER, vertexGlsl );\n\tconst glFragmentShader = WebGLShader( gl, gl.FRAGMENT_SHADER, fragmentGlsl );\n\n\tgl.attachShader( program, glVertexShader );\n\tgl.attachShader( program, glFragmentShader );\n\n\t// Force a particular attribute to index 0.\n\n\tif ( parameters.index0AttributeName !== undefined ) {\n\n\t\tgl.bindAttribLocation( program, 0, parameters.index0AttributeName );\n\n\t} else if ( parameters.morphTargets === true ) {\n\n\t\t// programs with morphTargets displace position out of attribute 0\n\t\tgl.bindAttribLocation( program, 0, 'position' );\n\n\t}\n\n\tgl.linkProgram( program );\n\n\tfunction onFirstUse( self ) {\n\n\t\t// check for link errors\n\t\tif ( renderer.debug.checkShaderErrors ) {\n\n\t\t\tconst programLog = gl.getProgramInfoLog( program ).trim();\n\t\t\tconst vertexLog = gl.getShaderInfoLog( glVertexShader ).trim();\n\t\t\tconst fragmentLog = gl.getShaderInfoLog( glFragmentShader ).trim();\n\n\t\t\tlet runnable = true;\n\t\t\tlet haveDiagnostics = true;\n\n\t\t\tif ( gl.getProgramParameter( program, gl.LINK_STATUS ) === false ) {\n\n\t\t\t\trunnable = false;\n\n\t\t\t\tif ( typeof renderer.debug.onShaderError === 'function' ) {\n\n\t\t\t\t\trenderer.debug.onShaderError( gl, program, glVertexShader, glFragmentShader );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// default error reporting\n\n\t\t\t\t\tconst vertexErrors = getShaderErrors( gl, glVertexShader, 'vertex' );\n\t\t\t\t\tconst fragmentErrors = getShaderErrors( gl, glFragmentShader, 'fragment' );\n\n\t\t\t\t\tconsole.error(\n\t\t\t\t\t\t'THREE.WebGLProgram: Shader Error ' + gl.getError() + ' - ' +\n\t\t\t\t\t\t'VALIDATE_STATUS ' + gl.getProgramParameter( program, gl.VALIDATE_STATUS ) + '\\n\\n' +\n\t\t\t\t\t\t'Material Name: ' + self.name + '\\n' +\n\t\t\t\t\t\t'Material Type: ' + self.type + '\\n\\n' +\n\t\t\t\t\t\t'Program Info Log: ' + programLog + '\\n' +\n\t\t\t\t\t\tvertexErrors + '\\n' +\n\t\t\t\t\t\tfragmentErrors\n\t\t\t\t\t);\n\n\t\t\t\t}\n\n\t\t\t} else if ( programLog !== '' ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLProgram: Program Info Log:', programLog );\n\n\t\t\t} else if ( vertexLog === '' || fragmentLog === '' ) {\n\n\t\t\t\thaveDiagnostics = false;\n\n\t\t\t}\n\n\t\t\tif ( haveDiagnostics ) {\n\n\t\t\t\tself.diagnostics = {\n\n\t\t\t\t\trunnable: runnable,\n\n\t\t\t\t\tprogramLog: programLog,\n\n\t\t\t\t\tvertexShader: {\n\n\t\t\t\t\t\tlog: vertexLog,\n\t\t\t\t\t\tprefix: prefixVertex\n\n\t\t\t\t\t},\n\n\t\t\t\t\tfragmentShader: {\n\n\t\t\t\t\t\tlog: fragmentLog,\n\t\t\t\t\t\tprefix: prefixFragment\n\n\t\t\t\t\t}\n\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Clean up\n\n\t\t// Crashes in iOS9 and iOS10. #18402\n\t\t// gl.detachShader( program, glVertexShader );\n\t\t// gl.detachShader( program, glFragmentShader );\n\n\t\tgl.deleteShader( glVertexShader );\n\t\tgl.deleteShader( glFragmentShader );\n\n\t\tcachedUniforms = new WebGLUniforms( gl, program );\n\t\tcachedAttributes = fetchAttributeLocations( gl, program );\n\n\t}\n\n\t// set up caching for uniform locations\n\n\tlet cachedUniforms;\n\n\tthis.getUniforms = function () {\n\n\t\tif ( cachedUniforms === undefined ) {\n\n\t\t\t// Populates cachedUniforms and cachedAttributes\n\t\t\tonFirstUse( this );\n\n\t\t}\n\n\t\treturn cachedUniforms;\n\n\t};\n\n\t// set up caching for attribute locations\n\n\tlet cachedAttributes;\n\n\tthis.getAttributes = function () {\n\n\t\tif ( cachedAttributes === undefined ) {\n\n\t\t\t// Populates cachedAttributes and cachedUniforms\n\t\t\tonFirstUse( this );\n\n\t\t}\n\n\t\treturn cachedAttributes;\n\n\t};\n\n\t// indicate when the program is ready to be used. if the KHR_parallel_shader_compile extension isn't supported,\n\t// flag the program as ready immediately. It may cause a stall when it's first used.\n\n\tlet programReady = ( parameters.rendererExtensionParallelShaderCompile === false );\n\n\tthis.isReady = function () {\n\n\t\tif ( programReady === false ) {\n\n\t\t\tprogramReady = gl.getProgramParameter( program, COMPLETION_STATUS_KHR );\n\n\t\t}\n\n\t\treturn programReady;\n\n\t};\n\n\t// free resource\n\n\tthis.destroy = function () {\n\n\t\tbindingStates.releaseStatesOfProgram( this );\n\n\t\tgl.deleteProgram( program );\n\t\tthis.program = undefined;\n\n\t};\n\n\t//\n\n\tthis.type = parameters.shaderType;\n\tthis.name = parameters.shaderName;\n\tthis.id = programIdCount ++;\n\tthis.cacheKey = cacheKey;\n\tthis.usedTimes = 1;\n\tthis.program = program;\n\tthis.vertexShader = glVertexShader;\n\tthis.fragmentShader = glFragmentShader;\n\n\treturn this;\n\n}\n\nlet _id$1 = 0;\n\nclass WebGLShaderCache {\n\n\tconstructor() {\n\n\t\tthis.shaderCache = new Map();\n\t\tthis.materialCache = new Map();\n\n\t}\n\n\tupdate( material ) {\n\n\t\tconst vertexShader = material.vertexShader;\n\t\tconst fragmentShader = material.fragmentShader;\n\n\t\tconst vertexShaderStage = this._getShaderStage( vertexShader );\n\t\tconst fragmentShaderStage = this._getShaderStage( fragmentShader );\n\n\t\tconst materialShaders = this._getShaderCacheForMaterial( material );\n\n\t\tif ( materialShaders.has( vertexShaderStage ) === false ) {\n\n\t\t\tmaterialShaders.add( vertexShaderStage );\n\t\t\tvertexShaderStage.usedTimes ++;\n\n\t\t}\n\n\t\tif ( materialShaders.has( fragmentShaderStage ) === false ) {\n\n\t\t\tmaterialShaders.add( fragmentShaderStage );\n\t\t\tfragmentShaderStage.usedTimes ++;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tremove( material ) {\n\n\t\tconst materialShaders = this.materialCache.get( material );\n\n\t\tfor ( const shaderStage of materialShaders ) {\n\n\t\t\tshaderStage.usedTimes --;\n\n\t\t\tif ( shaderStage.usedTimes === 0 ) this.shaderCache.delete( shaderStage.code );\n\n\t\t}\n\n\t\tthis.materialCache.delete( material );\n\n\t\treturn this;\n\n\t}\n\n\tgetVertexShaderID( material ) {\n\n\t\treturn this._getShaderStage( material.vertexShader ).id;\n\n\t}\n\n\tgetFragmentShaderID( material ) {\n\n\t\treturn this._getShaderStage( material.fragmentShader ).id;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.shaderCache.clear();\n\t\tthis.materialCache.clear();\n\n\t}\n\n\t_getShaderCacheForMaterial( material ) {\n\n\t\tconst cache = this.materialCache;\n\t\tlet set = cache.get( material );\n\n\t\tif ( set === undefined ) {\n\n\t\t\tset = new Set();\n\t\t\tcache.set( material, set );\n\n\t\t}\n\n\t\treturn set;\n\n\t}\n\n\t_getShaderStage( code ) {\n\n\t\tconst cache = this.shaderCache;\n\t\tlet stage = cache.get( code );\n\n\t\tif ( stage === undefined ) {\n\n\t\t\tstage = new WebGLShaderStage( code );\n\t\t\tcache.set( code, stage );\n\n\t\t}\n\n\t\treturn stage;\n\n\t}\n\n}\n\nclass WebGLShaderStage {\n\n\tconstructor( code ) {\n\n\t\tthis.id = _id$1 ++;\n\n\t\tthis.code = code;\n\t\tthis.usedTimes = 0;\n\n\t}\n\n}\n\nfunction WebGLPrograms( renderer, cubemaps, cubeuvmaps, extensions, capabilities, bindingStates, clipping ) {\n\n\tconst _programLayers = new Layers();\n\tconst _customShaders = new WebGLShaderCache();\n\tconst _activeChannels = new Set();\n\tconst programs = [];\n\n\tconst logarithmicDepthBuffer = capabilities.logarithmicDepthBuffer;\n\tconst SUPPORTS_VERTEX_TEXTURES = capabilities.vertexTextures;\n\n\tlet precision = capabilities.precision;\n\n\tconst shaderIDs = {\n\t\tMeshDepthMaterial: 'depth',\n\t\tMeshDistanceMaterial: 'distanceRGBA',\n\t\tMeshNormalMaterial: 'normal',\n\t\tMeshBasicMaterial: 'basic',\n\t\tMeshLambertMaterial: 'lambert',\n\t\tMeshPhongMaterial: 'phong',\n\t\tMeshToonMaterial: 'toon',\n\t\tMeshStandardMaterial: 'physical',\n\t\tMeshPhysicalMaterial: 'physical',\n\t\tMeshMatcapMaterial: 'matcap',\n\t\tLineBasicMaterial: 'basic',\n\t\tLineDashedMaterial: 'dashed',\n\t\tPointsMaterial: 'points',\n\t\tShadowMaterial: 'shadow',\n\t\tSpriteMaterial: 'sprite'\n\t};\n\n\tfunction getChannel( value ) {\n\n\t\t_activeChannels.add( value );\n\n\t\tif ( value === 0 ) return 'uv';\n\n\t\treturn `uv${ value }`;\n\n\t}\n\n\tfunction getParameters( material, lights, shadows, scene, object ) {\n\n\t\tconst fog = scene.fog;\n\t\tconst geometry = object.geometry;\n\t\tconst environment = material.isMeshStandardMaterial ? scene.environment : null;\n\n\t\tconst envMap = ( material.isMeshStandardMaterial ? cubeuvmaps : cubemaps ).get( material.envMap || environment );\n\t\tconst envMapCubeUVHeight = ( !! envMap ) && ( envMap.mapping === CubeUVReflectionMapping ) ? envMap.image.height : null;\n\n\t\tconst shaderID = shaderIDs[ material.type ];\n\n\t\t// heuristics to create shader parameters according to lights in the scene\n\t\t// (not to blow over maxLights budget)\n\n\t\tif ( material.precision !== null ) {\n\n\t\t\tprecision = capabilities.getMaxPrecision( material.precision );\n\n\t\t\tif ( precision !== material.precision ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLProgram.getParameters:', material.precision, 'not supported, using', precision, 'instead.' );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tconst morphAttribute = geometry.morphAttributes.position || geometry.morphAttributes.normal || geometry.morphAttributes.color;\n\t\tconst morphTargetsCount = ( morphAttribute !== undefined ) ? morphAttribute.length : 0;\n\n\t\tlet morphTextureStride = 0;\n\n\t\tif ( geometry.morphAttributes.position !== undefined ) morphTextureStride = 1;\n\t\tif ( geometry.morphAttributes.normal !== undefined ) morphTextureStride = 2;\n\t\tif ( geometry.morphAttributes.color !== undefined ) morphTextureStride = 3;\n\n\t\t//\n\n\t\tlet vertexShader, fragmentShader;\n\t\tlet customVertexShaderID, customFragmentShaderID;\n\n\t\tif ( shaderID ) {\n\n\t\t\tconst shader = ShaderLib[ shaderID ];\n\n\t\t\tvertexShader = shader.vertexShader;\n\t\t\tfragmentShader = shader.fragmentShader;\n\n\t\t} else {\n\n\t\t\tvertexShader = material.vertexShader;\n\t\t\tfragmentShader = material.fragmentShader;\n\n\t\t\t_customShaders.update( material );\n\n\t\t\tcustomVertexShaderID = _customShaders.getVertexShaderID( material );\n\t\t\tcustomFragmentShaderID = _customShaders.getFragmentShaderID( material );\n\n\t\t}\n\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\n\t\tconst IS_INSTANCEDMESH = object.isInstancedMesh === true;\n\t\tconst IS_BATCHEDMESH = object.isBatchedMesh === true;\n\n\t\tconst HAS_MAP = !! material.map;\n\t\tconst HAS_MATCAP = !! material.matcap;\n\t\tconst HAS_ENVMAP = !! envMap;\n\t\tconst HAS_AOMAP = !! material.aoMap;\n\t\tconst HAS_LIGHTMAP = !! material.lightMap;\n\t\tconst HAS_BUMPMAP = !! material.bumpMap;\n\t\tconst HAS_NORMALMAP = !! material.normalMap;\n\t\tconst HAS_DISPLACEMENTMAP = !! material.displacementMap;\n\t\tconst HAS_EMISSIVEMAP = !! material.emissiveMap;\n\n\t\tconst HAS_METALNESSMAP = !! material.metalnessMap;\n\t\tconst HAS_ROUGHNESSMAP = !! material.roughnessMap;\n\n\t\tconst HAS_ANISOTROPY = material.anisotropy > 0;\n\t\tconst HAS_CLEARCOAT = material.clearcoat > 0;\n\t\tconst HAS_DISPERSION = material.dispersion > 0;\n\t\tconst HAS_IRIDESCENCE = material.iridescence > 0;\n\t\tconst HAS_SHEEN = material.sheen > 0;\n\t\tconst HAS_TRANSMISSION = material.transmission > 0;\n\n\t\tconst HAS_ANISOTROPYMAP = HAS_ANISOTROPY && !! material.anisotropyMap;\n\n\t\tconst HAS_CLEARCOATMAP = HAS_CLEARCOAT && !! material.clearcoatMap;\n\t\tconst HAS_CLEARCOAT_NORMALMAP = HAS_CLEARCOAT && !! material.clearcoatNormalMap;\n\t\tconst HAS_CLEARCOAT_ROUGHNESSMAP = HAS_CLEARCOAT && !! material.clearcoatRoughnessMap;\n\n\t\tconst HAS_IRIDESCENCEMAP = HAS_IRIDESCENCE && !! material.iridescenceMap;\n\t\tconst HAS_IRIDESCENCE_THICKNESSMAP = HAS_IRIDESCENCE && !! material.iridescenceThicknessMap;\n\n\t\tconst HAS_SHEEN_COLORMAP = HAS_SHEEN && !! material.sheenColorMap;\n\t\tconst HAS_SHEEN_ROUGHNESSMAP = HAS_SHEEN && !! material.sheenRoughnessMap;\n\n\t\tconst HAS_SPECULARMAP = !! material.specularMap;\n\t\tconst HAS_SPECULAR_COLORMAP = !! material.specularColorMap;\n\t\tconst HAS_SPECULAR_INTENSITYMAP = !! material.specularIntensityMap;\n\n\t\tconst HAS_TRANSMISSIONMAP = HAS_TRANSMISSION && !! material.transmissionMap;\n\t\tconst HAS_THICKNESSMAP = HAS_TRANSMISSION && !! material.thicknessMap;\n\n\t\tconst HAS_GRADIENTMAP = !! material.gradientMap;\n\n\t\tconst HAS_ALPHAMAP = !! material.alphaMap;\n\n\t\tconst HAS_ALPHATEST = material.alphaTest > 0;\n\n\t\tconst HAS_ALPHAHASH = !! material.alphaHash;\n\n\t\tconst HAS_EXTENSIONS = !! material.extensions;\n\n\t\tlet toneMapping = NoToneMapping;\n\n\t\tif ( material.toneMapped ) {\n\n\t\t\tif ( currentRenderTarget === null || currentRenderTarget.isXRRenderTarget === true ) {\n\n\t\t\t\ttoneMapping = renderer.toneMapping;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst parameters = {\n\n\t\t\tshaderID: shaderID,\n\t\t\tshaderType: material.type,\n\t\t\tshaderName: material.name,\n\n\t\t\tvertexShader: vertexShader,\n\t\t\tfragmentShader: fragmentShader,\n\t\t\tdefines: material.defines,\n\n\t\t\tcustomVertexShaderID: customVertexShaderID,\n\t\t\tcustomFragmentShaderID: customFragmentShaderID,\n\n\t\t\tisRawShaderMaterial: material.isRawShaderMaterial === true,\n\t\t\tglslVersion: material.glslVersion,\n\n\t\t\tprecision: precision,\n\n\t\t\tbatching: IS_BATCHEDMESH,\n\t\t\tbatchingColor: IS_BATCHEDMESH && object._colorsTexture !== null,\n\t\t\tinstancing: IS_INSTANCEDMESH,\n\t\t\tinstancingColor: IS_INSTANCEDMESH && object.instanceColor !== null,\n\t\t\tinstancingMorph: IS_INSTANCEDMESH && object.morphTexture !== null,\n\n\t\t\tsupportsVertexTextures: SUPPORTS_VERTEX_TEXTURES,\n\t\t\toutputColorSpace: ( currentRenderTarget === null ) ? renderer.outputColorSpace : ( currentRenderTarget.isXRRenderTarget === true ? currentRenderTarget.texture.colorSpace : LinearSRGBColorSpace ),\n\t\t\talphaToCoverage: !! material.alphaToCoverage,\n\n\t\t\tmap: HAS_MAP,\n\t\t\tmatcap: HAS_MATCAP,\n\t\t\tenvMap: HAS_ENVMAP,\n\t\t\tenvMapMode: HAS_ENVMAP && envMap.mapping,\n\t\t\tenvMapCubeUVHeight: envMapCubeUVHeight,\n\t\t\taoMap: HAS_AOMAP,\n\t\t\tlightMap: HAS_LIGHTMAP,\n\t\t\tbumpMap: HAS_BUMPMAP,\n\t\t\tnormalMap: HAS_NORMALMAP,\n\t\t\tdisplacementMap: SUPPORTS_VERTEX_TEXTURES && HAS_DISPLACEMENTMAP,\n\t\t\temissiveMap: HAS_EMISSIVEMAP,\n\n\t\t\tnormalMapObjectSpace: HAS_NORMALMAP && material.normalMapType === ObjectSpaceNormalMap,\n\t\t\tnormalMapTangentSpace: HAS_NORMALMAP && material.normalMapType === TangentSpaceNormalMap,\n\n\t\t\tmetalnessMap: HAS_METALNESSMAP,\n\t\t\troughnessMap: HAS_ROUGHNESSMAP,\n\n\t\t\tanisotropy: HAS_ANISOTROPY,\n\t\t\tanisotropyMap: HAS_ANISOTROPYMAP,\n\n\t\t\tclearcoat: HAS_CLEARCOAT,\n\t\t\tclearcoatMap: HAS_CLEARCOATMAP,\n\t\t\tclearcoatNormalMap: HAS_CLEARCOAT_NORMALMAP,\n\t\t\tclearcoatRoughnessMap: HAS_CLEARCOAT_ROUGHNESSMAP,\n\n\t\t\tdispersion: HAS_DISPERSION,\n\n\t\t\tiridescence: HAS_IRIDESCENCE,\n\t\t\tiridescenceMap: HAS_IRIDESCENCEMAP,\n\t\t\tiridescenceThicknessMap: HAS_IRIDESCENCE_THICKNESSMAP,\n\n\t\t\tsheen: HAS_SHEEN,\n\t\t\tsheenColorMap: HAS_SHEEN_COLORMAP,\n\t\t\tsheenRoughnessMap: HAS_SHEEN_ROUGHNESSMAP,\n\n\t\t\tspecularMap: HAS_SPECULARMAP,\n\t\t\tspecularColorMap: HAS_SPECULAR_COLORMAP,\n\t\t\tspecularIntensityMap: HAS_SPECULAR_INTENSITYMAP,\n\n\t\t\ttransmission: HAS_TRANSMISSION,\n\t\t\ttransmissionMap: HAS_TRANSMISSIONMAP,\n\t\t\tthicknessMap: HAS_THICKNESSMAP,\n\n\t\t\tgradientMap: HAS_GRADIENTMAP,\n\n\t\t\topaque: material.transparent === false && material.blending === NormalBlending && material.alphaToCoverage === false,\n\n\t\t\talphaMap: HAS_ALPHAMAP,\n\t\t\talphaTest: HAS_ALPHATEST,\n\t\t\talphaHash: HAS_ALPHAHASH,\n\n\t\t\tcombine: material.combine,\n\n\t\t\t//\n\n\t\t\tmapUv: HAS_MAP && getChannel( material.map.channel ),\n\t\t\taoMapUv: HAS_AOMAP && getChannel( material.aoMap.channel ),\n\t\t\tlightMapUv: HAS_LIGHTMAP && getChannel( material.lightMap.channel ),\n\t\t\tbumpMapUv: HAS_BUMPMAP && getChannel( material.bumpMap.channel ),\n\t\t\tnormalMapUv: HAS_NORMALMAP && getChannel( material.normalMap.channel ),\n\t\t\tdisplacementMapUv: HAS_DISPLACEMENTMAP && getChannel( material.displacementMap.channel ),\n\t\t\temissiveMapUv: HAS_EMISSIVEMAP && getChannel( material.emissiveMap.channel ),\n\n\t\t\tmetalnessMapUv: HAS_METALNESSMAP && getChannel( material.metalnessMap.channel ),\n\t\t\troughnessMapUv: HAS_ROUGHNESSMAP && getChannel( material.roughnessMap.channel ),\n\n\t\t\tanisotropyMapUv: HAS_ANISOTROPYMAP && getChannel( material.anisotropyMap.channel ),\n\n\t\t\tclearcoatMapUv: HAS_CLEARCOATMAP && getChannel( material.clearcoatMap.channel ),\n\t\t\tclearcoatNormalMapUv: HAS_CLEARCOAT_NORMALMAP && getChannel( material.clearcoatNormalMap.channel ),\n\t\t\tclearcoatRoughnessMapUv: HAS_CLEARCOAT_ROUGHNESSMAP && getChannel( material.clearcoatRoughnessMap.channel ),\n\n\t\t\tiridescenceMapUv: HAS_IRIDESCENCEMAP && getChannel( material.iridescenceMap.channel ),\n\t\t\tiridescenceThicknessMapUv: HAS_IRIDESCENCE_THICKNESSMAP && getChannel( material.iridescenceThicknessMap.channel ),\n\n\t\t\tsheenColorMapUv: HAS_SHEEN_COLORMAP && getChannel( material.sheenColorMap.channel ),\n\t\t\tsheenRoughnessMapUv: HAS_SHEEN_ROUGHNESSMAP && getChannel( material.sheenRoughnessMap.channel ),\n\n\t\t\tspecularMapUv: HAS_SPECULARMAP && getChannel( material.specularMap.channel ),\n\t\t\tspecularColorMapUv: HAS_SPECULAR_COLORMAP && getChannel( material.specularColorMap.channel ),\n\t\t\tspecularIntensityMapUv: HAS_SPECULAR_INTENSITYMAP && getChannel( material.specularIntensityMap.channel ),\n\n\t\t\ttransmissionMapUv: HAS_TRANSMISSIONMAP && getChannel( material.transmissionMap.channel ),\n\t\t\tthicknessMapUv: HAS_THICKNESSMAP && getChannel( material.thicknessMap.channel ),\n\n\t\t\talphaMapUv: HAS_ALPHAMAP && getChannel( material.alphaMap.channel ),\n\n\t\t\t//\n\n\t\t\tvertexTangents: !! geometry.attributes.tangent && ( HAS_NORMALMAP || HAS_ANISOTROPY ),\n\t\t\tvertexColors: material.vertexColors,\n\t\t\tvertexAlphas: material.vertexColors === true && !! geometry.attributes.color && geometry.attributes.color.itemSize === 4,\n\n\t\t\tpointsUvs: object.isPoints === true && !! geometry.attributes.uv && ( HAS_MAP || HAS_ALPHAMAP ),\n\n\t\t\tfog: !! fog,\n\t\t\tuseFog: material.fog === true,\n\t\t\tfogExp2: ( !! fog && fog.isFogExp2 ),\n\n\t\t\tflatShading: material.flatShading === true,\n\n\t\t\tsizeAttenuation: material.sizeAttenuation === true,\n\t\t\tlogarithmicDepthBuffer: logarithmicDepthBuffer,\n\n\t\t\tskinning: object.isSkinnedMesh === true,\n\n\t\t\tmorphTargets: geometry.morphAttributes.position !== undefined,\n\t\t\tmorphNormals: geometry.morphAttributes.normal !== undefined,\n\t\t\tmorphColors: geometry.morphAttributes.color !== undefined,\n\t\t\tmorphTargetsCount: morphTargetsCount,\n\t\t\tmorphTextureStride: morphTextureStride,\n\n\t\t\tnumDirLights: lights.directional.length,\n\t\t\tnumPointLights: lights.point.length,\n\t\t\tnumSpotLights: lights.spot.length,\n\t\t\tnumSpotLightMaps: lights.spotLightMap.length,\n\t\t\tnumRectAreaLights: lights.rectArea.length,\n\t\t\tnumHemiLights: lights.hemi.length,\n\n\t\t\tnumDirLightShadows: lights.directionalShadowMap.length,\n\t\t\tnumPointLightShadows: lights.pointShadowMap.length,\n\t\t\tnumSpotLightShadows: lights.spotShadowMap.length,\n\t\t\tnumSpotLightShadowsWithMaps: lights.numSpotLightShadowsWithMaps,\n\n\t\t\tnumLightProbes: lights.numLightProbes,\n\n\t\t\tnumClippingPlanes: clipping.numPlanes,\n\t\t\tnumClipIntersection: clipping.numIntersection,\n\n\t\t\tdithering: material.dithering,\n\n\t\t\tshadowMapEnabled: renderer.shadowMap.enabled && shadows.length > 0,\n\t\t\tshadowMapType: renderer.shadowMap.type,\n\n\t\t\ttoneMapping: toneMapping,\n\n\t\t\tdecodeVideoTexture: HAS_MAP && ( material.map.isVideoTexture === true ) && ( ColorManagement.getTransfer( material.map.colorSpace ) === SRGBTransfer ),\n\n\t\t\tpremultipliedAlpha: material.premultipliedAlpha,\n\n\t\t\tdoubleSided: material.side === DoubleSide,\n\t\t\tflipSided: material.side === BackSide,\n\n\t\t\tuseDepthPacking: material.depthPacking >= 0,\n\t\t\tdepthPacking: material.depthPacking || 0,\n\n\t\t\tindex0AttributeName: material.index0AttributeName,\n\n\t\t\textensionClipCullDistance: HAS_EXTENSIONS && material.extensions.clipCullDistance === true && extensions.has( 'WEBGL_clip_cull_distance' ),\n\t\t\textensionMultiDraw: ( HAS_EXTENSIONS && material.extensions.multiDraw === true || IS_BATCHEDMESH ) && extensions.has( 'WEBGL_multi_draw' ),\n\n\t\t\trendererExtensionParallelShaderCompile: extensions.has( 'KHR_parallel_shader_compile' ),\n\n\t\t\tcustomProgramCacheKey: material.customProgramCacheKey()\n\n\t\t};\n\n\t\t// the usage of getChannel() determines the active texture channels for this shader\n\n\t\tparameters.vertexUv1s = _activeChannels.has( 1 );\n\t\tparameters.vertexUv2s = _activeChannels.has( 2 );\n\t\tparameters.vertexUv3s = _activeChannels.has( 3 );\n\n\t\t_activeChannels.clear();\n\n\t\treturn parameters;\n\n\t}\n\n\tfunction getProgramCacheKey( parameters ) {\n\n\t\tconst array = [];\n\n\t\tif ( parameters.shaderID ) {\n\n\t\t\tarray.push( parameters.shaderID );\n\n\t\t} else {\n\n\t\t\tarray.push( parameters.customVertexShaderID );\n\t\t\tarray.push( parameters.customFragmentShaderID );\n\n\t\t}\n\n\t\tif ( parameters.defines !== undefined ) {\n\n\t\t\tfor ( const name in parameters.defines ) {\n\n\t\t\t\tarray.push( name );\n\t\t\t\tarray.push( parameters.defines[ name ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( parameters.isRawShaderMaterial === false ) {\n\n\t\t\tgetProgramCacheKeyParameters( array, parameters );\n\t\t\tgetProgramCacheKeyBooleans( array, parameters );\n\t\t\tarray.push( renderer.outputColorSpace );\n\n\t\t}\n\n\t\tarray.push( parameters.customProgramCacheKey );\n\n\t\treturn array.join();\n\n\t}\n\n\tfunction getProgramCacheKeyParameters( array, parameters ) {\n\n\t\tarray.push( parameters.precision );\n\t\tarray.push( parameters.outputColorSpace );\n\t\tarray.push( parameters.envMapMode );\n\t\tarray.push( parameters.envMapCubeUVHeight );\n\t\tarray.push( parameters.mapUv );\n\t\tarray.push( parameters.alphaMapUv );\n\t\tarray.push( parameters.lightMapUv );\n\t\tarray.push( parameters.aoMapUv );\n\t\tarray.push( parameters.bumpMapUv );\n\t\tarray.push( parameters.normalMapUv );\n\t\tarray.push( parameters.displacementMapUv );\n\t\tarray.push( parameters.emissiveMapUv );\n\t\tarray.push( parameters.metalnessMapUv );\n\t\tarray.push( parameters.roughnessMapUv );\n\t\tarray.push( parameters.anisotropyMapUv );\n\t\tarray.push( parameters.clearcoatMapUv );\n\t\tarray.push( parameters.clearcoatNormalMapUv );\n\t\tarray.push( parameters.clearcoatRoughnessMapUv );\n\t\tarray.push( parameters.iridescenceMapUv );\n\t\tarray.push( parameters.iridescenceThicknessMapUv );\n\t\tarray.push( parameters.sheenColorMapUv );\n\t\tarray.push( parameters.sheenRoughnessMapUv );\n\t\tarray.push( parameters.specularMapUv );\n\t\tarray.push( parameters.specularColorMapUv );\n\t\tarray.push( parameters.specularIntensityMapUv );\n\t\tarray.push( parameters.transmissionMapUv );\n\t\tarray.push( parameters.thicknessMapUv );\n\t\tarray.push( parameters.combine );\n\t\tarray.push( parameters.fogExp2 );\n\t\tarray.push( parameters.sizeAttenuation );\n\t\tarray.push( parameters.morphTargetsCount );\n\t\tarray.push( parameters.morphAttributeCount );\n\t\tarray.push( parameters.numDirLights );\n\t\tarray.push( parameters.numPointLights );\n\t\tarray.push( parameters.numSpotLights );\n\t\tarray.push( parameters.numSpotLightMaps );\n\t\tarray.push( parameters.numHemiLights );\n\t\tarray.push( parameters.numRectAreaLights );\n\t\tarray.push( parameters.numDirLightShadows );\n\t\tarray.push( parameters.numPointLightShadows );\n\t\tarray.push( parameters.numSpotLightShadows );\n\t\tarray.push( parameters.numSpotLightShadowsWithMaps );\n\t\tarray.push( parameters.numLightProbes );\n\t\tarray.push( parameters.shadowMapType );\n\t\tarray.push( parameters.toneMapping );\n\t\tarray.push( parameters.numClippingPlanes );\n\t\tarray.push( parameters.numClipIntersection );\n\t\tarray.push( parameters.depthPacking );\n\n\t}\n\n\tfunction getProgramCacheKeyBooleans( array, parameters ) {\n\n\t\t_programLayers.disableAll();\n\n\t\tif ( parameters.supportsVertexTextures )\n\t\t\t_programLayers.enable( 0 );\n\t\tif ( parameters.instancing )\n\t\t\t_programLayers.enable( 1 );\n\t\tif ( parameters.instancingColor )\n\t\t\t_programLayers.enable( 2 );\n\t\tif ( parameters.instancingMorph )\n\t\t\t_programLayers.enable( 3 );\n\t\tif ( parameters.matcap )\n\t\t\t_programLayers.enable( 4 );\n\t\tif ( parameters.envMap )\n\t\t\t_programLayers.enable( 5 );\n\t\tif ( parameters.normalMapObjectSpace )\n\t\t\t_programLayers.enable( 6 );\n\t\tif ( parameters.normalMapTangentSpace )\n\t\t\t_programLayers.enable( 7 );\n\t\tif ( parameters.clearcoat )\n\t\t\t_programLayers.enable( 8 );\n\t\tif ( parameters.iridescence )\n\t\t\t_programLayers.enable( 9 );\n\t\tif ( parameters.alphaTest )\n\t\t\t_programLayers.enable( 10 );\n\t\tif ( parameters.vertexColors )\n\t\t\t_programLayers.enable( 11 );\n\t\tif ( parameters.vertexAlphas )\n\t\t\t_programLayers.enable( 12 );\n\t\tif ( parameters.vertexUv1s )\n\t\t\t_programLayers.enable( 13 );\n\t\tif ( parameters.vertexUv2s )\n\t\t\t_programLayers.enable( 14 );\n\t\tif ( parameters.vertexUv3s )\n\t\t\t_programLayers.enable( 15 );\n\t\tif ( parameters.vertexTangents )\n\t\t\t_programLayers.enable( 16 );\n\t\tif ( parameters.anisotropy )\n\t\t\t_programLayers.enable( 17 );\n\t\tif ( parameters.alphaHash )\n\t\t\t_programLayers.enable( 18 );\n\t\tif ( parameters.batching )\n\t\t\t_programLayers.enable( 19 );\n\t\tif ( parameters.dispersion )\n\t\t\t_programLayers.enable( 20 );\n\t\tif ( parameters.batchingColor )\n\t\t\t_programLayers.enable( 21 );\n\n\t\tarray.push( _programLayers.mask );\n\t\t_programLayers.disableAll();\n\n\t\tif ( parameters.fog )\n\t\t\t_programLayers.enable( 0 );\n\t\tif ( parameters.useFog )\n\t\t\t_programLayers.enable( 1 );\n\t\tif ( parameters.flatShading )\n\t\t\t_programLayers.enable( 2 );\n\t\tif ( parameters.logarithmicDepthBuffer )\n\t\t\t_programLayers.enable( 3 );\n\t\tif ( parameters.skinning )\n\t\t\t_programLayers.enable( 4 );\n\t\tif ( parameters.morphTargets )\n\t\t\t_programLayers.enable( 5 );\n\t\tif ( parameters.morphNormals )\n\t\t\t_programLayers.enable( 6 );\n\t\tif ( parameters.morphColors )\n\t\t\t_programLayers.enable( 7 );\n\t\tif ( parameters.premultipliedAlpha )\n\t\t\t_programLayers.enable( 8 );\n\t\tif ( parameters.shadowMapEnabled )\n\t\t\t_programLayers.enable( 9 );\n\t\tif ( parameters.doubleSided )\n\t\t\t_programLayers.enable( 10 );\n\t\tif ( parameters.flipSided )\n\t\t\t_programLayers.enable( 11 );\n\t\tif ( parameters.useDepthPacking )\n\t\t\t_programLayers.enable( 12 );\n\t\tif ( parameters.dithering )\n\t\t\t_programLayers.enable( 13 );\n\t\tif ( parameters.transmission )\n\t\t\t_programLayers.enable( 14 );\n\t\tif ( parameters.sheen )\n\t\t\t_programLayers.enable( 15 );\n\t\tif ( parameters.opaque )\n\t\t\t_programLayers.enable( 16 );\n\t\tif ( parameters.pointsUvs )\n\t\t\t_programLayers.enable( 17 );\n\t\tif ( parameters.decodeVideoTexture )\n\t\t\t_programLayers.enable( 18 );\n\t\tif ( parameters.alphaToCoverage )\n\t\t\t_programLayers.enable( 19 );\n\n\t\tarray.push( _programLayers.mask );\n\n\t}\n\n\tfunction getUniforms( material ) {\n\n\t\tconst shaderID = shaderIDs[ material.type ];\n\t\tlet uniforms;\n\n\t\tif ( shaderID ) {\n\n\t\t\tconst shader = ShaderLib[ shaderID ];\n\t\t\tuniforms = UniformsUtils.clone( shader.uniforms );\n\n\t\t} else {\n\n\t\t\tuniforms = material.uniforms;\n\n\t\t}\n\n\t\treturn uniforms;\n\n\t}\n\n\tfunction acquireProgram( parameters, cacheKey ) {\n\n\t\tlet program;\n\n\t\t// Check if code has been already compiled\n\t\tfor ( let p = 0, pl = programs.length; p < pl; p ++ ) {\n\n\t\t\tconst preexistingProgram = programs[ p ];\n\n\t\t\tif ( preexistingProgram.cacheKey === cacheKey ) {\n\n\t\t\t\tprogram = preexistingProgram;\n\t\t\t\t++ program.usedTimes;\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( program === undefined ) {\n\n\t\t\tprogram = new WebGLProgram( renderer, cacheKey, parameters, bindingStates );\n\t\t\tprograms.push( program );\n\n\t\t}\n\n\t\treturn program;\n\n\t}\n\n\tfunction releaseProgram( program ) {\n\n\t\tif ( -- program.usedTimes === 0 ) {\n\n\t\t\t// Remove from unordered set\n\t\t\tconst i = programs.indexOf( program );\n\t\t\tprograms[ i ] = programs[ programs.length - 1 ];\n\t\t\tprograms.pop();\n\n\t\t\t// Free WebGL resources\n\t\t\tprogram.destroy();\n\n\t\t}\n\n\t}\n\n\tfunction releaseShaderCache( material ) {\n\n\t\t_customShaders.remove( material );\n\n\t}\n\n\tfunction dispose() {\n\n\t\t_customShaders.dispose();\n\n\t}\n\n\treturn {\n\t\tgetParameters: getParameters,\n\t\tgetProgramCacheKey: getProgramCacheKey,\n\t\tgetUniforms: getUniforms,\n\t\tacquireProgram: acquireProgram,\n\t\treleaseProgram: releaseProgram,\n\t\treleaseShaderCache: releaseShaderCache,\n\t\t// Exposed for resource monitoring & error feedback via renderer.info:\n\t\tprograms: programs,\n\t\tdispose: dispose\n\t};\n\n}\n\nfunction WebGLProperties() {\n\n\tlet properties = new WeakMap();\n\n\tfunction get( object ) {\n\n\t\tlet map = properties.get( object );\n\n\t\tif ( map === undefined ) {\n\n\t\t\tmap = {};\n\t\t\tproperties.set( object, map );\n\n\t\t}\n\n\t\treturn map;\n\n\t}\n\n\tfunction remove( object ) {\n\n\t\tproperties.delete( object );\n\n\t}\n\n\tfunction update( object, key, value ) {\n\n\t\tproperties.get( object )[ key ] = value;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tproperties = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tremove: remove,\n\t\tupdate: update,\n\t\tdispose: dispose\n\t};\n\n}\n\nfunction painterSortStable( a, b ) {\n\n\tif ( a.groupOrder !== b.groupOrder ) {\n\n\t\treturn a.groupOrder - b.groupOrder;\n\n\t} else if ( a.renderOrder !== b.renderOrder ) {\n\n\t\treturn a.renderOrder - b.renderOrder;\n\n\t} else if ( a.material.id !== b.material.id ) {\n\n\t\treturn a.material.id - b.material.id;\n\n\t} else if ( a.z !== b.z ) {\n\n\t\treturn a.z - b.z;\n\n\t} else {\n\n\t\treturn a.id - b.id;\n\n\t}\n\n}\n\nfunction reversePainterSortStable( a, b ) {\n\n\tif ( a.groupOrder !== b.groupOrder ) {\n\n\t\treturn a.groupOrder - b.groupOrder;\n\n\t} else if ( a.renderOrder !== b.renderOrder ) {\n\n\t\treturn a.renderOrder - b.renderOrder;\n\n\t} else if ( a.z !== b.z ) {\n\n\t\treturn b.z - a.z;\n\n\t} else {\n\n\t\treturn a.id - b.id;\n\n\t}\n\n}\n\n\nfunction WebGLRenderList() {\n\n\tconst renderItems = [];\n\tlet renderItemsIndex = 0;\n\n\tconst opaque = [];\n\tconst transmissive = [];\n\tconst transparent = [];\n\n\tfunction init() {\n\n\t\trenderItemsIndex = 0;\n\n\t\topaque.length = 0;\n\t\ttransmissive.length = 0;\n\t\ttransparent.length = 0;\n\n\t}\n\n\tfunction getNextRenderItem( object, geometry, material, groupOrder, z, group ) {\n\n\t\tlet renderItem = renderItems[ renderItemsIndex ];\n\n\t\tif ( renderItem === undefined ) {\n\n\t\t\trenderItem = {\n\t\t\t\tid: object.id,\n\t\t\t\tobject: object,\n\t\t\t\tgeometry: geometry,\n\t\t\t\tmaterial: material,\n\t\t\t\tgroupOrder: groupOrder,\n\t\t\t\trenderOrder: object.renderOrder,\n\t\t\t\tz: z,\n\t\t\t\tgroup: group\n\t\t\t};\n\n\t\t\trenderItems[ renderItemsIndex ] = renderItem;\n\n\t\t} else {\n\n\t\t\trenderItem.id = object.id;\n\t\t\trenderItem.object = object;\n\t\t\trenderItem.geometry = geometry;\n\t\t\trenderItem.material = material;\n\t\t\trenderItem.groupOrder = groupOrder;\n\t\t\trenderItem.renderOrder = object.renderOrder;\n\t\t\trenderItem.z = z;\n\t\t\trenderItem.group = group;\n\n\t\t}\n\n\t\trenderItemsIndex ++;\n\n\t\treturn renderItem;\n\n\t}\n\n\tfunction push( object, geometry, material, groupOrder, z, group ) {\n\n\t\tconst renderItem = getNextRenderItem( object, geometry, material, groupOrder, z, group );\n\n\t\tif ( material.transmission > 0.0 ) {\n\n\t\t\ttransmissive.push( renderItem );\n\n\t\t} else if ( material.transparent === true ) {\n\n\t\t\ttransparent.push( renderItem );\n\n\t\t} else {\n\n\t\t\topaque.push( renderItem );\n\n\t\t}\n\n\t}\n\n\tfunction unshift( object, geometry, material, groupOrder, z, group ) {\n\n\t\tconst renderItem = getNextRenderItem( object, geometry, material, groupOrder, z, group );\n\n\t\tif ( material.transmission > 0.0 ) {\n\n\t\t\ttransmissive.unshift( renderItem );\n\n\t\t} else if ( material.transparent === true ) {\n\n\t\t\ttransparent.unshift( renderItem );\n\n\t\t} else {\n\n\t\t\topaque.unshift( renderItem );\n\n\t\t}\n\n\t}\n\n\tfunction sort( customOpaqueSort, customTransparentSort ) {\n\n\t\tif ( opaque.length > 1 ) opaque.sort( customOpaqueSort || painterSortStable );\n\t\tif ( transmissive.length > 1 ) transmissive.sort( customTransparentSort || reversePainterSortStable );\n\t\tif ( transparent.length > 1 ) transparent.sort( customTransparentSort || reversePainterSortStable );\n\n\t}\n\n\tfunction finish() {\n\n\t\t// Clear references from inactive renderItems in the list\n\n\t\tfor ( let i = renderItemsIndex, il = renderItems.length; i < il; i ++ ) {\n\n\t\t\tconst renderItem = renderItems[ i ];\n\n\t\t\tif ( renderItem.id === null ) break;\n\n\t\t\trenderItem.id = null;\n\t\t\trenderItem.object = null;\n\t\t\trenderItem.geometry = null;\n\t\t\trenderItem.material = null;\n\t\t\trenderItem.group = null;\n\n\t\t}\n\n\t}\n\n\treturn {\n\n\t\topaque: opaque,\n\t\ttransmissive: transmissive,\n\t\ttransparent: transparent,\n\n\t\tinit: init,\n\t\tpush: push,\n\t\tunshift: unshift,\n\t\tfinish: finish,\n\n\t\tsort: sort\n\t};\n\n}\n\nfunction WebGLRenderLists() {\n\n\tlet lists = new WeakMap();\n\n\tfunction get( scene, renderCallDepth ) {\n\n\t\tconst listArray = lists.get( scene );\n\t\tlet list;\n\n\t\tif ( listArray === undefined ) {\n\n\t\t\tlist = new WebGLRenderList();\n\t\t\tlists.set( scene, [ list ] );\n\n\t\t} else {\n\n\t\t\tif ( renderCallDepth >= listArray.length ) {\n\n\t\t\t\tlist = new WebGLRenderList();\n\t\t\t\tlistArray.push( list );\n\n\t\t\t} else {\n\n\t\t\t\tlist = listArray[ renderCallDepth ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn list;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tlists = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\nfunction UniformsCache() {\n\n\tconst lights = {};\n\n\treturn {\n\n\t\tget: function ( light ) {\n\n\t\t\tif ( lights[ light.id ] !== undefined ) {\n\n\t\t\t\treturn lights[ light.id ];\n\n\t\t\t}\n\n\t\t\tlet uniforms;\n\n\t\t\tswitch ( light.type ) {\n\n\t\t\t\tcase 'DirectionalLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tcolor: new Color()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'SpotLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\tconeCos: 0,\n\t\t\t\t\t\tpenumbraCos: 0,\n\t\t\t\t\t\tdecay: 0\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'PointLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\tdecay: 0\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'HemisphereLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tskyColor: new Color(),\n\t\t\t\t\t\tgroundColor: new Color()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'RectAreaLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\thalfWidth: new Vector3(),\n\t\t\t\t\t\thalfHeight: new Vector3()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tlights[ light.id ] = uniforms;\n\n\t\t\treturn uniforms;\n\n\t\t}\n\n\t};\n\n}\n\nfunction ShadowUniformsCache() {\n\n\tconst lights = {};\n\n\treturn {\n\n\t\tget: function ( light ) {\n\n\t\t\tif ( lights[ light.id ] !== undefined ) {\n\n\t\t\t\treturn lights[ light.id ];\n\n\t\t\t}\n\n\t\t\tlet uniforms;\n\n\t\t\tswitch ( light.type ) {\n\n\t\t\t\tcase 'DirectionalLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tshadowIntensity: 1,\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowNormalBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'SpotLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tshadowIntensity: 1,\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowNormalBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'PointLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tshadowIntensity: 1,\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowNormalBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2(),\n\t\t\t\t\t\tshadowCameraNear: 1,\n\t\t\t\t\t\tshadowCameraFar: 1000\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\t// TODO (abelnation): set RectAreaLight shadow uniforms\n\n\t\t\t}\n\n\t\t\tlights[ light.id ] = uniforms;\n\n\t\t\treturn uniforms;\n\n\t\t}\n\n\t};\n\n}\n\n\n\nlet nextVersion = 0;\n\nfunction shadowCastingAndTexturingLightsFirst( lightA, lightB ) {\n\n\treturn ( lightB.castShadow ? 2 : 0 ) - ( lightA.castShadow ? 2 : 0 ) + ( lightB.map ? 1 : 0 ) - ( lightA.map ? 1 : 0 );\n\n}\n\nfunction WebGLLights( extensions ) {\n\n\tconst cache = new UniformsCache();\n\n\tconst shadowCache = ShadowUniformsCache();\n\n\tconst state = {\n\n\t\tversion: 0,\n\n\t\thash: {\n\t\t\tdirectionalLength: - 1,\n\t\t\tpointLength: - 1,\n\t\t\tspotLength: - 1,\n\t\t\trectAreaLength: - 1,\n\t\t\themiLength: - 1,\n\n\t\t\tnumDirectionalShadows: - 1,\n\t\t\tnumPointShadows: - 1,\n\t\t\tnumSpotShadows: - 1,\n\t\t\tnumSpotMaps: - 1,\n\n\t\t\tnumLightProbes: - 1\n\t\t},\n\n\t\tambient: [ 0, 0, 0 ],\n\t\tprobe: [],\n\t\tdirectional: [],\n\t\tdirectionalShadow: [],\n\t\tdirectionalShadowMap: [],\n\t\tdirectionalShadowMatrix: [],\n\t\tspot: [],\n\t\tspotLightMap: [],\n\t\tspotShadow: [],\n\t\tspotShadowMap: [],\n\t\tspotLightMatrix: [],\n\t\trectArea: [],\n\t\trectAreaLTC1: null,\n\t\trectAreaLTC2: null,\n\t\tpoint: [],\n\t\tpointShadow: [],\n\t\tpointShadowMap: [],\n\t\tpointShadowMatrix: [],\n\t\themi: [],\n\t\tnumSpotLightShadowsWithMaps: 0,\n\t\tnumLightProbes: 0\n\n\t};\n\n\tfor ( let i = 0; i < 9; i ++ ) state.probe.push( new Vector3() );\n\n\tconst vector3 = new Vector3();\n\tconst matrix4 = new Matrix4();\n\tconst matrix42 = new Matrix4();\n\n\tfunction setup( lights ) {\n\n\t\tlet r = 0, g = 0, b = 0;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) state.probe[ i ].set( 0, 0, 0 );\n\n\t\tlet directionalLength = 0;\n\t\tlet pointLength = 0;\n\t\tlet spotLength = 0;\n\t\tlet rectAreaLength = 0;\n\t\tlet hemiLength = 0;\n\n\t\tlet numDirectionalShadows = 0;\n\t\tlet numPointShadows = 0;\n\t\tlet numSpotShadows = 0;\n\t\tlet numSpotMaps = 0;\n\t\tlet numSpotShadowsWithMaps = 0;\n\n\t\tlet numLightProbes = 0;\n\n\t\t// ordering : [shadow casting + map texturing, map texturing, shadow casting, none ]\n\t\tlights.sort( shadowCastingAndTexturingLightsFirst );\n\n\t\tfor ( let i = 0, l = lights.length; i < l; i ++ ) {\n\n\t\t\tconst light = lights[ i ];\n\n\t\t\tconst color = light.color;\n\t\t\tconst intensity = light.intensity;\n\t\t\tconst distance = light.distance;\n\n\t\t\tconst shadowMap = ( light.shadow && light.shadow.map ) ? light.shadow.map.texture : null;\n\n\t\t\tif ( light.isAmbientLight ) {\n\n\t\t\t\tr += color.r * intensity;\n\t\t\t\tg += color.g * intensity;\n\t\t\t\tb += color.b * intensity;\n\n\t\t\t} else if ( light.isLightProbe ) {\n\n\t\t\t\tfor ( let j = 0; j < 9; j ++ ) {\n\n\t\t\t\t\tstate.probe[ j ].addScaledVector( light.sh.coefficients[ j ], intensity );\n\n\t\t\t\t}\n\n\t\t\t\tnumLightProbes ++;\n\n\t\t\t} else if ( light.isDirectionalLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity );\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tconst shadow = light.shadow;\n\n\t\t\t\t\tconst shadowUniforms = shadowCache.get( light );\n\n\t\t\t\t\tshadowUniforms.shadowIntensity = shadow.intensity;\n\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\n\t\t\t\t\tshadowUniforms.shadowNormalBias = shadow.normalBias;\n\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\n\n\t\t\t\t\tstate.directionalShadow[ directionalLength ] = shadowUniforms;\n\t\t\t\t\tstate.directionalShadowMap[ directionalLength ] = shadowMap;\n\t\t\t\t\tstate.directionalShadowMatrix[ directionalLength ] = light.shadow.matrix;\n\n\t\t\t\t\tnumDirectionalShadows ++;\n\n\t\t\t\t}\n\n\t\t\t\tstate.directional[ directionalLength ] = uniforms;\n\n\t\t\t\tdirectionalLength ++;\n\n\t\t\t} else if ( light.isSpotLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\n\t\t\t\tuniforms.color.copy( color ).multiplyScalar( intensity );\n\t\t\t\tuniforms.distance = distance;\n\n\t\t\t\tuniforms.coneCos = Math.cos( light.angle );\n\t\t\t\tuniforms.penumbraCos = Math.cos( light.angle * ( 1 - light.penumbra ) );\n\t\t\t\tuniforms.decay = light.decay;\n\n\t\t\t\tstate.spot[ spotLength ] = uniforms;\n\n\t\t\t\tconst shadow = light.shadow;\n\n\t\t\t\tif ( light.map ) {\n\n\t\t\t\t\tstate.spotLightMap[ numSpotMaps ] = light.map;\n\t\t\t\t\tnumSpotMaps ++;\n\n\t\t\t\t\t// make sure the lightMatrix is up to date\n\t\t\t\t\t// TODO : do it if required only\n\t\t\t\t\tshadow.updateMatrices( light );\n\n\t\t\t\t\tif ( light.castShadow ) numSpotShadowsWithMaps ++;\n\n\t\t\t\t}\n\n\t\t\t\tstate.spotLightMatrix[ spotLength ] = shadow.matrix;\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tconst shadowUniforms = shadowCache.get( light );\n\n\t\t\t\t\tshadowUniforms.shadowIntensity = shadow.intensity;\n\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\n\t\t\t\t\tshadowUniforms.shadowNormalBias = shadow.normalBias;\n\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\n\n\t\t\t\t\tstate.spotShadow[ spotLength ] = shadowUniforms;\n\t\t\t\t\tstate.spotShadowMap[ spotLength ] = shadowMap;\n\n\t\t\t\t\tnumSpotShadows ++;\n\n\t\t\t\t}\n\n\t\t\t\tspotLength ++;\n\n\t\t\t} else if ( light.isRectAreaLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.color.copy( color ).multiplyScalar( intensity );\n\n\t\t\t\tuniforms.halfWidth.set( light.width * 0.5, 0.0, 0.0 );\n\t\t\t\tuniforms.halfHeight.set( 0.0, light.height * 0.5, 0.0 );\n\n\t\t\t\tstate.rectArea[ rectAreaLength ] = uniforms;\n\n\t\t\t\trectAreaLength ++;\n\n\t\t\t} else if ( light.isPointLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity );\n\t\t\t\tuniforms.distance = light.distance;\n\t\t\t\tuniforms.decay = light.decay;\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tconst shadow = light.shadow;\n\n\t\t\t\t\tconst shadowUniforms = shadowCache.get( light );\n\n\t\t\t\t\tshadowUniforms.shadowIntensity = shadow.intensity;\n\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\n\t\t\t\t\tshadowUniforms.shadowNormalBias = shadow.normalBias;\n\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\n\t\t\t\t\tshadowUniforms.shadowCameraNear = shadow.camera.near;\n\t\t\t\t\tshadowUniforms.shadowCameraFar = shadow.camera.far;\n\n\t\t\t\t\tstate.pointShadow[ pointLength ] = shadowUniforms;\n\t\t\t\t\tstate.pointShadowMap[ pointLength ] = shadowMap;\n\t\t\t\t\tstate.pointShadowMatrix[ pointLength ] = light.shadow.matrix;\n\n\t\t\t\t\tnumPointShadows ++;\n\n\t\t\t\t}\n\n\t\t\t\tstate.point[ pointLength ] = uniforms;\n\n\t\t\t\tpointLength ++;\n\n\t\t\t} else if ( light.isHemisphereLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.skyColor.copy( light.color ).multiplyScalar( intensity );\n\t\t\t\tuniforms.groundColor.copy( light.groundColor ).multiplyScalar( intensity );\n\n\t\t\t\tstate.hemi[ hemiLength ] = uniforms;\n\n\t\t\t\themiLength ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( rectAreaLength > 0 ) {\n\n\t\t\tif ( extensions.has( 'OES_texture_float_linear' ) === true ) {\n\n\t\t\t\tstate.rectAreaLTC1 = UniformsLib.LTC_FLOAT_1;\n\t\t\t\tstate.rectAreaLTC2 = UniformsLib.LTC_FLOAT_2;\n\n\t\t\t} else {\n\n\t\t\t\tstate.rectAreaLTC1 = UniformsLib.LTC_HALF_1;\n\t\t\t\tstate.rectAreaLTC2 = UniformsLib.LTC_HALF_2;\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.ambient[ 0 ] = r;\n\t\tstate.ambient[ 1 ] = g;\n\t\tstate.ambient[ 2 ] = b;\n\n\t\tconst hash = state.hash;\n\n\t\tif ( hash.directionalLength !== directionalLength ||\n\t\t\thash.pointLength !== pointLength ||\n\t\t\thash.spotLength !== spotLength ||\n\t\t\thash.rectAreaLength !== rectAreaLength ||\n\t\t\thash.hemiLength !== hemiLength ||\n\t\t\thash.numDirectionalShadows !== numDirectionalShadows ||\n\t\t\thash.numPointShadows !== numPointShadows ||\n\t\t\thash.numSpotShadows !== numSpotShadows ||\n\t\t\thash.numSpotMaps !== numSpotMaps ||\n\t\t\thash.numLightProbes !== numLightProbes ) {\n\n\t\t\tstate.directional.length = directionalLength;\n\t\t\tstate.spot.length = spotLength;\n\t\t\tstate.rectArea.length = rectAreaLength;\n\t\t\tstate.point.length = pointLength;\n\t\t\tstate.hemi.length = hemiLength;\n\n\t\t\tstate.directionalShadow.length = numDirectionalShadows;\n\t\t\tstate.directionalShadowMap.length = numDirectionalShadows;\n\t\t\tstate.pointShadow.length = numPointShadows;\n\t\t\tstate.pointShadowMap.length = numPointShadows;\n\t\t\tstate.spotShadow.length = numSpotShadows;\n\t\t\tstate.spotShadowMap.length = numSpotShadows;\n\t\t\tstate.directionalShadowMatrix.length = numDirectionalShadows;\n\t\t\tstate.pointShadowMatrix.length = numPointShadows;\n\t\t\tstate.spotLightMatrix.length = numSpotShadows + numSpotMaps - numSpotShadowsWithMaps;\n\t\t\tstate.spotLightMap.length = numSpotMaps;\n\t\t\tstate.numSpotLightShadowsWithMaps = numSpotShadowsWithMaps;\n\t\t\tstate.numLightProbes = numLightProbes;\n\n\t\t\thash.directionalLength = directionalLength;\n\t\t\thash.pointLength = pointLength;\n\t\t\thash.spotLength = spotLength;\n\t\t\thash.rectAreaLength = rectAreaLength;\n\t\t\thash.hemiLength = hemiLength;\n\n\t\t\thash.numDirectionalShadows = numDirectionalShadows;\n\t\t\thash.numPointShadows = numPointShadows;\n\t\t\thash.numSpotShadows = numSpotShadows;\n\t\t\thash.numSpotMaps = numSpotMaps;\n\n\t\t\thash.numLightProbes = numLightProbes;\n\n\t\t\tstate.version = nextVersion ++;\n\n\t\t}\n\n\t}\n\n\tfunction setupView( lights, camera ) {\n\n\t\tlet directionalLength = 0;\n\t\tlet pointLength = 0;\n\t\tlet spotLength = 0;\n\t\tlet rectAreaLength = 0;\n\t\tlet hemiLength = 0;\n\n\t\tconst viewMatrix = camera.matrixWorldInverse;\n\n\t\tfor ( let i = 0, l = lights.length; i < l; i ++ ) {\n\n\t\t\tconst light = lights[ i ];\n\n\t\t\tif ( light.isDirectionalLight ) {\n\n\t\t\t\tconst uniforms = state.directional[ directionalLength ];\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tvector3.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\tuniforms.direction.sub( vector3 );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\tdirectionalLength ++;\n\n\t\t\t} else if ( light.isSpotLight ) {\n\n\t\t\t\tconst uniforms = state.spot[ spotLength ];\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tvector3.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\tuniforms.direction.sub( vector3 );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\tspotLength ++;\n\n\t\t\t} else if ( light.isRectAreaLight ) {\n\n\t\t\t\tconst uniforms = state.rectArea[ rectAreaLength ];\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\t// extract local rotation of light to derive width/height half vectors\n\t\t\t\tmatrix42.identity();\n\t\t\t\tmatrix4.copy( light.matrixWorld );\n\t\t\t\tmatrix4.premultiply( viewMatrix );\n\t\t\t\tmatrix42.extractRotation( matrix4 );\n\n\t\t\t\tuniforms.halfWidth.set( light.width * 0.5, 0.0, 0.0 );\n\t\t\t\tuniforms.halfHeight.set( 0.0, light.height * 0.5, 0.0 );\n\n\t\t\t\tuniforms.halfWidth.applyMatrix4( matrix42 );\n\t\t\t\tuniforms.halfHeight.applyMatrix4( matrix42 );\n\n\t\t\t\trectAreaLength ++;\n\n\t\t\t} else if ( light.isPointLight ) {\n\n\t\t\t\tconst uniforms = state.point[ pointLength ];\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\tpointLength ++;\n\n\t\t\t} else if ( light.isHemisphereLight ) {\n\n\t\t\t\tconst uniforms = state.hemi[ hemiLength ];\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\themiLength ++;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn {\n\t\tsetup: setup,\n\t\tsetupView: setupView,\n\t\tstate: state\n\t};\n\n}\n\nfunction WebGLRenderState( extensions ) {\n\n\tconst lights = new WebGLLights( extensions );\n\n\tconst lightsArray = [];\n\tconst shadowsArray = [];\n\n\tfunction init( camera ) {\n\n\t\tstate.camera = camera;\n\n\t\tlightsArray.length = 0;\n\t\tshadowsArray.length = 0;\n\n\t}\n\n\tfunction pushLight( light ) {\n\n\t\tlightsArray.push( light );\n\n\t}\n\n\tfunction pushShadow( shadowLight ) {\n\n\t\tshadowsArray.push( shadowLight );\n\n\t}\n\n\tfunction setupLights() {\n\n\t\tlights.setup( lightsArray );\n\n\t}\n\n\tfunction setupLightsView( camera ) {\n\n\t\tlights.setupView( lightsArray, camera );\n\n\t}\n\n\tconst state = {\n\t\tlightsArray: lightsArray,\n\t\tshadowsArray: shadowsArray,\n\n\t\tcamera: null,\n\n\t\tlights: lights,\n\n\t\ttransmissionRenderTarget: {}\n\t};\n\n\treturn {\n\t\tinit: init,\n\t\tstate: state,\n\t\tsetupLights: setupLights,\n\t\tsetupLightsView: setupLightsView,\n\n\t\tpushLight: pushLight,\n\t\tpushShadow: pushShadow\n\t};\n\n}\n\nfunction WebGLRenderStates( extensions ) {\n\n\tlet renderStates = new WeakMap();\n\n\tfunction get( scene, renderCallDepth = 0 ) {\n\n\t\tconst renderStateArray = renderStates.get( scene );\n\t\tlet renderState;\n\n\t\tif ( renderStateArray === undefined ) {\n\n\t\t\trenderState = new WebGLRenderState( extensions );\n\t\t\trenderStates.set( scene, [ renderState ] );\n\n\t\t} else {\n\n\t\t\tif ( renderCallDepth >= renderStateArray.length ) {\n\n\t\t\t\trenderState = new WebGLRenderState( extensions );\n\t\t\t\trenderStateArray.push( renderState );\n\n\t\t\t} else {\n\n\t\t\t\trenderState = renderStateArray[ renderCallDepth ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn renderState;\n\n\t}\n\n\tfunction dispose() {\n\n\t\trenderStates = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\nclass MeshDepthMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshDepthMaterial = true;\n\n\t\tthis.type = 'MeshDepthMaterial';\n\n\t\tthis.depthPacking = BasicDepthPacking;\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.depthPacking = source.depthPacking;\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshDistanceMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshDistanceMaterial = true;\n\n\t\tthis.type = 'MeshDistanceMaterial';\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst vertex = \"void main() {\\n\\tgl_Position = vec4( position, 1.0 );\\n}\";\n\nconst fragment = \"uniform sampler2D shadow_pass;\\nuniform vec2 resolution;\\nuniform float radius;\\n#include <packing>\\nvoid main() {\\n\\tconst float samples = float( VSM_SAMPLES );\\n\\tfloat mean = 0.0;\\n\\tfloat squared_mean = 0.0;\\n\\tfloat uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );\\n\\tfloat uvStart = samples <= 1.0 ? 0.0 : - 1.0;\\n\\tfor ( float i = 0.0; i < samples; i ++ ) {\\n\\t\\tfloat uvOffset = uvStart + i * uvStride;\\n\\t\\t#ifdef HORIZONTAL_PASS\\n\\t\\t\\tvec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );\\n\\t\\t\\tmean += distribution.x;\\n\\t\\t\\tsquared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\\n\\t\\t#else\\n\\t\\t\\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );\\n\\t\\t\\tmean += depth;\\n\\t\\t\\tsquared_mean += depth * depth;\\n\\t\\t#endif\\n\\t}\\n\\tmean = mean / samples;\\n\\tsquared_mean = squared_mean / samples;\\n\\tfloat std_dev = sqrt( squared_mean - mean * mean );\\n\\tgl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\\n}\";\n\nfunction WebGLShadowMap( renderer, objects, capabilities ) {\n\n\tlet _frustum = new Frustum();\n\n\tconst _shadowMapSize = new Vector2(),\n\t\t_viewportSize = new Vector2(),\n\n\t\t_viewport = new Vector4(),\n\n\t\t_depthMaterial = new MeshDepthMaterial( { depthPacking: RGBADepthPacking } ),\n\t\t_distanceMaterial = new MeshDistanceMaterial(),\n\n\t\t_materialCache = {},\n\n\t\t_maxTextureSize = capabilities.maxTextureSize;\n\n\tconst shadowSide = { [ FrontSide ]: BackSide, [ BackSide ]: FrontSide, [ DoubleSide ]: DoubleSide };\n\n\tconst shadowMaterialVertical = new ShaderMaterial( {\n\t\tdefines: {\n\t\t\tVSM_SAMPLES: 8\n\t\t},\n\t\tuniforms: {\n\t\t\tshadow_pass: { value: null },\n\t\t\tresolution: { value: new Vector2() },\n\t\t\tradius: { value: 4.0 }\n\t\t},\n\n\t\tvertexShader: vertex,\n\t\tfragmentShader: fragment\n\n\t} );\n\n\tconst shadowMaterialHorizontal = shadowMaterialVertical.clone();\n\tshadowMaterialHorizontal.defines.HORIZONTAL_PASS = 1;\n\n\tconst fullScreenTri = new BufferGeometry();\n\tfullScreenTri.setAttribute(\n\t\t'position',\n\t\tnew BufferAttribute(\n\t\t\tnew Float32Array( [ - 1, - 1, 0.5, 3, - 1, 0.5, - 1, 3, 0.5 ] ),\n\t\t\t3\n\t\t)\n\t);\n\n\tconst fullScreenMesh = new Mesh( fullScreenTri, shadowMaterialVertical );\n\n\tconst scope = this;\n\n\tthis.enabled = false;\n\n\tthis.autoUpdate = true;\n\tthis.needsUpdate = false;\n\n\tthis.type = PCFShadowMap;\n\tlet _previousType = this.type;\n\n\tthis.render = function ( lights, scene, camera ) {\n\n\t\tif ( scope.enabled === false ) return;\n\t\tif ( scope.autoUpdate === false && scope.needsUpdate === false ) return;\n\n\t\tif ( lights.length === 0 ) return;\n\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\t\tconst activeCubeFace = renderer.getActiveCubeFace();\n\t\tconst activeMipmapLevel = renderer.getActiveMipmapLevel();\n\n\t\tconst _state = renderer.state;\n\n\t\t// Set GL state for depth map.\n\t\t_state.setBlending( NoBlending );\n\t\t_state.buffers.color.setClear( 1, 1, 1, 1 );\n\t\t_state.buffers.depth.setTest( true );\n\t\t_state.setScissorTest( false );\n\n\t\t// check for shadow map type changes\n\n\t\tconst toVSM = ( _previousType !== VSMShadowMap && this.type === VSMShadowMap );\n\t\tconst fromVSM = ( _previousType === VSMShadowMap && this.type !== VSMShadowMap );\n\n\t\t// render depth map\n\n\t\tfor ( let i = 0, il = lights.length; i < il; i ++ ) {\n\n\t\t\tconst light = lights[ i ];\n\t\t\tconst shadow = light.shadow;\n\n\t\t\tif ( shadow === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLShadowMap:', light, 'has no shadow.' );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tif ( shadow.autoUpdate === false && shadow.needsUpdate === false ) continue;\n\n\t\t\t_shadowMapSize.copy( shadow.mapSize );\n\n\t\t\tconst shadowFrameExtents = shadow.getFrameExtents();\n\n\t\t\t_shadowMapSize.multiply( shadowFrameExtents );\n\n\t\t\t_viewportSize.copy( shadow.mapSize );\n\n\t\t\tif ( _shadowMapSize.x > _maxTextureSize || _shadowMapSize.y > _maxTextureSize ) {\n\n\t\t\t\tif ( _shadowMapSize.x > _maxTextureSize ) {\n\n\t\t\t\t\t_viewportSize.x = Math.floor( _maxTextureSize / shadowFrameExtents.x );\n\t\t\t\t\t_shadowMapSize.x = _viewportSize.x * shadowFrameExtents.x;\n\t\t\t\t\tshadow.mapSize.x = _viewportSize.x;\n\n\t\t\t\t}\n\n\t\t\t\tif ( _shadowMapSize.y > _maxTextureSize ) {\n\n\t\t\t\t\t_viewportSize.y = Math.floor( _maxTextureSize / shadowFrameExtents.y );\n\t\t\t\t\t_shadowMapSize.y = _viewportSize.y * shadowFrameExtents.y;\n\t\t\t\t\tshadow.mapSize.y = _viewportSize.y;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( shadow.map === null || toVSM === true || fromVSM === true ) {\n\n\t\t\t\tconst pars = ( this.type !== VSMShadowMap ) ? { minFilter: NearestFilter, magFilter: NearestFilter } : {};\n\n\t\t\t\tif ( shadow.map !== null ) {\n\n\t\t\t\t\tshadow.map.dispose();\n\n\t\t\t\t}\n\n\t\t\t\tshadow.map = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y, pars );\n\t\t\t\tshadow.map.texture.name = light.name + '.shadowMap';\n\n\t\t\t\tshadow.camera.updateProjectionMatrix();\n\n\t\t\t}\n\n\t\t\trenderer.setRenderTarget( shadow.map );\n\t\t\trenderer.clear();\n\n\t\t\tconst viewportCount = shadow.getViewportCount();\n\n\t\t\tfor ( let vp = 0; vp < viewportCount; vp ++ ) {\n\n\t\t\t\tconst viewport = shadow.getViewport( vp );\n\n\t\t\t\t_viewport.set(\n\t\t\t\t\t_viewportSize.x * viewport.x,\n\t\t\t\t\t_viewportSize.y * viewport.y,\n\t\t\t\t\t_viewportSize.x * viewport.z,\n\t\t\t\t\t_viewportSize.y * viewport.w\n\t\t\t\t);\n\n\t\t\t\t_state.viewport( _viewport );\n\n\t\t\t\tshadow.updateMatrices( light, vp );\n\n\t\t\t\t_frustum = shadow.getFrustum();\n\n\t\t\t\trenderObject( scene, camera, shadow.camera, light, this.type );\n\n\t\t\t}\n\n\t\t\t// do blur pass for VSM\n\n\t\t\tif ( shadow.isPointLightShadow !== true && this.type === VSMShadowMap ) {\n\n\t\t\t\tVSMPass( shadow, camera );\n\n\t\t\t}\n\n\t\t\tshadow.needsUpdate = false;\n\n\t\t}\n\n\t\t_previousType = this.type;\n\n\t\tscope.needsUpdate = false;\n\n\t\trenderer.setRenderTarget( currentRenderTarget, activeCubeFace, activeMipmapLevel );\n\n\t};\n\n\tfunction VSMPass( shadow, camera ) {\n\n\t\tconst geometry = objects.update( fullScreenMesh );\n\n\t\tif ( shadowMaterialVertical.defines.VSM_SAMPLES !== shadow.blurSamples ) {\n\n\t\t\tshadowMaterialVertical.defines.VSM_SAMPLES = shadow.blurSamples;\n\t\t\tshadowMaterialHorizontal.defines.VSM_SAMPLES = shadow.blurSamples;\n\n\t\t\tshadowMaterialVertical.needsUpdate = true;\n\t\t\tshadowMaterialHorizontal.needsUpdate = true;\n\n\t\t}\n\n\t\tif ( shadow.mapPass === null ) {\n\n\t\t\tshadow.mapPass = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y );\n\n\t\t}\n\n\t\t// vertical pass\n\n\t\tshadowMaterialVertical.uniforms.shadow_pass.value = shadow.map.texture;\n\t\tshadowMaterialVertical.uniforms.resolution.value = shadow.mapSize;\n\t\tshadowMaterialVertical.uniforms.radius.value = shadow.radius;\n\t\trenderer.setRenderTarget( shadow.mapPass );\n\t\trenderer.clear();\n\t\trenderer.renderBufferDirect( camera, null, geometry, shadowMaterialVertical, fullScreenMesh, null );\n\n\t\t// horizontal pass\n\n\t\tshadowMaterialHorizontal.uniforms.shadow_pass.value = shadow.mapPass.texture;\n\t\tshadowMaterialHorizontal.uniforms.resolution.value = shadow.mapSize;\n\t\tshadowMaterialHorizontal.uniforms.radius.value = shadow.radius;\n\t\trenderer.setRenderTarget( shadow.map );\n\t\trenderer.clear();\n\t\trenderer.renderBufferDirect( camera, null, geometry, shadowMaterialHorizontal, fullScreenMesh, null );\n\n\t}\n\n\tfunction getDepthMaterial( object, material, light, type ) {\n\n\t\tlet result = null;\n\n\t\tconst customMaterial = ( light.isPointLight === true ) ? object.customDistanceMaterial : object.customDepthMaterial;\n\n\t\tif ( customMaterial !== undefined ) {\n\n\t\t\tresult = customMaterial;\n\n\t\t} else {\n\n\t\t\tresult = ( light.isPointLight === true ) ? _distanceMaterial : _depthMaterial;\n\n\t\t\tif ( ( renderer.localClippingEnabled && material.clipShadows === true && Array.isArray( material.clippingPlanes ) && material.clippingPlanes.length !== 0 ) ||\n\t\t\t\t( material.displacementMap && material.displacementScale !== 0 ) ||\n\t\t\t\t( material.alphaMap && material.alphaTest > 0 ) ||\n\t\t\t\t( material.map && material.alphaTest > 0 ) ) {\n\n\t\t\t\t// in this case we need a unique material instance reflecting the\n\t\t\t\t// appropriate state\n\n\t\t\t\tconst keyA = result.uuid, keyB = material.uuid;\n\n\t\t\t\tlet materialsForVariant = _materialCache[ keyA ];\n\n\t\t\t\tif ( materialsForVariant === undefined ) {\n\n\t\t\t\t\tmaterialsForVariant = {};\n\t\t\t\t\t_materialCache[ keyA ] = materialsForVariant;\n\n\t\t\t\t}\n\n\t\t\t\tlet cachedMaterial = materialsForVariant[ keyB ];\n\n\t\t\t\tif ( cachedMaterial === undefined ) {\n\n\t\t\t\t\tcachedMaterial = result.clone();\n\t\t\t\t\tmaterialsForVariant[ keyB ] = cachedMaterial;\n\t\t\t\t\tmaterial.addEventListener( 'dispose', onMaterialDispose );\n\n\t\t\t\t}\n\n\t\t\t\tresult = cachedMaterial;\n\n\t\t\t}\n\n\t\t}\n\n\t\tresult.visible = material.visible;\n\t\tresult.wireframe = material.wireframe;\n\n\t\tif ( type === VSMShadowMap ) {\n\n\t\t\tresult.side = ( material.shadowSide !== null ) ? material.shadowSide : material.side;\n\n\t\t} else {\n\n\t\t\tresult.side = ( material.shadowSide !== null ) ? material.shadowSide : shadowSide[ material.side ];\n\n\t\t}\n\n\t\tresult.alphaMap = material.alphaMap;\n\t\tresult.alphaTest = material.alphaTest;\n\t\tresult.map = material.map;\n\n\t\tresult.clipShadows = material.clipShadows;\n\t\tresult.clippingPlanes = material.clippingPlanes;\n\t\tresult.clipIntersection = material.clipIntersection;\n\n\t\tresult.displacementMap = material.displacementMap;\n\t\tresult.displacementScale = material.displacementScale;\n\t\tresult.displacementBias = material.displacementBias;\n\n\t\tresult.wireframeLinewidth = material.wireframeLinewidth;\n\t\tresult.linewidth = material.linewidth;\n\n\t\tif ( light.isPointLight === true && result.isMeshDistanceMaterial === true ) {\n\n\t\t\tconst materialProperties = renderer.properties.get( result );\n\t\t\tmaterialProperties.light = light;\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n\tfunction renderObject( object, camera, shadowCamera, light, type ) {\n\n\t\tif ( object.visible === false ) return;\n\n\t\tconst visible = object.layers.test( camera.layers );\n\n\t\tif ( visible && ( object.isMesh || object.isLine || object.isPoints ) ) {\n\n\t\t\tif ( ( object.castShadow || ( object.receiveShadow && type === VSMShadowMap ) ) && ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) ) {\n\n\t\t\t\tobject.modelViewMatrix.multiplyMatrices( shadowCamera.matrixWorldInverse, object.matrixWorld );\n\n\t\t\t\tconst geometry = objects.update( object );\n\t\t\t\tconst material = object.material;\n\n\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\tconst groups = geometry.groups;\n\n\t\t\t\t\tfor ( let k = 0, kl = groups.length; k < kl; k ++ ) {\n\n\t\t\t\t\t\tconst group = groups[ k ];\n\t\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\tif ( groupMaterial && groupMaterial.visible ) {\n\n\t\t\t\t\t\t\tconst depthMaterial = getDepthMaterial( object, groupMaterial, light, type );\n\n\t\t\t\t\t\t\tobject.onBeforeShadow( renderer, object, camera, shadowCamera, geometry, depthMaterial, group );\n\n\t\t\t\t\t\t\trenderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, group );\n\n\t\t\t\t\t\t\tobject.onAfterShadow( renderer, object, camera, shadowCamera, geometry, depthMaterial, group );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( material.visible ) {\n\n\t\t\t\t\tconst depthMaterial = getDepthMaterial( object, material, light, type );\n\n\t\t\t\t\tobject.onBeforeShadow( renderer, object, camera, shadowCamera, geometry, depthMaterial, null );\n\n\t\t\t\t\trenderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, null );\n\n\t\t\t\t\tobject.onAfterShadow( renderer, object, camera, shadowCamera, geometry, depthMaterial, null );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst children = object.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\trenderObject( children[ i ], camera, shadowCamera, light, type );\n\n\t\t}\n\n\t}\n\n\tfunction onMaterialDispose( event ) {\n\n\t\tconst material = event.target;\n\n\t\tmaterial.removeEventListener( 'dispose', onMaterialDispose );\n\n\t\t// make sure to remove the unique distance/depth materials used for shadow map rendering\n\n\t\tfor ( const id in _materialCache ) {\n\n\t\t\tconst cache = _materialCache[ id ];\n\n\t\t\tconst uuid = event.target.uuid;\n\n\t\t\tif ( uuid in cache ) {\n\n\t\t\t\tconst shadowMaterial = cache[ uuid ];\n\t\t\t\tshadowMaterial.dispose();\n\t\t\t\tdelete cache[ uuid ];\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nfunction WebGLState( gl ) {\n\n\tfunction ColorBuffer() {\n\n\t\tlet locked = false;\n\n\t\tconst color = new Vector4();\n\t\tlet currentColorMask = null;\n\t\tconst currentColorClear = new Vector4( 0, 0, 0, 0 );\n\n\t\treturn {\n\n\t\t\tsetMask: function ( colorMask ) {\n\n\t\t\t\tif ( currentColorMask !== colorMask && ! locked ) {\n\n\t\t\t\t\tgl.colorMask( colorMask, colorMask, colorMask, colorMask );\n\t\t\t\t\tcurrentColorMask = colorMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( r, g, b, a, premultipliedAlpha ) {\n\n\t\t\t\tif ( premultipliedAlpha === true ) {\n\n\t\t\t\t\tr *= a; g *= a; b *= a;\n\n\t\t\t\t}\n\n\t\t\t\tcolor.set( r, g, b, a );\n\n\t\t\t\tif ( currentColorClear.equals( color ) === false ) {\n\n\t\t\t\t\tgl.clearColor( r, g, b, a );\n\t\t\t\t\tcurrentColorClear.copy( color );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentColorMask = null;\n\t\t\t\tcurrentColorClear.set( - 1, 0, 0, 0 ); // set to invalid state\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tfunction DepthBuffer() {\n\n\t\tlet locked = false;\n\n\t\tlet currentDepthMask = null;\n\t\tlet currentDepthFunc = null;\n\t\tlet currentDepthClear = null;\n\n\t\treturn {\n\n\t\t\tsetTest: function ( depthTest ) {\n\n\t\t\t\tif ( depthTest ) {\n\n\t\t\t\t\tenable( gl.DEPTH_TEST );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tdisable( gl.DEPTH_TEST );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetMask: function ( depthMask ) {\n\n\t\t\t\tif ( currentDepthMask !== depthMask && ! locked ) {\n\n\t\t\t\t\tgl.depthMask( depthMask );\n\t\t\t\t\tcurrentDepthMask = depthMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetFunc: function ( depthFunc ) {\n\n\t\t\t\tif ( currentDepthFunc !== depthFunc ) {\n\n\t\t\t\t\tswitch ( depthFunc ) {\n\n\t\t\t\t\t\tcase NeverDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.NEVER );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase AlwaysDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.ALWAYS );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase LessDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.LESS );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase LessEqualDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase EqualDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.EQUAL );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase GreaterEqualDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.GEQUAL );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase GreaterDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.GREATER );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase NotEqualDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.NOTEQUAL );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcurrentDepthFunc = depthFunc;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( depth ) {\n\n\t\t\t\tif ( currentDepthClear !== depth ) {\n\n\t\t\t\t\tgl.clearDepth( depth );\n\t\t\t\t\tcurrentDepthClear = depth;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentDepthMask = null;\n\t\t\t\tcurrentDepthFunc = null;\n\t\t\t\tcurrentDepthClear = null;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tfunction StencilBuffer() {\n\n\t\tlet locked = false;\n\n\t\tlet currentStencilMask = null;\n\t\tlet currentStencilFunc = null;\n\t\tlet currentStencilRef = null;\n\t\tlet currentStencilFuncMask = null;\n\t\tlet currentStencilFail = null;\n\t\tlet currentStencilZFail = null;\n\t\tlet currentStencilZPass = null;\n\t\tlet currentStencilClear = null;\n\n\t\treturn {\n\n\t\t\tsetTest: function ( stencilTest ) {\n\n\t\t\t\tif ( ! locked ) {\n\n\t\t\t\t\tif ( stencilTest ) {\n\n\t\t\t\t\t\tenable( gl.STENCIL_TEST );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tdisable( gl.STENCIL_TEST );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetMask: function ( stencilMask ) {\n\n\t\t\t\tif ( currentStencilMask !== stencilMask && ! locked ) {\n\n\t\t\t\t\tgl.stencilMask( stencilMask );\n\t\t\t\t\tcurrentStencilMask = stencilMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetFunc: function ( stencilFunc, stencilRef, stencilMask ) {\n\n\t\t\t\tif ( currentStencilFunc !== stencilFunc ||\n\t\t\t\t     currentStencilRef !== stencilRef ||\n\t\t\t\t     currentStencilFuncMask !== stencilMask ) {\n\n\t\t\t\t\tgl.stencilFunc( stencilFunc, stencilRef, stencilMask );\n\n\t\t\t\t\tcurrentStencilFunc = stencilFunc;\n\t\t\t\t\tcurrentStencilRef = stencilRef;\n\t\t\t\t\tcurrentStencilFuncMask = stencilMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetOp: function ( stencilFail, stencilZFail, stencilZPass ) {\n\n\t\t\t\tif ( currentStencilFail !== stencilFail ||\n\t\t\t\t     currentStencilZFail !== stencilZFail ||\n\t\t\t\t     currentStencilZPass !== stencilZPass ) {\n\n\t\t\t\t\tgl.stencilOp( stencilFail, stencilZFail, stencilZPass );\n\n\t\t\t\t\tcurrentStencilFail = stencilFail;\n\t\t\t\t\tcurrentStencilZFail = stencilZFail;\n\t\t\t\t\tcurrentStencilZPass = stencilZPass;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( stencil ) {\n\n\t\t\t\tif ( currentStencilClear !== stencil ) {\n\n\t\t\t\t\tgl.clearStencil( stencil );\n\t\t\t\t\tcurrentStencilClear = stencil;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentStencilMask = null;\n\t\t\t\tcurrentStencilFunc = null;\n\t\t\t\tcurrentStencilRef = null;\n\t\t\t\tcurrentStencilFuncMask = null;\n\t\t\t\tcurrentStencilFail = null;\n\t\t\t\tcurrentStencilZFail = null;\n\t\t\t\tcurrentStencilZPass = null;\n\t\t\t\tcurrentStencilClear = null;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t//\n\n\tconst colorBuffer = new ColorBuffer();\n\tconst depthBuffer = new DepthBuffer();\n\tconst stencilBuffer = new StencilBuffer();\n\n\tconst uboBindings = new WeakMap();\n\tconst uboProgramMap = new WeakMap();\n\n\tlet enabledCapabilities = {};\n\n\tlet currentBoundFramebuffers = {};\n\tlet currentDrawbuffers = new WeakMap();\n\tlet defaultDrawbuffers = [];\n\n\tlet currentProgram = null;\n\n\tlet currentBlendingEnabled = false;\n\tlet currentBlending = null;\n\tlet currentBlendEquation = null;\n\tlet currentBlendSrc = null;\n\tlet currentBlendDst = null;\n\tlet currentBlendEquationAlpha = null;\n\tlet currentBlendSrcAlpha = null;\n\tlet currentBlendDstAlpha = null;\n\tlet currentBlendColor = new Color( 0, 0, 0 );\n\tlet currentBlendAlpha = 0;\n\tlet currentPremultipledAlpha = false;\n\n\tlet currentFlipSided = null;\n\tlet currentCullFace = null;\n\n\tlet currentLineWidth = null;\n\n\tlet currentPolygonOffsetFactor = null;\n\tlet currentPolygonOffsetUnits = null;\n\n\tconst maxTextures = gl.getParameter( gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS );\n\n\tlet lineWidthAvailable = false;\n\tlet version = 0;\n\tconst glVersion = gl.getParameter( gl.VERSION );\n\n\tif ( glVersion.indexOf( 'WebGL' ) !== - 1 ) {\n\n\t\tversion = parseFloat( /^WebGL (\\d)/.exec( glVersion )[ 1 ] );\n\t\tlineWidthAvailable = ( version >= 1.0 );\n\n\t} else if ( glVersion.indexOf( 'OpenGL ES' ) !== - 1 ) {\n\n\t\tversion = parseFloat( /^OpenGL ES (\\d)/.exec( glVersion )[ 1 ] );\n\t\tlineWidthAvailable = ( version >= 2.0 );\n\n\t}\n\n\tlet currentTextureSlot = null;\n\tlet currentBoundTextures = {};\n\n\tconst scissorParam = gl.getParameter( gl.SCISSOR_BOX );\n\tconst viewportParam = gl.getParameter( gl.VIEWPORT );\n\n\tconst currentScissor = new Vector4().fromArray( scissorParam );\n\tconst currentViewport = new Vector4().fromArray( viewportParam );\n\n\tfunction createTexture( type, target, count, dimensions ) {\n\n\t\tconst data = new Uint8Array( 4 ); // 4 is required to match default unpack alignment of 4.\n\t\tconst texture = gl.createTexture();\n\n\t\tgl.bindTexture( type, texture );\n\t\tgl.texParameteri( type, gl.TEXTURE_MIN_FILTER, gl.NEAREST );\n\t\tgl.texParameteri( type, gl.TEXTURE_MAG_FILTER, gl.NEAREST );\n\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tif ( type === gl.TEXTURE_3D || type === gl.TEXTURE_2D_ARRAY ) {\n\n\t\t\t\tgl.texImage3D( target, 0, gl.RGBA, 1, 1, dimensions, 0, gl.RGBA, gl.UNSIGNED_BYTE, data );\n\n\t\t\t} else {\n\n\t\t\t\tgl.texImage2D( target + i, 0, gl.RGBA, 1, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE, data );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tconst emptyTextures = {};\n\temptyTextures[ gl.TEXTURE_2D ] = createTexture( gl.TEXTURE_2D, gl.TEXTURE_2D, 1 );\n\temptyTextures[ gl.TEXTURE_CUBE_MAP ] = createTexture( gl.TEXTURE_CUBE_MAP, gl.TEXTURE_CUBE_MAP_POSITIVE_X, 6 );\n\temptyTextures[ gl.TEXTURE_2D_ARRAY ] = createTexture( gl.TEXTURE_2D_ARRAY, gl.TEXTURE_2D_ARRAY, 1, 1 );\n\temptyTextures[ gl.TEXTURE_3D ] = createTexture( gl.TEXTURE_3D, gl.TEXTURE_3D, 1, 1 );\n\n\t// init\n\n\tcolorBuffer.setClear( 0, 0, 0, 1 );\n\tdepthBuffer.setClear( 1 );\n\tstencilBuffer.setClear( 0 );\n\n\tenable( gl.DEPTH_TEST );\n\tdepthBuffer.setFunc( LessEqualDepth );\n\n\tsetFlipSided( false );\n\tsetCullFace( CullFaceBack );\n\tenable( gl.CULL_FACE );\n\n\tsetBlending( NoBlending );\n\n\t//\n\n\tfunction enable( id ) {\n\n\t\tif ( enabledCapabilities[ id ] !== true ) {\n\n\t\t\tgl.enable( id );\n\t\t\tenabledCapabilities[ id ] = true;\n\n\t\t}\n\n\t}\n\n\tfunction disable( id ) {\n\n\t\tif ( enabledCapabilities[ id ] !== false ) {\n\n\t\t\tgl.disable( id );\n\t\t\tenabledCapabilities[ id ] = false;\n\n\t\t}\n\n\t}\n\n\tfunction bindFramebuffer( target, framebuffer ) {\n\n\t\tif ( currentBoundFramebuffers[ target ] !== framebuffer ) {\n\n\t\t\tgl.bindFramebuffer( target, framebuffer );\n\n\t\t\tcurrentBoundFramebuffers[ target ] = framebuffer;\n\n\t\t\t// gl.DRAW_FRAMEBUFFER is equivalent to gl.FRAMEBUFFER\n\n\t\t\tif ( target === gl.DRAW_FRAMEBUFFER ) {\n\n\t\t\t\tcurrentBoundFramebuffers[ gl.FRAMEBUFFER ] = framebuffer;\n\n\t\t\t}\n\n\t\t\tif ( target === gl.FRAMEBUFFER ) {\n\n\t\t\t\tcurrentBoundFramebuffers[ gl.DRAW_FRAMEBUFFER ] = framebuffer;\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\tfunction drawBuffers( renderTarget, framebuffer ) {\n\n\t\tlet drawBuffers = defaultDrawbuffers;\n\n\t\tlet needsUpdate = false;\n\n\t\tif ( renderTarget ) {\n\n\t\t\tdrawBuffers = currentDrawbuffers.get( framebuffer );\n\n\t\t\tif ( drawBuffers === undefined ) {\n\n\t\t\t\tdrawBuffers = [];\n\t\t\t\tcurrentDrawbuffers.set( framebuffer, drawBuffers );\n\n\t\t\t}\n\n\t\t\tconst textures = renderTarget.textures;\n\n\t\t\tif ( drawBuffers.length !== textures.length || drawBuffers[ 0 ] !== gl.COLOR_ATTACHMENT0 ) {\n\n\t\t\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\t\t\tdrawBuffers[ i ] = gl.COLOR_ATTACHMENT0 + i;\n\n\t\t\t\t}\n\n\t\t\t\tdrawBuffers.length = textures.length;\n\n\t\t\t\tneedsUpdate = true;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tif ( drawBuffers[ 0 ] !== gl.BACK ) {\n\n\t\t\t\tdrawBuffers[ 0 ] = gl.BACK;\n\n\t\t\t\tneedsUpdate = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( needsUpdate ) {\n\n\t\t\tgl.drawBuffers( drawBuffers );\n\n\t\t}\n\n\t}\n\n\tfunction useProgram( program ) {\n\n\t\tif ( currentProgram !== program ) {\n\n\t\t\tgl.useProgram( program );\n\n\t\t\tcurrentProgram = program;\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\tconst equationToGL = {\n\t\t[ AddEquation ]: gl.FUNC_ADD,\n\t\t[ SubtractEquation ]: gl.FUNC_SUBTRACT,\n\t\t[ ReverseSubtractEquation ]: gl.FUNC_REVERSE_SUBTRACT\n\t};\n\n\tequationToGL[ MinEquation ] = gl.MIN;\n\tequationToGL[ MaxEquation ] = gl.MAX;\n\n\tconst factorToGL = {\n\t\t[ ZeroFactor ]: gl.ZERO,\n\t\t[ OneFactor ]: gl.ONE,\n\t\t[ SrcColorFactor ]: gl.SRC_COLOR,\n\t\t[ SrcAlphaFactor ]: gl.SRC_ALPHA,\n\t\t[ SrcAlphaSaturateFactor ]: gl.SRC_ALPHA_SATURATE,\n\t\t[ DstColorFactor ]: gl.DST_COLOR,\n\t\t[ DstAlphaFactor ]: gl.DST_ALPHA,\n\t\t[ OneMinusSrcColorFactor ]: gl.ONE_MINUS_SRC_COLOR,\n\t\t[ OneMinusSrcAlphaFactor ]: gl.ONE_MINUS_SRC_ALPHA,\n\t\t[ OneMinusDstColorFactor ]: gl.ONE_MINUS_DST_COLOR,\n\t\t[ OneMinusDstAlphaFactor ]: gl.ONE_MINUS_DST_ALPHA,\n\t\t[ ConstantColorFactor ]: gl.CONSTANT_COLOR,\n\t\t[ OneMinusConstantColorFactor ]: gl.ONE_MINUS_CONSTANT_COLOR,\n\t\t[ ConstantAlphaFactor ]: gl.CONSTANT_ALPHA,\n\t\t[ OneMinusConstantAlphaFactor ]: gl.ONE_MINUS_CONSTANT_ALPHA\n\t};\n\n\tfunction setBlending( blending, blendEquation, blendSrc, blendDst, blendEquationAlpha, blendSrcAlpha, blendDstAlpha, blendColor, blendAlpha, premultipliedAlpha ) {\n\n\t\tif ( blending === NoBlending ) {\n\n\t\t\tif ( currentBlendingEnabled === true ) {\n\n\t\t\t\tdisable( gl.BLEND );\n\t\t\t\tcurrentBlendingEnabled = false;\n\n\t\t\t}\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( currentBlendingEnabled === false ) {\n\n\t\t\tenable( gl.BLEND );\n\t\t\tcurrentBlendingEnabled = true;\n\n\t\t}\n\n\t\tif ( blending !== CustomBlending ) {\n\n\t\t\tif ( blending !== currentBlending || premultipliedAlpha !== currentPremultipledAlpha ) {\n\n\t\t\t\tif ( currentBlendEquation !== AddEquation || currentBlendEquationAlpha !== AddEquation ) {\n\n\t\t\t\t\tgl.blendEquation( gl.FUNC_ADD );\n\n\t\t\t\t\tcurrentBlendEquation = AddEquation;\n\t\t\t\t\tcurrentBlendEquationAlpha = AddEquation;\n\n\t\t\t\t}\n\n\t\t\t\tif ( premultipliedAlpha ) {\n\n\t\t\t\t\tswitch ( blending ) {\n\n\t\t\t\t\t\tcase NormalBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ONE, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase AdditiveBlending:\n\t\t\t\t\t\t\tgl.blendFunc( gl.ONE, gl.ONE );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase SubtractiveBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ZERO, gl.ONE_MINUS_SRC_COLOR, gl.ZERO, gl.ONE );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase MultiplyBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ZERO, gl.SRC_COLOR, gl.ZERO, gl.SRC_ALPHA );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tconsole.error( 'THREE.WebGLState: Invalid blending: ', blending );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tswitch ( blending ) {\n\n\t\t\t\t\t\tcase NormalBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase AdditiveBlending:\n\t\t\t\t\t\t\tgl.blendFunc( gl.SRC_ALPHA, gl.ONE );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase SubtractiveBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ZERO, gl.ONE_MINUS_SRC_COLOR, gl.ZERO, gl.ONE );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase MultiplyBlending:\n\t\t\t\t\t\t\tgl.blendFunc( gl.ZERO, gl.SRC_COLOR );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tconsole.error( 'THREE.WebGLState: Invalid blending: ', blending );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tcurrentBlendSrc = null;\n\t\t\t\tcurrentBlendDst = null;\n\t\t\t\tcurrentBlendSrcAlpha = null;\n\t\t\t\tcurrentBlendDstAlpha = null;\n\t\t\t\tcurrentBlendColor.set( 0, 0, 0 );\n\t\t\t\tcurrentBlendAlpha = 0;\n\n\t\t\t\tcurrentBlending = blending;\n\t\t\t\tcurrentPremultipledAlpha = premultipliedAlpha;\n\n\t\t\t}\n\n\t\t\treturn;\n\n\t\t}\n\n\t\t// custom blending\n\n\t\tblendEquationAlpha = blendEquationAlpha || blendEquation;\n\t\tblendSrcAlpha = blendSrcAlpha || blendSrc;\n\t\tblendDstAlpha = blendDstAlpha || blendDst;\n\n\t\tif ( blendEquation !== currentBlendEquation || blendEquationAlpha !== currentBlendEquationAlpha ) {\n\n\t\t\tgl.blendEquationSeparate( equationToGL[ blendEquation ], equationToGL[ blendEquationAlpha ] );\n\n\t\t\tcurrentBlendEquation = blendEquation;\n\t\t\tcurrentBlendEquationAlpha = blendEquationAlpha;\n\n\t\t}\n\n\t\tif ( blendSrc !== currentBlendSrc || blendDst !== currentBlendDst || blendSrcAlpha !== currentBlendSrcAlpha || blendDstAlpha !== currentBlendDstAlpha ) {\n\n\t\t\tgl.blendFuncSeparate( factorToGL[ blendSrc ], factorToGL[ blendDst ], factorToGL[ blendSrcAlpha ], factorToGL[ blendDstAlpha ] );\n\n\t\t\tcurrentBlendSrc = blendSrc;\n\t\t\tcurrentBlendDst = blendDst;\n\t\t\tcurrentBlendSrcAlpha = blendSrcAlpha;\n\t\t\tcurrentBlendDstAlpha = blendDstAlpha;\n\n\t\t}\n\n\t\tif ( blendColor.equals( currentBlendColor ) === false || blendAlpha !== currentBlendAlpha ) {\n\n\t\t\tgl.blendColor( blendColor.r, blendColor.g, blendColor.b, blendAlpha );\n\n\t\t\tcurrentBlendColor.copy( blendColor );\n\t\t\tcurrentBlendAlpha = blendAlpha;\n\n\t\t}\n\n\t\tcurrentBlending = blending;\n\t\tcurrentPremultipledAlpha = false;\n\n\t}\n\n\tfunction setMaterial( material, frontFaceCW ) {\n\n\t\tmaterial.side === DoubleSide\n\t\t\t? disable( gl.CULL_FACE )\n\t\t\t: enable( gl.CULL_FACE );\n\n\t\tlet flipSided = ( material.side === BackSide );\n\t\tif ( frontFaceCW ) flipSided = ! flipSided;\n\n\t\tsetFlipSided( flipSided );\n\n\t\t( material.blending === NormalBlending && material.transparent === false )\n\t\t\t? setBlending( NoBlending )\n\t\t\t: setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst, material.blendEquationAlpha, material.blendSrcAlpha, material.blendDstAlpha, material.blendColor, material.blendAlpha, material.premultipliedAlpha );\n\n\t\tdepthBuffer.setFunc( material.depthFunc );\n\t\tdepthBuffer.setTest( material.depthTest );\n\t\tdepthBuffer.setMask( material.depthWrite );\n\t\tcolorBuffer.setMask( material.colorWrite );\n\n\t\tconst stencilWrite = material.stencilWrite;\n\t\tstencilBuffer.setTest( stencilWrite );\n\t\tif ( stencilWrite ) {\n\n\t\t\tstencilBuffer.setMask( material.stencilWriteMask );\n\t\t\tstencilBuffer.setFunc( material.stencilFunc, material.stencilRef, material.stencilFuncMask );\n\t\t\tstencilBuffer.setOp( material.stencilFail, material.stencilZFail, material.stencilZPass );\n\n\t\t}\n\n\t\tsetPolygonOffset( material.polygonOffset, material.polygonOffsetFactor, material.polygonOffsetUnits );\n\n\t\tmaterial.alphaToCoverage === true\n\t\t\t? enable( gl.SAMPLE_ALPHA_TO_COVERAGE )\n\t\t\t: disable( gl.SAMPLE_ALPHA_TO_COVERAGE );\n\n\t}\n\n\t//\n\n\tfunction setFlipSided( flipSided ) {\n\n\t\tif ( currentFlipSided !== flipSided ) {\n\n\t\t\tif ( flipSided ) {\n\n\t\t\t\tgl.frontFace( gl.CW );\n\n\t\t\t} else {\n\n\t\t\t\tgl.frontFace( gl.CCW );\n\n\t\t\t}\n\n\t\t\tcurrentFlipSided = flipSided;\n\n\t\t}\n\n\t}\n\n\tfunction setCullFace( cullFace ) {\n\n\t\tif ( cullFace !== CullFaceNone ) {\n\n\t\t\tenable( gl.CULL_FACE );\n\n\t\t\tif ( cullFace !== currentCullFace ) {\n\n\t\t\t\tif ( cullFace === CullFaceBack ) {\n\n\t\t\t\t\tgl.cullFace( gl.BACK );\n\n\t\t\t\t} else if ( cullFace === CullFaceFront ) {\n\n\t\t\t\t\tgl.cullFace( gl.FRONT );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tgl.cullFace( gl.FRONT_AND_BACK );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tdisable( gl.CULL_FACE );\n\n\t\t}\n\n\t\tcurrentCullFace = cullFace;\n\n\t}\n\n\tfunction setLineWidth( width ) {\n\n\t\tif ( width !== currentLineWidth ) {\n\n\t\t\tif ( lineWidthAvailable ) gl.lineWidth( width );\n\n\t\t\tcurrentLineWidth = width;\n\n\t\t}\n\n\t}\n\n\tfunction setPolygonOffset( polygonOffset, factor, units ) {\n\n\t\tif ( polygonOffset ) {\n\n\t\t\tenable( gl.POLYGON_OFFSET_FILL );\n\n\t\t\tif ( currentPolygonOffsetFactor !== factor || currentPolygonOffsetUnits !== units ) {\n\n\t\t\t\tgl.polygonOffset( factor, units );\n\n\t\t\t\tcurrentPolygonOffsetFactor = factor;\n\t\t\t\tcurrentPolygonOffsetUnits = units;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tdisable( gl.POLYGON_OFFSET_FILL );\n\n\t\t}\n\n\t}\n\n\tfunction setScissorTest( scissorTest ) {\n\n\t\tif ( scissorTest ) {\n\n\t\t\tenable( gl.SCISSOR_TEST );\n\n\t\t} else {\n\n\t\t\tdisable( gl.SCISSOR_TEST );\n\n\t\t}\n\n\t}\n\n\t// texture\n\n\tfunction activeTexture( webglSlot ) {\n\n\t\tif ( webglSlot === undefined ) webglSlot = gl.TEXTURE0 + maxTextures - 1;\n\n\t\tif ( currentTextureSlot !== webglSlot ) {\n\n\t\t\tgl.activeTexture( webglSlot );\n\t\t\tcurrentTextureSlot = webglSlot;\n\n\t\t}\n\n\t}\n\n\tfunction bindTexture( webglType, webglTexture, webglSlot ) {\n\n\t\tif ( webglSlot === undefined ) {\n\n\t\t\tif ( currentTextureSlot === null ) {\n\n\t\t\t\twebglSlot = gl.TEXTURE0 + maxTextures - 1;\n\n\t\t\t} else {\n\n\t\t\t\twebglSlot = currentTextureSlot;\n\n\t\t\t}\n\n\t\t}\n\n\t\tlet boundTexture = currentBoundTextures[ webglSlot ];\n\n\t\tif ( boundTexture === undefined ) {\n\n\t\t\tboundTexture = { type: undefined, texture: undefined };\n\t\t\tcurrentBoundTextures[ webglSlot ] = boundTexture;\n\n\t\t}\n\n\t\tif ( boundTexture.type !== webglType || boundTexture.texture !== webglTexture ) {\n\n\t\t\tif ( currentTextureSlot !== webglSlot ) {\n\n\t\t\t\tgl.activeTexture( webglSlot );\n\t\t\t\tcurrentTextureSlot = webglSlot;\n\n\t\t\t}\n\n\t\t\tgl.bindTexture( webglType, webglTexture || emptyTextures[ webglType ] );\n\n\t\t\tboundTexture.type = webglType;\n\t\t\tboundTexture.texture = webglTexture;\n\n\t\t}\n\n\t}\n\n\tfunction unbindTexture() {\n\n\t\tconst boundTexture = currentBoundTextures[ currentTextureSlot ];\n\n\t\tif ( boundTexture !== undefined && boundTexture.type !== undefined ) {\n\n\t\t\tgl.bindTexture( boundTexture.type, null );\n\n\t\t\tboundTexture.type = undefined;\n\t\t\tboundTexture.texture = undefined;\n\n\t\t}\n\n\t}\n\n\tfunction compressedTexImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.compressedTexImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction compressedTexImage3D() {\n\n\t\ttry {\n\n\t\t\tgl.compressedTexImage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texSubImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.texSubImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texSubImage3D() {\n\n\t\ttry {\n\n\t\t\tgl.texSubImage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction compressedTexSubImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.compressedTexSubImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction compressedTexSubImage3D() {\n\n\t\ttry {\n\n\t\t\tgl.compressedTexSubImage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texStorage2D() {\n\n\t\ttry {\n\n\t\t\tgl.texStorage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texStorage3D() {\n\n\t\ttry {\n\n\t\t\tgl.texStorage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.texImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texImage3D() {\n\n\t\ttry {\n\n\t\t\tgl.texImage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction scissor( scissor ) {\n\n\t\tif ( currentScissor.equals( scissor ) === false ) {\n\n\t\t\tgl.scissor( scissor.x, scissor.y, scissor.z, scissor.w );\n\t\t\tcurrentScissor.copy( scissor );\n\n\t\t}\n\n\t}\n\n\tfunction viewport( viewport ) {\n\n\t\tif ( currentViewport.equals( viewport ) === false ) {\n\n\t\t\tgl.viewport( viewport.x, viewport.y, viewport.z, viewport.w );\n\t\t\tcurrentViewport.copy( viewport );\n\n\t\t}\n\n\t}\n\n\tfunction updateUBOMapping( uniformsGroup, program ) {\n\n\t\tlet mapping = uboProgramMap.get( program );\n\n\t\tif ( mapping === undefined ) {\n\n\t\t\tmapping = new WeakMap();\n\n\t\t\tuboProgramMap.set( program, mapping );\n\n\t\t}\n\n\t\tlet blockIndex = mapping.get( uniformsGroup );\n\n\t\tif ( blockIndex === undefined ) {\n\n\t\t\tblockIndex = gl.getUniformBlockIndex( program, uniformsGroup.name );\n\n\t\t\tmapping.set( uniformsGroup, blockIndex );\n\n\t\t}\n\n\t}\n\n\tfunction uniformBlockBinding( uniformsGroup, program ) {\n\n\t\tconst mapping = uboProgramMap.get( program );\n\t\tconst blockIndex = mapping.get( uniformsGroup );\n\n\t\tif ( uboBindings.get( program ) !== blockIndex ) {\n\n\t\t\t// bind shader specific block index to global block point\n\t\t\tgl.uniformBlockBinding( program, blockIndex, uniformsGroup.__bindingPointIndex );\n\n\t\t\tuboBindings.set( program, blockIndex );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction reset() {\n\n\t\t// reset state\n\n\t\tgl.disable( gl.BLEND );\n\t\tgl.disable( gl.CULL_FACE );\n\t\tgl.disable( gl.DEPTH_TEST );\n\t\tgl.disable( gl.POLYGON_OFFSET_FILL );\n\t\tgl.disable( gl.SCISSOR_TEST );\n\t\tgl.disable( gl.STENCIL_TEST );\n\t\tgl.disable( gl.SAMPLE_ALPHA_TO_COVERAGE );\n\n\t\tgl.blendEquation( gl.FUNC_ADD );\n\t\tgl.blendFunc( gl.ONE, gl.ZERO );\n\t\tgl.blendFuncSeparate( gl.ONE, gl.ZERO, gl.ONE, gl.ZERO );\n\t\tgl.blendColor( 0, 0, 0, 0 );\n\n\t\tgl.colorMask( true, true, true, true );\n\t\tgl.clearColor( 0, 0, 0, 0 );\n\n\t\tgl.depthMask( true );\n\t\tgl.depthFunc( gl.LESS );\n\t\tgl.clearDepth( 1 );\n\n\t\tgl.stencilMask( 0xffffffff );\n\t\tgl.stencilFunc( gl.ALWAYS, 0, 0xffffffff );\n\t\tgl.stencilOp( gl.KEEP, gl.KEEP, gl.KEEP );\n\t\tgl.clearStencil( 0 );\n\n\t\tgl.cullFace( gl.BACK );\n\t\tgl.frontFace( gl.CCW );\n\n\t\tgl.polygonOffset( 0, 0 );\n\n\t\tgl.activeTexture( gl.TEXTURE0 );\n\n\t\tgl.bindFramebuffer( gl.FRAMEBUFFER, null );\n\t\tgl.bindFramebuffer( gl.DRAW_FRAMEBUFFER, null );\n\t\tgl.bindFramebuffer( gl.READ_FRAMEBUFFER, null );\n\n\t\tgl.useProgram( null );\n\n\t\tgl.lineWidth( 1 );\n\n\t\tgl.scissor( 0, 0, gl.canvas.width, gl.canvas.height );\n\t\tgl.viewport( 0, 0, gl.canvas.width, gl.canvas.height );\n\n\t\t// reset internals\n\n\t\tenabledCapabilities = {};\n\n\t\tcurrentTextureSlot = null;\n\t\tcurrentBoundTextures = {};\n\n\t\tcurrentBoundFramebuffers = {};\n\t\tcurrentDrawbuffers = new WeakMap();\n\t\tdefaultDrawbuffers = [];\n\n\t\tcurrentProgram = null;\n\n\t\tcurrentBlendingEnabled = false;\n\t\tcurrentBlending = null;\n\t\tcurrentBlendEquation = null;\n\t\tcurrentBlendSrc = null;\n\t\tcurrentBlendDst = null;\n\t\tcurrentBlendEquationAlpha = null;\n\t\tcurrentBlendSrcAlpha = null;\n\t\tcurrentBlendDstAlpha = null;\n\t\tcurrentBlendColor = new Color( 0, 0, 0 );\n\t\tcurrentBlendAlpha = 0;\n\t\tcurrentPremultipledAlpha = false;\n\n\t\tcurrentFlipSided = null;\n\t\tcurrentCullFace = null;\n\n\t\tcurrentLineWidth = null;\n\n\t\tcurrentPolygonOffsetFactor = null;\n\t\tcurrentPolygonOffsetUnits = null;\n\n\t\tcurrentScissor.set( 0, 0, gl.canvas.width, gl.canvas.height );\n\t\tcurrentViewport.set( 0, 0, gl.canvas.width, gl.canvas.height );\n\n\t\tcolorBuffer.reset();\n\t\tdepthBuffer.reset();\n\t\tstencilBuffer.reset();\n\n\t}\n\n\treturn {\n\n\t\tbuffers: {\n\t\t\tcolor: colorBuffer,\n\t\t\tdepth: depthBuffer,\n\t\t\tstencil: stencilBuffer\n\t\t},\n\n\t\tenable: enable,\n\t\tdisable: disable,\n\n\t\tbindFramebuffer: bindFramebuffer,\n\t\tdrawBuffers: drawBuffers,\n\n\t\tuseProgram: useProgram,\n\n\t\tsetBlending: setBlending,\n\t\tsetMaterial: setMaterial,\n\n\t\tsetFlipSided: setFlipSided,\n\t\tsetCullFace: setCullFace,\n\n\t\tsetLineWidth: setLineWidth,\n\t\tsetPolygonOffset: setPolygonOffset,\n\n\t\tsetScissorTest: setScissorTest,\n\n\t\tactiveTexture: activeTexture,\n\t\tbindTexture: bindTexture,\n\t\tunbindTexture: unbindTexture,\n\t\tcompressedTexImage2D: compressedTexImage2D,\n\t\tcompressedTexImage3D: compressedTexImage3D,\n\t\ttexImage2D: texImage2D,\n\t\ttexImage3D: texImage3D,\n\n\t\tupdateUBOMapping: updateUBOMapping,\n\t\tuniformBlockBinding: uniformBlockBinding,\n\n\t\ttexStorage2D: texStorage2D,\n\t\ttexStorage3D: texStorage3D,\n\t\ttexSubImage2D: texSubImage2D,\n\t\ttexSubImage3D: texSubImage3D,\n\t\tcompressedTexSubImage2D: compressedTexSubImage2D,\n\t\tcompressedTexSubImage3D: compressedTexSubImage3D,\n\n\t\tscissor: scissor,\n\t\tviewport: viewport,\n\n\t\treset: reset\n\n\t};\n\n}\n\nfunction contain( texture, aspect ) {\n\n\tconst imageAspect = ( texture.image && texture.image.width ) ? texture.image.width / texture.image.height : 1;\n\n\tif ( imageAspect > aspect ) {\n\n\t\ttexture.repeat.x = 1;\n\t\ttexture.repeat.y = imageAspect / aspect;\n\n\t\ttexture.offset.x = 0;\n\t\ttexture.offset.y = ( 1 - texture.repeat.y ) / 2;\n\n\t} else {\n\n\t\ttexture.repeat.x = aspect / imageAspect;\n\t\ttexture.repeat.y = 1;\n\n\t\ttexture.offset.x = ( 1 - texture.repeat.x ) / 2;\n\t\ttexture.offset.y = 0;\n\n\t}\n\n\treturn texture;\n\n}\n\nfunction cover( texture, aspect ) {\n\n\tconst imageAspect = ( texture.image && texture.image.width ) ? texture.image.width / texture.image.height : 1;\n\n\tif ( imageAspect > aspect ) {\n\n\t\ttexture.repeat.x = aspect / imageAspect;\n\t\ttexture.repeat.y = 1;\n\n\t\ttexture.offset.x = ( 1 - texture.repeat.x ) / 2;\n\t\ttexture.offset.y = 0;\n\n\t} else {\n\n\t\ttexture.repeat.x = 1;\n\t\ttexture.repeat.y = imageAspect / aspect;\n\n\t\ttexture.offset.x = 0;\n\t\ttexture.offset.y = ( 1 - texture.repeat.y ) / 2;\n\n\t}\n\n\treturn texture;\n\n}\n\nfunction fill( texture ) {\n\n\ttexture.repeat.x = 1;\n\ttexture.repeat.y = 1;\n\n\ttexture.offset.x = 0;\n\ttexture.offset.y = 0;\n\n\treturn texture;\n\n}\n\n\n\n/**\n * Given the width, height, format, and type of a texture. Determines how many\n * bytes must be used to represent the texture.\n */\nfunction getByteLength( width, height, format, type ) {\n\n\tconst typeByteLength = getTextureTypeByteLength( type );\n\n\tswitch ( format ) {\n\n\t\t// https://registry.khronos.org/OpenGL-Refpages/es3.0/html/glTexImage2D.xhtml\n\t\tcase AlphaFormat:\n\t\t\treturn width * height;\n\t\tcase LuminanceFormat:\n\t\t\treturn width * height;\n\t\tcase LuminanceAlphaFormat:\n\t\t\treturn width * height * 2;\n\t\tcase RedFormat:\n\t\t\treturn ( ( width * height ) / typeByteLength.components ) * typeByteLength.byteLength;\n\t\tcase RedIntegerFormat:\n\t\t\treturn ( ( width * height ) / typeByteLength.components ) * typeByteLength.byteLength;\n\t\tcase RGFormat:\n\t\t\treturn ( ( width * height * 2 ) / typeByteLength.components ) * typeByteLength.byteLength;\n\t\tcase RGIntegerFormat:\n\t\t\treturn ( ( width * height * 2 ) / typeByteLength.components ) * typeByteLength.byteLength;\n\t\tcase RGBFormat:\n\t\t\treturn ( ( width * height * 3 ) / typeByteLength.components ) * typeByteLength.byteLength;\n\t\tcase RGBAFormat:\n\t\t\treturn ( ( width * height * 4 ) / typeByteLength.components ) * typeByteLength.byteLength;\n\t\tcase RGBAIntegerFormat:\n\t\t\treturn ( ( width * height * 4 ) / typeByteLength.components ) * typeByteLength.byteLength;\n\n\t\t// https://registry.khronos.org/webgl/extensions/WEBGL_compressed_texture_s3tc_srgb/\n\t\tcase RGB_S3TC_DXT1_Format:\n\t\tcase RGBA_S3TC_DXT1_Format:\n\t\t\treturn Math.floor( ( width + 3 ) / 4 ) * Math.floor( ( height + 3 ) / 4 ) * 8;\n\t\tcase RGBA_S3TC_DXT3_Format:\n\t\tcase RGBA_S3TC_DXT5_Format:\n\t\t\treturn Math.floor( ( width + 3 ) / 4 ) * Math.floor( ( height + 3 ) / 4 ) * 16;\n\n\t\t// https://registry.khronos.org/webgl/extensions/WEBGL_compressed_texture_pvrtc/\n\t\tcase RGB_PVRTC_2BPPV1_Format:\n\t\tcase RGBA_PVRTC_2BPPV1_Format:\n\t\t\treturn ( Math.max( width, 16 ) * Math.max( height, 8 ) ) / 4;\n\t\tcase RGB_PVRTC_4BPPV1_Format:\n\t\tcase RGBA_PVRTC_4BPPV1_Format:\n\t\t\treturn ( Math.max( width, 8 ) * Math.max( height, 8 ) ) / 2;\n\n\t\t// https://registry.khronos.org/webgl/extensions/WEBGL_compressed_texture_etc/\n\t\tcase RGB_ETC1_Format:\n\t\tcase RGB_ETC2_Format:\n\t\t\treturn Math.floor( ( width + 3 ) / 4 ) * Math.floor( ( height + 3 ) / 4 ) * 8;\n\t\tcase RGBA_ETC2_EAC_Format:\n\t\t\treturn Math.floor( ( width + 3 ) / 4 ) * Math.floor( ( height + 3 ) / 4 ) * 16;\n\n\t\t// https://registry.khronos.org/webgl/extensions/WEBGL_compressed_texture_astc/\n\t\tcase RGBA_ASTC_4x4_Format:\n\t\t\treturn Math.floor( ( width + 3 ) / 4 ) * Math.floor( ( height + 3 ) / 4 ) * 16;\n\t\tcase RGBA_ASTC_5x4_Format:\n\t\t\treturn Math.floor( ( width + 4 ) / 5 ) * Math.floor( ( height + 3 ) / 4 ) * 16;\n\t\tcase RGBA_ASTC_5x5_Format:\n\t\t\treturn Math.floor( ( width + 4 ) / 5 ) * Math.floor( ( height + 4 ) / 5 ) * 16;\n\t\tcase RGBA_ASTC_6x5_Format:\n\t\t\treturn Math.floor( ( width + 5 ) / 6 ) * Math.floor( ( height + 4 ) / 5 ) * 16;\n\t\tcase RGBA_ASTC_6x6_Format:\n\t\t\treturn Math.floor( ( width + 5 ) / 6 ) * Math.floor( ( height + 5 ) / 6 ) * 16;\n\t\tcase RGBA_ASTC_8x5_Format:\n\t\t\treturn Math.floor( ( width + 7 ) / 8 ) * Math.floor( ( height + 4 ) / 5 ) * 16;\n\t\tcase RGBA_ASTC_8x6_Format:\n\t\t\treturn Math.floor( ( width + 7 ) / 8 ) * Math.floor( ( height + 5 ) / 6 ) * 16;\n\t\tcase RGBA_ASTC_8x8_Format:\n\t\t\treturn Math.floor( ( width + 7 ) / 8 ) * Math.floor( ( height + 7 ) / 8 ) * 16;\n\t\tcase RGBA_ASTC_10x5_Format:\n\t\t\treturn Math.floor( ( width + 9 ) / 10 ) * Math.floor( ( height + 4 ) / 5 ) * 16;\n\t\tcase RGBA_ASTC_10x6_Format:\n\t\t\treturn Math.floor( ( width + 9 ) / 10 ) * Math.floor( ( height + 5 ) / 6 ) * 16;\n\t\tcase RGBA_ASTC_10x8_Format:\n\t\t\treturn Math.floor( ( width + 9 ) / 10 ) * Math.floor( ( height + 7 ) / 8 ) * 16;\n\t\tcase RGBA_ASTC_10x10_Format:\n\t\t\treturn Math.floor( ( width + 9 ) / 10 ) * Math.floor( ( height + 9 ) / 10 ) * 16;\n\t\tcase RGBA_ASTC_12x10_Format:\n\t\t\treturn Math.floor( ( width + 11 ) / 12 ) * Math.floor( ( height + 9 ) / 10 ) * 16;\n\t\tcase RGBA_ASTC_12x12_Format:\n\t\t\treturn Math.floor( ( width + 11 ) / 12 ) * Math.floor( ( height + 11 ) / 12 ) * 16;\n\n\t\t// https://registry.khronos.org/webgl/extensions/EXT_texture_compression_bptc/\n\t\tcase RGBA_BPTC_Format:\n\t\tcase RGB_BPTC_SIGNED_Format:\n\t\tcase RGB_BPTC_UNSIGNED_Format:\n\t\t\treturn Math.ceil( width / 4 ) * Math.ceil( height / 4 ) * 16;\n\n\t\t// https://registry.khronos.org/webgl/extensions/EXT_texture_compression_rgtc/\n\t\tcase RED_RGTC1_Format:\n\t\tcase SIGNED_RED_RGTC1_Format:\n\t\t\treturn Math.ceil( width / 4 ) * Math.ceil( height / 4 ) * 8;\n\t\tcase RED_GREEN_RGTC2_Format:\n\t\tcase SIGNED_RED_GREEN_RGTC2_Format:\n\t\t\treturn Math.ceil( width / 4 ) * Math.ceil( height / 4 ) * 16;\n\n\t}\n\n\tthrow new Error(\n\t\t`Unable to determine texture byte length for ${format} format.`,\n\t);\n\n}\n\nfunction getTextureTypeByteLength( type ) {\n\n\tswitch ( type ) {\n\n\t\tcase UnsignedByteType:\n\t\tcase ByteType:\n\t\t\treturn { byteLength: 1, components: 1 };\n\t\tcase UnsignedShortType:\n\t\tcase ShortType:\n\t\tcase HalfFloatType:\n\t\t\treturn { byteLength: 2, components: 1 };\n\t\tcase UnsignedShort4444Type:\n\t\tcase UnsignedShort5551Type:\n\t\t\treturn { byteLength: 2, components: 4 };\n\t\tcase UnsignedIntType:\n\t\tcase IntType:\n\t\tcase FloatType:\n\t\t\treturn { byteLength: 4, components: 1 };\n\t\tcase UnsignedInt5999Type:\n\t\t\treturn { byteLength: 4, components: 3 };\n\n\t}\n\n\tthrow new Error( `Unknown texture type ${type}.` );\n\n}\n\nconst TextureUtils = {\n\tcontain,\n\tcover,\n\tfill,\n\tgetByteLength\n};\n\nfunction WebGLTextures( _gl, extensions, state, properties, capabilities, utils, info ) {\n\n\tconst multisampledRTTExt = extensions.has( 'WEBGL_multisampled_render_to_texture' ) ? extensions.get( 'WEBGL_multisampled_render_to_texture' ) : null;\n\tconst supportsInvalidateFramebuffer = typeof navigator === 'undefined' ? false : /OculusBrowser/g.test( navigator.userAgent );\n\n\tconst _imageDimensions = new Vector2();\n\tconst _videoTextures = new WeakMap();\n\tlet _canvas;\n\n\tconst _sources = new WeakMap(); // maps WebglTexture objects to instances of Source\n\n\t// cordova iOS (as of 5.0) still uses UIWebView, which provides OffscreenCanvas,\n\t// also OffscreenCanvas.getContext(\"webgl\"), but not OffscreenCanvas.getContext(\"2d\")!\n\t// Some implementations may only implement OffscreenCanvas partially (e.g. lacking 2d).\n\n\tlet useOffscreenCanvas = false;\n\n\ttry {\n\n\t\tuseOffscreenCanvas = typeof OffscreenCanvas !== 'undefined'\n\t\t\t// eslint-disable-next-line compat/compat\n\t\t\t&& ( new OffscreenCanvas( 1, 1 ).getContext( '2d' ) ) !== null;\n\n\t} catch ( err ) {\n\n\t\t// Ignore any errors\n\n\t}\n\n\tfunction createCanvas( width, height ) {\n\n\t\t// Use OffscreenCanvas when available. Specially needed in web workers\n\n\t\treturn useOffscreenCanvas ?\n\t\t\t// eslint-disable-next-line compat/compat\n\t\t\tnew OffscreenCanvas( width, height ) : createElementNS( 'canvas' );\n\n\t}\n\n\tfunction resizeImage( image, needsNewCanvas, maxSize ) {\n\n\t\tlet scale = 1;\n\n\t\tconst dimensions = getDimensions( image );\n\n\t\t// handle case if texture exceeds max size\n\n\t\tif ( dimensions.width > maxSize || dimensions.height > maxSize ) {\n\n\t\t\tscale = maxSize / Math.max( dimensions.width, dimensions.height );\n\n\t\t}\n\n\t\t// only perform resize if necessary\n\n\t\tif ( scale < 1 ) {\n\n\t\t\t// only perform resize for certain image types\n\n\t\t\tif ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||\n\t\t\t\t( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||\n\t\t\t\t( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ||\n\t\t\t\t( typeof VideoFrame !== 'undefined' && image instanceof VideoFrame ) ) {\n\n\t\t\t\tconst width = Math.floor( scale * dimensions.width );\n\t\t\t\tconst height = Math.floor( scale * dimensions.height );\n\n\t\t\t\tif ( _canvas === undefined ) _canvas = createCanvas( width, height );\n\n\t\t\t\t// cube textures can't reuse the same canvas\n\n\t\t\t\tconst canvas = needsNewCanvas ? createCanvas( width, height ) : _canvas;\n\n\t\t\t\tcanvas.width = width;\n\t\t\t\tcanvas.height = height;\n\n\t\t\t\tconst context = canvas.getContext( '2d' );\n\t\t\t\tcontext.drawImage( image, 0, 0, width, height );\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture has been resized from (' + dimensions.width + 'x' + dimensions.height + ') to (' + width + 'x' + height + ').' );\n\n\t\t\t\treturn canvas;\n\n\t\t\t} else {\n\n\t\t\t\tif ( 'data' in image ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Image in DataTexture is too big (' + dimensions.width + 'x' + dimensions.height + ').' );\n\n\t\t\t\t}\n\n\t\t\t\treturn image;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn image;\n\n\t}\n\n\tfunction textureNeedsGenerateMipmaps( texture ) {\n\n\t\treturn texture.generateMipmaps && texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter;\n\n\t}\n\n\tfunction generateMipmap( target ) {\n\n\t\t_gl.generateMipmap( target );\n\n\t}\n\n\tfunction getInternalFormat( internalFormatName, glFormat, glType, colorSpace, forceLinearTransfer = false ) {\n\n\t\tif ( internalFormatName !== null ) {\n\n\t\t\tif ( _gl[ internalFormatName ] !== undefined ) return _gl[ internalFormatName ];\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format \\'' + internalFormatName + '\\'' );\n\n\t\t}\n\n\t\tlet internalFormat = glFormat;\n\n\t\tif ( glFormat === _gl.RED ) {\n\n\t\t\tif ( glType === _gl.FLOAT ) internalFormat = _gl.R32F;\n\t\t\tif ( glType === _gl.HALF_FLOAT ) internalFormat = _gl.R16F;\n\t\t\tif ( glType === _gl.UNSIGNED_BYTE ) internalFormat = _gl.R8;\n\n\t\t}\n\n\t\tif ( glFormat === _gl.RED_INTEGER ) {\n\n\t\t\tif ( glType === _gl.UNSIGNED_BYTE ) internalFormat = _gl.R8UI;\n\t\t\tif ( glType === _gl.UNSIGNED_SHORT ) internalFormat = _gl.R16UI;\n\t\t\tif ( glType === _gl.UNSIGNED_INT ) internalFormat = _gl.R32UI;\n\t\t\tif ( glType === _gl.BYTE ) internalFormat = _gl.R8I;\n\t\t\tif ( glType === _gl.SHORT ) internalFormat = _gl.R16I;\n\t\t\tif ( glType === _gl.INT ) internalFormat = _gl.R32I;\n\n\t\t}\n\n\t\tif ( glFormat === _gl.RG ) {\n\n\t\t\tif ( glType === _gl.FLOAT ) internalFormat = _gl.RG32F;\n\t\t\tif ( glType === _gl.HALF_FLOAT ) internalFormat = _gl.RG16F;\n\t\t\tif ( glType === _gl.UNSIGNED_BYTE ) internalFormat = _gl.RG8;\n\n\t\t}\n\n\t\tif ( glFormat === _gl.RG_INTEGER ) {\n\n\t\t\tif ( glType === _gl.UNSIGNED_BYTE ) internalFormat = _gl.RG8UI;\n\t\t\tif ( glType === _gl.UNSIGNED_SHORT ) internalFormat = _gl.RG16UI;\n\t\t\tif ( glType === _gl.UNSIGNED_INT ) internalFormat = _gl.RG32UI;\n\t\t\tif ( glType === _gl.BYTE ) internalFormat = _gl.RG8I;\n\t\t\tif ( glType === _gl.SHORT ) internalFormat = _gl.RG16I;\n\t\t\tif ( glType === _gl.INT ) internalFormat = _gl.RG32I;\n\n\t\t}\n\n\t\tif ( glFormat === _gl.RGB ) {\n\n\t\t\tif ( glType === _gl.UNSIGNED_INT_5_9_9_9_REV ) internalFormat = _gl.RGB9_E5;\n\n\t\t}\n\n\t\tif ( glFormat === _gl.RGBA ) {\n\n\t\t\tconst transfer = forceLinearTransfer ? LinearTransfer : ColorManagement.getTransfer( colorSpace );\n\n\t\t\tif ( glType === _gl.FLOAT ) internalFormat = _gl.RGBA32F;\n\t\t\tif ( glType === _gl.HALF_FLOAT ) internalFormat = _gl.RGBA16F;\n\t\t\tif ( glType === _gl.UNSIGNED_BYTE ) internalFormat = ( transfer === SRGBTransfer ) ? _gl.SRGB8_ALPHA8 : _gl.RGBA8;\n\t\t\tif ( glType === _gl.UNSIGNED_SHORT_4_4_4_4 ) internalFormat = _gl.RGBA4;\n\t\t\tif ( glType === _gl.UNSIGNED_SHORT_5_5_5_1 ) internalFormat = _gl.RGB5_A1;\n\n\t\t}\n\n\t\tif ( internalFormat === _gl.R16F || internalFormat === _gl.R32F ||\n\t\t\tinternalFormat === _gl.RG16F || internalFormat === _gl.RG32F ||\n\t\t\tinternalFormat === _gl.RGBA16F || internalFormat === _gl.RGBA32F ) {\n\n\t\t\textensions.get( 'EXT_color_buffer_float' );\n\n\t\t}\n\n\t\treturn internalFormat;\n\n\t}\n\n\tfunction getInternalDepthFormat( useStencil, depthType ) {\n\n\t\tlet glInternalFormat;\n\t\tif ( useStencil ) {\n\n\t\t\tif ( depthType === null || depthType === UnsignedIntType || depthType === UnsignedInt248Type ) {\n\n\t\t\t\tglInternalFormat = _gl.DEPTH24_STENCIL8;\n\n\t\t\t} else if ( depthType === FloatType ) {\n\n\t\t\t\tglInternalFormat = _gl.DEPTH32F_STENCIL8;\n\n\t\t\t} else if ( depthType === UnsignedShortType ) {\n\n\t\t\t\tglInternalFormat = _gl.DEPTH24_STENCIL8;\n\t\t\t\tconsole.warn( 'DepthTexture: 16 bit depth attachment is not supported with stencil. Using 24-bit attachment.' );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tif ( depthType === null || depthType === UnsignedIntType || depthType === UnsignedInt248Type ) {\n\n\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT24;\n\n\t\t\t} else if ( depthType === FloatType ) {\n\n\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT32F;\n\n\t\t\t} else if ( depthType === UnsignedShortType ) {\n\n\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT16;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn glInternalFormat;\n\n\t}\n\n\tfunction getMipLevels( texture, image ) {\n\n\t\tif ( textureNeedsGenerateMipmaps( texture ) === true || ( texture.isFramebufferTexture && texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter ) ) {\n\n\t\t\treturn Math.log2( Math.max( image.width, image.height ) ) + 1;\n\n\t\t} else if ( texture.mipmaps !== undefined && texture.mipmaps.length > 0 ) {\n\n\t\t\t// user-defined mipmaps\n\n\t\t\treturn texture.mipmaps.length;\n\n\t\t} else if ( texture.isCompressedTexture && Array.isArray( texture.image ) ) {\n\n\t\t\treturn image.mipmaps.length;\n\n\t\t} else {\n\n\t\t\t// texture without mipmaps (only base level)\n\n\t\t\treturn 1;\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction onTextureDispose( event ) {\n\n\t\tconst texture = event.target;\n\n\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\n\n\t\tdeallocateTexture( texture );\n\n\t\tif ( texture.isVideoTexture ) {\n\n\t\t\t_videoTextures.delete( texture );\n\n\t\t}\n\n\t}\n\n\tfunction onRenderTargetDispose( event ) {\n\n\t\tconst renderTarget = event.target;\n\n\t\trenderTarget.removeEventListener( 'dispose', onRenderTargetDispose );\n\n\t\tdeallocateRenderTarget( renderTarget );\n\n\t}\n\n\t//\n\n\tfunction deallocateTexture( texture ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( textureProperties.__webglInit === undefined ) return;\n\n\t\t// check if it's necessary to remove the WebGLTexture object\n\n\t\tconst source = texture.source;\n\t\tconst webglTextures = _sources.get( source );\n\n\t\tif ( webglTextures ) {\n\n\t\t\tconst webglTexture = webglTextures[ textureProperties.__cacheKey ];\n\t\t\twebglTexture.usedTimes --;\n\n\t\t\t// the WebGLTexture object is not used anymore, remove it\n\n\t\t\tif ( webglTexture.usedTimes === 0 ) {\n\n\t\t\t\tdeleteTexture( texture );\n\n\t\t\t}\n\n\t\t\t// remove the weak map entry if no WebGLTexture uses the source anymore\n\n\t\t\tif ( Object.keys( webglTextures ).length === 0 ) {\n\n\t\t\t\t_sources.delete( source );\n\n\t\t\t}\n\n\t\t}\n\n\t\tproperties.remove( texture );\n\n\t}\n\n\tfunction deleteTexture( texture ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\t\t_gl.deleteTexture( textureProperties.__webglTexture );\n\n\t\tconst source = texture.source;\n\t\tconst webglTextures = _sources.get( source );\n\t\tdelete webglTextures[ textureProperties.__cacheKey ];\n\n\t\tinfo.memory.textures --;\n\n\t}\n\n\tfunction deallocateRenderTarget( renderTarget ) {\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\tif ( renderTarget.depthTexture ) {\n\n\t\t\trenderTarget.depthTexture.dispose();\n\n\t\t}\n\n\t\tif ( renderTarget.isWebGLCubeRenderTarget ) {\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\tif ( Array.isArray( renderTargetProperties.__webglFramebuffer[ i ] ) ) {\n\n\t\t\t\t\tfor ( let level = 0; level < renderTargetProperties.__webglFramebuffer[ i ].length; level ++ ) _gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer[ i ][ level ] );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer[ i ] );\n\n\t\t\t\t}\n\n\t\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer[ i ] );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tif ( Array.isArray( renderTargetProperties.__webglFramebuffer ) ) {\n\n\t\t\t\tfor ( let level = 0; level < renderTargetProperties.__webglFramebuffer.length; level ++ ) _gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer[ level ] );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer );\n\n\t\t\t}\n\n\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer );\n\t\t\tif ( renderTargetProperties.__webglMultisampledFramebuffer ) _gl.deleteFramebuffer( renderTargetProperties.__webglMultisampledFramebuffer );\n\n\t\t\tif ( renderTargetProperties.__webglColorRenderbuffer ) {\n\n\t\t\t\tfor ( let i = 0; i < renderTargetProperties.__webglColorRenderbuffer.length; i ++ ) {\n\n\t\t\t\t\tif ( renderTargetProperties.__webglColorRenderbuffer[ i ] ) _gl.deleteRenderbuffer( renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( renderTargetProperties.__webglDepthRenderbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthRenderbuffer );\n\n\t\t}\n\n\t\tconst textures = renderTarget.textures;\n\n\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\tconst attachmentProperties = properties.get( textures[ i ] );\n\n\t\t\tif ( attachmentProperties.__webglTexture ) {\n\n\t\t\t\t_gl.deleteTexture( attachmentProperties.__webglTexture );\n\n\t\t\t\tinfo.memory.textures --;\n\n\t\t\t}\n\n\t\t\tproperties.remove( textures[ i ] );\n\n\t\t}\n\n\t\tproperties.remove( renderTarget );\n\n\t}\n\n\t//\n\n\tlet textureUnits = 0;\n\n\tfunction resetTextureUnits() {\n\n\t\ttextureUnits = 0;\n\n\t}\n\n\tfunction allocateTextureUnit() {\n\n\t\tconst textureUnit = textureUnits;\n\n\t\tif ( textureUnit >= capabilities.maxTextures ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLTextures: Trying to use ' + textureUnit + ' texture units while this GPU supports only ' + capabilities.maxTextures );\n\n\t\t}\n\n\t\ttextureUnits += 1;\n\n\t\treturn textureUnit;\n\n\t}\n\n\tfunction getTextureCacheKey( texture ) {\n\n\t\tconst array = [];\n\n\t\tarray.push( texture.wrapS );\n\t\tarray.push( texture.wrapT );\n\t\tarray.push( texture.wrapR || 0 );\n\t\tarray.push( texture.magFilter );\n\t\tarray.push( texture.minFilter );\n\t\tarray.push( texture.anisotropy );\n\t\tarray.push( texture.internalFormat );\n\t\tarray.push( texture.format );\n\t\tarray.push( texture.type );\n\t\tarray.push( texture.generateMipmaps );\n\t\tarray.push( texture.premultiplyAlpha );\n\t\tarray.push( texture.flipY );\n\t\tarray.push( texture.unpackAlignment );\n\t\tarray.push( texture.colorSpace );\n\n\t\treturn array.join();\n\n\t}\n\n\t//\n\n\tfunction setTexture2D( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.isVideoTexture ) updateVideoTexture( texture );\n\n\t\tif ( texture.isRenderTargetTexture === false && texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tconst image = texture.image;\n\n\t\t\tif ( image === null ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but no image data found.' );\n\n\t\t\t} else if ( image.complete === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but image is incomplete' );\n\n\t\t\t} else {\n\n\t\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.bindTexture( _gl.TEXTURE_2D, textureProperties.__webglTexture, _gl.TEXTURE0 + slot );\n\n\t}\n\n\tfunction setTexture2DArray( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\treturn;\n\n\t\t}\n\n\t\tstate.bindTexture( _gl.TEXTURE_2D_ARRAY, textureProperties.__webglTexture, _gl.TEXTURE0 + slot );\n\n\t}\n\n\tfunction setTexture3D( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\treturn;\n\n\t\t}\n\n\t\tstate.bindTexture( _gl.TEXTURE_3D, textureProperties.__webglTexture, _gl.TEXTURE0 + slot );\n\n\t}\n\n\tfunction setTextureCube( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tuploadCubeTexture( textureProperties, texture, slot );\n\t\t\treturn;\n\n\t\t}\n\n\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__webglTexture, _gl.TEXTURE0 + slot );\n\n\t}\n\n\tconst wrappingToGL = {\n\t\t[ RepeatWrapping ]: _gl.REPEAT,\n\t\t[ ClampToEdgeWrapping ]: _gl.CLAMP_TO_EDGE,\n\t\t[ MirroredRepeatWrapping ]: _gl.MIRRORED_REPEAT\n\t};\n\n\tconst filterToGL = {\n\t\t[ NearestFilter ]: _gl.NEAREST,\n\t\t[ NearestMipmapNearestFilter ]: _gl.NEAREST_MIPMAP_NEAREST,\n\t\t[ NearestMipmapLinearFilter ]: _gl.NEAREST_MIPMAP_LINEAR,\n\n\t\t[ LinearFilter ]: _gl.LINEAR,\n\t\t[ LinearMipmapNearestFilter ]: _gl.LINEAR_MIPMAP_NEAREST,\n\t\t[ LinearMipmapLinearFilter ]: _gl.LINEAR_MIPMAP_LINEAR\n\t};\n\n\tconst compareToGL = {\n\t\t[ NeverCompare ]: _gl.NEVER,\n\t\t[ AlwaysCompare ]: _gl.ALWAYS,\n\t\t[ LessCompare ]: _gl.LESS,\n\t\t[ LessEqualCompare ]: _gl.LEQUAL,\n\t\t[ EqualCompare ]: _gl.EQUAL,\n\t\t[ GreaterEqualCompare ]: _gl.GEQUAL,\n\t\t[ GreaterCompare ]: _gl.GREATER,\n\t\t[ NotEqualCompare ]: _gl.NOTEQUAL\n\t};\n\n\tfunction setTextureParameters( textureType, texture ) {\n\n\t\tif ( texture.type === FloatType && extensions.has( 'OES_texture_float_linear' ) === false &&\n\t\t\t( texture.magFilter === LinearFilter || texture.magFilter === LinearMipmapNearestFilter || texture.magFilter === NearestMipmapLinearFilter || texture.magFilter === LinearMipmapLinearFilter ||\n\t\t\ttexture.minFilter === LinearFilter || texture.minFilter === LinearMipmapNearestFilter || texture.minFilter === NearestMipmapLinearFilter || texture.minFilter === LinearMipmapLinearFilter ) ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Unable to use linear filtering with floating point textures. OES_texture_float_linear not supported on this device.' );\n\n\t\t}\n\n\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_S, wrappingToGL[ texture.wrapS ] );\n\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_T, wrappingToGL[ texture.wrapT ] );\n\n\t\tif ( textureType === _gl.TEXTURE_3D || textureType === _gl.TEXTURE_2D_ARRAY ) {\n\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_R, wrappingToGL[ texture.wrapR ] );\n\n\t\t}\n\n\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MAG_FILTER, filterToGL[ texture.magFilter ] );\n\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MIN_FILTER, filterToGL[ texture.minFilter ] );\n\n\t\tif ( texture.compareFunction ) {\n\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_COMPARE_MODE, _gl.COMPARE_REF_TO_TEXTURE );\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_COMPARE_FUNC, compareToGL[ texture.compareFunction ] );\n\n\t\t}\n\n\t\tif ( extensions.has( 'EXT_texture_filter_anisotropic' ) === true ) {\n\n\t\t\tif ( texture.magFilter === NearestFilter ) return;\n\t\t\tif ( texture.minFilter !== NearestMipmapLinearFilter && texture.minFilter !== LinearMipmapLinearFilter ) return;\n\t\t\tif ( texture.type === FloatType && extensions.has( 'OES_texture_float_linear' ) === false ) return; // verify extension\n\n\t\t\tif ( texture.anisotropy > 1 || properties.get( texture ).__currentAnisotropy ) {\n\n\t\t\t\tconst extension = extensions.get( 'EXT_texture_filter_anisotropic' );\n\t\t\t\t_gl.texParameterf( textureType, extension.TEXTURE_MAX_ANISOTROPY_EXT, Math.min( texture.anisotropy, capabilities.getMaxAnisotropy() ) );\n\t\t\t\tproperties.get( texture ).__currentAnisotropy = texture.anisotropy;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction initTexture( textureProperties, texture ) {\n\n\t\tlet forceUpload = false;\n\n\t\tif ( textureProperties.__webglInit === undefined ) {\n\n\t\t\ttextureProperties.__webglInit = true;\n\n\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t}\n\n\t\t// create Source <-> WebGLTextures mapping if necessary\n\n\t\tconst source = texture.source;\n\t\tlet webglTextures = _sources.get( source );\n\n\t\tif ( webglTextures === undefined ) {\n\n\t\t\twebglTextures = {};\n\t\t\t_sources.set( source, webglTextures );\n\n\t\t}\n\n\t\t// check if there is already a WebGLTexture object for the given texture parameters\n\n\t\tconst textureCacheKey = getTextureCacheKey( texture );\n\n\t\tif ( textureCacheKey !== textureProperties.__cacheKey ) {\n\n\t\t\t// if not, create a new instance of WebGLTexture\n\n\t\t\tif ( webglTextures[ textureCacheKey ] === undefined ) {\n\n\t\t\t\t// create new entry\n\n\t\t\t\twebglTextures[ textureCacheKey ] = {\n\t\t\t\t\ttexture: _gl.createTexture(),\n\t\t\t\t\tusedTimes: 0\n\t\t\t\t};\n\n\t\t\t\tinfo.memory.textures ++;\n\n\t\t\t\t// when a new instance of WebGLTexture was created, a texture upload is required\n\t\t\t\t// even if the image contents are identical\n\n\t\t\t\tforceUpload = true;\n\n\t\t\t}\n\n\t\t\twebglTextures[ textureCacheKey ].usedTimes ++;\n\n\t\t\t// every time the texture cache key changes, it's necessary to check if an instance of\n\t\t\t// WebGLTexture can be deleted in order to avoid a memory leak.\n\n\t\t\tconst webglTexture = webglTextures[ textureProperties.__cacheKey ];\n\n\t\t\tif ( webglTexture !== undefined ) {\n\n\t\t\t\twebglTextures[ textureProperties.__cacheKey ].usedTimes --;\n\n\t\t\t\tif ( webglTexture.usedTimes === 0 ) {\n\n\t\t\t\t\tdeleteTexture( texture );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// store references to cache key and WebGLTexture object\n\n\t\t\ttextureProperties.__cacheKey = textureCacheKey;\n\t\t\ttextureProperties.__webglTexture = webglTextures[ textureCacheKey ].texture;\n\n\t\t}\n\n\t\treturn forceUpload;\n\n\t}\n\n\tfunction uploadTexture( textureProperties, texture, slot ) {\n\n\t\tlet textureType = _gl.TEXTURE_2D;\n\n\t\tif ( texture.isDataArrayTexture || texture.isCompressedArrayTexture ) textureType = _gl.TEXTURE_2D_ARRAY;\n\t\tif ( texture.isData3DTexture ) textureType = _gl.TEXTURE_3D;\n\n\t\tconst forceUpload = initTexture( textureProperties, texture );\n\t\tconst source = texture.source;\n\n\t\tstate.bindTexture( textureType, textureProperties.__webglTexture, _gl.TEXTURE0 + slot );\n\n\t\tconst sourceProperties = properties.get( source );\n\n\t\tif ( source.version !== sourceProperties.__version || forceUpload === true ) {\n\n\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\n\t\t\tconst workingPrimaries = ColorManagement.getPrimaries( ColorManagement.workingColorSpace );\n\t\t\tconst texturePrimaries = texture.colorSpace === NoColorSpace ? null : ColorManagement.getPrimaries( texture.colorSpace );\n\t\t\tconst unpackConversion = texture.colorSpace === NoColorSpace || workingPrimaries === texturePrimaries ? _gl.NONE : _gl.BROWSER_DEFAULT_WEBGL;\n\n\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, texture.flipY );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, texture.premultiplyAlpha );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ALIGNMENT, texture.unpackAlignment );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_COLORSPACE_CONVERSION_WEBGL, unpackConversion );\n\n\t\t\tlet image = resizeImage( texture.image, false, capabilities.maxTextureSize );\n\t\t\timage = verifyColorSpace( texture, image );\n\n\t\t\tconst glFormat = utils.convert( texture.format, texture.colorSpace );\n\n\t\t\tconst glType = utils.convert( texture.type );\n\t\t\tlet glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.colorSpace, texture.isVideoTexture );\n\n\t\t\tsetTextureParameters( textureType, texture );\n\n\t\t\tlet mipmap;\n\t\t\tconst mipmaps = texture.mipmaps;\n\n\t\t\tconst useTexStorage = ( texture.isVideoTexture !== true );\n\t\t\tconst allocateMemory = ( sourceProperties.__version === undefined ) || ( forceUpload === true );\n\t\t\tconst dataReady = source.dataReady;\n\t\t\tconst levels = getMipLevels( texture, image );\n\n\t\t\tif ( texture.isDepthTexture ) {\n\n\t\t\t\tglInternalFormat = getInternalDepthFormat( texture.format === DepthStencilFormat, texture.type );\n\n\t\t\t\t//\n\n\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, 1, glInternalFormat, image.width, image.height );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, null );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isDataTexture ) {\n\n\t\t\t\t// use manually created mipmaps if available\n\t\t\t\t// if there are no manual mipmaps\n\t\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\n\t\t\t\tif ( mipmaps.length > 0 ) {\n\n\t\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, levels, glInternalFormat, mipmaps[ 0 ].width, mipmaps[ 0 ].height );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_2D, i, 0, 0, mipmap.width, mipmap.height, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.generateMipmaps = false;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, levels, glInternalFormat, image.width, image.height );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_2D, 0, 0, 0, image.width, image.height, glFormat, glType, image.data );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, image.data );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isCompressedTexture ) {\n\n\t\t\t\tif ( texture.isCompressedArrayTexture ) {\n\n\t\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage3D( _gl.TEXTURE_2D_ARRAY, levels, glInternalFormat, mipmaps[ 0 ].width, mipmaps[ 0 ].height, image.depth );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\t\t\tif ( texture.format !== RGBAFormat ) {\n\n\t\t\t\t\t\t\tif ( glFormat !== null ) {\n\n\t\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\t\t\t\tif ( texture.layerUpdates.size > 0 ) {\n\n\t\t\t\t\t\t\t\t\t\t\tconst layerByteLength = getByteLength( mipmap.width, mipmap.height, texture.format, texture.type );\n\n\t\t\t\t\t\t\t\t\t\t\tfor ( const layerIndex of texture.layerUpdates ) {\n\n\t\t\t\t\t\t\t\t\t\t\t\tconst layerData = mipmap.data.subarray(\n\t\t\t\t\t\t\t\t\t\t\t\t\tlayerIndex * layerByteLength / mipmap.data.BYTES_PER_ELEMENT,\n\t\t\t\t\t\t\t\t\t\t\t\t\t( layerIndex + 1 ) * layerByteLength / mipmap.data.BYTES_PER_ELEMENT\n\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\tstate.compressedTexSubImage3D( _gl.TEXTURE_2D_ARRAY, i, 0, 0, layerIndex, mipmap.width, mipmap.height, 1, glFormat, layerData, 0, 0 );\n\n\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\ttexture.clearLayerUpdates();\n\n\t\t\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\t\t\tstate.compressedTexSubImage3D( _gl.TEXTURE_2D_ARRAY, i, 0, 0, 0, mipmap.width, mipmap.height, image.depth, glFormat, mipmap.data, 0, 0 );\n\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexImage3D( _gl.TEXTURE_2D_ARRAY, i, glInternalFormat, mipmap.width, mipmap.height, image.depth, 0, mipmap.data, 0, 0 );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()' );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\t\t\tstate.texSubImage3D( _gl.TEXTURE_2D_ARRAY, i, 0, 0, 0, mipmap.width, mipmap.height, image.depth, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage3D( _gl.TEXTURE_2D_ARRAY, i, glInternalFormat, mipmap.width, mipmap.height, image.depth, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, levels, glInternalFormat, mipmaps[ 0 ].width, mipmaps[ 0 ].height );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\t\t\tif ( texture.format !== RGBAFormat ) {\n\n\t\t\t\t\t\t\tif ( glFormat !== null ) {\n\n\t\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\t\t\t\tstate.compressedTexSubImage2D( _gl.TEXTURE_2D, i, 0, 0, mipmap.width, mipmap.height, glFormat, mipmap.data );\n\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexImage2D( _gl.TEXTURE_2D, i, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()' );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_2D, i, 0, 0, mipmap.width, mipmap.height, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isDataArrayTexture ) {\n\n\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage3D( _gl.TEXTURE_2D_ARRAY, levels, glInternalFormat, image.width, image.height, image.depth );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\tif ( texture.layerUpdates.size > 0 ) {\n\n\t\t\t\t\t\t\tconst layerByteLength = getByteLength( image.width, image.height, texture.format, texture.type );\n\n\t\t\t\t\t\t\tfor ( const layerIndex of texture.layerUpdates ) {\n\n\t\t\t\t\t\t\t\tconst layerData = image.data.subarray(\n\t\t\t\t\t\t\t\t\tlayerIndex * layerByteLength / image.data.BYTES_PER_ELEMENT,\n\t\t\t\t\t\t\t\t\t( layerIndex + 1 ) * layerByteLength / image.data.BYTES_PER_ELEMENT\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tstate.texSubImage3D( _gl.TEXTURE_2D_ARRAY, 0, 0, 0, layerIndex, image.width, image.height, 1, glFormat, glType, layerData );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\ttexture.clearLayerUpdates();\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texSubImage3D( _gl.TEXTURE_2D_ARRAY, 0, 0, 0, 0, image.width, image.height, image.depth, glFormat, glType, image.data );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tstate.texImage3D( _gl.TEXTURE_2D_ARRAY, 0, glInternalFormat, image.width, image.height, image.depth, 0, glFormat, glType, image.data );\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isData3DTexture ) {\n\n\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage3D( _gl.TEXTURE_3D, levels, glInternalFormat, image.width, image.height, image.depth );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\tstate.texSubImage3D( _gl.TEXTURE_3D, 0, 0, 0, 0, image.width, image.height, image.depth, glFormat, glType, image.data );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tstate.texImage3D( _gl.TEXTURE_3D, 0, glInternalFormat, image.width, image.height, image.depth, 0, glFormat, glType, image.data );\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isFramebufferTexture ) {\n\n\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, levels, glInternalFormat, image.width, image.height );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tlet width = image.width, height = image.height;\n\n\t\t\t\t\t\tfor ( let i = 0; i < levels; i ++ ) {\n\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glInternalFormat, width, height, 0, glFormat, glType, null );\n\n\t\t\t\t\t\t\twidth >>= 1;\n\t\t\t\t\t\t\theight >>= 1;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// regular Texture (image, video, canvas)\n\n\t\t\t\t// use manually created mipmaps if available\n\t\t\t\t// if there are no manual mipmaps\n\t\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\n\t\t\t\tif ( mipmaps.length > 0 ) {\n\n\t\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t\tconst dimensions = getDimensions( mipmaps[ 0 ] );\n\n\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, levels, glInternalFormat, dimensions.width, dimensions.height );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_2D, i, 0, 0, glFormat, glType, mipmap );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glInternalFormat, glFormat, glType, mipmap );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.generateMipmaps = false;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\t\t\tconst dimensions = getDimensions( image );\n\n\t\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, levels, glInternalFormat, dimensions.width, dimensions.height );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_2D, 0, 0, 0, glFormat, glType, image );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glInternalFormat, glFormat, glType, image );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture ) ) {\n\n\t\t\t\tgenerateMipmap( textureType );\n\n\t\t\t}\n\n\t\t\tsourceProperties.__version = source.version;\n\n\t\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\n\n\t\t}\n\n\t\ttextureProperties.__version = texture.version;\n\n\t}\n\n\tfunction uploadCubeTexture( textureProperties, texture, slot ) {\n\n\t\tif ( texture.image.length !== 6 ) return;\n\n\t\tconst forceUpload = initTexture( textureProperties, texture );\n\t\tconst source = texture.source;\n\n\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__webglTexture, _gl.TEXTURE0 + slot );\n\n\t\tconst sourceProperties = properties.get( source );\n\n\t\tif ( source.version !== sourceProperties.__version || forceUpload === true ) {\n\n\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\n\t\t\tconst workingPrimaries = ColorManagement.getPrimaries( ColorManagement.workingColorSpace );\n\t\t\tconst texturePrimaries = texture.colorSpace === NoColorSpace ? null : ColorManagement.getPrimaries( texture.colorSpace );\n\t\t\tconst unpackConversion = texture.colorSpace === NoColorSpace || workingPrimaries === texturePrimaries ? _gl.NONE : _gl.BROWSER_DEFAULT_WEBGL;\n\n\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, texture.flipY );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, texture.premultiplyAlpha );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ALIGNMENT, texture.unpackAlignment );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_COLORSPACE_CONVERSION_WEBGL, unpackConversion );\n\n\t\t\tconst isCompressed = ( texture.isCompressedTexture || texture.image[ 0 ].isCompressedTexture );\n\t\t\tconst isDataTexture = ( texture.image[ 0 ] && texture.image[ 0 ].isDataTexture );\n\n\t\t\tconst cubeImage = [];\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\tif ( ! isCompressed && ! isDataTexture ) {\n\n\t\t\t\t\tcubeImage[ i ] = resizeImage( texture.image[ i ], true, capabilities.maxCubemapSize );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tcubeImage[ i ] = isDataTexture ? texture.image[ i ].image : texture.image[ i ];\n\n\t\t\t\t}\n\n\t\t\t\tcubeImage[ i ] = verifyColorSpace( texture, cubeImage[ i ] );\n\n\t\t\t}\n\n\t\t\tconst image = cubeImage[ 0 ],\n\t\t\t\tglFormat = utils.convert( texture.format, texture.colorSpace ),\n\t\t\t\tglType = utils.convert( texture.type ),\n\t\t\t\tglInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.colorSpace );\n\n\t\t\tconst useTexStorage = ( texture.isVideoTexture !== true );\n\t\t\tconst allocateMemory = ( sourceProperties.__version === undefined ) || ( forceUpload === true );\n\t\t\tconst dataReady = source.dataReady;\n\t\t\tlet levels = getMipLevels( texture, image );\n\n\t\t\tsetTextureParameters( _gl.TEXTURE_CUBE_MAP, texture );\n\n\t\t\tlet mipmaps;\n\n\t\t\tif ( isCompressed ) {\n\n\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_CUBE_MAP, levels, glInternalFormat, image.width, image.height );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tmipmaps = cubeImage[ i ].mipmaps;\n\n\t\t\t\t\tfor ( let j = 0; j < mipmaps.length; j ++ ) {\n\n\t\t\t\t\t\tconst mipmap = mipmaps[ j ];\n\n\t\t\t\t\t\tif ( texture.format !== RGBAFormat ) {\n\n\t\t\t\t\t\t\tif ( glFormat !== null ) {\n\n\t\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\t\t\t\tstate.compressedTexSubImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, 0, 0, mipmap.width, mipmap.height, glFormat, mipmap.data );\n\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()' );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, 0, 0, mipmap.width, mipmap.height, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tmipmaps = texture.mipmaps;\n\n\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t// TODO: Uniformly handle mipmap definitions\n\t\t\t\t\t// Normal textures and compressed cube textures define base level + mips with their mipmap array\n\t\t\t\t\t// Uncompressed cube textures use their mipmap array only for mips (no base level)\n\n\t\t\t\t\tif ( mipmaps.length > 0 ) levels ++;\n\n\t\t\t\t\tconst dimensions = getDimensions( cubeImage[ 0 ] );\n\n\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_CUBE_MAP, levels, glInternalFormat, dimensions.width, dimensions.height );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tif ( isDataTexture ) {\n\n\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, 0, 0, cubeImage[ i ].width, cubeImage[ i ].height, glFormat, glType, cubeImage[ i ].data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glInternalFormat, cubeImage[ i ].width, cubeImage[ i ].height, 0, glFormat, glType, cubeImage[ i ].data );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfor ( let j = 0; j < mipmaps.length; j ++ ) {\n\n\t\t\t\t\t\t\tconst mipmap = mipmaps[ j ];\n\t\t\t\t\t\t\tconst mipmapImage = mipmap.image[ i ].image;\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j + 1, 0, 0, mipmapImage.width, mipmapImage.height, glFormat, glType, mipmapImage.data );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j + 1, glInternalFormat, mipmapImage.width, mipmapImage.height, 0, glFormat, glType, mipmapImage.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, 0, 0, glFormat, glType, cubeImage[ i ] );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glInternalFormat, glFormat, glType, cubeImage[ i ] );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfor ( let j = 0; j < mipmaps.length; j ++ ) {\n\n\t\t\t\t\t\t\tconst mipmap = mipmaps[ j ];\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j + 1, 0, 0, glFormat, glType, mipmap.image[ i ] );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j + 1, glInternalFormat, glFormat, glType, mipmap.image[ i ] );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture ) ) {\n\n\t\t\t\t// We assume images for cube map have the same size.\n\t\t\t\tgenerateMipmap( _gl.TEXTURE_CUBE_MAP );\n\n\t\t\t}\n\n\t\t\tsourceProperties.__version = source.version;\n\n\t\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\n\n\t\t}\n\n\t\ttextureProperties.__version = texture.version;\n\n\t}\n\n\t// Render targets\n\n\t// Setup storage for target texture and bind it to correct framebuffer\n\tfunction setupFrameBufferTexture( framebuffer, renderTarget, texture, attachment, textureTarget, level ) {\n\n\t\tconst glFormat = utils.convert( texture.format, texture.colorSpace );\n\t\tconst glType = utils.convert( texture.type );\n\t\tconst glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.colorSpace );\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\tif ( ! renderTargetProperties.__hasExternalTextures ) {\n\n\t\t\tconst width = Math.max( 1, renderTarget.width >> level );\n\t\t\tconst height = Math.max( 1, renderTarget.height >> level );\n\n\t\t\tif ( textureTarget === _gl.TEXTURE_3D || textureTarget === _gl.TEXTURE_2D_ARRAY ) {\n\n\t\t\t\tstate.texImage3D( textureTarget, level, glInternalFormat, width, height, renderTarget.depth, 0, glFormat, glType, null );\n\n\t\t\t} else {\n\n\t\t\t\tstate.texImage2D( textureTarget, level, glInternalFormat, width, height, 0, glFormat, glType, null );\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\tif ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\tmultisampledRTTExt.framebufferTexture2DMultisampleEXT( _gl.FRAMEBUFFER, attachment, textureTarget, properties.get( texture ).__webglTexture, 0, getRenderTargetSamples( renderTarget ) );\n\n\t\t} else if ( textureTarget === _gl.TEXTURE_2D || ( textureTarget >= _gl.TEXTURE_CUBE_MAP_POSITIVE_X && textureTarget <= _gl.TEXTURE_CUBE_MAP_NEGATIVE_Z ) ) { // see #24753\n\n\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, attachment, textureTarget, properties.get( texture ).__webglTexture, level );\n\n\t\t}\n\n\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, null );\n\n\t}\n\n\t// Setup storage for internal depth/stencil buffers and bind to correct framebuffer\n\tfunction setupRenderBufferStorage( renderbuffer, renderTarget, isMultisample ) {\n\n\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, renderbuffer );\n\n\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\t// retrieve the depth attachment types\n\t\t\tconst depthTexture = renderTarget.depthTexture;\n\t\t\tconst depthType = depthTexture && depthTexture.isDepthTexture ? depthTexture.type : null;\n\t\t\tconst glInternalFormat = getInternalDepthFormat( renderTarget.stencilBuffer, depthType );\n\t\t\tconst glAttachmentType = renderTarget.stencilBuffer ? _gl.DEPTH_STENCIL_ATTACHMENT : _gl.DEPTH_ATTACHMENT;\n\n\t\t\t// set up the attachment\n\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\t\t\tconst isUseMultisampledRTT = useMultisampledRTT( renderTarget );\n\t\t\tif ( isUseMultisampledRTT ) {\n\n\t\t\t\tmultisampledRTTExt.renderbufferStorageMultisampleEXT( _gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t} else if ( isMultisample ) {\n\n\t\t\t\t_gl.renderbufferStorageMultisample( _gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t}\n\n\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, glAttachmentType, _gl.RENDERBUFFER, renderbuffer );\n\n\t\t} else {\n\n\t\t\tconst textures = renderTarget.textures;\n\n\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\tconst texture = textures[ i ];\n\n\t\t\t\tconst glFormat = utils.convert( texture.format, texture.colorSpace );\n\t\t\t\tconst glType = utils.convert( texture.type );\n\t\t\t\tconst glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.colorSpace );\n\t\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\n\t\t\t\tif ( isMultisample && useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\t\t\t_gl.renderbufferStorageMultisample( _gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t} else if ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\t\tmultisampledRTTExt.renderbufferStorageMultisampleEXT( _gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, null );\n\n\t}\n\n\t// Setup resources for a Depth Texture for a FBO (needs an extension)\n\tfunction setupDepthTexture( framebuffer, renderTarget ) {\n\n\t\tconst isCube = ( renderTarget && renderTarget.isWebGLCubeRenderTarget );\n\t\tif ( isCube ) throw new Error( 'Depth Texture with cube render targets is not supported' );\n\n\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\tif ( ! ( renderTarget.depthTexture && renderTarget.depthTexture.isDepthTexture ) ) {\n\n\t\t\tthrow new Error( 'renderTarget.depthTexture must be an instance of THREE.DepthTexture' );\n\n\t\t}\n\n\t\t// upload an empty depth texture with framebuffer size\n\t\tif ( ! properties.get( renderTarget.depthTexture ).__webglTexture ||\n\t\t\t\trenderTarget.depthTexture.image.width !== renderTarget.width ||\n\t\t\t\trenderTarget.depthTexture.image.height !== renderTarget.height ) {\n\n\t\t\trenderTarget.depthTexture.image.width = renderTarget.width;\n\t\t\trenderTarget.depthTexture.image.height = renderTarget.height;\n\t\t\trenderTarget.depthTexture.needsUpdate = true;\n\n\t\t}\n\n\t\tsetTexture2D( renderTarget.depthTexture, 0 );\n\n\t\tconst webglDepthTexture = properties.get( renderTarget.depthTexture ).__webglTexture;\n\t\tconst samples = getRenderTargetSamples( renderTarget );\n\n\t\tif ( renderTarget.depthTexture.format === DepthFormat ) {\n\n\t\t\tif ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\tmultisampledRTTExt.framebufferTexture2DMultisampleEXT( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0, samples );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0 );\n\n\t\t\t}\n\n\t\t} else if ( renderTarget.depthTexture.format === DepthStencilFormat ) {\n\n\t\t\tif ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\tmultisampledRTTExt.framebufferTexture2DMultisampleEXT( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0, samples );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0 );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'Unknown depthTexture format' );\n\n\t\t}\n\n\t}\n\n\t// Setup GL resources for a non-texture depth buffer\n\tfunction setupDepthRenderbuffer( renderTarget ) {\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\tconst isCube = ( renderTarget.isWebGLCubeRenderTarget === true );\n\n\t\tif ( renderTarget.depthTexture && ! renderTargetProperties.__autoAllocateDepthBuffer ) {\n\n\t\t\tif ( isCube ) throw new Error( 'target.depthTexture not supported in Cube render targets' );\n\n\t\t\tsetupDepthTexture( renderTargetProperties.__webglFramebuffer, renderTarget );\n\n\t\t} else {\n\n\t\t\tif ( isCube ) {\n\n\t\t\t\trenderTargetProperties.__webglDepthbuffer = [];\n\n\t\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer[ i ] );\n\t\t\t\t\trenderTargetProperties.__webglDepthbuffer[ i ] = _gl.createRenderbuffer();\n\t\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer[ i ], renderTarget, false );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer );\n\t\t\t\trenderTargetProperties.__webglDepthbuffer = _gl.createRenderbuffer();\n\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer, renderTarget, false );\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, null );\n\n\t}\n\n\t// rebind framebuffer with external textures\n\tfunction rebindTextures( renderTarget, colorTexture, depthTexture ) {\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\tif ( colorTexture !== undefined ) {\n\n\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, renderTarget.texture, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_2D, 0 );\n\n\t\t}\n\n\t\tif ( depthTexture !== undefined ) {\n\n\t\t\tsetupDepthRenderbuffer( renderTarget );\n\n\t\t}\n\n\t}\n\n\t// Set up GL resources for the render target\n\tfunction setupRenderTarget( renderTarget ) {\n\n\t\tconst texture = renderTarget.texture;\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\tconst textureProperties = properties.get( texture );\n\n\t\trenderTarget.addEventListener( 'dispose', onRenderTargetDispose );\n\n\t\tconst textures = renderTarget.textures;\n\n\t\tconst isCube = ( renderTarget.isWebGLCubeRenderTarget === true );\n\t\tconst isMultipleRenderTargets = ( textures.length > 1 );\n\n\t\tif ( ! isMultipleRenderTargets ) {\n\n\t\t\tif ( textureProperties.__webglTexture === undefined ) {\n\n\t\t\t\ttextureProperties.__webglTexture = _gl.createTexture();\n\n\t\t\t}\n\n\t\t\ttextureProperties.__version = texture.version;\n\t\t\tinfo.memory.textures ++;\n\n\t\t}\n\n\t\t// Setup framebuffer\n\n\t\tif ( isCube ) {\n\n\t\t\trenderTargetProperties.__webglFramebuffer = [];\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\tif ( texture.mipmaps && texture.mipmaps.length > 0 ) {\n\n\t\t\t\t\trenderTargetProperties.__webglFramebuffer[ i ] = [];\n\n\t\t\t\t\tfor ( let level = 0; level < texture.mipmaps.length; level ++ ) {\n\n\t\t\t\t\t\trenderTargetProperties.__webglFramebuffer[ i ][ level ] = _gl.createFramebuffer();\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\trenderTargetProperties.__webglFramebuffer[ i ] = _gl.createFramebuffer();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tif ( texture.mipmaps && texture.mipmaps.length > 0 ) {\n\n\t\t\t\trenderTargetProperties.__webglFramebuffer = [];\n\n\t\t\t\tfor ( let level = 0; level < texture.mipmaps.length; level ++ ) {\n\n\t\t\t\t\trenderTargetProperties.__webglFramebuffer[ level ] = _gl.createFramebuffer();\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\trenderTargetProperties.__webglFramebuffer = _gl.createFramebuffer();\n\n\t\t\t}\n\n\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst attachmentProperties = properties.get( textures[ i ] );\n\n\t\t\t\t\tif ( attachmentProperties.__webglTexture === undefined ) {\n\n\t\t\t\t\t\tattachmentProperties.__webglTexture = _gl.createTexture();\n\n\t\t\t\t\t\tinfo.memory.textures ++;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( ( renderTarget.samples > 0 ) && useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\t\trenderTargetProperties.__webglMultisampledFramebuffer = _gl.createFramebuffer();\n\t\t\t\trenderTargetProperties.__webglColorRenderbuffer = [];\n\n\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer );\n\n\t\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\t\tconst texture = textures[ i ];\n\t\t\t\t\trenderTargetProperties.__webglColorRenderbuffer[ i ] = _gl.createRenderbuffer();\n\n\t\t\t\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t\tconst glFormat = utils.convert( texture.format, texture.colorSpace );\n\t\t\t\t\tconst glType = utils.convert( texture.type );\n\t\t\t\t\tconst glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.colorSpace, renderTarget.isXRRenderTarget === true );\n\t\t\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\t\t\t\t\t_gl.renderbufferStorageMultisample( _gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0 + i, _gl.RENDERBUFFER, renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t}\n\n\t\t\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, null );\n\n\t\t\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\t\t\trenderTargetProperties.__webglDepthRenderbuffer = _gl.createRenderbuffer();\n\t\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthRenderbuffer, renderTarget, true );\n\n\t\t\t\t}\n\n\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, null );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Setup color buffer\n\n\t\tif ( isCube ) {\n\n\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__webglTexture );\n\t\t\tsetTextureParameters( _gl.TEXTURE_CUBE_MAP, texture );\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\tif ( texture.mipmaps && texture.mipmaps.length > 0 ) {\n\n\t\t\t\t\tfor ( let level = 0; level < texture.mipmaps.length; level ++ ) {\n\n\t\t\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer[ i ][ level ], renderTarget, texture, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, level );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer[ i ], renderTarget, texture, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture ) ) {\n\n\t\t\t\tgenerateMipmap( _gl.TEXTURE_CUBE_MAP );\n\n\t\t\t}\n\n\t\t\tstate.unbindTexture();\n\n\t\t} else if ( isMultipleRenderTargets ) {\n\n\t\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\t\tconst attachment = textures[ i ];\n\t\t\t\tconst attachmentProperties = properties.get( attachment );\n\n\t\t\t\tstate.bindTexture( _gl.TEXTURE_2D, attachmentProperties.__webglTexture );\n\t\t\t\tsetTextureParameters( _gl.TEXTURE_2D, attachment );\n\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, attachment, _gl.COLOR_ATTACHMENT0 + i, _gl.TEXTURE_2D, 0 );\n\n\t\t\t\tif ( textureNeedsGenerateMipmaps( attachment ) ) {\n\n\t\t\t\t\tgenerateMipmap( _gl.TEXTURE_2D );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.unbindTexture();\n\n\t\t} else {\n\n\t\t\tlet glTextureType = _gl.TEXTURE_2D;\n\n\t\t\tif ( renderTarget.isWebGL3DRenderTarget || renderTarget.isWebGLArrayRenderTarget ) {\n\n\t\t\t\tglTextureType = renderTarget.isWebGL3DRenderTarget ? _gl.TEXTURE_3D : _gl.TEXTURE_2D_ARRAY;\n\n\t\t\t}\n\n\t\t\tstate.bindTexture( glTextureType, textureProperties.__webglTexture );\n\t\t\tsetTextureParameters( glTextureType, texture );\n\n\t\t\tif ( texture.mipmaps && texture.mipmaps.length > 0 ) {\n\n\t\t\t\tfor ( let level = 0; level < texture.mipmaps.length; level ++ ) {\n\n\t\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer[ level ], renderTarget, texture, _gl.COLOR_ATTACHMENT0, glTextureType, level );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, texture, _gl.COLOR_ATTACHMENT0, glTextureType, 0 );\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture ) ) {\n\n\t\t\t\tgenerateMipmap( glTextureType );\n\n\t\t\t}\n\n\t\t\tstate.unbindTexture();\n\n\t\t}\n\n\t\t// Setup depth and stencil buffers\n\n\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\tsetupDepthRenderbuffer( renderTarget );\n\n\t\t}\n\n\t}\n\n\tfunction updateRenderTargetMipmap( renderTarget ) {\n\n\t\tconst textures = renderTarget.textures;\n\n\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\tconst texture = textures[ i ];\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture ) ) {\n\n\t\t\t\tconst target = renderTarget.isWebGLCubeRenderTarget ? _gl.TEXTURE_CUBE_MAP : _gl.TEXTURE_2D;\n\t\t\t\tconst webglTexture = properties.get( texture ).__webglTexture;\n\n\t\t\t\tstate.bindTexture( target, webglTexture );\n\t\t\t\tgenerateMipmap( target );\n\t\t\t\tstate.unbindTexture();\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tconst invalidationArrayRead = [];\n\tconst invalidationArrayDraw = [];\n\n\tfunction updateMultisampleRenderTarget( renderTarget ) {\n\n\t\tif ( renderTarget.samples > 0 ) {\n\n\t\t\tif ( useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\t\tconst textures = renderTarget.textures;\n\t\t\t\tconst width = renderTarget.width;\n\t\t\t\tconst height = renderTarget.height;\n\t\t\t\tlet mask = _gl.COLOR_BUFFER_BIT;\n\t\t\t\tconst depthStyle = renderTarget.stencilBuffer ? _gl.DEPTH_STENCIL_ATTACHMENT : _gl.DEPTH_ATTACHMENT;\n\t\t\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\t\t\tconst isMultipleRenderTargets = ( textures.length > 1 );\n\n\t\t\t\t// If MRT we need to remove FBO attachments\n\t\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer );\n\t\t\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0 + i, _gl.RENDERBUFFER, null );\n\n\t\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer );\n\t\t\t\t\t\t_gl.framebufferTexture2D( _gl.DRAW_FRAMEBUFFER, _gl.COLOR_ATTACHMENT0 + i, _gl.TEXTURE_2D, null, 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tstate.bindFramebuffer( _gl.READ_FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer );\n\t\t\t\tstate.bindFramebuffer( _gl.DRAW_FRAMEBUFFER, renderTargetProperties.__webglFramebuffer );\n\n\t\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\t\tif ( renderTarget.resolveDepthBuffer ) {\n\n\t\t\t\t\t\tif ( renderTarget.depthBuffer ) mask |= _gl.DEPTH_BUFFER_BIT;\n\n\t\t\t\t\t\t// resolving stencil is slow with a D3D backend. disable it for all transmission render targets (see #27799)\n\n\t\t\t\t\t\tif ( renderTarget.stencilBuffer && renderTarget.resolveStencilBuffer ) mask |= _gl.STENCIL_BUFFER_BIT;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\t\t\t_gl.framebufferRenderbuffer( _gl.READ_FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, _gl.RENDERBUFFER, renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t\t\tconst webglTexture = properties.get( textures[ i ] ).__webglTexture;\n\t\t\t\t\t\t_gl.framebufferTexture2D( _gl.DRAW_FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_2D, webglTexture, 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t_gl.blitFramebuffer( 0, 0, width, height, 0, 0, width, height, mask, _gl.NEAREST );\n\n\t\t\t\t\tif ( supportsInvalidateFramebuffer === true ) {\n\n\t\t\t\t\t\tinvalidationArrayRead.length = 0;\n\t\t\t\t\t\tinvalidationArrayDraw.length = 0;\n\n\t\t\t\t\t\tinvalidationArrayRead.push( _gl.COLOR_ATTACHMENT0 + i );\n\n\t\t\t\t\t\tif ( renderTarget.depthBuffer && renderTarget.resolveDepthBuffer === false ) {\n\n\t\t\t\t\t\t\tinvalidationArrayRead.push( depthStyle );\n\t\t\t\t\t\t\tinvalidationArrayDraw.push( depthStyle );\n\n\t\t\t\t\t\t\t_gl.invalidateFramebuffer( _gl.DRAW_FRAMEBUFFER, invalidationArrayDraw );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t_gl.invalidateFramebuffer( _gl.READ_FRAMEBUFFER, invalidationArrayRead );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tstate.bindFramebuffer( _gl.READ_FRAMEBUFFER, null );\n\t\t\t\tstate.bindFramebuffer( _gl.DRAW_FRAMEBUFFER, null );\n\n\t\t\t\t// If MRT since pre-blit we removed the FBO we need to reconstruct the attachments\n\t\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer );\n\t\t\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0 + i, _gl.RENDERBUFFER, renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t\t\tconst webglTexture = properties.get( textures[ i ] ).__webglTexture;\n\n\t\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer );\n\t\t\t\t\t\t_gl.framebufferTexture2D( _gl.DRAW_FRAMEBUFFER, _gl.COLOR_ATTACHMENT0 + i, _gl.TEXTURE_2D, webglTexture, 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tstate.bindFramebuffer( _gl.DRAW_FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer );\n\n\t\t\t} else {\n\n\t\t\t\tif ( renderTarget.depthBuffer && renderTarget.resolveDepthBuffer === false && supportsInvalidateFramebuffer ) {\n\n\t\t\t\t\tconst depthStyle = renderTarget.stencilBuffer ? _gl.DEPTH_STENCIL_ATTACHMENT : _gl.DEPTH_ATTACHMENT;\n\n\t\t\t\t\t_gl.invalidateFramebuffer( _gl.DRAW_FRAMEBUFFER, [ depthStyle ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction getRenderTargetSamples( renderTarget ) {\n\n\t\treturn Math.min( capabilities.maxSamples, renderTarget.samples );\n\n\t}\n\n\tfunction useMultisampledRTT( renderTarget ) {\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\treturn renderTarget.samples > 0 && extensions.has( 'WEBGL_multisampled_render_to_texture' ) === true && renderTargetProperties.__useRenderToTexture !== false;\n\n\t}\n\n\tfunction updateVideoTexture( texture ) {\n\n\t\tconst frame = info.render.frame;\n\n\t\t// Check the last frame we updated the VideoTexture\n\n\t\tif ( _videoTextures.get( texture ) !== frame ) {\n\n\t\t\t_videoTextures.set( texture, frame );\n\t\t\ttexture.update();\n\n\t\t}\n\n\t}\n\n\tfunction verifyColorSpace( texture, image ) {\n\n\t\tconst colorSpace = texture.colorSpace;\n\t\tconst format = texture.format;\n\t\tconst type = texture.type;\n\n\t\tif ( texture.isCompressedTexture === true || texture.isVideoTexture === true ) return image;\n\n\t\tif ( colorSpace !== LinearSRGBColorSpace && colorSpace !== NoColorSpace ) {\n\n\t\t\t// sRGB\n\n\t\t\tif ( ColorManagement.getTransfer( colorSpace ) === SRGBTransfer ) {\n\n\t\t\t\t// in WebGL 2 uncompressed textures can only be sRGB encoded if they have the RGBA8 format\n\n\t\t\t\tif ( format !== RGBAFormat || type !== UnsignedByteType ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType.' );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconsole.error( 'THREE.WebGLTextures: Unsupported texture color space:', colorSpace );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn image;\n\n\t}\n\n\tfunction getDimensions( image ) {\n\n\t\tif ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) {\n\n\t\t\t// if intrinsic data are not available, fallback to width/height\n\n\t\t\t_imageDimensions.width = image.naturalWidth || image.width;\n\t\t\t_imageDimensions.height = image.naturalHeight || image.height;\n\n\t\t} else if ( typeof VideoFrame !== 'undefined' && image instanceof VideoFrame ) {\n\n\t\t\t_imageDimensions.width = image.displayWidth;\n\t\t\t_imageDimensions.height = image.displayHeight;\n\n\t\t} else {\n\n\t\t\t_imageDimensions.width = image.width;\n\t\t\t_imageDimensions.height = image.height;\n\n\t\t}\n\n\t\treturn _imageDimensions;\n\n\t}\n\n\t//\n\n\tthis.allocateTextureUnit = allocateTextureUnit;\n\tthis.resetTextureUnits = resetTextureUnits;\n\n\tthis.setTexture2D = setTexture2D;\n\tthis.setTexture2DArray = setTexture2DArray;\n\tthis.setTexture3D = setTexture3D;\n\tthis.setTextureCube = setTextureCube;\n\tthis.rebindTextures = rebindTextures;\n\tthis.setupRenderTarget = setupRenderTarget;\n\tthis.updateRenderTargetMipmap = updateRenderTargetMipmap;\n\tthis.updateMultisampleRenderTarget = updateMultisampleRenderTarget;\n\tthis.setupDepthRenderbuffer = setupDepthRenderbuffer;\n\tthis.setupFrameBufferTexture = setupFrameBufferTexture;\n\tthis.useMultisampledRTT = useMultisampledRTT;\n\n}\n\nfunction WebGLUtils( gl, extensions ) {\n\n\tfunction convert( p, colorSpace = NoColorSpace ) {\n\n\t\tlet extension;\n\n\t\tconst transfer = ColorManagement.getTransfer( colorSpace );\n\n\t\tif ( p === UnsignedByteType ) return gl.UNSIGNED_BYTE;\n\t\tif ( p === UnsignedShort4444Type ) return gl.UNSIGNED_SHORT_4_4_4_4;\n\t\tif ( p === UnsignedShort5551Type ) return gl.UNSIGNED_SHORT_5_5_5_1;\n\t\tif ( p === UnsignedInt5999Type ) return gl.UNSIGNED_INT_5_9_9_9_REV;\n\n\t\tif ( p === ByteType ) return gl.BYTE;\n\t\tif ( p === ShortType ) return gl.SHORT;\n\t\tif ( p === UnsignedShortType ) return gl.UNSIGNED_SHORT;\n\t\tif ( p === IntType ) return gl.INT;\n\t\tif ( p === UnsignedIntType ) return gl.UNSIGNED_INT;\n\t\tif ( p === FloatType ) return gl.FLOAT;\n\t\tif ( p === HalfFloatType ) return gl.HALF_FLOAT;\n\n\t\tif ( p === AlphaFormat ) return gl.ALPHA;\n\t\tif ( p === RGBFormat ) return gl.RGB;\n\t\tif ( p === RGBAFormat ) return gl.RGBA;\n\t\tif ( p === LuminanceFormat ) return gl.LUMINANCE;\n\t\tif ( p === LuminanceAlphaFormat ) return gl.LUMINANCE_ALPHA;\n\t\tif ( p === DepthFormat ) return gl.DEPTH_COMPONENT;\n\t\tif ( p === DepthStencilFormat ) return gl.DEPTH_STENCIL;\n\n\t\t// WebGL2 formats.\n\n\t\tif ( p === RedFormat ) return gl.RED;\n\t\tif ( p === RedIntegerFormat ) return gl.RED_INTEGER;\n\t\tif ( p === RGFormat ) return gl.RG;\n\t\tif ( p === RGIntegerFormat ) return gl.RG_INTEGER;\n\t\tif ( p === RGBAIntegerFormat ) return gl.RGBA_INTEGER;\n\n\t\t// S3TC\n\n\t\tif ( p === RGB_S3TC_DXT1_Format || p === RGBA_S3TC_DXT1_Format || p === RGBA_S3TC_DXT3_Format || p === RGBA_S3TC_DXT5_Format ) {\n\n\t\t\tif ( transfer === SRGBTransfer ) {\n\n\t\t\t\textension = extensions.get( 'WEBGL_compressed_texture_s3tc_srgb' );\n\n\t\t\t\tif ( extension !== null ) {\n\n\t\t\t\t\tif ( p === RGB_S3TC_DXT1_Format ) return extension.COMPRESSED_SRGB_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT1_Format ) return extension.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT3_Format ) return extension.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT5_Format ) return extension.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT;\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\textension = extensions.get( 'WEBGL_compressed_texture_s3tc' );\n\n\t\t\t\tif ( extension !== null ) {\n\n\t\t\t\t\tif ( p === RGB_S3TC_DXT1_Format ) return extension.COMPRESSED_RGB_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT1_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT3_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT3_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT5_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT5_EXT;\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// PVRTC\n\n\t\tif ( p === RGB_PVRTC_4BPPV1_Format || p === RGB_PVRTC_2BPPV1_Format || p === RGBA_PVRTC_4BPPV1_Format || p === RGBA_PVRTC_2BPPV1_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_pvrtc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGB_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;\n\t\t\t\tif ( p === RGB_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;\n\t\t\t\tif ( p === RGBA_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;\n\t\t\t\tif ( p === RGBA_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// ETC\n\n\t\tif ( p === RGB_ETC1_Format || p === RGB_ETC2_Format || p === RGBA_ETC2_EAC_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_etc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGB_ETC1_Format || p === RGB_ETC2_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ETC2 : extension.COMPRESSED_RGB8_ETC2;\n\t\t\t\tif ( p === RGBA_ETC2_EAC_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC : extension.COMPRESSED_RGBA8_ETC2_EAC;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// ASTC\n\n\t\tif ( p === RGBA_ASTC_4x4_Format || p === RGBA_ASTC_5x4_Format || p === RGBA_ASTC_5x5_Format ||\n\t\t\tp === RGBA_ASTC_6x5_Format || p === RGBA_ASTC_6x6_Format || p === RGBA_ASTC_8x5_Format ||\n\t\t\tp === RGBA_ASTC_8x6_Format || p === RGBA_ASTC_8x8_Format || p === RGBA_ASTC_10x5_Format ||\n\t\t\tp === RGBA_ASTC_10x6_Format || p === RGBA_ASTC_10x8_Format || p === RGBA_ASTC_10x10_Format ||\n\t\t\tp === RGBA_ASTC_12x10_Format || p === RGBA_ASTC_12x12_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_astc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGBA_ASTC_4x4_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR : extension.COMPRESSED_RGBA_ASTC_4x4_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_5x4_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR : extension.COMPRESSED_RGBA_ASTC_5x4_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_5x5_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR : extension.COMPRESSED_RGBA_ASTC_5x5_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_6x5_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR : extension.COMPRESSED_RGBA_ASTC_6x5_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_6x6_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR : extension.COMPRESSED_RGBA_ASTC_6x6_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_8x5_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR : extension.COMPRESSED_RGBA_ASTC_8x5_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_8x6_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR : extension.COMPRESSED_RGBA_ASTC_8x6_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_8x8_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR : extension.COMPRESSED_RGBA_ASTC_8x8_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_10x5_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR : extension.COMPRESSED_RGBA_ASTC_10x5_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_10x6_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR : extension.COMPRESSED_RGBA_ASTC_10x6_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_10x8_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR : extension.COMPRESSED_RGBA_ASTC_10x8_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_10x10_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR : extension.COMPRESSED_RGBA_ASTC_10x10_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_12x10_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR : extension.COMPRESSED_RGBA_ASTC_12x10_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_12x12_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR : extension.COMPRESSED_RGBA_ASTC_12x12_KHR;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// BPTC\n\n\t\tif ( p === RGBA_BPTC_Format || p === RGB_BPTC_SIGNED_Format || p === RGB_BPTC_UNSIGNED_Format ) {\n\n\t\t\textension = extensions.get( 'EXT_texture_compression_bptc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGBA_BPTC_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT : extension.COMPRESSED_RGBA_BPTC_UNORM_EXT;\n\t\t\t\tif ( p === RGB_BPTC_SIGNED_Format ) return extension.COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT;\n\t\t\t\tif ( p === RGB_BPTC_UNSIGNED_Format ) return extension.COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// RGTC\n\n\t\tif ( p === RED_RGTC1_Format || p === SIGNED_RED_RGTC1_Format || p === RED_GREEN_RGTC2_Format || p === SIGNED_RED_GREEN_RGTC2_Format ) {\n\n\t\t\textension = extensions.get( 'EXT_texture_compression_rgtc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGBA_BPTC_Format ) return extension.COMPRESSED_RED_RGTC1_EXT;\n\t\t\t\tif ( p === SIGNED_RED_RGTC1_Format ) return extension.COMPRESSED_SIGNED_RED_RGTC1_EXT;\n\t\t\t\tif ( p === RED_GREEN_RGTC2_Format ) return extension.COMPRESSED_RED_GREEN_RGTC2_EXT;\n\t\t\t\tif ( p === SIGNED_RED_GREEN_RGTC2_Format ) return extension.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tif ( p === UnsignedInt248Type ) return gl.UNSIGNED_INT_24_8;\n\n\t\t// if \"p\" can't be resolved, assume the user defines a WebGL constant as a string (fallback/workaround for packed RGB formats)\n\n\t\treturn ( gl[ p ] !== undefined ) ? gl[ p ] : null;\n\n\t}\n\n\treturn { convert: convert };\n\n}\n\nclass ArrayCamera extends PerspectiveCamera {\n\n\tconstructor( array = [] ) {\n\n\t\tsuper();\n\n\t\tthis.isArrayCamera = true;\n\n\t\tthis.cameras = array;\n\n\t}\n\n}\n\nclass Group extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isGroup = true;\n\n\t\tthis.type = 'Group';\n\n\t}\n\n}\n\nconst _moveEvent = { type: 'move' };\n\nclass WebXRController {\n\n\tconstructor() {\n\n\t\tthis._targetRay = null;\n\t\tthis._grip = null;\n\t\tthis._hand = null;\n\n\t}\n\n\tgetHandSpace() {\n\n\t\tif ( this._hand === null ) {\n\n\t\t\tthis._hand = new Group();\n\t\t\tthis._hand.matrixAutoUpdate = false;\n\t\t\tthis._hand.visible = false;\n\n\t\t\tthis._hand.joints = {};\n\t\t\tthis._hand.inputState = { pinching: false };\n\n\t\t}\n\n\t\treturn this._hand;\n\n\t}\n\n\tgetTargetRaySpace() {\n\n\t\tif ( this._targetRay === null ) {\n\n\t\t\tthis._targetRay = new Group();\n\t\t\tthis._targetRay.matrixAutoUpdate = false;\n\t\t\tthis._targetRay.visible = false;\n\t\t\tthis._targetRay.hasLinearVelocity = false;\n\t\t\tthis._targetRay.linearVelocity = new Vector3();\n\t\t\tthis._targetRay.hasAngularVelocity = false;\n\t\t\tthis._targetRay.angularVelocity = new Vector3();\n\n\t\t}\n\n\t\treturn this._targetRay;\n\n\t}\n\n\tgetGripSpace() {\n\n\t\tif ( this._grip === null ) {\n\n\t\t\tthis._grip = new Group();\n\t\t\tthis._grip.matrixAutoUpdate = false;\n\t\t\tthis._grip.visible = false;\n\t\t\tthis._grip.hasLinearVelocity = false;\n\t\t\tthis._grip.linearVelocity = new Vector3();\n\t\t\tthis._grip.hasAngularVelocity = false;\n\t\t\tthis._grip.angularVelocity = new Vector3();\n\n\t\t}\n\n\t\treturn this._grip;\n\n\t}\n\n\tdispatchEvent( event ) {\n\n\t\tif ( this._targetRay !== null ) {\n\n\t\t\tthis._targetRay.dispatchEvent( event );\n\n\t\t}\n\n\t\tif ( this._grip !== null ) {\n\n\t\t\tthis._grip.dispatchEvent( event );\n\n\t\t}\n\n\t\tif ( this._hand !== null ) {\n\n\t\t\tthis._hand.dispatchEvent( event );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tconnect( inputSource ) {\n\n\t\tif ( inputSource && inputSource.hand ) {\n\n\t\t\tconst hand = this._hand;\n\n\t\t\tif ( hand ) {\n\n\t\t\t\tfor ( const inputjoint of inputSource.hand.values() ) {\n\n\t\t\t\t\t// Initialize hand with joints when connected\n\t\t\t\t\tthis._getHandJoint( hand, inputjoint );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.dispatchEvent( { type: 'connected', data: inputSource } );\n\n\t\treturn this;\n\n\t}\n\n\tdisconnect( inputSource ) {\n\n\t\tthis.dispatchEvent( { type: 'disconnected', data: inputSource } );\n\n\t\tif ( this._targetRay !== null ) {\n\n\t\t\tthis._targetRay.visible = false;\n\n\t\t}\n\n\t\tif ( this._grip !== null ) {\n\n\t\t\tthis._grip.visible = false;\n\n\t\t}\n\n\t\tif ( this._hand !== null ) {\n\n\t\t\tthis._hand.visible = false;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tupdate( inputSource, frame, referenceSpace ) {\n\n\t\tlet inputPose = null;\n\t\tlet gripPose = null;\n\t\tlet handPose = null;\n\n\t\tconst targetRay = this._targetRay;\n\t\tconst grip = this._grip;\n\t\tconst hand = this._hand;\n\n\t\tif ( inputSource && frame.session.visibilityState !== 'visible-blurred' ) {\n\n\t\t\tif ( hand && inputSource.hand ) {\n\n\t\t\t\thandPose = true;\n\n\t\t\t\tfor ( const inputjoint of inputSource.hand.values() ) {\n\n\t\t\t\t\t// Update the joints groups with the XRJoint poses\n\t\t\t\t\tconst jointPose = frame.getJointPose( inputjoint, referenceSpace );\n\n\t\t\t\t\t// The transform of this joint will be updated with the joint pose on each frame\n\t\t\t\t\tconst joint = this._getHandJoint( hand, inputjoint );\n\n\t\t\t\t\tif ( jointPose !== null ) {\n\n\t\t\t\t\t\tjoint.matrix.fromArray( jointPose.transform.matrix );\n\t\t\t\t\t\tjoint.matrix.decompose( joint.position, joint.rotation, joint.scale );\n\t\t\t\t\t\tjoint.matrixWorldNeedsUpdate = true;\n\t\t\t\t\t\tjoint.jointRadius = jointPose.radius;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tjoint.visible = jointPose !== null;\n\n\t\t\t\t}\n\n\t\t\t\t// Custom events\n\n\t\t\t\t// Check pinchz\n\t\t\t\tconst indexTip = hand.joints[ 'index-finger-tip' ];\n\t\t\t\tconst thumbTip = hand.joints[ 'thumb-tip' ];\n\t\t\t\tconst distance = indexTip.position.distanceTo( thumbTip.position );\n\n\t\t\t\tconst distanceToPinch = 0.02;\n\t\t\t\tconst threshold = 0.005;\n\n\t\t\t\tif ( hand.inputState.pinching && distance > distanceToPinch + threshold ) {\n\n\t\t\t\t\thand.inputState.pinching = false;\n\t\t\t\t\tthis.dispatchEvent( {\n\t\t\t\t\t\ttype: 'pinchend',\n\t\t\t\t\t\thandedness: inputSource.handedness,\n\t\t\t\t\t\ttarget: this\n\t\t\t\t\t} );\n\n\t\t\t\t} else if ( ! hand.inputState.pinching && distance <= distanceToPinch - threshold ) {\n\n\t\t\t\t\thand.inputState.pinching = true;\n\t\t\t\t\tthis.dispatchEvent( {\n\t\t\t\t\t\ttype: 'pinchstart',\n\t\t\t\t\t\thandedness: inputSource.handedness,\n\t\t\t\t\t\ttarget: this\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( grip !== null && inputSource.gripSpace ) {\n\n\t\t\t\t\tgripPose = frame.getPose( inputSource.gripSpace, referenceSpace );\n\n\t\t\t\t\tif ( gripPose !== null ) {\n\n\t\t\t\t\t\tgrip.matrix.fromArray( gripPose.transform.matrix );\n\t\t\t\t\t\tgrip.matrix.decompose( grip.position, grip.rotation, grip.scale );\n\t\t\t\t\t\tgrip.matrixWorldNeedsUpdate = true;\n\n\t\t\t\t\t\tif ( gripPose.linearVelocity ) {\n\n\t\t\t\t\t\t\tgrip.hasLinearVelocity = true;\n\t\t\t\t\t\t\tgrip.linearVelocity.copy( gripPose.linearVelocity );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tgrip.hasLinearVelocity = false;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( gripPose.angularVelocity ) {\n\n\t\t\t\t\t\t\tgrip.hasAngularVelocity = true;\n\t\t\t\t\t\t\tgrip.angularVelocity.copy( gripPose.angularVelocity );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tgrip.hasAngularVelocity = false;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( targetRay !== null ) {\n\n\t\t\t\tinputPose = frame.getPose( inputSource.targetRaySpace, referenceSpace );\n\n\t\t\t\t// Some runtimes (namely Vive Cosmos with Vive OpenXR Runtime) have only grip space and ray space is equal to it\n\t\t\t\tif ( inputPose === null && gripPose !== null ) {\n\n\t\t\t\t\tinputPose = gripPose;\n\n\t\t\t\t}\n\n\t\t\t\tif ( inputPose !== null ) {\n\n\t\t\t\t\ttargetRay.matrix.fromArray( inputPose.transform.matrix );\n\t\t\t\t\ttargetRay.matrix.decompose( targetRay.position, targetRay.rotation, targetRay.scale );\n\t\t\t\t\ttargetRay.matrixWorldNeedsUpdate = true;\n\n\t\t\t\t\tif ( inputPose.linearVelocity ) {\n\n\t\t\t\t\t\ttargetRay.hasLinearVelocity = true;\n\t\t\t\t\t\ttargetRay.linearVelocity.copy( inputPose.linearVelocity );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ttargetRay.hasLinearVelocity = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( inputPose.angularVelocity ) {\n\n\t\t\t\t\t\ttargetRay.hasAngularVelocity = true;\n\t\t\t\t\t\ttargetRay.angularVelocity.copy( inputPose.angularVelocity );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ttargetRay.hasAngularVelocity = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.dispatchEvent( _moveEvent );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t}\n\n\t\tif ( targetRay !== null ) {\n\n\t\t\ttargetRay.visible = ( inputPose !== null );\n\n\t\t}\n\n\t\tif ( grip !== null ) {\n\n\t\t\tgrip.visible = ( gripPose !== null );\n\n\t\t}\n\n\t\tif ( hand !== null ) {\n\n\t\t\thand.visible = ( handPose !== null );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// private method\n\n\t_getHandJoint( hand, inputjoint ) {\n\n\t\tif ( hand.joints[ inputjoint.jointName ] === undefined ) {\n\n\t\t\tconst joint = new Group();\n\t\t\tjoint.matrixAutoUpdate = false;\n\t\t\tjoint.visible = false;\n\t\t\thand.joints[ inputjoint.jointName ] = joint;\n\n\t\t\thand.add( joint );\n\n\t\t}\n\n\t\treturn hand.joints[ inputjoint.jointName ];\n\n\t}\n\n}\n\nconst _occlusion_vertex = `\nvoid main() {\n\n\tgl_Position = vec4( position, 1.0 );\n\n}`;\n\nconst _occlusion_fragment = `\nuniform sampler2DArray depthColor;\nuniform float depthWidth;\nuniform float depthHeight;\n\nvoid main() {\n\n\tvec2 coord = vec2( gl_FragCoord.x / depthWidth, gl_FragCoord.y / depthHeight );\n\n\tif ( coord.x >= 1.0 ) {\n\n\t\tgl_FragDepth = texture( depthColor, vec3( coord.x - 1.0, coord.y, 1 ) ).r;\n\n\t} else {\n\n\t\tgl_FragDepth = texture( depthColor, vec3( coord.x, coord.y, 0 ) ).r;\n\n\t}\n\n}`;\n\nclass WebXRDepthSensing {\n\n\tconstructor() {\n\n\t\tthis.texture = null;\n\t\tthis.mesh = null;\n\n\t\tthis.depthNear = 0;\n\t\tthis.depthFar = 0;\n\n\t}\n\n\tinit( renderer, depthData, renderState ) {\n\n\t\tif ( this.texture === null ) {\n\n\t\t\tconst texture = new Texture();\n\n\t\t\tconst texProps = renderer.properties.get( texture );\n\t\t\ttexProps.__webglTexture = depthData.texture;\n\n\t\t\tif ( ( depthData.depthNear != renderState.depthNear ) || ( depthData.depthFar != renderState.depthFar ) ) {\n\n\t\t\t\tthis.depthNear = depthData.depthNear;\n\t\t\t\tthis.depthFar = depthData.depthFar;\n\n\t\t\t}\n\n\t\t\tthis.texture = texture;\n\n\t\t}\n\n\t}\n\n\tgetMesh( cameraXR ) {\n\n\t\tif ( this.texture !== null ) {\n\n\t\t\tif ( this.mesh === null ) {\n\n\t\t\t\tconst viewport = cameraXR.cameras[ 0 ].viewport;\n\t\t\t\tconst material = new ShaderMaterial( {\n\t\t\t\t\tvertexShader: _occlusion_vertex,\n\t\t\t\t\tfragmentShader: _occlusion_fragment,\n\t\t\t\t\tuniforms: {\n\t\t\t\t\t\tdepthColor: { value: this.texture },\n\t\t\t\t\t\tdepthWidth: { value: viewport.z },\n\t\t\t\t\t\tdepthHeight: { value: viewport.w }\n\t\t\t\t\t}\n\t\t\t\t} );\n\n\t\t\t\tthis.mesh = new Mesh( new PlaneGeometry( 20, 20 ), material );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this.mesh;\n\n\t}\n\n\treset() {\n\n\t\tthis.texture = null;\n\t\tthis.mesh = null;\n\n\t}\n\n\tgetDepthTexture() {\n\n\t\treturn this.texture;\n\n\t}\n\n}\n\nclass WebXRManager extends EventDispatcher {\n\n\tconstructor( renderer, gl ) {\n\n\t\tsuper();\n\n\t\tconst scope = this;\n\n\t\tlet session = null;\n\n\t\tlet framebufferScaleFactor = 1.0;\n\n\t\tlet referenceSpace = null;\n\t\tlet referenceSpaceType = 'local-floor';\n\t\t// Set default foveation to maximum.\n\t\tlet foveation = 1.0;\n\t\tlet customReferenceSpace = null;\n\n\t\tlet pose = null;\n\t\tlet glBinding = null;\n\t\tlet glProjLayer = null;\n\t\tlet glBaseLayer = null;\n\t\tlet xrFrame = null;\n\n\t\tconst depthSensing = new WebXRDepthSensing();\n\t\tconst attributes = gl.getContextAttributes();\n\n\t\tlet initialRenderTarget = null;\n\t\tlet newRenderTarget = null;\n\n\t\tconst controllers = [];\n\t\tconst controllerInputSources = [];\n\n\t\tconst currentSize = new Vector2();\n\t\tlet currentPixelRatio = null;\n\n\t\t//\n\n\t\tconst cameraL = new PerspectiveCamera();\n\t\tcameraL.layers.enable( 1 );\n\t\tcameraL.viewport = new Vector4();\n\n\t\tconst cameraR = new PerspectiveCamera();\n\t\tcameraR.layers.enable( 2 );\n\t\tcameraR.viewport = new Vector4();\n\n\t\tconst cameras = [ cameraL, cameraR ];\n\n\t\tconst cameraXR = new ArrayCamera();\n\t\tcameraXR.layers.enable( 1 );\n\t\tcameraXR.layers.enable( 2 );\n\n\t\tlet _currentDepthNear = null;\n\t\tlet _currentDepthFar = null;\n\n\t\t//\n\n\t\tthis.cameraAutoUpdate = true;\n\t\tthis.enabled = false;\n\n\t\tthis.isPresenting = false;\n\n\t\tthis.getController = function ( index ) {\n\n\t\t\tlet controller = controllers[ index ];\n\n\t\t\tif ( controller === undefined ) {\n\n\t\t\t\tcontroller = new WebXRController();\n\t\t\t\tcontrollers[ index ] = controller;\n\n\t\t\t}\n\n\t\t\treturn controller.getTargetRaySpace();\n\n\t\t};\n\n\t\tthis.getControllerGrip = function ( index ) {\n\n\t\t\tlet controller = controllers[ index ];\n\n\t\t\tif ( controller === undefined ) {\n\n\t\t\t\tcontroller = new WebXRController();\n\t\t\t\tcontrollers[ index ] = controller;\n\n\t\t\t}\n\n\t\t\treturn controller.getGripSpace();\n\n\t\t};\n\n\t\tthis.getHand = function ( index ) {\n\n\t\t\tlet controller = controllers[ index ];\n\n\t\t\tif ( controller === undefined ) {\n\n\t\t\t\tcontroller = new WebXRController();\n\t\t\t\tcontrollers[ index ] = controller;\n\n\t\t\t}\n\n\t\t\treturn controller.getHandSpace();\n\n\t\t};\n\n\t\t//\n\n\t\tfunction onSessionEvent( event ) {\n\n\t\t\tconst controllerIndex = controllerInputSources.indexOf( event.inputSource );\n\n\t\t\tif ( controllerIndex === - 1 ) {\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tconst controller = controllers[ controllerIndex ];\n\n\t\t\tif ( controller !== undefined ) {\n\n\t\t\t\tcontroller.update( event.inputSource, event.frame, customReferenceSpace || referenceSpace );\n\t\t\t\tcontroller.dispatchEvent( { type: event.type, data: event.inputSource } );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onSessionEnd() {\n\n\t\t\tsession.removeEventListener( 'select', onSessionEvent );\n\t\t\tsession.removeEventListener( 'selectstart', onSessionEvent );\n\t\t\tsession.removeEventListener( 'selectend', onSessionEvent );\n\t\t\tsession.removeEventListener( 'squeeze', onSessionEvent );\n\t\t\tsession.removeEventListener( 'squeezestart', onSessionEvent );\n\t\t\tsession.removeEventListener( 'squeezeend', onSessionEvent );\n\t\t\tsession.removeEventListener( 'end', onSessionEnd );\n\t\t\tsession.removeEventListener( 'inputsourceschange', onInputSourcesChange );\n\n\t\t\tfor ( let i = 0; i < controllers.length; i ++ ) {\n\n\t\t\t\tconst inputSource = controllerInputSources[ i ];\n\n\t\t\t\tif ( inputSource === null ) continue;\n\n\t\t\t\tcontrollerInputSources[ i ] = null;\n\n\t\t\t\tcontrollers[ i ].disconnect( inputSource );\n\n\t\t\t}\n\n\t\t\t_currentDepthNear = null;\n\t\t\t_currentDepthFar = null;\n\n\t\t\tdepthSensing.reset();\n\n\t\t\t// restore framebuffer/rendering state\n\n\t\t\trenderer.setRenderTarget( initialRenderTarget );\n\n\t\t\tglBaseLayer = null;\n\t\t\tglProjLayer = null;\n\t\t\tglBinding = null;\n\t\t\tsession = null;\n\t\t\tnewRenderTarget = null;\n\n\t\t\t//\n\n\t\t\tanimation.stop();\n\n\t\t\tscope.isPresenting = false;\n\n\t\t\trenderer.setPixelRatio( currentPixelRatio );\n\t\t\trenderer.setSize( currentSize.width, currentSize.height, false );\n\n\t\t\tscope.dispatchEvent( { type: 'sessionend' } );\n\n\t\t}\n\n\t\tthis.setFramebufferScaleFactor = function ( value ) {\n\n\t\t\tframebufferScaleFactor = value;\n\n\t\t\tif ( scope.isPresenting === true ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebXRManager: Cannot change framebuffer scale while presenting.' );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.setReferenceSpaceType = function ( value ) {\n\n\t\t\treferenceSpaceType = value;\n\n\t\t\tif ( scope.isPresenting === true ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebXRManager: Cannot change reference space type while presenting.' );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.getReferenceSpace = function () {\n\n\t\t\treturn customReferenceSpace || referenceSpace;\n\n\t\t};\n\n\t\tthis.setReferenceSpace = function ( space ) {\n\n\t\t\tcustomReferenceSpace = space;\n\n\t\t};\n\n\t\tthis.getBaseLayer = function () {\n\n\t\t\treturn glProjLayer !== null ? glProjLayer : glBaseLayer;\n\n\t\t};\n\n\t\tthis.getBinding = function () {\n\n\t\t\treturn glBinding;\n\n\t\t};\n\n\t\tthis.getFrame = function () {\n\n\t\t\treturn xrFrame;\n\n\t\t};\n\n\t\tthis.getSession = function () {\n\n\t\t\treturn session;\n\n\t\t};\n\n\t\tthis.setSession = async function ( value ) {\n\n\t\t\tsession = value;\n\n\t\t\tif ( session !== null ) {\n\n\t\t\t\tinitialRenderTarget = renderer.getRenderTarget();\n\n\t\t\t\tsession.addEventListener( 'select', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'selectstart', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'selectend', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'squeeze', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'squeezestart', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'squeezeend', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'end', onSessionEnd );\n\t\t\t\tsession.addEventListener( 'inputsourceschange', onInputSourcesChange );\n\n\t\t\t\tif ( attributes.xrCompatible !== true ) {\n\n\t\t\t\t\tawait gl.makeXRCompatible();\n\n\t\t\t\t}\n\n\t\t\t\tcurrentPixelRatio = renderer.getPixelRatio();\n\t\t\t\trenderer.getSize( currentSize );\n\n\t\t\t\tif ( session.renderState.layers === undefined ) {\n\n\t\t\t\t\tconst layerInit = {\n\t\t\t\t\t\tantialias: attributes.antialias,\n\t\t\t\t\t\talpha: true,\n\t\t\t\t\t\tdepth: attributes.depth,\n\t\t\t\t\t\tstencil: attributes.stencil,\n\t\t\t\t\t\tframebufferScaleFactor: framebufferScaleFactor\n\t\t\t\t\t};\n\n\t\t\t\t\tglBaseLayer = new XRWebGLLayer( session, gl, layerInit );\n\n\t\t\t\t\tsession.updateRenderState( { baseLayer: glBaseLayer } );\n\n\t\t\t\t\trenderer.setPixelRatio( 1 );\n\t\t\t\t\trenderer.setSize( glBaseLayer.framebufferWidth, glBaseLayer.framebufferHeight, false );\n\n\t\t\t\t\tnewRenderTarget = new WebGLRenderTarget(\n\t\t\t\t\t\tglBaseLayer.framebufferWidth,\n\t\t\t\t\t\tglBaseLayer.framebufferHeight,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tformat: RGBAFormat,\n\t\t\t\t\t\t\ttype: UnsignedByteType,\n\t\t\t\t\t\t\tcolorSpace: renderer.outputColorSpace,\n\t\t\t\t\t\t\tstencilBuffer: attributes.stencil\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\n\t\t\t\t} else {\n\n\t\t\t\t\tlet depthFormat = null;\n\t\t\t\t\tlet depthType = null;\n\t\t\t\t\tlet glDepthFormat = null;\n\n\t\t\t\t\tif ( attributes.depth ) {\n\n\t\t\t\t\t\tglDepthFormat = attributes.stencil ? gl.DEPTH24_STENCIL8 : gl.DEPTH_COMPONENT24;\n\t\t\t\t\t\tdepthFormat = attributes.stencil ? DepthStencilFormat : DepthFormat;\n\t\t\t\t\t\tdepthType = attributes.stencil ? UnsignedInt248Type : UnsignedIntType;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst projectionlayerInit = {\n\t\t\t\t\t\tcolorFormat: gl.RGBA8,\n\t\t\t\t\t\tdepthFormat: glDepthFormat,\n\t\t\t\t\t\tscaleFactor: framebufferScaleFactor\n\t\t\t\t\t};\n\n\t\t\t\t\tglBinding = new XRWebGLBinding( session, gl );\n\n\t\t\t\t\tglProjLayer = glBinding.createProjectionLayer( projectionlayerInit );\n\n\t\t\t\t\tsession.updateRenderState( { layers: [ glProjLayer ] } );\n\n\t\t\t\t\trenderer.setPixelRatio( 1 );\n\t\t\t\t\trenderer.setSize( glProjLayer.textureWidth, glProjLayer.textureHeight, false );\n\n\t\t\t\t\tnewRenderTarget = new WebGLRenderTarget(\n\t\t\t\t\t\tglProjLayer.textureWidth,\n\t\t\t\t\t\tglProjLayer.textureHeight,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tformat: RGBAFormat,\n\t\t\t\t\t\t\ttype: UnsignedByteType,\n\t\t\t\t\t\t\tdepthTexture: new DepthTexture( glProjLayer.textureWidth, glProjLayer.textureHeight, depthType, undefined, undefined, undefined, undefined, undefined, undefined, depthFormat ),\n\t\t\t\t\t\t\tstencilBuffer: attributes.stencil,\n\t\t\t\t\t\t\tcolorSpace: renderer.outputColorSpace,\n\t\t\t\t\t\t\tsamples: attributes.antialias ? 4 : 0,\n\t\t\t\t\t\t\tresolveDepthBuffer: ( glProjLayer.ignoreDepthValues === false )\n\t\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t\tnewRenderTarget.isXRRenderTarget = true; // TODO Remove this when possible, see #23278\n\n\t\t\t\tthis.setFoveation( foveation );\n\n\t\t\t\tcustomReferenceSpace = null;\n\t\t\t\treferenceSpace = await session.requestReferenceSpace( referenceSpaceType );\n\n\t\t\t\tanimation.setContext( session );\n\t\t\t\tanimation.start();\n\n\t\t\t\tscope.isPresenting = true;\n\n\t\t\t\tscope.dispatchEvent( { type: 'sessionstart' } );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.getEnvironmentBlendMode = function () {\n\n\t\t\tif ( session !== null ) {\n\n\t\t\t\treturn session.environmentBlendMode;\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.getDepthTexture = function () {\n\n\t\t\treturn depthSensing.getDepthTexture();\n\n\t\t};\n\n\t\tfunction onInputSourcesChange( event ) {\n\n\t\t\t// Notify disconnected\n\n\t\t\tfor ( let i = 0; i < event.removed.length; i ++ ) {\n\n\t\t\t\tconst inputSource = event.removed[ i ];\n\t\t\t\tconst index = controllerInputSources.indexOf( inputSource );\n\n\t\t\t\tif ( index >= 0 ) {\n\n\t\t\t\t\tcontrollerInputSources[ index ] = null;\n\t\t\t\t\tcontrollers[ index ].disconnect( inputSource );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Notify connected\n\n\t\t\tfor ( let i = 0; i < event.added.length; i ++ ) {\n\n\t\t\t\tconst inputSource = event.added[ i ];\n\n\t\t\t\tlet controllerIndex = controllerInputSources.indexOf( inputSource );\n\n\t\t\t\tif ( controllerIndex === - 1 ) {\n\n\t\t\t\t\t// Assign input source a controller that currently has no input source\n\n\t\t\t\t\tfor ( let i = 0; i < controllers.length; i ++ ) {\n\n\t\t\t\t\t\tif ( i >= controllerInputSources.length ) {\n\n\t\t\t\t\t\t\tcontrollerInputSources.push( inputSource );\n\t\t\t\t\t\t\tcontrollerIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t} else if ( controllerInputSources[ i ] === null ) {\n\n\t\t\t\t\t\t\tcontrollerInputSources[ i ] = inputSource;\n\t\t\t\t\t\t\tcontrollerIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// If all controllers do currently receive input we ignore new ones\n\n\t\t\t\t\tif ( controllerIndex === - 1 ) break;\n\n\t\t\t\t}\n\n\t\t\t\tconst controller = controllers[ controllerIndex ];\n\n\t\t\t\tif ( controller ) {\n\n\t\t\t\t\tcontroller.connect( inputSource );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tconst cameraLPos = new Vector3();\n\t\tconst cameraRPos = new Vector3();\n\n\t\t/**\n\t\t * Assumes 2 cameras that are parallel and share an X-axis, and that\n\t\t * the cameras' projection and world matrices have already been set.\n\t\t * And that near and far planes are identical for both cameras.\n\t\t * Visualization of this technique: https://computergraphics.stackexchange.com/a/4765\n\t\t */\n\t\tfunction setProjectionFromUnion( camera, cameraL, cameraR ) {\n\n\t\t\tcameraLPos.setFromMatrixPosition( cameraL.matrixWorld );\n\t\t\tcameraRPos.setFromMatrixPosition( cameraR.matrixWorld );\n\n\t\t\tconst ipd = cameraLPos.distanceTo( cameraRPos );\n\n\t\t\tconst projL = cameraL.projectionMatrix.elements;\n\t\t\tconst projR = cameraR.projectionMatrix.elements;\n\n\t\t\t// VR systems will have identical far and near planes, and\n\t\t\t// most likely identical top and bottom frustum extents.\n\t\t\t// Use the left camera for these values.\n\t\t\tconst near = projL[ 14 ] / ( projL[ 10 ] - 1 );\n\t\t\tconst far = projL[ 14 ] / ( projL[ 10 ] + 1 );\n\t\t\tconst topFov = ( projL[ 9 ] + 1 ) / projL[ 5 ];\n\t\t\tconst bottomFov = ( projL[ 9 ] - 1 ) / projL[ 5 ];\n\n\t\t\tconst leftFov = ( projL[ 8 ] - 1 ) / projL[ 0 ];\n\t\t\tconst rightFov = ( projR[ 8 ] + 1 ) / projR[ 0 ];\n\t\t\tconst left = near * leftFov;\n\t\t\tconst right = near * rightFov;\n\n\t\t\t// Calculate the new camera's position offset from the\n\t\t\t// left camera. xOffset should be roughly half `ipd`.\n\t\t\tconst zOffset = ipd / ( - leftFov + rightFov );\n\t\t\tconst xOffset = zOffset * - leftFov;\n\n\t\t\t// TODO: Better way to apply this offset?\n\t\t\tcameraL.matrixWorld.decompose( camera.position, camera.quaternion, camera.scale );\n\t\t\tcamera.translateX( xOffset );\n\t\t\tcamera.translateZ( zOffset );\n\t\t\tcamera.matrixWorld.compose( camera.position, camera.quaternion, camera.scale );\n\t\t\tcamera.matrixWorldInverse.copy( camera.matrixWorld ).invert();\n\n\t\t\t// Find the union of the frustum values of the cameras and scale\n\t\t\t// the values so that the near plane's position does not change in world space,\n\t\t\t// although must now be relative to the new union camera.\n\t\t\tconst near2 = near + zOffset;\n\t\t\tconst far2 = far + zOffset;\n\t\t\tconst left2 = left - xOffset;\n\t\t\tconst right2 = right + ( ipd - xOffset );\n\t\t\tconst top2 = topFov * far / far2 * near2;\n\t\t\tconst bottom2 = bottomFov * far / far2 * near2;\n\n\t\t\tcamera.projectionMatrix.makePerspective( left2, right2, top2, bottom2, near2, far2 );\n\t\t\tcamera.projectionMatrixInverse.copy( camera.projectionMatrix ).invert();\n\n\t\t}\n\n\t\tfunction updateCamera( camera, parent ) {\n\n\t\t\tif ( parent === null ) {\n\n\t\t\t\tcamera.matrixWorld.copy( camera.matrix );\n\n\t\t\t} else {\n\n\t\t\t\tcamera.matrixWorld.multiplyMatrices( parent.matrixWorld, camera.matrix );\n\n\t\t\t}\n\n\t\t\tcamera.matrixWorldInverse.copy( camera.matrixWorld ).invert();\n\n\t\t}\n\n\t\tthis.updateCamera = function ( camera ) {\n\n\t\t\tif ( session === null ) return;\n\n\t\t\tif ( depthSensing.texture !== null ) {\n\n\t\t\t\tcamera.near = depthSensing.depthNear;\n\t\t\t\tcamera.far = depthSensing.depthFar;\n\n\t\t\t}\n\n\t\t\tcameraXR.near = cameraR.near = cameraL.near = camera.near;\n\t\t\tcameraXR.far = cameraR.far = cameraL.far = camera.far;\n\n\t\t\tif ( _currentDepthNear !== cameraXR.near || _currentDepthFar !== cameraXR.far ) {\n\n\t\t\t\t// Note that the new renderState won't apply until the next frame. See #18320\n\n\t\t\t\tsession.updateRenderState( {\n\t\t\t\t\tdepthNear: cameraXR.near,\n\t\t\t\t\tdepthFar: cameraXR.far\n\t\t\t\t} );\n\n\t\t\t\t_currentDepthNear = cameraXR.near;\n\t\t\t\t_currentDepthFar = cameraXR.far;\n\n\t\t\t\tcameraL.near = _currentDepthNear;\n\t\t\t\tcameraL.far = _currentDepthFar;\n\t\t\t\tcameraR.near = _currentDepthNear;\n\t\t\t\tcameraR.far = _currentDepthFar;\n\n\t\t\t\tcameraL.updateProjectionMatrix();\n\t\t\t\tcameraR.updateProjectionMatrix();\n\t\t\t\tcamera.updateProjectionMatrix();\n\n\t\t\t}\n\n\t\t\tconst parent = camera.parent;\n\t\t\tconst cameras = cameraXR.cameras;\n\n\t\t\tupdateCamera( cameraXR, parent );\n\n\t\t\tfor ( let i = 0; i < cameras.length; i ++ ) {\n\n\t\t\t\tupdateCamera( cameras[ i ], parent );\n\n\t\t\t}\n\n\t\t\t// update projection matrix for proper view frustum culling\n\n\t\t\tif ( cameras.length === 2 ) {\n\n\t\t\t\tsetProjectionFromUnion( cameraXR, cameraL, cameraR );\n\n\t\t\t} else {\n\n\t\t\t\t// assume single camera setup (AR)\n\n\t\t\t\tcameraXR.projectionMatrix.copy( cameraL.projectionMatrix );\n\n\t\t\t}\n\n\t\t\t// update user camera and its children\n\n\t\t\tupdateUserCamera( camera, cameraXR, parent );\n\n\t\t};\n\n\t\tfunction updateUserCamera( camera, cameraXR, parent ) {\n\n\t\t\tif ( parent === null ) {\n\n\t\t\t\tcamera.matrix.copy( cameraXR.matrixWorld );\n\n\t\t\t} else {\n\n\t\t\t\tcamera.matrix.copy( parent.matrixWorld );\n\t\t\t\tcamera.matrix.invert();\n\t\t\t\tcamera.matrix.multiply( cameraXR.matrixWorld );\n\n\t\t\t}\n\n\t\t\tcamera.matrix.decompose( camera.position, camera.quaternion, camera.scale );\n\t\t\tcamera.updateMatrixWorld( true );\n\n\t\t\tcamera.projectionMatrix.copy( cameraXR.projectionMatrix );\n\t\t\tcamera.projectionMatrixInverse.copy( cameraXR.projectionMatrixInverse );\n\n\t\t\tif ( camera.isPerspectiveCamera ) {\n\n\t\t\t\tcamera.fov = RAD2DEG * 2 * Math.atan( 1 / camera.projectionMatrix.elements[ 5 ] );\n\t\t\t\tcamera.zoom = 1;\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.getCamera = function () {\n\n\t\t\treturn cameraXR;\n\n\t\t};\n\n\t\tthis.getFoveation = function () {\n\n\t\t\tif ( glProjLayer === null && glBaseLayer === null ) {\n\n\t\t\t\treturn undefined;\n\n\t\t\t}\n\n\t\t\treturn foveation;\n\n\t\t};\n\n\t\tthis.setFoveation = function ( value ) {\n\n\t\t\t// 0 = no foveation = full resolution\n\t\t\t// 1 = maximum foveation = the edges render at lower resolution\n\n\t\t\tfoveation = value;\n\n\t\t\tif ( glProjLayer !== null ) {\n\n\t\t\t\tglProjLayer.fixedFoveation = value;\n\n\t\t\t}\n\n\t\t\tif ( glBaseLayer !== null && glBaseLayer.fixedFoveation !== undefined ) {\n\n\t\t\t\tglBaseLayer.fixedFoveation = value;\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.hasDepthSensing = function () {\n\n\t\t\treturn depthSensing.texture !== null;\n\n\t\t};\n\n\t\tthis.getDepthSensingMesh = function () {\n\n\t\t\treturn depthSensing.getMesh( cameraXR );\n\n\t\t};\n\n\t\t// Animation Loop\n\n\t\tlet onAnimationFrameCallback = null;\n\n\t\tfunction onAnimationFrame( time, frame ) {\n\n\t\t\tpose = frame.getViewerPose( customReferenceSpace || referenceSpace );\n\t\t\txrFrame = frame;\n\n\t\t\tif ( pose !== null ) {\n\n\t\t\t\tconst views = pose.views;\n\n\t\t\t\tif ( glBaseLayer !== null ) {\n\n\t\t\t\t\trenderer.setRenderTargetFramebuffer( newRenderTarget, glBaseLayer.framebuffer );\n\t\t\t\t\trenderer.setRenderTarget( newRenderTarget );\n\n\t\t\t\t}\n\n\t\t\t\tlet cameraXRNeedsUpdate = false;\n\n\t\t\t\t// check if it's necessary to rebuild cameraXR's camera list\n\n\t\t\t\tif ( views.length !== cameraXR.cameras.length ) {\n\n\t\t\t\t\tcameraXR.cameras.length = 0;\n\t\t\t\t\tcameraXRNeedsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0; i < views.length; i ++ ) {\n\n\t\t\t\t\tconst view = views[ i ];\n\n\t\t\t\t\tlet viewport = null;\n\n\t\t\t\t\tif ( glBaseLayer !== null ) {\n\n\t\t\t\t\t\tviewport = glBaseLayer.getViewport( view );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst glSubImage = glBinding.getViewSubImage( glProjLayer, view );\n\t\t\t\t\t\tviewport = glSubImage.viewport;\n\n\t\t\t\t\t\t// For side-by-side projection, we only produce a single texture for both eyes.\n\t\t\t\t\t\tif ( i === 0 ) {\n\n\t\t\t\t\t\t\trenderer.setRenderTargetTextures(\n\t\t\t\t\t\t\t\tnewRenderTarget,\n\t\t\t\t\t\t\t\tglSubImage.colorTexture,\n\t\t\t\t\t\t\t\tglProjLayer.ignoreDepthValues ? undefined : glSubImage.depthStencilTexture );\n\n\t\t\t\t\t\t\trenderer.setRenderTarget( newRenderTarget );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tlet camera = cameras[ i ];\n\n\t\t\t\t\tif ( camera === undefined ) {\n\n\t\t\t\t\t\tcamera = new PerspectiveCamera();\n\t\t\t\t\t\tcamera.layers.enable( i );\n\t\t\t\t\t\tcamera.viewport = new Vector4();\n\t\t\t\t\t\tcameras[ i ] = camera;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcamera.matrix.fromArray( view.transform.matrix );\n\t\t\t\t\tcamera.matrix.decompose( camera.position, camera.quaternion, camera.scale );\n\t\t\t\t\tcamera.projectionMatrix.fromArray( view.projectionMatrix );\n\t\t\t\t\tcamera.projectionMatrixInverse.copy( camera.projectionMatrix ).invert();\n\t\t\t\t\tcamera.viewport.set( viewport.x, viewport.y, viewport.width, viewport.height );\n\n\t\t\t\t\tif ( i === 0 ) {\n\n\t\t\t\t\t\tcameraXR.matrix.copy( camera.matrix );\n\t\t\t\t\t\tcameraXR.matrix.decompose( cameraXR.position, cameraXR.quaternion, cameraXR.scale );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( cameraXRNeedsUpdate === true ) {\n\n\t\t\t\t\t\tcameraXR.cameras.push( camera );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t//\n\n\t\t\t\tconst enabledFeatures = session.enabledFeatures;\n\n\t\t\t\tif ( enabledFeatures && enabledFeatures.includes( 'depth-sensing' ) ) {\n\n\t\t\t\t\tconst depthData = glBinding.getDepthInformation( views[ 0 ] );\n\n\t\t\t\t\tif ( depthData && depthData.isValid && depthData.texture ) {\n\n\t\t\t\t\t\tdepthSensing.init( renderer, depthData, session.renderState );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tfor ( let i = 0; i < controllers.length; i ++ ) {\n\n\t\t\t\tconst inputSource = controllerInputSources[ i ];\n\t\t\t\tconst controller = controllers[ i ];\n\n\t\t\t\tif ( inputSource !== null && controller !== undefined ) {\n\n\t\t\t\t\tcontroller.update( inputSource, frame, customReferenceSpace || referenceSpace );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( onAnimationFrameCallback ) onAnimationFrameCallback( time, frame );\n\n\t\t\tif ( frame.detectedPlanes ) {\n\n\t\t\t\tscope.dispatchEvent( { type: 'planesdetected', data: frame } );\n\n\t\t\t}\n\n\t\t\txrFrame = null;\n\n\t\t}\n\n\t\tconst animation = new WebGLAnimation();\n\n\t\tanimation.setAnimationLoop( onAnimationFrame );\n\n\t\tthis.setAnimationLoop = function ( callback ) {\n\n\t\t\tonAnimationFrameCallback = callback;\n\n\t\t};\n\n\t\tthis.dispose = function () {};\n\n\t}\n\n}\n\nconst _e1 = /*@__PURE__*/ new Euler();\nconst _m1 = /*@__PURE__*/ new Matrix4();\n\nfunction WebGLMaterials( renderer, properties ) {\n\n\tfunction refreshTransformUniform( map, uniform ) {\n\n\t\tif ( map.matrixAutoUpdate === true ) {\n\n\t\t\tmap.updateMatrix();\n\n\t\t}\n\n\t\tuniform.value.copy( map.matrix );\n\n\t}\n\n\tfunction refreshFogUniforms( uniforms, fog ) {\n\n\t\tfog.color.getRGB( uniforms.fogColor.value, getUnlitUniformColorSpace( renderer ) );\n\n\t\tif ( fog.isFog ) {\n\n\t\t\tuniforms.fogNear.value = fog.near;\n\t\t\tuniforms.fogFar.value = fog.far;\n\n\t\t} else if ( fog.isFogExp2 ) {\n\n\t\t\tuniforms.fogDensity.value = fog.density;\n\n\t\t}\n\n\t}\n\n\tfunction refreshMaterialUniforms( uniforms, material, pixelRatio, height, transmissionRenderTarget ) {\n\n\t\tif ( material.isMeshBasicMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\n\t\t} else if ( material.isMeshLambertMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\n\t\t} else if ( material.isMeshToonMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsToon( uniforms, material );\n\n\t\t} else if ( material.isMeshPhongMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsPhong( uniforms, material );\n\n\t\t} else if ( material.isMeshStandardMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsStandard( uniforms, material );\n\n\t\t\tif ( material.isMeshPhysicalMaterial ) {\n\n\t\t\t\trefreshUniformsPhysical( uniforms, material, transmissionRenderTarget );\n\n\t\t\t}\n\n\t\t} else if ( material.isMeshMatcapMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsMatcap( uniforms, material );\n\n\t\t} else if ( material.isMeshDepthMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\n\t\t} else if ( material.isMeshDistanceMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsDistance( uniforms, material );\n\n\t\t} else if ( material.isMeshNormalMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\n\t\t} else if ( material.isLineBasicMaterial ) {\n\n\t\t\trefreshUniformsLine( uniforms, material );\n\n\t\t\tif ( material.isLineDashedMaterial ) {\n\n\t\t\t\trefreshUniformsDash( uniforms, material );\n\n\t\t\t}\n\n\t\t} else if ( material.isPointsMaterial ) {\n\n\t\t\trefreshUniformsPoints( uniforms, material, pixelRatio, height );\n\n\t\t} else if ( material.isSpriteMaterial ) {\n\n\t\t\trefreshUniformsSprites( uniforms, material );\n\n\t\t} else if ( material.isShadowMaterial ) {\n\n\t\t\tuniforms.color.value.copy( material.color );\n\t\t\tuniforms.opacity.value = material.opacity;\n\n\t\t} else if ( material.isShaderMaterial ) {\n\n\t\t\tmaterial.uniformsNeedUpdate = false; // #15581\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsCommon( uniforms, material ) {\n\n\t\tuniforms.opacity.value = material.opacity;\n\n\t\tif ( material.color ) {\n\n\t\t\tuniforms.diffuse.value.copy( material.color );\n\n\t\t}\n\n\t\tif ( material.emissive ) {\n\n\t\t\tuniforms.emissive.value.copy( material.emissive ).multiplyScalar( material.emissiveIntensity );\n\n\t\t}\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t\trefreshTransformUniform( material.map, uniforms.mapTransform );\n\n\t\t}\n\n\t\tif ( material.alphaMap ) {\n\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t\trefreshTransformUniform( material.alphaMap, uniforms.alphaMapTransform );\n\n\t\t}\n\n\t\tif ( material.bumpMap ) {\n\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\n\t\t\trefreshTransformUniform( material.bumpMap, uniforms.bumpMapTransform );\n\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\n\t\t\tif ( material.side === BackSide ) {\n\n\t\t\t\tuniforms.bumpScale.value *= - 1;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.normalMap ) {\n\n\t\t\tuniforms.normalMap.value = material.normalMap;\n\n\t\t\trefreshTransformUniform( material.normalMap, uniforms.normalMapTransform );\n\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\n\t\t\tif ( material.side === BackSide ) {\n\n\t\t\t\tuniforms.normalScale.value.negate();\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\n\t\t\trefreshTransformUniform( material.displacementMap, uniforms.displacementMapTransform );\n\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t\tif ( material.emissiveMap ) {\n\n\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t\trefreshTransformUniform( material.emissiveMap, uniforms.emissiveMapTransform );\n\n\t\t}\n\n\t\tif ( material.specularMap ) {\n\n\t\t\tuniforms.specularMap.value = material.specularMap;\n\n\t\t\trefreshTransformUniform( material.specularMap, uniforms.specularMapTransform );\n\n\t\t}\n\n\t\tif ( material.alphaTest > 0 ) {\n\n\t\t\tuniforms.alphaTest.value = material.alphaTest;\n\n\t\t}\n\n\t\tconst materialProperties = properties.get( material );\n\n\t\tconst envMap = materialProperties.envMap;\n\t\tconst envMapRotation = materialProperties.envMapRotation;\n\n\t\tif ( envMap ) {\n\n\t\t\tuniforms.envMap.value = envMap;\n\n\t\t\t_e1.copy( envMapRotation );\n\n\t\t\t// accommodate left-handed frame\n\t\t\t_e1.x *= - 1; _e1.y *= - 1; _e1.z *= - 1;\n\n\t\t\tif ( envMap.isCubeTexture && envMap.isRenderTargetTexture === false ) {\n\n\t\t\t\t// environment maps which are not cube render targets or PMREMs follow a different convention\n\t\t\t\t_e1.y *= - 1;\n\t\t\t\t_e1.z *= - 1;\n\n\t\t\t}\n\n\t\t\tuniforms.envMapRotation.value.setFromMatrix4( _m1.makeRotationFromEuler( _e1 ) );\n\n\t\t\tuniforms.flipEnvMap.value = ( envMap.isCubeTexture && envMap.isRenderTargetTexture === false ) ? - 1 : 1;\n\n\t\t\tuniforms.reflectivity.value = material.reflectivity;\n\t\t\tuniforms.ior.value = material.ior;\n\t\t\tuniforms.refractionRatio.value = material.refractionRatio;\n\n\t\t}\n\n\t\tif ( material.lightMap ) {\n\n\t\t\tuniforms.lightMap.value = material.lightMap;\n\t\t\tuniforms.lightMapIntensity.value = material.lightMapIntensity;\n\n\t\t\trefreshTransformUniform( material.lightMap, uniforms.lightMapTransform );\n\n\t\t}\n\n\t\tif ( material.aoMap ) {\n\n\t\t\tuniforms.aoMap.value = material.aoMap;\n\t\t\tuniforms.aoMapIntensity.value = material.aoMapIntensity;\n\n\t\t\trefreshTransformUniform( material.aoMap, uniforms.aoMapTransform );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsLine( uniforms, material ) {\n\n\t\tuniforms.diffuse.value.copy( material.color );\n\t\tuniforms.opacity.value = material.opacity;\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t\trefreshTransformUniform( material.map, uniforms.mapTransform );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsDash( uniforms, material ) {\n\n\t\tuniforms.dashSize.value = material.dashSize;\n\t\tuniforms.totalSize.value = material.dashSize + material.gapSize;\n\t\tuniforms.scale.value = material.scale;\n\n\t}\n\n\tfunction refreshUniformsPoints( uniforms, material, pixelRatio, height ) {\n\n\t\tuniforms.diffuse.value.copy( material.color );\n\t\tuniforms.opacity.value = material.opacity;\n\t\tuniforms.size.value = material.size * pixelRatio;\n\t\tuniforms.scale.value = height * 0.5;\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t\trefreshTransformUniform( material.map, uniforms.uvTransform );\n\n\t\t}\n\n\t\tif ( material.alphaMap ) {\n\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t\trefreshTransformUniform( material.alphaMap, uniforms.alphaMapTransform );\n\n\t\t}\n\n\t\tif ( material.alphaTest > 0 ) {\n\n\t\t\tuniforms.alphaTest.value = material.alphaTest;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsSprites( uniforms, material ) {\n\n\t\tuniforms.diffuse.value.copy( material.color );\n\t\tuniforms.opacity.value = material.opacity;\n\t\tuniforms.rotation.value = material.rotation;\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t\trefreshTransformUniform( material.map, uniforms.mapTransform );\n\n\t\t}\n\n\t\tif ( material.alphaMap ) {\n\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t\trefreshTransformUniform( material.alphaMap, uniforms.alphaMapTransform );\n\n\t\t}\n\n\t\tif ( material.alphaTest > 0 ) {\n\n\t\t\tuniforms.alphaTest.value = material.alphaTest;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsPhong( uniforms, material ) {\n\n\t\tuniforms.specular.value.copy( material.specular );\n\t\tuniforms.shininess.value = Math.max( material.shininess, 1e-4 ); // to prevent pow( 0.0, 0.0 )\n\n\t}\n\n\tfunction refreshUniformsToon( uniforms, material ) {\n\n\t\tif ( material.gradientMap ) {\n\n\t\t\tuniforms.gradientMap.value = material.gradientMap;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsStandard( uniforms, material ) {\n\n\t\tuniforms.metalness.value = material.metalness;\n\n\t\tif ( material.metalnessMap ) {\n\n\t\t\tuniforms.metalnessMap.value = material.metalnessMap;\n\n\t\t\trefreshTransformUniform( material.metalnessMap, uniforms.metalnessMapTransform );\n\n\t\t}\n\n\t\tuniforms.roughness.value = material.roughness;\n\n\t\tif ( material.roughnessMap ) {\n\n\t\t\tuniforms.roughnessMap.value = material.roughnessMap;\n\n\t\t\trefreshTransformUniform( material.roughnessMap, uniforms.roughnessMapTransform );\n\n\t\t}\n\n\t\tif ( material.envMap ) {\n\n\t\t\t//uniforms.envMap.value = material.envMap; // part of uniforms common\n\n\t\t\tuniforms.envMapIntensity.value = material.envMapIntensity;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsPhysical( uniforms, material, transmissionRenderTarget ) {\n\n\t\tuniforms.ior.value = material.ior; // also part of uniforms common\n\n\t\tif ( material.sheen > 0 ) {\n\n\t\t\tuniforms.sheenColor.value.copy( material.sheenColor ).multiplyScalar( material.sheen );\n\n\t\t\tuniforms.sheenRoughness.value = material.sheenRoughness;\n\n\t\t\tif ( material.sheenColorMap ) {\n\n\t\t\t\tuniforms.sheenColorMap.value = material.sheenColorMap;\n\n\t\t\t\trefreshTransformUniform( material.sheenColorMap, uniforms.sheenColorMapTransform );\n\n\t\t\t}\n\n\t\t\tif ( material.sheenRoughnessMap ) {\n\n\t\t\t\tuniforms.sheenRoughnessMap.value = material.sheenRoughnessMap;\n\n\t\t\t\trefreshTransformUniform( material.sheenRoughnessMap, uniforms.sheenRoughnessMapTransform );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.clearcoat > 0 ) {\n\n\t\t\tuniforms.clearcoat.value = material.clearcoat;\n\t\t\tuniforms.clearcoatRoughness.value = material.clearcoatRoughness;\n\n\t\t\tif ( material.clearcoatMap ) {\n\n\t\t\t\tuniforms.clearcoatMap.value = material.clearcoatMap;\n\n\t\t\t\trefreshTransformUniform( material.clearcoatMap, uniforms.clearcoatMapTransform );\n\n\t\t\t}\n\n\t\t\tif ( material.clearcoatRoughnessMap ) {\n\n\t\t\t\tuniforms.clearcoatRoughnessMap.value = material.clearcoatRoughnessMap;\n\n\t\t\t\trefreshTransformUniform( material.clearcoatRoughnessMap, uniforms.clearcoatRoughnessMapTransform );\n\n\t\t\t}\n\n\t\t\tif ( material.clearcoatNormalMap ) {\n\n\t\t\t\tuniforms.clearcoatNormalMap.value = material.clearcoatNormalMap;\n\n\t\t\t\trefreshTransformUniform( material.clearcoatNormalMap, uniforms.clearcoatNormalMapTransform );\n\n\t\t\t\tuniforms.clearcoatNormalScale.value.copy( material.clearcoatNormalScale );\n\n\t\t\t\tif ( material.side === BackSide ) {\n\n\t\t\t\t\tuniforms.clearcoatNormalScale.value.negate();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.dispersion > 0 ) {\n\n\t\t\tuniforms.dispersion.value = material.dispersion;\n\n\t\t}\n\n\t\tif ( material.iridescence > 0 ) {\n\n\t\t\tuniforms.iridescence.value = material.iridescence;\n\t\t\tuniforms.iridescenceIOR.value = material.iridescenceIOR;\n\t\t\tuniforms.iridescenceThicknessMinimum.value = material.iridescenceThicknessRange[ 0 ];\n\t\t\tuniforms.iridescenceThicknessMaximum.value = material.iridescenceThicknessRange[ 1 ];\n\n\t\t\tif ( material.iridescenceMap ) {\n\n\t\t\t\tuniforms.iridescenceMap.value = material.iridescenceMap;\n\n\t\t\t\trefreshTransformUniform( material.iridescenceMap, uniforms.iridescenceMapTransform );\n\n\t\t\t}\n\n\t\t\tif ( material.iridescenceThicknessMap ) {\n\n\t\t\t\tuniforms.iridescenceThicknessMap.value = material.iridescenceThicknessMap;\n\n\t\t\t\trefreshTransformUniform( material.iridescenceThicknessMap, uniforms.iridescenceThicknessMapTransform );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.transmission > 0 ) {\n\n\t\t\tuniforms.transmission.value = material.transmission;\n\t\t\tuniforms.transmissionSamplerMap.value = transmissionRenderTarget.texture;\n\t\t\tuniforms.transmissionSamplerSize.value.set( transmissionRenderTarget.width, transmissionRenderTarget.height );\n\n\t\t\tif ( material.transmissionMap ) {\n\n\t\t\t\tuniforms.transmissionMap.value = material.transmissionMap;\n\n\t\t\t\trefreshTransformUniform( material.transmissionMap, uniforms.transmissionMapTransform );\n\n\t\t\t}\n\n\t\t\tuniforms.thickness.value = material.thickness;\n\n\t\t\tif ( material.thicknessMap ) {\n\n\t\t\t\tuniforms.thicknessMap.value = material.thicknessMap;\n\n\t\t\t\trefreshTransformUniform( material.thicknessMap, uniforms.thicknessMapTransform );\n\n\t\t\t}\n\n\t\t\tuniforms.attenuationDistance.value = material.attenuationDistance;\n\t\t\tuniforms.attenuationColor.value.copy( material.attenuationColor );\n\n\t\t}\n\n\t\tif ( material.anisotropy > 0 ) {\n\n\t\t\tuniforms.anisotropyVector.value.set( material.anisotropy * Math.cos( material.anisotropyRotation ), material.anisotropy * Math.sin( material.anisotropyRotation ) );\n\n\t\t\tif ( material.anisotropyMap ) {\n\n\t\t\t\tuniforms.anisotropyMap.value = material.anisotropyMap;\n\n\t\t\t\trefreshTransformUniform( material.anisotropyMap, uniforms.anisotropyMapTransform );\n\n\t\t\t}\n\n\t\t}\n\n\t\tuniforms.specularIntensity.value = material.specularIntensity;\n\t\tuniforms.specularColor.value.copy( material.specularColor );\n\n\t\tif ( material.specularColorMap ) {\n\n\t\t\tuniforms.specularColorMap.value = material.specularColorMap;\n\n\t\t\trefreshTransformUniform( material.specularColorMap, uniforms.specularColorMapTransform );\n\n\t\t}\n\n\t\tif ( material.specularIntensityMap ) {\n\n\t\t\tuniforms.specularIntensityMap.value = material.specularIntensityMap;\n\n\t\t\trefreshTransformUniform( material.specularIntensityMap, uniforms.specularIntensityMapTransform );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsMatcap( uniforms, material ) {\n\n\t\tif ( material.matcap ) {\n\n\t\t\tuniforms.matcap.value = material.matcap;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsDistance( uniforms, material ) {\n\n\t\tconst light = properties.get( material ).light;\n\n\t\tuniforms.referencePosition.value.setFromMatrixPosition( light.matrixWorld );\n\t\tuniforms.nearDistance.value = light.shadow.camera.near;\n\t\tuniforms.farDistance.value = light.shadow.camera.far;\n\n\t}\n\n\treturn {\n\t\trefreshFogUniforms: refreshFogUniforms,\n\t\trefreshMaterialUniforms: refreshMaterialUniforms\n\t};\n\n}\n\nfunction WebGLUniformsGroups( gl, info, capabilities, state ) {\n\n\tlet buffers = {};\n\tlet updateList = {};\n\tlet allocatedBindingPoints = [];\n\n\tconst maxBindingPoints = gl.getParameter( gl.MAX_UNIFORM_BUFFER_BINDINGS ); // binding points are global whereas block indices are per shader program\n\n\tfunction bind( uniformsGroup, program ) {\n\n\t\tconst webglProgram = program.program;\n\t\tstate.uniformBlockBinding( uniformsGroup, webglProgram );\n\n\t}\n\n\tfunction update( uniformsGroup, program ) {\n\n\t\tlet buffer = buffers[ uniformsGroup.id ];\n\n\t\tif ( buffer === undefined ) {\n\n\t\t\tprepareUniformsGroup( uniformsGroup );\n\n\t\t\tbuffer = createBuffer( uniformsGroup );\n\t\t\tbuffers[ uniformsGroup.id ] = buffer;\n\n\t\t\tuniformsGroup.addEventListener( 'dispose', onUniformsGroupsDispose );\n\n\t\t}\n\n\t\t// ensure to update the binding points/block indices mapping for this program\n\n\t\tconst webglProgram = program.program;\n\t\tstate.updateUBOMapping( uniformsGroup, webglProgram );\n\n\t\t// update UBO once per frame\n\n\t\tconst frame = info.render.frame;\n\n\t\tif ( updateList[ uniformsGroup.id ] !== frame ) {\n\n\t\t\tupdateBufferData( uniformsGroup );\n\n\t\t\tupdateList[ uniformsGroup.id ] = frame;\n\n\t\t}\n\n\t}\n\n\tfunction createBuffer( uniformsGroup ) {\n\n\t\t// the setup of an UBO is independent of a particular shader program but global\n\n\t\tconst bindingPointIndex = allocateBindingPointIndex();\n\t\tuniformsGroup.__bindingPointIndex = bindingPointIndex;\n\n\t\tconst buffer = gl.createBuffer();\n\t\tconst size = uniformsGroup.__size;\n\t\tconst usage = uniformsGroup.usage;\n\n\t\tgl.bindBuffer( gl.UNIFORM_BUFFER, buffer );\n\t\tgl.bufferData( gl.UNIFORM_BUFFER, size, usage );\n\t\tgl.bindBuffer( gl.UNIFORM_BUFFER, null );\n\t\tgl.bindBufferBase( gl.UNIFORM_BUFFER, bindingPointIndex, buffer );\n\n\t\treturn buffer;\n\n\t}\n\n\tfunction allocateBindingPointIndex() {\n\n\t\tfor ( let i = 0; i < maxBindingPoints; i ++ ) {\n\n\t\t\tif ( allocatedBindingPoints.indexOf( i ) === - 1 ) {\n\n\t\t\t\tallocatedBindingPoints.push( i );\n\t\t\t\treturn i;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconsole.error( 'THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached.' );\n\n\t\treturn 0;\n\n\t}\n\n\tfunction updateBufferData( uniformsGroup ) {\n\n\t\tconst buffer = buffers[ uniformsGroup.id ];\n\t\tconst uniforms = uniformsGroup.uniforms;\n\t\tconst cache = uniformsGroup.__cache;\n\n\t\tgl.bindBuffer( gl.UNIFORM_BUFFER, buffer );\n\n\t\tfor ( let i = 0, il = uniforms.length; i < il; i ++ ) {\n\n\t\t\tconst uniformArray = Array.isArray( uniforms[ i ] ) ? uniforms[ i ] : [ uniforms[ i ] ];\n\n\t\t\tfor ( let j = 0, jl = uniformArray.length; j < jl; j ++ ) {\n\n\t\t\t\tconst uniform = uniformArray[ j ];\n\n\t\t\t\tif ( hasUniformChanged( uniform, i, j, cache ) === true ) {\n\n\t\t\t\t\tconst offset = uniform.__offset;\n\n\t\t\t\t\tconst values = Array.isArray( uniform.value ) ? uniform.value : [ uniform.value ];\n\n\t\t\t\t\tlet arrayOffset = 0;\n\n\t\t\t\t\tfor ( let k = 0; k < values.length; k ++ ) {\n\n\t\t\t\t\t\tconst value = values[ k ];\n\n\t\t\t\t\t\tconst info = getUniformSize( value );\n\n\t\t\t\t\t\t// TODO add integer and struct support\n\t\t\t\t\t\tif ( typeof value === 'number' || typeof value === 'boolean' ) {\n\n\t\t\t\t\t\t\tuniform.__data[ 0 ] = value;\n\t\t\t\t\t\t\tgl.bufferSubData( gl.UNIFORM_BUFFER, offset + arrayOffset, uniform.__data );\n\n\t\t\t\t\t\t} else if ( value.isMatrix3 ) {\n\n\t\t\t\t\t\t\t// manually converting 3x3 to 3x4\n\n\t\t\t\t\t\t\tuniform.__data[ 0 ] = value.elements[ 0 ];\n\t\t\t\t\t\t\tuniform.__data[ 1 ] = value.elements[ 1 ];\n\t\t\t\t\t\t\tuniform.__data[ 2 ] = value.elements[ 2 ];\n\t\t\t\t\t\t\tuniform.__data[ 3 ] = 0;\n\t\t\t\t\t\t\tuniform.__data[ 4 ] = value.elements[ 3 ];\n\t\t\t\t\t\t\tuniform.__data[ 5 ] = value.elements[ 4 ];\n\t\t\t\t\t\t\tuniform.__data[ 6 ] = value.elements[ 5 ];\n\t\t\t\t\t\t\tuniform.__data[ 7 ] = 0;\n\t\t\t\t\t\t\tuniform.__data[ 8 ] = value.elements[ 6 ];\n\t\t\t\t\t\t\tuniform.__data[ 9 ] = value.elements[ 7 ];\n\t\t\t\t\t\t\tuniform.__data[ 10 ] = value.elements[ 8 ];\n\t\t\t\t\t\t\tuniform.__data[ 11 ] = 0;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tvalue.toArray( uniform.__data, arrayOffset );\n\n\t\t\t\t\t\t\tarrayOffset += info.storage / Float32Array.BYTES_PER_ELEMENT;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tgl.bufferSubData( gl.UNIFORM_BUFFER, offset, uniform.__data );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tgl.bindBuffer( gl.UNIFORM_BUFFER, null );\n\n\t}\n\n\tfunction hasUniformChanged( uniform, index, indexArray, cache ) {\n\n\t\tconst value = uniform.value;\n\t\tconst indexString = index + '_' + indexArray;\n\n\t\tif ( cache[ indexString ] === undefined ) {\n\n\t\t\t// cache entry does not exist so far\n\n\t\t\tif ( typeof value === 'number' || typeof value === 'boolean' ) {\n\n\t\t\t\tcache[ indexString ] = value;\n\n\t\t\t} else {\n\n\t\t\t\tcache[ indexString ] = value.clone();\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t} else {\n\n\t\t\tconst cachedObject = cache[ indexString ];\n\n\t\t\t// compare current value with cached entry\n\n\t\t\tif ( typeof value === 'number' || typeof value === 'boolean' ) {\n\n\t\t\t\tif ( cachedObject !== value ) {\n\n\t\t\t\t\tcache[ indexString ] = value;\n\t\t\t\t\treturn true;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( cachedObject.equals( value ) === false ) {\n\n\t\t\t\t\tcachedObject.copy( value );\n\t\t\t\t\treturn true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\tfunction prepareUniformsGroup( uniformsGroup ) {\n\n\t\t// determine total buffer size according to the STD140 layout\n\t\t// Hint: STD140 is the only supported layout in WebGL 2\n\n\t\tconst uniforms = uniformsGroup.uniforms;\n\n\t\tlet offset = 0; // global buffer offset in bytes\n\t\tconst chunkSize = 16; // size of a chunk in bytes\n\n\t\tfor ( let i = 0, l = uniforms.length; i < l; i ++ ) {\n\n\t\t\tconst uniformArray = Array.isArray( uniforms[ i ] ) ? uniforms[ i ] : [ uniforms[ i ] ];\n\n\t\t\tfor ( let j = 0, jl = uniformArray.length; j < jl; j ++ ) {\n\n\t\t\t\tconst uniform = uniformArray[ j ];\n\n\t\t\t\tconst values = Array.isArray( uniform.value ) ? uniform.value : [ uniform.value ];\n\n\t\t\t\tfor ( let k = 0, kl = values.length; k < kl; k ++ ) {\n\n\t\t\t\t\tconst value = values[ k ];\n\n\t\t\t\t\tconst info = getUniformSize( value );\n\n\t\t\t\t\t// Calculate the chunk offset\n\t\t\t\t\tconst chunkOffsetUniform = offset % chunkSize;\n\n\t\t\t\t\t// Check for chunk overflow\n\t\t\t\t\tif ( chunkOffsetUniform !== 0 && ( chunkSize - chunkOffsetUniform ) < info.boundary ) {\n\n\t\t\t\t\t\t// Add padding and adjust offset\n\t\t\t\t\t\toffset += ( chunkSize - chunkOffsetUniform );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// the following two properties will be used for partial buffer updates\n\n\t\t\t\t\tuniform.__data = new Float32Array( info.storage / Float32Array.BYTES_PER_ELEMENT );\n\t\t\t\t\tuniform.__offset = offset;\n\n\n\t\t\t\t\t// Update the global offset\n\t\t\t\t\toffset += info.storage;\n\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// ensure correct final padding\n\n\t\tconst chunkOffset = offset % chunkSize;\n\n\t\tif ( chunkOffset > 0 ) offset += ( chunkSize - chunkOffset );\n\n\t\t//\n\n\t\tuniformsGroup.__size = offset;\n\t\tuniformsGroup.__cache = {};\n\n\t\treturn this;\n\n\t}\n\n\tfunction getUniformSize( value ) {\n\n\t\tconst info = {\n\t\t\tboundary: 0, // bytes\n\t\t\tstorage: 0 // bytes\n\t\t};\n\n\t\t// determine sizes according to STD140\n\n\t\tif ( typeof value === 'number' || typeof value === 'boolean' ) {\n\n\t\t\t// float/int/bool\n\n\t\t\tinfo.boundary = 4;\n\t\t\tinfo.storage = 4;\n\n\t\t} else if ( value.isVector2 ) {\n\n\t\t\t// vec2\n\n\t\t\tinfo.boundary = 8;\n\t\t\tinfo.storage = 8;\n\n\t\t} else if ( value.isVector3 || value.isColor ) {\n\n\t\t\t// vec3\n\n\t\t\tinfo.boundary = 16;\n\t\t\tinfo.storage = 12; // evil: vec3 must start on a 16-byte boundary but it only consumes 12 bytes\n\n\t\t} else if ( value.isVector4 ) {\n\n\t\t\t// vec4\n\n\t\t\tinfo.boundary = 16;\n\t\t\tinfo.storage = 16;\n\n\t\t} else if ( value.isMatrix3 ) {\n\n\t\t\t// mat3 (in STD140 a 3x3 matrix is represented as 3x4)\n\n\t\t\tinfo.boundary = 48;\n\t\t\tinfo.storage = 48;\n\n\t\t} else if ( value.isMatrix4 ) {\n\n\t\t\t// mat4\n\n\t\t\tinfo.boundary = 64;\n\t\t\tinfo.storage = 64;\n\n\t\t} else if ( value.isTexture ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group.' );\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Unsupported uniform value type.', value );\n\n\t\t}\n\n\t\treturn info;\n\n\t}\n\n\tfunction onUniformsGroupsDispose( event ) {\n\n\t\tconst uniformsGroup = event.target;\n\n\t\tuniformsGroup.removeEventListener( 'dispose', onUniformsGroupsDispose );\n\n\t\tconst index = allocatedBindingPoints.indexOf( uniformsGroup.__bindingPointIndex );\n\t\tallocatedBindingPoints.splice( index, 1 );\n\n\t\tgl.deleteBuffer( buffers[ uniformsGroup.id ] );\n\n\t\tdelete buffers[ uniformsGroup.id ];\n\t\tdelete updateList[ uniformsGroup.id ];\n\n\t}\n\n\tfunction dispose() {\n\n\t\tfor ( const id in buffers ) {\n\n\t\t\tgl.deleteBuffer( buffers[ id ] );\n\n\t\t}\n\n\t\tallocatedBindingPoints = [];\n\t\tbuffers = {};\n\t\tupdateList = {};\n\n\t}\n\n\treturn {\n\n\t\tbind: bind,\n\t\tupdate: update,\n\n\t\tdispose: dispose\n\n\t};\n\n}\n\nclass WebGLRenderer {\n\n\tconstructor( parameters = {} ) {\n\n\t\tconst {\n\t\t\tcanvas = createCanvasElement(),\n\t\t\tcontext = null,\n\t\t\tdepth = true,\n\t\t\tstencil = false,\n\t\t\talpha = false,\n\t\t\tantialias = false,\n\t\t\tpremultipliedAlpha = true,\n\t\t\tpreserveDrawingBuffer = false,\n\t\t\tpowerPreference = 'default',\n\t\t\tfailIfMajorPerformanceCaveat = false,\n\t\t} = parameters;\n\n\t\tthis.isWebGLRenderer = true;\n\n\t\tlet _alpha;\n\n\t\tif ( context !== null ) {\n\n\t\t\tif ( typeof WebGLRenderingContext !== 'undefined' && context instanceof WebGLRenderingContext ) {\n\n\t\t\t\tthrow new Error( 'THREE.WebGLRenderer: WebGL 1 is not supported since r163.' );\n\n\t\t\t}\n\n\t\t\t_alpha = context.getContextAttributes().alpha;\n\n\t\t} else {\n\n\t\t\t_alpha = alpha;\n\n\t\t}\n\n\t\tconst uintClearColor = new Uint32Array( 4 );\n\t\tconst intClearColor = new Int32Array( 4 );\n\n\t\tlet currentRenderList = null;\n\t\tlet currentRenderState = null;\n\n\t\t// render() can be called from within a callback triggered by another render.\n\t\t// We track this so that the nested render call gets its list and state isolated from the parent render call.\n\n\t\tconst renderListStack = [];\n\t\tconst renderStateStack = [];\n\n\t\t// public properties\n\n\t\tthis.domElement = canvas;\n\n\t\t// Debug configuration container\n\t\tthis.debug = {\n\n\t\t\t/**\n\t\t\t * Enables error checking and reporting when shader programs are being compiled\n\t\t\t * @type {boolean}\n\t\t\t */\n\t\t\tcheckShaderErrors: true,\n\t\t\t/**\n\t\t\t * Callback for custom error reporting.\n\t\t\t * @type {?Function}\n\t\t\t */\n\t\t\tonShaderError: null\n\t\t};\n\n\t\t// clearing\n\n\t\tthis.autoClear = true;\n\t\tthis.autoClearColor = true;\n\t\tthis.autoClearDepth = true;\n\t\tthis.autoClearStencil = true;\n\n\t\t// scene graph\n\n\t\tthis.sortObjects = true;\n\n\t\t// user-defined clipping\n\n\t\tthis.clippingPlanes = [];\n\t\tthis.localClippingEnabled = false;\n\n\t\t// physically based shading\n\n\t\tthis._outputColorSpace = SRGBColorSpace;\n\n\t\t// tone mapping\n\n\t\tthis.toneMapping = NoToneMapping;\n\t\tthis.toneMappingExposure = 1.0;\n\n\t\t// internal properties\n\n\t\tconst _this = this;\n\n\t\tlet _isContextLost = false;\n\n\t\t// internal state cache\n\n\t\tlet _currentActiveCubeFace = 0;\n\t\tlet _currentActiveMipmapLevel = 0;\n\t\tlet _currentRenderTarget = null;\n\t\tlet _currentMaterialId = - 1;\n\n\t\tlet _currentCamera = null;\n\n\t\tconst _currentViewport = new Vector4();\n\t\tconst _currentScissor = new Vector4();\n\t\tlet _currentScissorTest = null;\n\n\t\tconst _currentClearColor = new Color( 0x000000 );\n\t\tlet _currentClearAlpha = 0;\n\n\t\t//\n\n\t\tlet _width = canvas.width;\n\t\tlet _height = canvas.height;\n\n\t\tlet _pixelRatio = 1;\n\t\tlet _opaqueSort = null;\n\t\tlet _transparentSort = null;\n\n\t\tconst _viewport = new Vector4( 0, 0, _width, _height );\n\t\tconst _scissor = new Vector4( 0, 0, _width, _height );\n\t\tlet _scissorTest = false;\n\n\t\t// frustum\n\n\t\tconst _frustum = new Frustum();\n\n\t\t// clipping\n\n\t\tlet _clippingEnabled = false;\n\t\tlet _localClippingEnabled = false;\n\n\t\t// camera matrices cache\n\n\t\tconst _projScreenMatrix = new Matrix4();\n\n\t\tconst _vector3 = new Vector3();\n\n\t\tconst _vector4 = new Vector4();\n\n\t\tconst _emptyScene = { background: null, fog: null, environment: null, overrideMaterial: null, isScene: true };\n\n\t\tlet _renderBackground = false;\n\n\t\tfunction getTargetPixelRatio() {\n\n\t\t\treturn _currentRenderTarget === null ? _pixelRatio : 1;\n\n\t\t}\n\n\t\t// initialize\n\n\t\tlet _gl = context;\n\n\t\tfunction getContext( contextName, contextAttributes ) {\n\n\t\t\treturn canvas.getContext( contextName, contextAttributes );\n\n\t\t}\n\n\t\ttry {\n\n\t\t\tconst contextAttributes = {\n\t\t\t\talpha: true,\n\t\t\t\tdepth,\n\t\t\t\tstencil,\n\t\t\t\tantialias,\n\t\t\t\tpremultipliedAlpha,\n\t\t\t\tpreserveDrawingBuffer,\n\t\t\t\tpowerPreference,\n\t\t\t\tfailIfMajorPerformanceCaveat,\n\t\t\t};\n\n\t\t\t// OffscreenCanvas does not have setAttribute, see #22811\n\t\t\tif ( 'setAttribute' in canvas ) canvas.setAttribute( 'data-engine', `three.js r${REVISION}` );\n\n\t\t\t// event listeners must be registered before WebGL context is created, see #12753\n\t\t\tcanvas.addEventListener( 'webglcontextlost', onContextLost, false );\n\t\t\tcanvas.addEventListener( 'webglcontextrestored', onContextRestore, false );\n\t\t\tcanvas.addEventListener( 'webglcontextcreationerror', onContextCreationError, false );\n\n\t\t\tif ( _gl === null ) {\n\n\t\t\t\tconst contextName = 'webgl2';\n\n\t\t\t\t_gl = getContext( contextName, contextAttributes );\n\n\t\t\t\tif ( _gl === null ) {\n\n\t\t\t\t\tif ( getContext( contextName ) ) {\n\n\t\t\t\t\t\tthrow new Error( 'Error creating WebGL context with your selected attributes.' );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthrow new Error( 'Error creating WebGL context.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLRenderer: ' + error.message );\n\t\t\tthrow error;\n\n\t\t}\n\n\t\tlet extensions, capabilities, state, info;\n\t\tlet properties, textures, cubemaps, cubeuvmaps, attributes, geometries, objects;\n\t\tlet programCache, materials, renderLists, renderStates, clipping, shadowMap;\n\n\t\tlet background, morphtargets, bufferRenderer, indexedBufferRenderer;\n\n\t\tlet utils, bindingStates, uniformsGroups;\n\n\t\tfunction initGLContext() {\n\n\t\t\textensions = new WebGLExtensions( _gl );\n\t\t\textensions.init();\n\n\t\t\tutils = new WebGLUtils( _gl, extensions );\n\n\t\t\tcapabilities = new WebGLCapabilities( _gl, extensions, parameters, utils );\n\n\t\t\tstate = new WebGLState( _gl );\n\n\t\t\tinfo = new WebGLInfo( _gl );\n\t\t\tproperties = new WebGLProperties();\n\t\t\ttextures = new WebGLTextures( _gl, extensions, state, properties, capabilities, utils, info );\n\t\t\tcubemaps = new WebGLCubeMaps( _this );\n\t\t\tcubeuvmaps = new WebGLCubeUVMaps( _this );\n\t\t\tattributes = new WebGLAttributes( _gl );\n\t\t\tbindingStates = new WebGLBindingStates( _gl, attributes );\n\t\t\tgeometries = new WebGLGeometries( _gl, attributes, info, bindingStates );\n\t\t\tobjects = new WebGLObjects( _gl, geometries, attributes, info );\n\t\t\tmorphtargets = new WebGLMorphtargets( _gl, capabilities, textures );\n\t\t\tclipping = new WebGLClipping( properties );\n\t\t\tprogramCache = new WebGLPrograms( _this, cubemaps, cubeuvmaps, extensions, capabilities, bindingStates, clipping );\n\t\t\tmaterials = new WebGLMaterials( _this, properties );\n\t\t\trenderLists = new WebGLRenderLists();\n\t\t\trenderStates = new WebGLRenderStates( extensions );\n\t\t\tbackground = new WebGLBackground( _this, cubemaps, cubeuvmaps, state, objects, _alpha, premultipliedAlpha );\n\t\t\tshadowMap = new WebGLShadowMap( _this, objects, capabilities );\n\t\t\tuniformsGroups = new WebGLUniformsGroups( _gl, info, capabilities, state );\n\n\t\t\tbufferRenderer = new WebGLBufferRenderer( _gl, extensions, info );\n\t\t\tindexedBufferRenderer = new WebGLIndexedBufferRenderer( _gl, extensions, info );\n\n\t\t\tinfo.programs = programCache.programs;\n\n\t\t\t_this.capabilities = capabilities;\n\t\t\t_this.extensions = extensions;\n\t\t\t_this.properties = properties;\n\t\t\t_this.renderLists = renderLists;\n\t\t\t_this.shadowMap = shadowMap;\n\t\t\t_this.state = state;\n\t\t\t_this.info = info;\n\n\t\t}\n\n\t\tinitGLContext();\n\n\t\t// xr\n\n\t\tconst xr = new WebXRManager( _this, _gl );\n\n\t\tthis.xr = xr;\n\n\t\t// API\n\n\t\tthis.getContext = function () {\n\n\t\t\treturn _gl;\n\n\t\t};\n\n\t\tthis.getContextAttributes = function () {\n\n\t\t\treturn _gl.getContextAttributes();\n\n\t\t};\n\n\t\tthis.forceContextLoss = function () {\n\n\t\t\tconst extension = extensions.get( 'WEBGL_lose_context' );\n\t\t\tif ( extension ) extension.loseContext();\n\n\t\t};\n\n\t\tthis.forceContextRestore = function () {\n\n\t\t\tconst extension = extensions.get( 'WEBGL_lose_context' );\n\t\t\tif ( extension ) extension.restoreContext();\n\n\t\t};\n\n\t\tthis.getPixelRatio = function () {\n\n\t\t\treturn _pixelRatio;\n\n\t\t};\n\n\t\tthis.setPixelRatio = function ( value ) {\n\n\t\t\tif ( value === undefined ) return;\n\n\t\t\t_pixelRatio = value;\n\n\t\t\tthis.setSize( _width, _height, false );\n\n\t\t};\n\n\t\tthis.getSize = function ( target ) {\n\n\t\t\treturn target.set( _width, _height );\n\n\t\t};\n\n\t\tthis.setSize = function ( width, height, updateStyle = true ) {\n\n\t\t\tif ( xr.isPresenting ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Can\\'t change size while VR device is presenting.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\t_width = width;\n\t\t\t_height = height;\n\n\t\t\tcanvas.width = Math.floor( width * _pixelRatio );\n\t\t\tcanvas.height = Math.floor( height * _pixelRatio );\n\n\t\t\tif ( updateStyle === true ) {\n\n\t\t\t\tcanvas.style.width = width + 'px';\n\t\t\t\tcanvas.style.height = height + 'px';\n\n\t\t\t}\n\n\t\t\tthis.setViewport( 0, 0, width, height );\n\n\t\t};\n\n\t\tthis.getDrawingBufferSize = function ( target ) {\n\n\t\t\treturn target.set( _width * _pixelRatio, _height * _pixelRatio ).floor();\n\n\t\t};\n\n\t\tthis.setDrawingBufferSize = function ( width, height, pixelRatio ) {\n\n\t\t\t_width = width;\n\t\t\t_height = height;\n\n\t\t\t_pixelRatio = pixelRatio;\n\n\t\t\tcanvas.width = Math.floor( width * pixelRatio );\n\t\t\tcanvas.height = Math.floor( height * pixelRatio );\n\n\t\t\tthis.setViewport( 0, 0, width, height );\n\n\t\t};\n\n\t\tthis.getCurrentViewport = function ( target ) {\n\n\t\t\treturn target.copy( _currentViewport );\n\n\t\t};\n\n\t\tthis.getViewport = function ( target ) {\n\n\t\t\treturn target.copy( _viewport );\n\n\t\t};\n\n\t\tthis.setViewport = function ( x, y, width, height ) {\n\n\t\t\tif ( x.isVector4 ) {\n\n\t\t\t\t_viewport.set( x.x, x.y, x.z, x.w );\n\n\t\t\t} else {\n\n\t\t\t\t_viewport.set( x, y, width, height );\n\n\t\t\t}\n\n\t\t\tstate.viewport( _currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ).round() );\n\n\t\t};\n\n\t\tthis.getScissor = function ( target ) {\n\n\t\t\treturn target.copy( _scissor );\n\n\t\t};\n\n\t\tthis.setScissor = function ( x, y, width, height ) {\n\n\t\t\tif ( x.isVector4 ) {\n\n\t\t\t\t_scissor.set( x.x, x.y, x.z, x.w );\n\n\t\t\t} else {\n\n\t\t\t\t_scissor.set( x, y, width, height );\n\n\t\t\t}\n\n\t\t\tstate.scissor( _currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ).round() );\n\n\t\t};\n\n\t\tthis.getScissorTest = function () {\n\n\t\t\treturn _scissorTest;\n\n\t\t};\n\n\t\tthis.setScissorTest = function ( boolean ) {\n\n\t\t\tstate.setScissorTest( _scissorTest = boolean );\n\n\t\t};\n\n\t\tthis.setOpaqueSort = function ( method ) {\n\n\t\t\t_opaqueSort = method;\n\n\t\t};\n\n\t\tthis.setTransparentSort = function ( method ) {\n\n\t\t\t_transparentSort = method;\n\n\t\t};\n\n\t\t// Clearing\n\n\t\tthis.getClearColor = function ( target ) {\n\n\t\t\treturn target.copy( background.getClearColor() );\n\n\t\t};\n\n\t\tthis.setClearColor = function () {\n\n\t\t\tbackground.setClearColor.apply( background, arguments );\n\n\t\t};\n\n\t\tthis.getClearAlpha = function () {\n\n\t\t\treturn background.getClearAlpha();\n\n\t\t};\n\n\t\tthis.setClearAlpha = function () {\n\n\t\t\tbackground.setClearAlpha.apply( background, arguments );\n\n\t\t};\n\n\t\tthis.clear = function ( color = true, depth = true, stencil = true ) {\n\n\t\t\tlet bits = 0;\n\n\t\t\tif ( color ) {\n\n\t\t\t\t// check if we're trying to clear an integer target\n\t\t\t\tlet isIntegerFormat = false;\n\t\t\t\tif ( _currentRenderTarget !== null ) {\n\n\t\t\t\t\tconst targetFormat = _currentRenderTarget.texture.format;\n\t\t\t\t\tisIntegerFormat = targetFormat === RGBAIntegerFormat ||\n\t\t\t\t\t\ttargetFormat === RGIntegerFormat ||\n\t\t\t\t\t\ttargetFormat === RedIntegerFormat;\n\n\t\t\t\t}\n\n\t\t\t\t// use the appropriate clear functions to clear the target if it's a signed\n\t\t\t\t// or unsigned integer target\n\t\t\t\tif ( isIntegerFormat ) {\n\n\t\t\t\t\tconst targetType = _currentRenderTarget.texture.type;\n\t\t\t\t\tconst isUnsignedType = targetType === UnsignedByteType ||\n\t\t\t\t\t\ttargetType === UnsignedIntType ||\n\t\t\t\t\t\ttargetType === UnsignedShortType ||\n\t\t\t\t\t\ttargetType === UnsignedInt248Type ||\n\t\t\t\t\t\ttargetType === UnsignedShort4444Type ||\n\t\t\t\t\t\ttargetType === UnsignedShort5551Type;\n\n\t\t\t\t\tconst clearColor = background.getClearColor();\n\t\t\t\t\tconst a = background.getClearAlpha();\n\t\t\t\t\tconst r = clearColor.r;\n\t\t\t\t\tconst g = clearColor.g;\n\t\t\t\t\tconst b = clearColor.b;\n\n\t\t\t\t\tif ( isUnsignedType ) {\n\n\t\t\t\t\t\tuintClearColor[ 0 ] = r;\n\t\t\t\t\t\tuintClearColor[ 1 ] = g;\n\t\t\t\t\t\tuintClearColor[ 2 ] = b;\n\t\t\t\t\t\tuintClearColor[ 3 ] = a;\n\t\t\t\t\t\t_gl.clearBufferuiv( _gl.COLOR, 0, uintClearColor );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tintClearColor[ 0 ] = r;\n\t\t\t\t\t\tintClearColor[ 1 ] = g;\n\t\t\t\t\t\tintClearColor[ 2 ] = b;\n\t\t\t\t\t\tintClearColor[ 3 ] = a;\n\t\t\t\t\t\t_gl.clearBufferiv( _gl.COLOR, 0, intClearColor );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbits |= _gl.COLOR_BUFFER_BIT;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( depth ) bits |= _gl.DEPTH_BUFFER_BIT;\n\t\t\tif ( stencil ) {\n\n\t\t\t\tbits |= _gl.STENCIL_BUFFER_BIT;\n\t\t\t\tthis.state.buffers.stencil.setMask( 0xffffffff );\n\n\t\t\t}\n\n\t\t\t_gl.clear( bits );\n\n\t\t};\n\n\t\tthis.clearColor = function () {\n\n\t\t\tthis.clear( true, false, false );\n\n\t\t};\n\n\t\tthis.clearDepth = function () {\n\n\t\t\tthis.clear( false, true, false );\n\n\t\t};\n\n\t\tthis.clearStencil = function () {\n\n\t\t\tthis.clear( false, false, true );\n\n\t\t};\n\n\t\t//\n\n\t\tthis.dispose = function () {\n\n\t\t\tcanvas.removeEventListener( 'webglcontextlost', onContextLost, false );\n\t\t\tcanvas.removeEventListener( 'webglcontextrestored', onContextRestore, false );\n\t\t\tcanvas.removeEventListener( 'webglcontextcreationerror', onContextCreationError, false );\n\n\t\t\trenderLists.dispose();\n\t\t\trenderStates.dispose();\n\t\t\tproperties.dispose();\n\t\t\tcubemaps.dispose();\n\t\t\tcubeuvmaps.dispose();\n\t\t\tobjects.dispose();\n\t\t\tbindingStates.dispose();\n\t\t\tuniformsGroups.dispose();\n\t\t\tprogramCache.dispose();\n\n\t\t\txr.dispose();\n\n\t\t\txr.removeEventListener( 'sessionstart', onXRSessionStart );\n\t\t\txr.removeEventListener( 'sessionend', onXRSessionEnd );\n\n\t\t\tanimation.stop();\n\n\t\t};\n\n\t\t// Events\n\n\t\tfunction onContextLost( event ) {\n\n\t\t\tevent.preventDefault();\n\n\t\t\tconsole.log( 'THREE.WebGLRenderer: Context Lost.' );\n\n\t\t\t_isContextLost = true;\n\n\t\t}\n\n\t\tfunction onContextRestore( /* event */ ) {\n\n\t\t\tconsole.log( 'THREE.WebGLRenderer: Context Restored.' );\n\n\t\t\t_isContextLost = false;\n\n\t\t\tconst infoAutoReset = info.autoReset;\n\t\t\tconst shadowMapEnabled = shadowMap.enabled;\n\t\t\tconst shadowMapAutoUpdate = shadowMap.autoUpdate;\n\t\t\tconst shadowMapNeedsUpdate = shadowMap.needsUpdate;\n\t\t\tconst shadowMapType = shadowMap.type;\n\n\t\t\tinitGLContext();\n\n\t\t\tinfo.autoReset = infoAutoReset;\n\t\t\tshadowMap.enabled = shadowMapEnabled;\n\t\t\tshadowMap.autoUpdate = shadowMapAutoUpdate;\n\t\t\tshadowMap.needsUpdate = shadowMapNeedsUpdate;\n\t\t\tshadowMap.type = shadowMapType;\n\n\t\t}\n\n\t\tfunction onContextCreationError( event ) {\n\n\t\t\tconsole.error( 'THREE.WebGLRenderer: A WebGL context could not be created. Reason: ', event.statusMessage );\n\n\t\t}\n\n\t\tfunction onMaterialDispose( event ) {\n\n\t\t\tconst material = event.target;\n\n\t\t\tmaterial.removeEventListener( 'dispose', onMaterialDispose );\n\n\t\t\tdeallocateMaterial( material );\n\n\t\t}\n\n\t\t// Buffer deallocation\n\n\t\tfunction deallocateMaterial( material ) {\n\n\t\t\treleaseMaterialProgramReferences( material );\n\n\t\t\tproperties.remove( material );\n\n\t\t}\n\n\n\t\tfunction releaseMaterialProgramReferences( material ) {\n\n\t\t\tconst programs = properties.get( material ).programs;\n\n\t\t\tif ( programs !== undefined ) {\n\n\t\t\t\tprograms.forEach( function ( program ) {\n\n\t\t\t\t\tprogramCache.releaseProgram( program );\n\n\t\t\t\t} );\n\n\t\t\t\tif ( material.isShaderMaterial ) {\n\n\t\t\t\t\tprogramCache.releaseShaderCache( material );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Buffer rendering\n\n\t\tthis.renderBufferDirect = function ( camera, scene, geometry, material, object, group ) {\n\n\t\t\tif ( scene === null ) scene = _emptyScene; // renderBufferDirect second parameter used to be fog (could be null)\n\n\t\t\tconst frontFaceCW = ( object.isMesh && object.matrixWorld.determinant() < 0 );\n\n\t\t\tconst program = setProgram( camera, scene, geometry, material, object );\n\n\t\t\tstate.setMaterial( material, frontFaceCW );\n\n\t\t\t//\n\n\t\t\tlet index = geometry.index;\n\t\t\tlet rangeFactor = 1;\n\n\t\t\tif ( material.wireframe === true ) {\n\n\t\t\t\tindex = geometries.getWireframeAttribute( geometry );\n\n\t\t\t\tif ( index === undefined ) return;\n\n\t\t\t\trangeFactor = 2;\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tconst drawRange = geometry.drawRange;\n\t\t\tconst position = geometry.attributes.position;\n\n\t\t\tlet drawStart = drawRange.start * rangeFactor;\n\t\t\tlet drawEnd = ( drawRange.start + drawRange.count ) * rangeFactor;\n\n\t\t\tif ( group !== null ) {\n\n\t\t\t\tdrawStart = Math.max( drawStart, group.start * rangeFactor );\n\t\t\t\tdrawEnd = Math.min( drawEnd, ( group.start + group.count ) * rangeFactor );\n\n\t\t\t}\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tdrawStart = Math.max( drawStart, 0 );\n\t\t\t\tdrawEnd = Math.min( drawEnd, index.count );\n\n\t\t\t} else if ( position !== undefined && position !== null ) {\n\n\t\t\t\tdrawStart = Math.max( drawStart, 0 );\n\t\t\t\tdrawEnd = Math.min( drawEnd, position.count );\n\n\t\t\t}\n\n\t\t\tconst drawCount = drawEnd - drawStart;\n\n\t\t\tif ( drawCount < 0 || drawCount === Infinity ) return;\n\n\t\t\t//\n\n\t\t\tbindingStates.setup( object, material, program, geometry, index );\n\n\t\t\tlet attribute;\n\t\t\tlet renderer = bufferRenderer;\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tattribute = attributes.get( index );\n\n\t\t\t\trenderer = indexedBufferRenderer;\n\t\t\t\trenderer.setIndex( attribute );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tif ( object.isMesh ) {\n\n\t\t\t\tif ( material.wireframe === true ) {\n\n\t\t\t\t\tstate.setLineWidth( material.wireframeLinewidth * getTargetPixelRatio() );\n\t\t\t\t\trenderer.setMode( _gl.LINES );\n\n\t\t\t\t} else {\n\n\t\t\t\t\trenderer.setMode( _gl.TRIANGLES );\n\n\t\t\t\t}\n\n\t\t\t} else if ( object.isLine ) {\n\n\t\t\t\tlet lineWidth = material.linewidth;\n\n\t\t\t\tif ( lineWidth === undefined ) lineWidth = 1; // Not using Line*Material\n\n\t\t\t\tstate.setLineWidth( lineWidth * getTargetPixelRatio() );\n\n\t\t\t\tif ( object.isLineSegments ) {\n\n\t\t\t\t\trenderer.setMode( _gl.LINES );\n\n\t\t\t\t} else if ( object.isLineLoop ) {\n\n\t\t\t\t\trenderer.setMode( _gl.LINE_LOOP );\n\n\t\t\t\t} else {\n\n\t\t\t\t\trenderer.setMode( _gl.LINE_STRIP );\n\n\t\t\t\t}\n\n\t\t\t} else if ( object.isPoints ) {\n\n\t\t\t\trenderer.setMode( _gl.POINTS );\n\n\t\t\t} else if ( object.isSprite ) {\n\n\t\t\t\trenderer.setMode( _gl.TRIANGLES );\n\n\t\t\t}\n\n\t\t\tif ( object.isBatchedMesh ) {\n\n\t\t\t\tif ( object._multiDrawInstances !== null ) {\n\n\t\t\t\t\trenderer.renderMultiDrawInstances( object._multiDrawStarts, object._multiDrawCounts, object._multiDrawCount, object._multiDrawInstances );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( ! extensions.get( 'WEBGL_multi_draw' ) ) {\n\n\t\t\t\t\t\tconst starts = object._multiDrawStarts;\n\t\t\t\t\t\tconst counts = object._multiDrawCounts;\n\t\t\t\t\t\tconst drawCount = object._multiDrawCount;\n\t\t\t\t\t\tconst bytesPerElement = index ? attributes.get( index ).bytesPerElement : 1;\n\t\t\t\t\t\tconst uniforms = properties.get( material ).currentProgram.getUniforms();\n\t\t\t\t\t\tfor ( let i = 0; i < drawCount; i ++ ) {\n\n\t\t\t\t\t\t\tuniforms.setValue( _gl, '_gl_DrawID', i );\n\t\t\t\t\t\t\trenderer.render( starts[ i ] / bytesPerElement, counts[ i ] );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\trenderer.renderMultiDraw( object._multiDrawStarts, object._multiDrawCounts, object._multiDrawCount );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( object.isInstancedMesh ) {\n\n\t\t\t\trenderer.renderInstances( drawStart, drawCount, object.count );\n\n\t\t\t} else if ( geometry.isInstancedBufferGeometry ) {\n\n\t\t\t\tconst maxInstanceCount = geometry._maxInstanceCount !== undefined ? geometry._maxInstanceCount : Infinity;\n\t\t\t\tconst instanceCount = Math.min( geometry.instanceCount, maxInstanceCount );\n\n\t\t\t\trenderer.renderInstances( drawStart, drawCount, instanceCount );\n\n\t\t\t} else {\n\n\t\t\t\trenderer.render( drawStart, drawCount );\n\n\t\t\t}\n\n\t\t};\n\n\t\t// Compile\n\n\t\tfunction prepareMaterial( material, scene, object ) {\n\n\t\t\tif ( material.transparent === true && material.side === DoubleSide && material.forceSinglePass === false ) {\n\n\t\t\t\tmaterial.side = BackSide;\n\t\t\t\tmaterial.needsUpdate = true;\n\t\t\t\tgetProgram( material, scene, object );\n\n\t\t\t\tmaterial.side = FrontSide;\n\t\t\t\tmaterial.needsUpdate = true;\n\t\t\t\tgetProgram( material, scene, object );\n\n\t\t\t\tmaterial.side = DoubleSide;\n\n\t\t\t} else {\n\n\t\t\t\tgetProgram( material, scene, object );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.compile = function ( scene, camera, targetScene = null ) {\n\n\t\t\tif ( targetScene === null ) targetScene = scene;\n\n\t\t\tcurrentRenderState = renderStates.get( targetScene );\n\t\t\tcurrentRenderState.init( camera );\n\n\t\t\trenderStateStack.push( currentRenderState );\n\n\t\t\t// gather lights from both the target scene and the new object that will be added to the scene.\n\n\t\t\ttargetScene.traverseVisible( function ( object ) {\n\n\t\t\t\tif ( object.isLight && object.layers.test( camera.layers ) ) {\n\n\t\t\t\t\tcurrentRenderState.pushLight( object );\n\n\t\t\t\t\tif ( object.castShadow ) {\n\n\t\t\t\t\t\tcurrentRenderState.pushShadow( object );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\tif ( scene !== targetScene ) {\n\n\t\t\t\tscene.traverseVisible( function ( object ) {\n\n\t\t\t\t\tif ( object.isLight && object.layers.test( camera.layers ) ) {\n\n\t\t\t\t\t\tcurrentRenderState.pushLight( object );\n\n\t\t\t\t\t\tif ( object.castShadow ) {\n\n\t\t\t\t\t\t\tcurrentRenderState.pushShadow( object );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t\tcurrentRenderState.setupLights();\n\n\t\t\t// Only initialize materials in the new scene, not the targetScene.\n\n\t\t\tconst materials = new Set();\n\n\t\t\tscene.traverse( function ( object ) {\n\n\t\t\t\tconst material = object.material;\n\n\t\t\t\tif ( material ) {\n\n\t\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\t\tfor ( let i = 0; i < material.length; i ++ ) {\n\n\t\t\t\t\t\t\tconst material2 = material[ i ];\n\n\t\t\t\t\t\t\tprepareMaterial( material2, targetScene, object );\n\t\t\t\t\t\t\tmaterials.add( material2 );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tprepareMaterial( material, targetScene, object );\n\t\t\t\t\t\tmaterials.add( material );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\trenderStateStack.pop();\n\t\t\tcurrentRenderState = null;\n\n\t\t\treturn materials;\n\n\t\t};\n\n\t\t// compileAsync\n\n\t\tthis.compileAsync = function ( scene, camera, targetScene = null ) {\n\n\t\t\tconst materials = this.compile( scene, camera, targetScene );\n\n\t\t\t// Wait for all the materials in the new object to indicate that they're\n\t\t\t// ready to be used before resolving the promise.\n\n\t\t\treturn new Promise( ( resolve ) => {\n\n\t\t\t\tfunction checkMaterialsReady() {\n\n\t\t\t\t\tmaterials.forEach( function ( material ) {\n\n\t\t\t\t\t\tconst materialProperties = properties.get( material );\n\t\t\t\t\t\tconst program = materialProperties.currentProgram;\n\n\t\t\t\t\t\tif ( program.isReady() ) {\n\n\t\t\t\t\t\t\t// remove any programs that report they're ready to use from the list\n\t\t\t\t\t\t\tmaterials.delete( material );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} );\n\n\t\t\t\t\t// once the list of compiling materials is empty, call the callback\n\n\t\t\t\t\tif ( materials.size === 0 ) {\n\n\t\t\t\t\t\tresolve( scene );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// if some materials are still not ready, wait a bit and check again\n\n\t\t\t\t\tsetTimeout( checkMaterialsReady, 10 );\n\n\t\t\t\t}\n\n\t\t\t\tif ( extensions.get( 'KHR_parallel_shader_compile' ) !== null ) {\n\n\t\t\t\t\t// If we can check the compilation status of the materials without\n\t\t\t\t\t// blocking then do so right away.\n\n\t\t\t\t\tcheckMaterialsReady();\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// Otherwise start by waiting a bit to give the materials we just\n\t\t\t\t\t// initialized a chance to finish.\n\n\t\t\t\t\tsetTimeout( checkMaterialsReady, 10 );\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t};\n\n\t\t// Animation Loop\n\n\t\tlet onAnimationFrameCallback = null;\n\n\t\tfunction onAnimationFrame( time ) {\n\n\t\t\tif ( onAnimationFrameCallback ) onAnimationFrameCallback( time );\n\n\t\t}\n\n\t\tfunction onXRSessionStart() {\n\n\t\t\tanimation.stop();\n\n\t\t}\n\n\t\tfunction onXRSessionEnd() {\n\n\t\t\tanimation.start();\n\n\t\t}\n\n\t\tconst animation = new WebGLAnimation();\n\t\tanimation.setAnimationLoop( onAnimationFrame );\n\n\t\tif ( typeof self !== 'undefined' ) animation.setContext( self );\n\n\t\tthis.setAnimationLoop = function ( callback ) {\n\n\t\t\tonAnimationFrameCallback = callback;\n\t\t\txr.setAnimationLoop( callback );\n\n\t\t\t( callback === null ) ? animation.stop() : animation.start();\n\n\t\t};\n\n\t\txr.addEventListener( 'sessionstart', onXRSessionStart );\n\t\txr.addEventListener( 'sessionend', onXRSessionEnd );\n\n\t\t// Rendering\n\n\t\tthis.render = function ( scene, camera ) {\n\n\t\t\tif ( camera !== undefined && camera.isCamera !== true ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tif ( _isContextLost === true ) return;\n\n\t\t\t// update scene graph\n\n\t\t\tif ( scene.matrixWorldAutoUpdate === true ) scene.updateMatrixWorld();\n\n\t\t\t// update camera matrices and frustum\n\n\t\t\tif ( camera.parent === null && camera.matrixWorldAutoUpdate === true ) camera.updateMatrixWorld();\n\n\t\t\tif ( xr.enabled === true && xr.isPresenting === true ) {\n\n\t\t\t\tif ( xr.cameraAutoUpdate === true ) xr.updateCamera( camera );\n\n\t\t\t\tcamera = xr.getCamera(); // use XR camera for rendering\n\n\t\t\t}\n\n\t\t\t//\n\t\t\tif ( scene.isScene === true ) scene.onBeforeRender( _this, scene, camera, _currentRenderTarget );\n\n\t\t\tcurrentRenderState = renderStates.get( scene, renderStateStack.length );\n\t\t\tcurrentRenderState.init( camera );\n\n\t\t\trenderStateStack.push( currentRenderState );\n\n\t\t\t_projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\n\t\t\t_frustum.setFromProjectionMatrix( _projScreenMatrix );\n\n\t\t\t_localClippingEnabled = this.localClippingEnabled;\n\t\t\t_clippingEnabled = clipping.init( this.clippingPlanes, _localClippingEnabled );\n\n\t\t\tcurrentRenderList = renderLists.get( scene, renderListStack.length );\n\t\t\tcurrentRenderList.init();\n\n\t\t\trenderListStack.push( currentRenderList );\n\n\t\t\tif ( xr.enabled === true && xr.isPresenting === true ) {\n\n\t\t\t\tconst depthSensingMesh = _this.xr.getDepthSensingMesh();\n\n\t\t\t\tif ( depthSensingMesh !== null ) {\n\n\t\t\t\t\tprojectObject( depthSensingMesh, camera, - Infinity, _this.sortObjects );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tprojectObject( scene, camera, 0, _this.sortObjects );\n\n\t\t\tcurrentRenderList.finish();\n\n\t\t\tif ( _this.sortObjects === true ) {\n\n\t\t\t\tcurrentRenderList.sort( _opaqueSort, _transparentSort );\n\n\t\t\t}\n\n\t\t\t_renderBackground = xr.enabled === false || xr.isPresenting === false || xr.hasDepthSensing() === false;\n\t\t\tif ( _renderBackground ) {\n\n\t\t\t\tbackground.addToRenderList( currentRenderList, scene );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tthis.info.render.frame ++;\n\n\t\t\tif ( _clippingEnabled === true ) clipping.beginShadows();\n\n\t\t\tconst shadowsArray = currentRenderState.state.shadowsArray;\n\n\t\t\tshadowMap.render( shadowsArray, scene, camera );\n\n\t\t\tif ( _clippingEnabled === true ) clipping.endShadows();\n\n\t\t\t//\n\n\t\t\tif ( this.info.autoReset === true ) this.info.reset();\n\n\t\t\t// render scene\n\n\t\t\tconst opaqueObjects = currentRenderList.opaque;\n\t\t\tconst transmissiveObjects = currentRenderList.transmissive;\n\n\t\t\tcurrentRenderState.setupLights();\n\n\t\t\tif ( camera.isArrayCamera ) {\n\n\t\t\t\tconst cameras = camera.cameras;\n\n\t\t\t\tif ( transmissiveObjects.length > 0 ) {\n\n\t\t\t\t\tfor ( let i = 0, l = cameras.length; i < l; i ++ ) {\n\n\t\t\t\t\t\tconst camera2 = cameras[ i ];\n\n\t\t\t\t\t\trenderTransmissionPass( opaqueObjects, transmissiveObjects, scene, camera2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( _renderBackground ) background.render( scene );\n\n\t\t\t\tfor ( let i = 0, l = cameras.length; i < l; i ++ ) {\n\n\t\t\t\t\tconst camera2 = cameras[ i ];\n\n\t\t\t\t\trenderScene( currentRenderList, scene, camera2, camera2.viewport );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( transmissiveObjects.length > 0 ) renderTransmissionPass( opaqueObjects, transmissiveObjects, scene, camera );\n\n\t\t\t\tif ( _renderBackground ) background.render( scene );\n\n\t\t\t\trenderScene( currentRenderList, scene, camera );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tif ( _currentRenderTarget !== null ) {\n\n\t\t\t\t// resolve multisample renderbuffers to a single-sample texture if necessary\n\n\t\t\t\ttextures.updateMultisampleRenderTarget( _currentRenderTarget );\n\n\t\t\t\t// Generate mipmap if we're using any kind of mipmap filtering\n\n\t\t\t\ttextures.updateRenderTargetMipmap( _currentRenderTarget );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tif ( scene.isScene === true ) scene.onAfterRender( _this, scene, camera );\n\n\t\t\t// _gl.finish();\n\n\t\t\tbindingStates.resetDefaultState();\n\t\t\t_currentMaterialId = - 1;\n\t\t\t_currentCamera = null;\n\n\t\t\trenderStateStack.pop();\n\n\t\t\tif ( renderStateStack.length > 0 ) {\n\n\t\t\t\tcurrentRenderState = renderStateStack[ renderStateStack.length - 1 ];\n\n\t\t\t\tif ( _clippingEnabled === true ) clipping.setGlobalState( _this.clippingPlanes, currentRenderState.state.camera );\n\n\t\t\t} else {\n\n\t\t\t\tcurrentRenderState = null;\n\n\t\t\t}\n\n\t\t\trenderListStack.pop();\n\n\t\t\tif ( renderListStack.length > 0 ) {\n\n\t\t\t\tcurrentRenderList = renderListStack[ renderListStack.length - 1 ];\n\n\t\t\t} else {\n\n\t\t\t\tcurrentRenderList = null;\n\n\t\t\t}\n\n\t\t};\n\n\t\tfunction projectObject( object, camera, groupOrder, sortObjects ) {\n\n\t\t\tif ( object.visible === false ) return;\n\n\t\t\tconst visible = object.layers.test( camera.layers );\n\n\t\t\tif ( visible ) {\n\n\t\t\t\tif ( object.isGroup ) {\n\n\t\t\t\t\tgroupOrder = object.renderOrder;\n\n\t\t\t\t} else if ( object.isLOD ) {\n\n\t\t\t\t\tif ( object.autoUpdate === true ) object.update( camera );\n\n\t\t\t\t} else if ( object.isLight ) {\n\n\t\t\t\t\tcurrentRenderState.pushLight( object );\n\n\t\t\t\t\tif ( object.castShadow ) {\n\n\t\t\t\t\t\tcurrentRenderState.pushShadow( object );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( object.isSprite ) {\n\n\t\t\t\t\tif ( ! object.frustumCulled || _frustum.intersectsSprite( object ) ) {\n\n\t\t\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t\t\t_vector4.setFromMatrixPosition( object.matrixWorld )\n\t\t\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst geometry = objects.update( object );\n\t\t\t\t\t\tconst material = object.material;\n\n\t\t\t\t\t\tif ( material.visible ) {\n\n\t\t\t\t\t\t\tcurrentRenderList.push( object, geometry, material, groupOrder, _vector4.z, null );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( object.isMesh || object.isLine || object.isPoints ) {\n\n\t\t\t\t\tif ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) {\n\n\t\t\t\t\t\tconst geometry = objects.update( object );\n\t\t\t\t\t\tconst material = object.material;\n\n\t\t\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t\t\tif ( object.boundingSphere !== undefined ) {\n\n\t\t\t\t\t\t\t\tif ( object.boundingSphere === null ) object.computeBoundingSphere();\n\t\t\t\t\t\t\t\t_vector4.copy( object.boundingSphere.center );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\t\t\t\t\t\t\t\t_vector4.copy( geometry.boundingSphere.center );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t_vector4\n\t\t\t\t\t\t\t\t.applyMatrix4( object.matrixWorld )\n\t\t\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\t\t\tconst groups = geometry.groups;\n\n\t\t\t\t\t\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\t\t\t\t\t\tconst group = groups[ i ];\n\t\t\t\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\t\t\tif ( groupMaterial && groupMaterial.visible ) {\n\n\t\t\t\t\t\t\t\t\tcurrentRenderList.push( object, geometry, groupMaterial, groupOrder, _vector4.z, group );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else if ( material.visible ) {\n\n\t\t\t\t\t\t\tcurrentRenderList.push( object, geometry, material, groupOrder, _vector4.z, null );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst children = object.children;\n\n\t\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tprojectObject( children[ i ], camera, groupOrder, sortObjects );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction renderScene( currentRenderList, scene, camera, viewport ) {\n\n\t\t\tconst opaqueObjects = currentRenderList.opaque;\n\t\t\tconst transmissiveObjects = currentRenderList.transmissive;\n\t\t\tconst transparentObjects = currentRenderList.transparent;\n\n\t\t\tcurrentRenderState.setupLightsView( camera );\n\n\t\t\tif ( _clippingEnabled === true ) clipping.setGlobalState( _this.clippingPlanes, camera );\n\n\t\t\tif ( viewport ) state.viewport( _currentViewport.copy( viewport ) );\n\n\t\t\tif ( opaqueObjects.length > 0 ) renderObjects( opaqueObjects, scene, camera );\n\t\t\tif ( transmissiveObjects.length > 0 ) renderObjects( transmissiveObjects, scene, camera );\n\t\t\tif ( transparentObjects.length > 0 ) renderObjects( transparentObjects, scene, camera );\n\n\t\t\t// Ensure depth buffer writing is enabled so it can be cleared on next render\n\n\t\t\tstate.buffers.depth.setTest( true );\n\t\t\tstate.buffers.depth.setMask( true );\n\t\t\tstate.buffers.color.setMask( true );\n\n\t\t\tstate.setPolygonOffset( false );\n\n\t\t}\n\n\t\tfunction renderTransmissionPass( opaqueObjects, transmissiveObjects, scene, camera ) {\n\n\t\t\tconst overrideMaterial = scene.isScene === true ? scene.overrideMaterial : null;\n\n\t\t\tif ( overrideMaterial !== null ) {\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tif ( currentRenderState.state.transmissionRenderTarget[ camera.id ] === undefined ) {\n\n\t\t\t\tcurrentRenderState.state.transmissionRenderTarget[ camera.id ] = new WebGLRenderTarget( 1, 1, {\n\t\t\t\t\tgenerateMipmaps: true,\n\t\t\t\t\ttype: ( extensions.has( 'EXT_color_buffer_half_float' ) || extensions.has( 'EXT_color_buffer_float' ) ) ? HalfFloatType : UnsignedByteType,\n\t\t\t\t\tminFilter: LinearMipmapLinearFilter,\n\t\t\t\t\tsamples: 4,\n\t\t\t\t\tstencilBuffer: stencil,\n\t\t\t\t\tresolveDepthBuffer: false,\n\t\t\t\t\tresolveStencilBuffer: false,\n\t\t\t\t\tcolorSpace: ColorManagement.workingColorSpace,\n\t\t\t\t} );\n\n\t\t\t\t// debug\n\n\t\t\t\t/*\n\t\t\t\tconst geometry = new PlaneGeometry();\n\t\t\t\tconst material = new MeshBasicMaterial( { map: _transmissionRenderTarget.texture } );\n\n\t\t\t\tconst mesh = new Mesh( geometry, material );\n\t\t\t\tscene.add( mesh );\n\t\t\t\t*/\n\n\t\t\t}\n\n\t\t\tconst transmissionRenderTarget = currentRenderState.state.transmissionRenderTarget[ camera.id ];\n\n\t\t\tconst activeViewport = camera.viewport || _currentViewport;\n\t\t\ttransmissionRenderTarget.setSize( activeViewport.z, activeViewport.w );\n\n\t\t\t//\n\n\t\t\tconst currentRenderTarget = _this.getRenderTarget();\n\t\t\t_this.setRenderTarget( transmissionRenderTarget );\n\n\t\t\t_this.getClearColor( _currentClearColor );\n\t\t\t_currentClearAlpha = _this.getClearAlpha();\n\t\t\tif ( _currentClearAlpha < 1 ) _this.setClearColor( 0xffffff, 0.5 );\n\n\t\t\tif ( _renderBackground ) {\n\n\t\t\t\tbackground.render( scene );\n\n\t\t\t} else {\n\n\t\t\t\t_this.clear();\n\n\t\t\t}\n\n\t\t\t// Turn off the features which can affect the frag color for opaque objects pass.\n\t\t\t// Otherwise they are applied twice in opaque objects pass and transmission objects pass.\n\t\t\tconst currentToneMapping = _this.toneMapping;\n\t\t\t_this.toneMapping = NoToneMapping;\n\n\t\t\t// Remove viewport from camera to avoid nested render calls resetting viewport to it (e.g Reflector).\n\t\t\t// Transmission render pass requires viewport to match the transmissionRenderTarget.\n\t\t\tconst currentCameraViewport = camera.viewport;\n\t\t\tif ( camera.viewport !== undefined ) camera.viewport = undefined;\n\n\t\t\tcurrentRenderState.setupLightsView( camera );\n\n\t\t\tif ( _clippingEnabled === true ) clipping.setGlobalState( _this.clippingPlanes, camera );\n\n\t\t\trenderObjects( opaqueObjects, scene, camera );\n\n\t\t\ttextures.updateMultisampleRenderTarget( transmissionRenderTarget );\n\t\t\ttextures.updateRenderTargetMipmap( transmissionRenderTarget );\n\n\t\t\tif ( extensions.has( 'WEBGL_multisampled_render_to_texture' ) === false ) { // see #28131\n\n\t\t\t\tlet renderTargetNeedsUpdate = false;\n\n\t\t\t\tfor ( let i = 0, l = transmissiveObjects.length; i < l; i ++ ) {\n\n\t\t\t\t\tconst renderItem = transmissiveObjects[ i ];\n\n\t\t\t\t\tconst object = renderItem.object;\n\t\t\t\t\tconst geometry = renderItem.geometry;\n\t\t\t\t\tconst material = renderItem.material;\n\t\t\t\t\tconst group = renderItem.group;\n\n\t\t\t\t\tif ( material.side === DoubleSide && object.layers.test( camera.layers ) ) {\n\n\t\t\t\t\t\tconst currentSide = material.side;\n\n\t\t\t\t\t\tmaterial.side = BackSide;\n\t\t\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t\t\t\trenderObject( object, scene, camera, geometry, material, group );\n\n\t\t\t\t\t\tmaterial.side = currentSide;\n\t\t\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t\t\t\trenderTargetNeedsUpdate = true;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( renderTargetNeedsUpdate === true ) {\n\n\t\t\t\t\ttextures.updateMultisampleRenderTarget( transmissionRenderTarget );\n\t\t\t\t\ttextures.updateRenderTargetMipmap( transmissionRenderTarget );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t_this.setRenderTarget( currentRenderTarget );\n\n\t\t\t_this.setClearColor( _currentClearColor, _currentClearAlpha );\n\n\t\t\tif ( currentCameraViewport !== undefined ) camera.viewport = currentCameraViewport;\n\n\t\t\t_this.toneMapping = currentToneMapping;\n\n\t\t}\n\n\t\tfunction renderObjects( renderList, scene, camera ) {\n\n\t\t\tconst overrideMaterial = scene.isScene === true ? scene.overrideMaterial : null;\n\n\t\t\tfor ( let i = 0, l = renderList.length; i < l; i ++ ) {\n\n\t\t\t\tconst renderItem = renderList[ i ];\n\n\t\t\t\tconst object = renderItem.object;\n\t\t\t\tconst geometry = renderItem.geometry;\n\t\t\t\tconst material = overrideMaterial === null ? renderItem.material : overrideMaterial;\n\t\t\t\tconst group = renderItem.group;\n\n\t\t\t\tif ( object.layers.test( camera.layers ) ) {\n\n\t\t\t\t\trenderObject( object, scene, camera, geometry, material, group );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction renderObject( object, scene, camera, geometry, material, group ) {\n\n\t\t\tobject.onBeforeRender( _this, scene, camera, geometry, material, group );\n\n\t\t\tobject.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, object.matrixWorld );\n\t\t\tobject.normalMatrix.getNormalMatrix( object.modelViewMatrix );\n\n\t\t\tif ( material.transparent === true && material.side === DoubleSide && material.forceSinglePass === false ) {\n\n\t\t\t\tmaterial.side = BackSide;\n\t\t\t\tmaterial.needsUpdate = true;\n\t\t\t\t_this.renderBufferDirect( camera, scene, geometry, material, object, group );\n\n\t\t\t\tmaterial.side = FrontSide;\n\t\t\t\tmaterial.needsUpdate = true;\n\t\t\t\t_this.renderBufferDirect( camera, scene, geometry, material, object, group );\n\n\t\t\t\tmaterial.side = DoubleSide;\n\n\t\t\t} else {\n\n\t\t\t\t_this.renderBufferDirect( camera, scene, geometry, material, object, group );\n\n\t\t\t}\n\n\t\t\tobject.onAfterRender( _this, scene, camera, geometry, material, group );\n\n\t\t}\n\n\t\tfunction getProgram( material, scene, object ) {\n\n\t\t\tif ( scene.isScene !== true ) scene = _emptyScene; // scene could be a Mesh, Line, Points, ...\n\n\t\t\tconst materialProperties = properties.get( material );\n\n\t\t\tconst lights = currentRenderState.state.lights;\n\t\t\tconst shadowsArray = currentRenderState.state.shadowsArray;\n\n\t\t\tconst lightsStateVersion = lights.state.version;\n\n\t\t\tconst parameters = programCache.getParameters( material, lights.state, shadowsArray, scene, object );\n\t\t\tconst programCacheKey = programCache.getProgramCacheKey( parameters );\n\n\t\t\tlet programs = materialProperties.programs;\n\n\t\t\t// always update environment and fog - changing these trigger an getProgram call, but it's possible that the program doesn't change\n\n\t\t\tmaterialProperties.environment = material.isMeshStandardMaterial ? scene.environment : null;\n\t\t\tmaterialProperties.fog = scene.fog;\n\t\t\tmaterialProperties.envMap = ( material.isMeshStandardMaterial ? cubeuvmaps : cubemaps ).get( material.envMap || materialProperties.environment );\n\t\t\tmaterialProperties.envMapRotation = ( materialProperties.environment !== null && material.envMap === null ) ? scene.environmentRotation : material.envMapRotation;\n\n\t\t\tif ( programs === undefined ) {\n\n\t\t\t\t// new material\n\n\t\t\t\tmaterial.addEventListener( 'dispose', onMaterialDispose );\n\n\t\t\t\tprograms = new Map();\n\t\t\t\tmaterialProperties.programs = programs;\n\n\t\t\t}\n\n\t\t\tlet program = programs.get( programCacheKey );\n\n\t\t\tif ( program !== undefined ) {\n\n\t\t\t\t// early out if program and light state is identical\n\n\t\t\t\tif ( materialProperties.currentProgram === program && materialProperties.lightsStateVersion === lightsStateVersion ) {\n\n\t\t\t\t\tupdateCommonMaterialProperties( material, parameters );\n\n\t\t\t\t\treturn program;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tparameters.uniforms = programCache.getUniforms( material );\n\n\t\t\t\tmaterial.onBeforeCompile( parameters, _this );\n\n\t\t\t\tprogram = programCache.acquireProgram( parameters, programCacheKey );\n\t\t\t\tprograms.set( programCacheKey, program );\n\n\t\t\t\tmaterialProperties.uniforms = parameters.uniforms;\n\n\t\t\t}\n\n\t\t\tconst uniforms = materialProperties.uniforms;\n\n\t\t\tif ( ( ! material.isShaderMaterial && ! material.isRawShaderMaterial ) || material.clipping === true ) {\n\n\t\t\t\tuniforms.clippingPlanes = clipping.uniform;\n\n\t\t\t}\n\n\t\t\tupdateCommonMaterialProperties( material, parameters );\n\n\t\t\t// store the light setup it was created for\n\n\t\t\tmaterialProperties.needsLights = materialNeedsLights( material );\n\t\t\tmaterialProperties.lightsStateVersion = lightsStateVersion;\n\n\t\t\tif ( materialProperties.needsLights ) {\n\n\t\t\t\t// wire up the material to this renderer's lighting state\n\n\t\t\t\tuniforms.ambientLightColor.value = lights.state.ambient;\n\t\t\t\tuniforms.lightProbe.value = lights.state.probe;\n\t\t\t\tuniforms.directionalLights.value = lights.state.directional;\n\t\t\t\tuniforms.directionalLightShadows.value = lights.state.directionalShadow;\n\t\t\t\tuniforms.spotLights.value = lights.state.spot;\n\t\t\t\tuniforms.spotLightShadows.value = lights.state.spotShadow;\n\t\t\t\tuniforms.rectAreaLights.value = lights.state.rectArea;\n\t\t\t\tuniforms.ltc_1.value = lights.state.rectAreaLTC1;\n\t\t\t\tuniforms.ltc_2.value = lights.state.rectAreaLTC2;\n\t\t\t\tuniforms.pointLights.value = lights.state.point;\n\t\t\t\tuniforms.pointLightShadows.value = lights.state.pointShadow;\n\t\t\t\tuniforms.hemisphereLights.value = lights.state.hemi;\n\n\t\t\t\tuniforms.directionalShadowMap.value = lights.state.directionalShadowMap;\n\t\t\t\tuniforms.directionalShadowMatrix.value = lights.state.directionalShadowMatrix;\n\t\t\t\tuniforms.spotShadowMap.value = lights.state.spotShadowMap;\n\t\t\t\tuniforms.spotLightMatrix.value = lights.state.spotLightMatrix;\n\t\t\t\tuniforms.spotLightMap.value = lights.state.spotLightMap;\n\t\t\t\tuniforms.pointShadowMap.value = lights.state.pointShadowMap;\n\t\t\t\tuniforms.pointShadowMatrix.value = lights.state.pointShadowMatrix;\n\t\t\t\t// TODO (abelnation): add area lights shadow info to uniforms\n\n\t\t\t}\n\n\t\t\tmaterialProperties.currentProgram = program;\n\t\t\tmaterialProperties.uniformsList = null;\n\n\t\t\treturn program;\n\n\t\t}\n\n\t\tfunction getUniformList( materialProperties ) {\n\n\t\t\tif ( materialProperties.uniformsList === null ) {\n\n\t\t\t\tconst progUniforms = materialProperties.currentProgram.getUniforms();\n\t\t\t\tmaterialProperties.uniformsList = WebGLUniforms.seqWithValue( progUniforms.seq, materialProperties.uniforms );\n\n\t\t\t}\n\n\t\t\treturn materialProperties.uniformsList;\n\n\t\t}\n\n\t\tfunction updateCommonMaterialProperties( material, parameters ) {\n\n\t\t\tconst materialProperties = properties.get( material );\n\n\t\t\tmaterialProperties.outputColorSpace = parameters.outputColorSpace;\n\t\t\tmaterialProperties.batching = parameters.batching;\n\t\t\tmaterialProperties.batchingColor = parameters.batchingColor;\n\t\t\tmaterialProperties.instancing = parameters.instancing;\n\t\t\tmaterialProperties.instancingColor = parameters.instancingColor;\n\t\t\tmaterialProperties.instancingMorph = parameters.instancingMorph;\n\t\t\tmaterialProperties.skinning = parameters.skinning;\n\t\t\tmaterialProperties.morphTargets = parameters.morphTargets;\n\t\t\tmaterialProperties.morphNormals = parameters.morphNormals;\n\t\t\tmaterialProperties.morphColors = parameters.morphColors;\n\t\t\tmaterialProperties.morphTargetsCount = parameters.morphTargetsCount;\n\t\t\tmaterialProperties.numClippingPlanes = parameters.numClippingPlanes;\n\t\t\tmaterialProperties.numIntersection = parameters.numClipIntersection;\n\t\t\tmaterialProperties.vertexAlphas = parameters.vertexAlphas;\n\t\t\tmaterialProperties.vertexTangents = parameters.vertexTangents;\n\t\t\tmaterialProperties.toneMapping = parameters.toneMapping;\n\n\t\t}\n\n\t\tfunction setProgram( camera, scene, geometry, material, object ) {\n\n\t\t\tif ( scene.isScene !== true ) scene = _emptyScene; // scene could be a Mesh, Line, Points, ...\n\n\t\t\ttextures.resetTextureUnits();\n\n\t\t\tconst fog = scene.fog;\n\t\t\tconst environment = material.isMeshStandardMaterial ? scene.environment : null;\n\t\t\tconst colorSpace = ( _currentRenderTarget === null ) ? _this.outputColorSpace : ( _currentRenderTarget.isXRRenderTarget === true ? _currentRenderTarget.texture.colorSpace : LinearSRGBColorSpace );\n\t\t\tconst envMap = ( material.isMeshStandardMaterial ? cubeuvmaps : cubemaps ).get( material.envMap || environment );\n\t\t\tconst vertexAlphas = material.vertexColors === true && !! geometry.attributes.color && geometry.attributes.color.itemSize === 4;\n\t\t\tconst vertexTangents = !! geometry.attributes.tangent && ( !! material.normalMap || material.anisotropy > 0 );\n\t\t\tconst morphTargets = !! geometry.morphAttributes.position;\n\t\t\tconst morphNormals = !! geometry.morphAttributes.normal;\n\t\t\tconst morphColors = !! geometry.morphAttributes.color;\n\n\t\t\tlet toneMapping = NoToneMapping;\n\n\t\t\tif ( material.toneMapped ) {\n\n\t\t\t\tif ( _currentRenderTarget === null || _currentRenderTarget.isXRRenderTarget === true ) {\n\n\t\t\t\t\ttoneMapping = _this.toneMapping;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst morphAttribute = geometry.morphAttributes.position || geometry.morphAttributes.normal || geometry.morphAttributes.color;\n\t\t\tconst morphTargetsCount = ( morphAttribute !== undefined ) ? morphAttribute.length : 0;\n\n\t\t\tconst materialProperties = properties.get( material );\n\t\t\tconst lights = currentRenderState.state.lights;\n\n\t\t\tif ( _clippingEnabled === true ) {\n\n\t\t\t\tif ( _localClippingEnabled === true || camera !== _currentCamera ) {\n\n\t\t\t\t\tconst useCache =\n\t\t\t\t\t\tcamera === _currentCamera &&\n\t\t\t\t\t\tmaterial.id === _currentMaterialId;\n\n\t\t\t\t\t// we might want to call this function with some ClippingGroup\n\t\t\t\t\t// object instead of the material, once it becomes feasible\n\t\t\t\t\t// (#8465, #8379)\n\t\t\t\t\tclipping.setState( material, camera, useCache );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tlet needsProgramChange = false;\n\n\t\t\tif ( material.version === materialProperties.__version ) {\n\n\t\t\t\tif ( materialProperties.needsLights && ( materialProperties.lightsStateVersion !== lights.state.version ) ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.outputColorSpace !== colorSpace ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( object.isBatchedMesh && materialProperties.batching === false ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( ! object.isBatchedMesh && materialProperties.batching === true ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( object.isBatchedMesh && materialProperties.batchingColor === true && object.colorTexture === null ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( object.isBatchedMesh && materialProperties.batchingColor === false && object.colorTexture !== null ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( object.isInstancedMesh && materialProperties.instancing === false ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( ! object.isInstancedMesh && materialProperties.instancing === true ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( object.isSkinnedMesh && materialProperties.skinning === false ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( ! object.isSkinnedMesh && materialProperties.skinning === true ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( object.isInstancedMesh && materialProperties.instancingColor === true && object.instanceColor === null ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( object.isInstancedMesh && materialProperties.instancingColor === false && object.instanceColor !== null ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( object.isInstancedMesh && materialProperties.instancingMorph === true && object.morphTexture === null ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( object.isInstancedMesh && materialProperties.instancingMorph === false && object.morphTexture !== null ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.envMap !== envMap ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( material.fog === true && materialProperties.fog !== fog ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.numClippingPlanes !== undefined &&\n\t\t\t\t\t( materialProperties.numClippingPlanes !== clipping.numPlanes ||\n\t\t\t\t\tmaterialProperties.numIntersection !== clipping.numIntersection ) ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.vertexAlphas !== vertexAlphas ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.vertexTangents !== vertexTangents ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.morphTargets !== morphTargets ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.morphNormals !== morphNormals ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.morphColors !== morphColors ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.toneMapping !== toneMapping ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.morphTargetsCount !== morphTargetsCount ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tneedsProgramChange = true;\n\t\t\t\tmaterialProperties.__version = material.version;\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tlet program = materialProperties.currentProgram;\n\n\t\t\tif ( needsProgramChange === true ) {\n\n\t\t\t\tprogram = getProgram( material, scene, object );\n\n\t\t\t}\n\n\t\t\tlet refreshProgram = false;\n\t\t\tlet refreshMaterial = false;\n\t\t\tlet refreshLights = false;\n\n\t\t\tconst p_uniforms = program.getUniforms(),\n\t\t\t\tm_uniforms = materialProperties.uniforms;\n\n\t\t\tif ( state.useProgram( program.program ) ) {\n\n\t\t\t\trefreshProgram = true;\n\t\t\t\trefreshMaterial = true;\n\t\t\t\trefreshLights = true;\n\n\t\t\t}\n\n\t\t\tif ( material.id !== _currentMaterialId ) {\n\n\t\t\t\t_currentMaterialId = material.id;\n\n\t\t\t\trefreshMaterial = true;\n\n\t\t\t}\n\n\t\t\tif ( refreshProgram || _currentCamera !== camera ) {\n\n\t\t\t\t// common camera uniforms\n\n\t\t\t\tp_uniforms.setValue( _gl, 'projectionMatrix', camera.projectionMatrix );\n\t\t\t\tp_uniforms.setValue( _gl, 'viewMatrix', camera.matrixWorldInverse );\n\n\t\t\t\tconst uCamPos = p_uniforms.map.cameraPosition;\n\n\t\t\t\tif ( uCamPos !== undefined ) {\n\n\t\t\t\t\tuCamPos.setValue( _gl, _vector3.setFromMatrixPosition( camera.matrixWorld ) );\n\n\t\t\t\t}\n\n\t\t\t\tif ( capabilities.logarithmicDepthBuffer ) {\n\n\t\t\t\t\tp_uniforms.setValue( _gl, 'logDepthBufFC',\n\t\t\t\t\t\t2.0 / ( Math.log( camera.far + 1.0 ) / Math.LN2 ) );\n\n\t\t\t\t}\n\n\t\t\t\t// consider moving isOrthographic to UniformLib and WebGLMaterials, see https://github.com/mrdoob/three.js/pull/26467#issuecomment-1645185067\n\n\t\t\t\tif ( material.isMeshPhongMaterial ||\n\t\t\t\t\tmaterial.isMeshToonMaterial ||\n\t\t\t\t\tmaterial.isMeshLambertMaterial ||\n\t\t\t\t\tmaterial.isMeshBasicMaterial ||\n\t\t\t\t\tmaterial.isMeshStandardMaterial ||\n\t\t\t\t\tmaterial.isShaderMaterial ) {\n\n\t\t\t\t\tp_uniforms.setValue( _gl, 'isOrthographic', camera.isOrthographicCamera === true );\n\n\t\t\t\t}\n\n\t\t\t\tif ( _currentCamera !== camera ) {\n\n\t\t\t\t\t_currentCamera = camera;\n\n\t\t\t\t\t// lighting uniforms depend on the camera so enforce an update\n\t\t\t\t\t// now, in case this material supports lights - or later, when\n\t\t\t\t\t// the next material that does gets activated:\n\n\t\t\t\t\trefreshMaterial = true;\t\t// set to true on material change\n\t\t\t\t\trefreshLights = true;\t\t// remains set until update done\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// skinning and morph target uniforms must be set even if material didn't change\n\t\t\t// auto-setting of texture unit for bone and morph texture must go before other textures\n\t\t\t// otherwise textures used for skinning and morphing can take over texture units reserved for other material textures\n\n\t\t\tif ( object.isSkinnedMesh ) {\n\n\t\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrix' );\n\t\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrixInverse' );\n\n\t\t\t\tconst skeleton = object.skeleton;\n\n\t\t\t\tif ( skeleton ) {\n\n\t\t\t\t\tif ( skeleton.boneTexture === null ) skeleton.computeBoneTexture();\n\n\t\t\t\t\tp_uniforms.setValue( _gl, 'boneTexture', skeleton.boneTexture, textures );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( object.isBatchedMesh ) {\n\n\t\t\t\tp_uniforms.setOptional( _gl, object, 'batchingTexture' );\n\t\t\t\tp_uniforms.setValue( _gl, 'batchingTexture', object._matricesTexture, textures );\n\n\t\t\t\tp_uniforms.setOptional( _gl, object, 'batchingIdTexture' );\n\t\t\t\tp_uniforms.setValue( _gl, 'batchingIdTexture', object._indirectTexture, textures );\n\n\t\t\t\tp_uniforms.setOptional( _gl, object, 'batchingColorTexture' );\n\t\t\t\tif ( object._colorsTexture !== null ) {\n\n\t\t\t\t\tp_uniforms.setValue( _gl, 'batchingColorTexture', object._colorsTexture, textures );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst morphAttributes = geometry.morphAttributes;\n\n\t\t\tif ( morphAttributes.position !== undefined || morphAttributes.normal !== undefined || ( morphAttributes.color !== undefined ) ) {\n\n\t\t\t\tmorphtargets.update( object, geometry, program );\n\n\t\t\t}\n\n\t\t\tif ( refreshMaterial || materialProperties.receiveShadow !== object.receiveShadow ) {\n\n\t\t\t\tmaterialProperties.receiveShadow = object.receiveShadow;\n\t\t\t\tp_uniforms.setValue( _gl, 'receiveShadow', object.receiveShadow );\n\n\t\t\t}\n\n\t\t\t// https://github.com/mrdoob/three.js/pull/24467#issuecomment-1209031512\n\n\t\t\tif ( material.isMeshGouraudMaterial && material.envMap !== null ) {\n\n\t\t\t\tm_uniforms.envMap.value = envMap;\n\n\t\t\t\tm_uniforms.flipEnvMap.value = ( envMap.isCubeTexture && envMap.isRenderTargetTexture === false ) ? - 1 : 1;\n\n\t\t\t}\n\n\t\t\tif ( material.isMeshStandardMaterial && material.envMap === null && scene.environment !== null ) {\n\n\t\t\t\tm_uniforms.envMapIntensity.value = scene.environmentIntensity;\n\n\t\t\t}\n\n\t\t\tif ( refreshMaterial ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'toneMappingExposure', _this.toneMappingExposure );\n\n\t\t\t\tif ( materialProperties.needsLights ) {\n\n\t\t\t\t\t// the current material requires lighting info\n\n\t\t\t\t\t// note: all lighting uniforms are always set correctly\n\t\t\t\t\t// they simply reference the renderer's state for their\n\t\t\t\t\t// values\n\t\t\t\t\t//\n\t\t\t\t\t// use the current material's .needsUpdate flags to set\n\t\t\t\t\t// the GL state when required\n\n\t\t\t\t\tmarkUniformsLightsNeedsUpdate( m_uniforms, refreshLights );\n\n\t\t\t\t}\n\n\t\t\t\t// refresh uniforms common to several materials\n\n\t\t\t\tif ( fog && material.fog === true ) {\n\n\t\t\t\t\tmaterials.refreshFogUniforms( m_uniforms, fog );\n\n\t\t\t\t}\n\n\t\t\t\tmaterials.refreshMaterialUniforms( m_uniforms, material, _pixelRatio, _height, currentRenderState.state.transmissionRenderTarget[ camera.id ] );\n\n\t\t\t\tWebGLUniforms.upload( _gl, getUniformList( materialProperties ), m_uniforms, textures );\n\n\t\t\t}\n\n\t\t\tif ( material.isShaderMaterial && material.uniformsNeedUpdate === true ) {\n\n\t\t\t\tWebGLUniforms.upload( _gl, getUniformList( materialProperties ), m_uniforms, textures );\n\t\t\t\tmaterial.uniformsNeedUpdate = false;\n\n\t\t\t}\n\n\t\t\tif ( material.isSpriteMaterial ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'center', object.center );\n\n\t\t\t}\n\n\t\t\t// common matrices\n\n\t\t\tp_uniforms.setValue( _gl, 'modelViewMatrix', object.modelViewMatrix );\n\t\t\tp_uniforms.setValue( _gl, 'normalMatrix', object.normalMatrix );\n\t\t\tp_uniforms.setValue( _gl, 'modelMatrix', object.matrixWorld );\n\n\t\t\t// UBOs\n\n\t\t\tif ( material.isShaderMaterial || material.isRawShaderMaterial ) {\n\n\t\t\t\tconst groups = material.uniformsGroups;\n\n\t\t\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\t\t\tconst group = groups[ i ];\n\n\t\t\t\t\tuniformsGroups.update( group, program );\n\t\t\t\t\tuniformsGroups.bind( group, program );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn program;\n\n\t\t}\n\n\t\t// If uniforms are marked as clean, they don't need to be loaded to the GPU.\n\n\t\tfunction markUniformsLightsNeedsUpdate( uniforms, value ) {\n\n\t\t\tuniforms.ambientLightColor.needsUpdate = value;\n\t\t\tuniforms.lightProbe.needsUpdate = value;\n\n\t\t\tuniforms.directionalLights.needsUpdate = value;\n\t\t\tuniforms.directionalLightShadows.needsUpdate = value;\n\t\t\tuniforms.pointLights.needsUpdate = value;\n\t\t\tuniforms.pointLightShadows.needsUpdate = value;\n\t\t\tuniforms.spotLights.needsUpdate = value;\n\t\t\tuniforms.spotLightShadows.needsUpdate = value;\n\t\t\tuniforms.rectAreaLights.needsUpdate = value;\n\t\t\tuniforms.hemisphereLights.needsUpdate = value;\n\n\t\t}\n\n\t\tfunction materialNeedsLights( material ) {\n\n\t\t\treturn material.isMeshLambertMaterial || material.isMeshToonMaterial || material.isMeshPhongMaterial ||\n\t\t\t\tmaterial.isMeshStandardMaterial || material.isShadowMaterial ||\n\t\t\t\t( material.isShaderMaterial && material.lights === true );\n\n\t\t}\n\n\t\tthis.getActiveCubeFace = function () {\n\n\t\t\treturn _currentActiveCubeFace;\n\n\t\t};\n\n\t\tthis.getActiveMipmapLevel = function () {\n\n\t\t\treturn _currentActiveMipmapLevel;\n\n\t\t};\n\n\t\tthis.getRenderTarget = function () {\n\n\t\t\treturn _currentRenderTarget;\n\n\t\t};\n\n\t\tthis.setRenderTargetTextures = function ( renderTarget, colorTexture, depthTexture ) {\n\n\t\t\tproperties.get( renderTarget.texture ).__webglTexture = colorTexture;\n\t\t\tproperties.get( renderTarget.depthTexture ).__webglTexture = depthTexture;\n\n\t\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\t\trenderTargetProperties.__hasExternalTextures = true;\n\n\t\t\trenderTargetProperties.__autoAllocateDepthBuffer = depthTexture === undefined;\n\n\t\t\tif ( ! renderTargetProperties.__autoAllocateDepthBuffer ) {\n\n\t\t\t\t// The multisample_render_to_texture extension doesn't work properly if there\n\t\t\t\t// are midframe flushes and an external depth buffer. Disable use of the extension.\n\t\t\t\tif ( extensions.has( 'WEBGL_multisampled_render_to_texture' ) === true ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided' );\n\t\t\t\t\trenderTargetProperties.__useRenderToTexture = false;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.setRenderTargetFramebuffer = function ( renderTarget, defaultFramebuffer ) {\n\n\t\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\t\trenderTargetProperties.__webglFramebuffer = defaultFramebuffer;\n\t\t\trenderTargetProperties.__useDefaultFramebuffer = defaultFramebuffer === undefined;\n\n\t\t};\n\n\t\tthis.setRenderTarget = function ( renderTarget, activeCubeFace = 0, activeMipmapLevel = 0 ) {\n\n\t\t\t_currentRenderTarget = renderTarget;\n\t\t\t_currentActiveCubeFace = activeCubeFace;\n\t\t\t_currentActiveMipmapLevel = activeMipmapLevel;\n\n\t\t\tlet useDefaultFramebuffer = true;\n\t\t\tlet framebuffer = null;\n\t\t\tlet isCube = false;\n\t\t\tlet isRenderTarget3D = false;\n\n\t\t\tif ( renderTarget ) {\n\n\t\t\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\t\t\tif ( renderTargetProperties.__useDefaultFramebuffer !== undefined ) {\n\n\t\t\t\t\t// We need to make sure to rebind the framebuffer.\n\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, null );\n\t\t\t\t\tuseDefaultFramebuffer = false;\n\n\t\t\t\t} else if ( renderTargetProperties.__webglFramebuffer === undefined ) {\n\n\t\t\t\t\ttextures.setupRenderTarget( renderTarget );\n\n\t\t\t\t} else if ( renderTargetProperties.__hasExternalTextures ) {\n\n\t\t\t\t\t// Color and depth texture must be rebound in order for the swapchain to update.\n\t\t\t\t\ttextures.rebindTextures( renderTarget, properties.get( renderTarget.texture ).__webglTexture, properties.get( renderTarget.depthTexture ).__webglTexture );\n\n\t\t\t\t}\n\n\t\t\t\tconst texture = renderTarget.texture;\n\n\t\t\t\tif ( texture.isData3DTexture || texture.isDataArrayTexture || texture.isCompressedArrayTexture ) {\n\n\t\t\t\t\tisRenderTarget3D = true;\n\n\t\t\t\t}\n\n\t\t\t\tconst __webglFramebuffer = properties.get( renderTarget ).__webglFramebuffer;\n\n\t\t\t\tif ( renderTarget.isWebGLCubeRenderTarget ) {\n\n\t\t\t\t\tif ( Array.isArray( __webglFramebuffer[ activeCubeFace ] ) ) {\n\n\t\t\t\t\t\tframebuffer = __webglFramebuffer[ activeCubeFace ][ activeMipmapLevel ];\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tframebuffer = __webglFramebuffer[ activeCubeFace ];\n\n\t\t\t\t\t}\n\n\t\t\t\t\tisCube = true;\n\n\t\t\t\t} else if ( ( renderTarget.samples > 0 ) && textures.useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\t\t\tframebuffer = properties.get( renderTarget ).__webglMultisampledFramebuffer;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( Array.isArray( __webglFramebuffer ) ) {\n\n\t\t\t\t\t\tframebuffer = __webglFramebuffer[ activeMipmapLevel ];\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tframebuffer = __webglFramebuffer;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t_currentViewport.copy( renderTarget.viewport );\n\t\t\t\t_currentScissor.copy( renderTarget.scissor );\n\t\t\t\t_currentScissorTest = renderTarget.scissorTest;\n\n\t\t\t} else {\n\n\t\t\t\t_currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ).floor();\n\t\t\t\t_currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ).floor();\n\t\t\t\t_currentScissorTest = _scissorTest;\n\n\t\t\t}\n\n\t\t\tconst framebufferBound = state.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\t\tif ( framebufferBound && useDefaultFramebuffer ) {\n\n\t\t\t\tstate.drawBuffers( renderTarget, framebuffer );\n\n\t\t\t}\n\n\t\t\tstate.viewport( _currentViewport );\n\t\t\tstate.scissor( _currentScissor );\n\t\t\tstate.setScissorTest( _currentScissorTest );\n\n\t\t\tif ( isCube ) {\n\n\t\t\t\tconst textureProperties = properties.get( renderTarget.texture );\n\t\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + activeCubeFace, textureProperties.__webglTexture, activeMipmapLevel );\n\n\t\t\t} else if ( isRenderTarget3D ) {\n\n\t\t\t\tconst textureProperties = properties.get( renderTarget.texture );\n\t\t\t\tconst layer = activeCubeFace || 0;\n\t\t\t\t_gl.framebufferTextureLayer( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, textureProperties.__webglTexture, activeMipmapLevel || 0, layer );\n\n\t\t\t}\n\n\t\t\t_currentMaterialId = - 1; // reset current material to ensure correct uniform bindings\n\n\t\t};\n\n\t\tthis.readRenderTargetPixels = function ( renderTarget, x, y, width, height, buffer, activeCubeFaceIndex ) {\n\n\t\t\tif ( ! ( renderTarget && renderTarget.isWebGLRenderTarget ) ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tlet framebuffer = properties.get( renderTarget ).__webglFramebuffer;\n\n\t\t\tif ( renderTarget.isWebGLCubeRenderTarget && activeCubeFaceIndex !== undefined ) {\n\n\t\t\t\tframebuffer = framebuffer[ activeCubeFaceIndex ];\n\n\t\t\t}\n\n\t\t\tif ( framebuffer ) {\n\n\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\t\t\ttry {\n\n\t\t\t\t\tconst texture = renderTarget.texture;\n\t\t\t\t\tconst textureFormat = texture.format;\n\t\t\t\t\tconst textureType = texture.type;\n\n\t\t\t\t\tif ( ! capabilities.textureFormatReadable( textureFormat ) ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.' );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! capabilities.textureTypeReadable( textureType ) ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.' );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// the following if statement ensures valid read requests (no out-of-bounds pixels, see #8604)\n\n\t\t\t\t\tif ( ( x >= 0 && x <= ( renderTarget.width - width ) ) && ( y >= 0 && y <= ( renderTarget.height - height ) ) ) {\n\n\t\t\t\t\t\t_gl.readPixels( x, y, width, height, utils.convert( textureFormat ), utils.convert( textureType ), buffer );\n\n\t\t\t\t\t}\n\n\t\t\t\t} finally {\n\n\t\t\t\t\t// restore framebuffer of current render target if necessary\n\n\t\t\t\t\tconst framebuffer = ( _currentRenderTarget !== null ) ? properties.get( _currentRenderTarget ).__webglFramebuffer : null;\n\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.readRenderTargetPixelsAsync = async function ( renderTarget, x, y, width, height, buffer, activeCubeFaceIndex ) {\n\n\t\t\tif ( ! ( renderTarget && renderTarget.isWebGLRenderTarget ) ) {\n\n\t\t\t\tthrow new Error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.' );\n\n\t\t\t}\n\n\t\t\tlet framebuffer = properties.get( renderTarget ).__webglFramebuffer;\n\t\t\tif ( renderTarget.isWebGLCubeRenderTarget && activeCubeFaceIndex !== undefined ) {\n\n\t\t\t\tframebuffer = framebuffer[ activeCubeFaceIndex ];\n\n\t\t\t}\n\n\t\t\tif ( framebuffer ) {\n\n\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\t\t\ttry {\n\n\t\t\t\t\tconst texture = renderTarget.texture;\n\t\t\t\t\tconst textureFormat = texture.format;\n\t\t\t\t\tconst textureType = texture.type;\n\n\t\t\t\t\tif ( ! capabilities.textureFormatReadable( textureFormat ) ) {\n\n\t\t\t\t\t\tthrow new Error( 'THREE.WebGLRenderer.readRenderTargetPixelsAsync: renderTarget is not in RGBA or implementation defined format.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! capabilities.textureTypeReadable( textureType ) ) {\n\n\t\t\t\t\t\tthrow new Error( 'THREE.WebGLRenderer.readRenderTargetPixelsAsync: renderTarget is not in UnsignedByteType or implementation defined type.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// the following if statement ensures valid read requests (no out-of-bounds pixels, see #8604)\n\t\t\t\t\tif ( ( x >= 0 && x <= ( renderTarget.width - width ) ) && ( y >= 0 && y <= ( renderTarget.height - height ) ) ) {\n\n\t\t\t\t\t\tconst glBuffer = _gl.createBuffer();\n\t\t\t\t\t\t_gl.bindBuffer( _gl.PIXEL_PACK_BUFFER, glBuffer );\n\t\t\t\t\t\t_gl.bufferData( _gl.PIXEL_PACK_BUFFER, buffer.byteLength, _gl.STREAM_READ );\n\t\t\t\t\t\t_gl.readPixels( x, y, width, height, utils.convert( textureFormat ), utils.convert( textureType ), 0 );\n\t\t\t\t\t\t_gl.flush();\n\n\t\t\t\t\t\t// check if the commands have finished every 8 ms\n\t\t\t\t\t\tconst sync = _gl.fenceSync( _gl.SYNC_GPU_COMMANDS_COMPLETE, 0 );\n\t\t\t\t\t\tawait probeAsync( _gl, sync, 4 );\n\n\t\t\t\t\t\ttry {\n\n\t\t\t\t\t\t\t_gl.bindBuffer( _gl.PIXEL_PACK_BUFFER, glBuffer );\n\t\t\t\t\t\t\t_gl.getBufferSubData( _gl.PIXEL_PACK_BUFFER, 0, buffer );\n\n\t\t\t\t\t\t} finally {\n\n\t\t\t\t\t\t\t_gl.deleteBuffer( glBuffer );\n\t\t\t\t\t\t\t_gl.deleteSync( sync );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn buffer;\n\n\t\t\t\t\t}\n\n\t\t\t\t} finally {\n\n\t\t\t\t\t// restore framebuffer of current render target if necessary\n\n\t\t\t\t\tconst framebuffer = ( _currentRenderTarget !== null ) ? properties.get( _currentRenderTarget ).__webglFramebuffer : null;\n\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.copyFramebufferToTexture = function ( texture, position = null, level = 0 ) {\n\n\t\t\t// support previous signature with position first\n\t\t\tif ( texture.isTexture !== true ) {\n\n\t\t\t\t// @deprecated, r165\n\t\t\t\tconsole.warn( 'WebGLRenderer: copyFramebufferToTexture function signature has changed.' );\n\n\t\t\t\tposition = arguments[ 0 ] || null;\n\t\t\t\ttexture = arguments[ 1 ];\n\n\t\t\t}\n\n\t\t\tconst levelScale = Math.pow( 2, - level );\n\t\t\tconst width = Math.floor( texture.image.width * levelScale );\n\t\t\tconst height = Math.floor( texture.image.height * levelScale );\n\n\t\t\tconst x = position !== null ? position.x : 0;\n\t\t\tconst y = position !== null ? position.y : 0;\n\n\t\t\ttextures.setTexture2D( texture, 0 );\n\n\t\t\t_gl.copyTexSubImage2D( _gl.TEXTURE_2D, level, 0, 0, x, y, width, height );\n\n\t\t\tstate.unbindTexture();\n\n\t\t};\n\n\t\tthis.copyTextureToTexture = function ( srcTexture, dstTexture, srcRegion = null, dstPosition = null, level = 0 ) {\n\n\t\t\t// support previous signature with dstPosition first\n\t\t\tif ( srcTexture.isTexture !== true ) {\n\n\t\t\t\t// @deprecated, r165\n\t\t\t\tconsole.warn( 'WebGLRenderer: copyTextureToTexture function signature has changed.' );\n\n\t\t\t\tdstPosition = arguments[ 0 ] || null;\n\t\t\t\tsrcTexture = arguments[ 1 ];\n\t\t\t\tdstTexture = arguments[ 2 ];\n\t\t\t\tlevel = arguments[ 3 ] || 0;\n\t\t\t\tsrcRegion = null;\n\n\t\t\t}\n\n\t\t\tlet width, height, minX, minY;\n\t\t\tlet dstX, dstY;\n\t\t\tif ( srcRegion !== null ) {\n\n\t\t\t\twidth = srcRegion.max.x - srcRegion.min.x;\n\t\t\t\theight = srcRegion.max.y - srcRegion.min.y;\n\t\t\t\tminX = srcRegion.min.x;\n\t\t\t\tminY = srcRegion.min.y;\n\n\t\t\t} else {\n\n\t\t\t\twidth = srcTexture.image.width;\n\t\t\t\theight = srcTexture.image.height;\n\t\t\t\tminX = 0;\n\t\t\t\tminY = 0;\n\n\t\t\t}\n\n\t\t\tif ( dstPosition !== null ) {\n\n\t\t\t\tdstX = dstPosition.x;\n\t\t\t\tdstY = dstPosition.y;\n\n\t\t\t} else {\n\n\t\t\t\tdstX = 0;\n\t\t\t\tdstY = 0;\n\n\t\t\t}\n\n\t\t\tconst glFormat = utils.convert( dstTexture.format );\n\t\t\tconst glType = utils.convert( dstTexture.type );\n\n\t\t\ttextures.setTexture2D( dstTexture, 0 );\n\n\t\t\t// As another texture upload may have changed pixelStorei\n\t\t\t// parameters, make sure they are correct for the dstTexture\n\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, dstTexture.flipY );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, dstTexture.premultiplyAlpha );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ALIGNMENT, dstTexture.unpackAlignment );\n\n\t\t\tconst currentUnpackRowLen = _gl.getParameter( _gl.UNPACK_ROW_LENGTH );\n\t\t\tconst currentUnpackImageHeight = _gl.getParameter( _gl.UNPACK_IMAGE_HEIGHT );\n\t\t\tconst currentUnpackSkipPixels = _gl.getParameter( _gl.UNPACK_SKIP_PIXELS );\n\t\t\tconst currentUnpackSkipRows = _gl.getParameter( _gl.UNPACK_SKIP_ROWS );\n\t\t\tconst currentUnpackSkipImages = _gl.getParameter( _gl.UNPACK_SKIP_IMAGES );\n\n\t\t\tconst image = srcTexture.isCompressedTexture ? srcTexture.mipmaps[ level ] : srcTexture.image;\n\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ROW_LENGTH, image.width );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_IMAGE_HEIGHT, image.height );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_PIXELS, minX );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_ROWS, minY );\n\n\t\t\tif ( srcTexture.isDataTexture ) {\n\n\t\t\t\t_gl.texSubImage2D( _gl.TEXTURE_2D, level, dstX, dstY, width, height, glFormat, glType, image.data );\n\n\t\t\t} else {\n\n\t\t\t\tif ( srcTexture.isCompressedTexture ) {\n\n\t\t\t\t\t_gl.compressedTexSubImage2D( _gl.TEXTURE_2D, level, dstX, dstY, image.width, image.height, glFormat, image.data );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_gl.texSubImage2D( _gl.TEXTURE_2D, level, dstX, dstY, width, height, glFormat, glType, image );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ROW_LENGTH, currentUnpackRowLen );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_IMAGE_HEIGHT, currentUnpackImageHeight );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_PIXELS, currentUnpackSkipPixels );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_ROWS, currentUnpackSkipRows );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_IMAGES, currentUnpackSkipImages );\n\n\t\t\t// Generate mipmaps only when copying level 0\n\t\t\tif ( level === 0 && dstTexture.generateMipmaps ) _gl.generateMipmap( _gl.TEXTURE_2D );\n\n\t\t\tstate.unbindTexture();\n\n\t\t};\n\n\t\tthis.copyTextureToTexture3D = function ( srcTexture, dstTexture, srcRegion = null, dstPosition = null, level = 0 ) {\n\n\t\t\t// support previous signature with source box first\n\t\t\tif ( srcTexture.isTexture !== true ) {\n\n\t\t\t\t// @deprecated, r165\n\t\t\t\tconsole.warn( 'WebGLRenderer: copyTextureToTexture3D function signature has changed.' );\n\n\t\t\t\tsrcRegion = arguments[ 0 ] || null;\n\t\t\t\tdstPosition = arguments[ 1 ] || null;\n\t\t\t\tsrcTexture = arguments[ 2 ];\n\t\t\t\tdstTexture = arguments[ 3 ];\n\t\t\t\tlevel = arguments[ 4 ] || 0;\n\n\t\t\t}\n\n\t\t\tlet width, height, depth, minX, minY, minZ;\n\t\t\tlet dstX, dstY, dstZ;\n\t\t\tconst image = srcTexture.isCompressedTexture ? srcTexture.mipmaps[ level ] : srcTexture.image;\n\t\t\tif ( srcRegion !== null ) {\n\n\t\t\t\twidth = srcRegion.max.x - srcRegion.min.x;\n\t\t\t\theight = srcRegion.max.y - srcRegion.min.y;\n\t\t\t\tdepth = srcRegion.max.z - srcRegion.min.z;\n\t\t\t\tminX = srcRegion.min.x;\n\t\t\t\tminY = srcRegion.min.y;\n\t\t\t\tminZ = srcRegion.min.z;\n\n\t\t\t} else {\n\n\t\t\t\twidth = image.width;\n\t\t\t\theight = image.height;\n\t\t\t\tdepth = image.depth;\n\t\t\t\tminX = 0;\n\t\t\t\tminY = 0;\n\t\t\t\tminZ = 0;\n\n\t\t\t}\n\n\t\t\tif ( dstPosition !== null ) {\n\n\t\t\t\tdstX = dstPosition.x;\n\t\t\t\tdstY = dstPosition.y;\n\t\t\t\tdstZ = dstPosition.z;\n\n\t\t\t} else {\n\n\t\t\t\tdstX = 0;\n\t\t\t\tdstY = 0;\n\t\t\t\tdstZ = 0;\n\n\t\t\t}\n\n\t\t\tconst glFormat = utils.convert( dstTexture.format );\n\t\t\tconst glType = utils.convert( dstTexture.type );\n\t\t\tlet glTarget;\n\n\t\t\tif ( dstTexture.isData3DTexture ) {\n\n\t\t\t\ttextures.setTexture3D( dstTexture, 0 );\n\t\t\t\tglTarget = _gl.TEXTURE_3D;\n\n\t\t\t} else if ( dstTexture.isDataArrayTexture || dstTexture.isCompressedArrayTexture ) {\n\n\t\t\t\ttextures.setTexture2DArray( dstTexture, 0 );\n\t\t\t\tglTarget = _gl.TEXTURE_2D_ARRAY;\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, dstTexture.flipY );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, dstTexture.premultiplyAlpha );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ALIGNMENT, dstTexture.unpackAlignment );\n\n\t\t\tconst currentUnpackRowLen = _gl.getParameter( _gl.UNPACK_ROW_LENGTH );\n\t\t\tconst currentUnpackImageHeight = _gl.getParameter( _gl.UNPACK_IMAGE_HEIGHT );\n\t\t\tconst currentUnpackSkipPixels = _gl.getParameter( _gl.UNPACK_SKIP_PIXELS );\n\t\t\tconst currentUnpackSkipRows = _gl.getParameter( _gl.UNPACK_SKIP_ROWS );\n\t\t\tconst currentUnpackSkipImages = _gl.getParameter( _gl.UNPACK_SKIP_IMAGES );\n\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ROW_LENGTH, image.width );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_IMAGE_HEIGHT, image.height );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_PIXELS, minX );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_ROWS, minY );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_IMAGES, minZ );\n\n\t\t\tif ( srcTexture.isDataTexture || srcTexture.isData3DTexture ) {\n\n\t\t\t\t_gl.texSubImage3D( glTarget, level, dstX, dstY, dstZ, width, height, depth, glFormat, glType, image.data );\n\n\t\t\t} else {\n\n\t\t\t\tif ( dstTexture.isCompressedArrayTexture ) {\n\n\t\t\t\t\t_gl.compressedTexSubImage3D( glTarget, level, dstX, dstY, dstZ, width, height, depth, glFormat, image.data );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_gl.texSubImage3D( glTarget, level, dstX, dstY, dstZ, width, height, depth, glFormat, glType, image );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ROW_LENGTH, currentUnpackRowLen );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_IMAGE_HEIGHT, currentUnpackImageHeight );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_PIXELS, currentUnpackSkipPixels );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_ROWS, currentUnpackSkipRows );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_IMAGES, currentUnpackSkipImages );\n\n\t\t\t// Generate mipmaps only when copying level 0\n\t\t\tif ( level === 0 && dstTexture.generateMipmaps ) _gl.generateMipmap( glTarget );\n\n\t\t\tstate.unbindTexture();\n\n\t\t};\n\n\t\tthis.initRenderTarget = function ( target ) {\n\n\t\t\tif ( properties.get( target ).__webglFramebuffer === undefined ) {\n\n\t\t\t\ttextures.setupRenderTarget( target );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.initTexture = function ( texture ) {\n\n\t\t\tif ( texture.isCubeTexture ) {\n\n\t\t\t\ttextures.setTextureCube( texture, 0 );\n\n\t\t\t} else if ( texture.isData3DTexture ) {\n\n\t\t\t\ttextures.setTexture3D( texture, 0 );\n\n\t\t\t} else if ( texture.isDataArrayTexture || texture.isCompressedArrayTexture ) {\n\n\t\t\t\ttextures.setTexture2DArray( texture, 0 );\n\n\t\t\t} else {\n\n\t\t\t\ttextures.setTexture2D( texture, 0 );\n\n\t\t\t}\n\n\t\t\tstate.unbindTexture();\n\n\t\t};\n\n\t\tthis.resetState = function () {\n\n\t\t\t_currentActiveCubeFace = 0;\n\t\t\t_currentActiveMipmapLevel = 0;\n\t\t\t_currentRenderTarget = null;\n\n\t\t\tstate.reset();\n\t\t\tbindingStates.reset();\n\n\t\t};\n\n\t\tif ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\n\n\t\t\t__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'observe', { detail: this } ) );\n\n\t\t}\n\n\t}\n\n\tget coordinateSystem() {\n\n\t\treturn WebGLCoordinateSystem;\n\n\t}\n\n\tget outputColorSpace() {\n\n\t\treturn this._outputColorSpace;\n\n\t}\n\n\tset outputColorSpace( colorSpace ) {\n\n\t\tthis._outputColorSpace = colorSpace;\n\n\t\tconst gl = this.getContext();\n\t\tgl.drawingBufferColorSpace = colorSpace === DisplayP3ColorSpace ? 'display-p3' : 'srgb';\n\t\tgl.unpackColorSpace = ColorManagement.workingColorSpace === LinearDisplayP3ColorSpace ? 'display-p3' : 'srgb';\n\n\t}\n\n}\n\nclass FogExp2 {\n\n\tconstructor( color, density = 0.00025 ) {\n\n\t\tthis.isFogExp2 = true;\n\n\t\tthis.name = '';\n\n\t\tthis.color = new Color( color );\n\t\tthis.density = density;\n\n\t}\n\n\tclone() {\n\n\t\treturn new FogExp2( this.color, this.density );\n\n\t}\n\n\ttoJSON( /* meta */ ) {\n\n\t\treturn {\n\t\t\ttype: 'FogExp2',\n\t\t\tname: this.name,\n\t\t\tcolor: this.color.getHex(),\n\t\t\tdensity: this.density\n\t\t};\n\n\t}\n\n}\n\nclass Fog {\n\n\tconstructor( color, near = 1, far = 1000 ) {\n\n\t\tthis.isFog = true;\n\n\t\tthis.name = '';\n\n\t\tthis.color = new Color( color );\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\n\t}\n\n\tclone() {\n\n\t\treturn new Fog( this.color, this.near, this.far );\n\n\t}\n\n\ttoJSON( /* meta */ ) {\n\n\t\treturn {\n\t\t\ttype: 'Fog',\n\t\t\tname: this.name,\n\t\t\tcolor: this.color.getHex(),\n\t\t\tnear: this.near,\n\t\t\tfar: this.far\n\t\t};\n\n\t}\n\n}\n\nclass Scene extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isScene = true;\n\n\t\tthis.type = 'Scene';\n\n\t\tthis.background = null;\n\t\tthis.environment = null;\n\t\tthis.fog = null;\n\n\t\tthis.backgroundBlurriness = 0;\n\t\tthis.backgroundIntensity = 1;\n\t\tthis.backgroundRotation = new Euler();\n\n\t\tthis.environmentIntensity = 1;\n\t\tthis.environmentRotation = new Euler();\n\n\t\tthis.overrideMaterial = null;\n\n\t\tif ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\n\n\t\t\t__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'observe', { detail: this } ) );\n\n\t\t}\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tif ( source.background !== null ) this.background = source.background.clone();\n\t\tif ( source.environment !== null ) this.environment = source.environment.clone();\n\t\tif ( source.fog !== null ) this.fog = source.fog.clone();\n\n\t\tthis.backgroundBlurriness = source.backgroundBlurriness;\n\t\tthis.backgroundIntensity = source.backgroundIntensity;\n\t\tthis.backgroundRotation.copy( source.backgroundRotation );\n\n\t\tthis.environmentIntensity = source.environmentIntensity;\n\t\tthis.environmentRotation.copy( source.environmentRotation );\n\n\t\tif ( source.overrideMaterial !== null ) this.overrideMaterial = source.overrideMaterial.clone();\n\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tif ( this.fog !== null ) data.object.fog = this.fog.toJSON();\n\n\t\tif ( this.backgroundBlurriness > 0 ) data.object.backgroundBlurriness = this.backgroundBlurriness;\n\t\tif ( this.backgroundIntensity !== 1 ) data.object.backgroundIntensity = this.backgroundIntensity;\n\t\tdata.object.backgroundRotation = this.backgroundRotation.toArray();\n\n\t\tif ( this.environmentIntensity !== 1 ) data.object.environmentIntensity = this.environmentIntensity;\n\t\tdata.object.environmentRotation = this.environmentRotation.toArray();\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass InterleavedBuffer {\n\n\tconstructor( array, stride ) {\n\n\t\tthis.isInterleavedBuffer = true;\n\n\t\tthis.array = array;\n\t\tthis.stride = stride;\n\t\tthis.count = array !== undefined ? array.length / stride : 0;\n\n\t\tthis.usage = StaticDrawUsage;\n\t\tthis._updateRange = { offset: 0, count: - 1 };\n\t\tthis.updateRanges = [];\n\n\t\tthis.version = 0;\n\n\t\tthis.uuid = generateUUID();\n\n\t}\n\n\tonUploadCallback() {}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\tget updateRange() {\n\n\t\twarnOnce( 'THREE.InterleavedBuffer: updateRange() is deprecated and will be removed in r169. Use addUpdateRange() instead.' ); // @deprecated, r159\n\t\treturn this._updateRange;\n\n\t}\n\n\tsetUsage( value ) {\n\n\t\tthis.usage = value;\n\n\t\treturn this;\n\n\t}\n\n\taddUpdateRange( start, count ) {\n\n\t\tthis.updateRanges.push( { start, count } );\n\n\t}\n\n\tclearUpdateRanges() {\n\n\t\tthis.updateRanges.length = 0;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.array = new source.array.constructor( source.array );\n\t\tthis.count = source.count;\n\t\tthis.stride = source.stride;\n\t\tthis.usage = source.usage;\n\n\t\treturn this;\n\n\t}\n\n\tcopyAt( index1, attribute, index2 ) {\n\n\t\tindex1 *= this.stride;\n\t\tindex2 *= attribute.stride;\n\n\t\tfor ( let i = 0, l = this.stride; i < l; i ++ ) {\n\n\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tset( value, offset = 0 ) {\n\n\t\tthis.array.set( value, offset );\n\n\t\treturn this;\n\n\t}\n\n\tclone( data ) {\n\n\t\tif ( data.arrayBuffers === undefined ) {\n\n\t\t\tdata.arrayBuffers = {};\n\n\t\t}\n\n\t\tif ( this.array.buffer._uuid === undefined ) {\n\n\t\t\tthis.array.buffer._uuid = generateUUID();\n\n\t\t}\n\n\t\tif ( data.arrayBuffers[ this.array.buffer._uuid ] === undefined ) {\n\n\t\t\tdata.arrayBuffers[ this.array.buffer._uuid ] = this.array.slice( 0 ).buffer;\n\n\t\t}\n\n\t\tconst array = new this.array.constructor( data.arrayBuffers[ this.array.buffer._uuid ] );\n\n\t\tconst ib = new this.constructor( array, this.stride );\n\t\tib.setUsage( this.usage );\n\n\t\treturn ib;\n\n\t}\n\n\tonUpload( callback ) {\n\n\t\tthis.onUploadCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( data ) {\n\n\t\tif ( data.arrayBuffers === undefined ) {\n\n\t\t\tdata.arrayBuffers = {};\n\n\t\t}\n\n\t\t// generate UUID for array buffer if necessary\n\n\t\tif ( this.array.buffer._uuid === undefined ) {\n\n\t\t\tthis.array.buffer._uuid = generateUUID();\n\n\t\t}\n\n\t\tif ( data.arrayBuffers[ this.array.buffer._uuid ] === undefined ) {\n\n\t\t\tdata.arrayBuffers[ this.array.buffer._uuid ] = Array.from( new Uint32Array( this.array.buffer ) );\n\n\t\t}\n\n\t\t//\n\n\t\treturn {\n\t\t\tuuid: this.uuid,\n\t\t\tbuffer: this.array.buffer._uuid,\n\t\t\ttype: this.array.constructor.name,\n\t\t\tstride: this.stride\n\t\t};\n\n\t}\n\n}\n\nconst _vector$6 = /*@__PURE__*/ new Vector3();\n\nclass InterleavedBufferAttribute {\n\n\tconstructor( interleavedBuffer, itemSize, offset, normalized = false ) {\n\n\t\tthis.isInterleavedBufferAttribute = true;\n\n\t\tthis.name = '';\n\n\t\tthis.data = interleavedBuffer;\n\t\tthis.itemSize = itemSize;\n\t\tthis.offset = offset;\n\n\t\tthis.normalized = normalized;\n\n\t}\n\n\tget count() {\n\n\t\treturn this.data.count;\n\n\t}\n\n\tget array() {\n\n\t\treturn this.data.array;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tthis.data.needsUpdate = value;\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tfor ( let i = 0, l = this.data.count; i < l; i ++ ) {\n\n\t\t\t_vector$6.fromBufferAttribute( this, i );\n\n\t\t\t_vector$6.applyMatrix4( m );\n\n\t\t\tthis.setXYZ( i, _vector$6.x, _vector$6.y, _vector$6.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyNormalMatrix( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$6.fromBufferAttribute( this, i );\n\n\t\t\t_vector$6.applyNormalMatrix( m );\n\n\t\t\tthis.setXYZ( i, _vector$6.x, _vector$6.y, _vector$6.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttransformDirection( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$6.fromBufferAttribute( this, i );\n\n\t\t\t_vector$6.transformDirection( m );\n\n\t\t\tthis.setXYZ( i, _vector$6.x, _vector$6.y, _vector$6.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index, component ) {\n\n\t\tlet value = this.array[ index * this.data.stride + this.offset + component ];\n\n\t\tif ( this.normalized ) value = denormalize( value, this.array );\n\n\t\treturn value;\n\n\t}\n\n\tsetComponent( index, component, value ) {\n\n\t\tif ( this.normalized ) value = normalize( value, this.array );\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + component ] = value;\n\n\t\treturn this;\n\n\t}\n\n\tsetX( index, x ) {\n\n\t\tif ( this.normalized ) x = normalize( x, this.array );\n\n\t\tthis.data.array[ index * this.data.stride + this.offset ] = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( index, y ) {\n\n\t\tif ( this.normalized ) y = normalize( y, this.array );\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetZ( index, z ) {\n\n\t\tif ( this.normalized ) z = normalize( z, this.array );\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetW( index, w ) {\n\n\t\tif ( this.normalized ) w = normalize( w, this.array );\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tgetX( index ) {\n\n\t\tlet x = this.data.array[ index * this.data.stride + this.offset ];\n\n\t\tif ( this.normalized ) x = denormalize( x, this.array );\n\n\t\treturn x;\n\n\t}\n\n\tgetY( index ) {\n\n\t\tlet y = this.data.array[ index * this.data.stride + this.offset + 1 ];\n\n\t\tif ( this.normalized ) y = denormalize( y, this.array );\n\n\t\treturn y;\n\n\t}\n\n\tgetZ( index ) {\n\n\t\tlet z = this.data.array[ index * this.data.stride + this.offset + 2 ];\n\n\t\tif ( this.normalized ) z = denormalize( z, this.array );\n\n\t\treturn z;\n\n\t}\n\n\tgetW( index ) {\n\n\t\tlet w = this.data.array[ index * this.data.stride + this.offset + 3 ];\n\n\t\tif ( this.normalized ) w = denormalize( w, this.array );\n\n\t\treturn w;\n\n\t}\n\n\tsetXY( index, x, y ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\n\t\t}\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZ( index, x, y, z ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\n\t\t}\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\t\tthis.data.array[ index + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZW( index, x, y, z, w ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\t\t\tw = normalize( w, this.array );\n\n\t\t}\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\t\tthis.data.array[ index + 2 ] = z;\n\t\tthis.data.array[ index + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tclone( data ) {\n\n\t\tif ( data === undefined ) {\n\n\t\t\tconsole.log( 'THREE.InterleavedBufferAttribute.clone(): Cloning an interleaved buffer attribute will de-interleave buffer data.' );\n\n\t\t\tconst array = [];\n\n\t\t\tfor ( let i = 0; i < this.count; i ++ ) {\n\n\t\t\t\tconst index = i * this.data.stride + this.offset;\n\n\t\t\t\tfor ( let j = 0; j < this.itemSize; j ++ ) {\n\n\t\t\t\t\tarray.push( this.data.array[ index + j ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn new BufferAttribute( new this.array.constructor( array ), this.itemSize, this.normalized );\n\n\t\t} else {\n\n\t\t\tif ( data.interleavedBuffers === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers = {};\n\n\t\t\t}\n\n\t\t\tif ( data.interleavedBuffers[ this.data.uuid ] === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers[ this.data.uuid ] = this.data.clone( data );\n\n\t\t\t}\n\n\t\t\treturn new InterleavedBufferAttribute( data.interleavedBuffers[ this.data.uuid ], this.itemSize, this.offset, this.normalized );\n\n\t\t}\n\n\t}\n\n\ttoJSON( data ) {\n\n\t\tif ( data === undefined ) {\n\n\t\t\tconsole.log( 'THREE.InterleavedBufferAttribute.toJSON(): Serializing an interleaved buffer attribute will de-interleave buffer data.' );\n\n\t\t\tconst array = [];\n\n\t\t\tfor ( let i = 0; i < this.count; i ++ ) {\n\n\t\t\t\tconst index = i * this.data.stride + this.offset;\n\n\t\t\t\tfor ( let j = 0; j < this.itemSize; j ++ ) {\n\n\t\t\t\t\tarray.push( this.data.array[ index + j ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// de-interleave data and save it as an ordinary buffer attribute for now\n\n\t\t\treturn {\n\t\t\t\titemSize: this.itemSize,\n\t\t\t\ttype: this.array.constructor.name,\n\t\t\t\tarray: array,\n\t\t\t\tnormalized: this.normalized\n\t\t\t};\n\n\t\t} else {\n\n\t\t\t// save as true interleaved attribute\n\n\t\t\tif ( data.interleavedBuffers === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers = {};\n\n\t\t\t}\n\n\t\t\tif ( data.interleavedBuffers[ this.data.uuid ] === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers[ this.data.uuid ] = this.data.toJSON( data );\n\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tisInterleavedBufferAttribute: true,\n\t\t\t\titemSize: this.itemSize,\n\t\t\t\tdata: this.data.uuid,\n\t\t\t\toffset: this.offset,\n\t\t\t\tnormalized: this.normalized\n\t\t\t};\n\n\t\t}\n\n\t}\n\n}\n\nclass SpriteMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isSpriteMaterial = true;\n\n\t\tthis.type = 'SpriteMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.rotation = 0;\n\n\t\tthis.sizeAttenuation = true;\n\n\t\tthis.transparent = true;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.rotation = source.rotation;\n\n\t\tthis.sizeAttenuation = source.sizeAttenuation;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nlet _geometry;\n\nconst _intersectPoint = /*@__PURE__*/ new Vector3();\nconst _worldScale = /*@__PURE__*/ new Vector3();\nconst _mvPosition = /*@__PURE__*/ new Vector3();\n\nconst _alignedPosition = /*@__PURE__*/ new Vector2();\nconst _rotatedPosition = /*@__PURE__*/ new Vector2();\nconst _viewWorldMatrix = /*@__PURE__*/ new Matrix4();\n\nconst _vA = /*@__PURE__*/ new Vector3();\nconst _vB = /*@__PURE__*/ new Vector3();\nconst _vC = /*@__PURE__*/ new Vector3();\n\nconst _uvA = /*@__PURE__*/ new Vector2();\nconst _uvB = /*@__PURE__*/ new Vector2();\nconst _uvC = /*@__PURE__*/ new Vector2();\n\nclass Sprite extends Object3D {\n\n\tconstructor( material = new SpriteMaterial() ) {\n\n\t\tsuper();\n\n\t\tthis.isSprite = true;\n\n\t\tthis.type = 'Sprite';\n\n\t\tif ( _geometry === undefined ) {\n\n\t\t\t_geometry = new BufferGeometry();\n\n\t\t\tconst float32Array = new Float32Array( [\n\t\t\t\t- 0.5, - 0.5, 0, 0, 0,\n\t\t\t\t0.5, - 0.5, 0, 1, 0,\n\t\t\t\t0.5, 0.5, 0, 1, 1,\n\t\t\t\t- 0.5, 0.5, 0, 0, 1\n\t\t\t] );\n\n\t\t\tconst interleavedBuffer = new InterleavedBuffer( float32Array, 5 );\n\n\t\t\t_geometry.setIndex( [ 0, 1, 2,\t0, 2, 3 ] );\n\t\t\t_geometry.setAttribute( 'position', new InterleavedBufferAttribute( interleavedBuffer, 3, 0, false ) );\n\t\t\t_geometry.setAttribute( 'uv', new InterleavedBufferAttribute( interleavedBuffer, 2, 3, false ) );\n\n\t\t}\n\n\t\tthis.geometry = _geometry;\n\t\tthis.material = material;\n\n\t\tthis.center = new Vector2( 0.5, 0.5 );\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tif ( raycaster.camera === null ) {\n\n\t\t\tconsole.error( 'THREE.Sprite: \"Raycaster.camera\" needs to be set in order to raycast against sprites.' );\n\n\t\t}\n\n\t\t_worldScale.setFromMatrixScale( this.matrixWorld );\n\n\t\t_viewWorldMatrix.copy( raycaster.camera.matrixWorld );\n\t\tthis.modelViewMatrix.multiplyMatrices( raycaster.camera.matrixWorldInverse, this.matrixWorld );\n\n\t\t_mvPosition.setFromMatrixPosition( this.modelViewMatrix );\n\n\t\tif ( raycaster.camera.isPerspectiveCamera && this.material.sizeAttenuation === false ) {\n\n\t\t\t_worldScale.multiplyScalar( - _mvPosition.z );\n\n\t\t}\n\n\t\tconst rotation = this.material.rotation;\n\t\tlet sin, cos;\n\n\t\tif ( rotation !== 0 ) {\n\n\t\t\tcos = Math.cos( rotation );\n\t\t\tsin = Math.sin( rotation );\n\n\t\t}\n\n\t\tconst center = this.center;\n\n\t\ttransformVertex( _vA.set( - 0.5, - 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\t\ttransformVertex( _vB.set( 0.5, - 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\t\ttransformVertex( _vC.set( 0.5, 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\n\t\t_uvA.set( 0, 0 );\n\t\t_uvB.set( 1, 0 );\n\t\t_uvC.set( 1, 1 );\n\n\t\t// check first triangle\n\t\tlet intersect = raycaster.ray.intersectTriangle( _vA, _vB, _vC, false, _intersectPoint );\n\n\t\tif ( intersect === null ) {\n\n\t\t\t// check second triangle\n\t\t\ttransformVertex( _vB.set( - 0.5, 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\t\t\t_uvB.set( 0, 1 );\n\n\t\t\tintersect = raycaster.ray.intersectTriangle( _vA, _vC, _vB, false, _intersectPoint );\n\t\t\tif ( intersect === null ) {\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst distance = raycaster.ray.origin.distanceTo( _intersectPoint );\n\n\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\n\n\t\tintersects.push( {\n\n\t\t\tdistance: distance,\n\t\t\tpoint: _intersectPoint.clone(),\n\t\t\tuv: Triangle.getInterpolation( _intersectPoint, _vA, _vB, _vC, _uvA, _uvB, _uvC, new Vector2() ),\n\t\t\tface: null,\n\t\t\tobject: this\n\n\t\t} );\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tif ( source.center !== undefined ) this.center.copy( source.center );\n\n\t\tthis.material = source.material;\n\n\t\treturn this;\n\n\t}\n\n}\n\nfunction transformVertex( vertexPosition, mvPosition, center, scale, sin, cos ) {\n\n\t// compute position in camera space\n\t_alignedPosition.subVectors( vertexPosition, center ).addScalar( 0.5 ).multiply( scale );\n\n\t// to check if rotation is not zero\n\tif ( sin !== undefined ) {\n\n\t\t_rotatedPosition.x = ( cos * _alignedPosition.x ) - ( sin * _alignedPosition.y );\n\t\t_rotatedPosition.y = ( sin * _alignedPosition.x ) + ( cos * _alignedPosition.y );\n\n\t} else {\n\n\t\t_rotatedPosition.copy( _alignedPosition );\n\n\t}\n\n\n\tvertexPosition.copy( mvPosition );\n\tvertexPosition.x += _rotatedPosition.x;\n\tvertexPosition.y += _rotatedPosition.y;\n\n\t// transform to world space\n\tvertexPosition.applyMatrix4( _viewWorldMatrix );\n\n}\n\nconst _v1$2 = /*@__PURE__*/ new Vector3();\nconst _v2$1 = /*@__PURE__*/ new Vector3();\n\nclass LOD extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis._currentLevel = 0;\n\n\t\tthis.type = 'LOD';\n\n\t\tObject.defineProperties( this, {\n\t\t\tlevels: {\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: []\n\t\t\t},\n\t\t\tisLOD: {\n\t\t\t\tvalue: true,\n\t\t\t}\n\t\t} );\n\n\t\tthis.autoUpdate = true;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source, false );\n\n\t\tconst levels = source.levels;\n\n\t\tfor ( let i = 0, l = levels.length; i < l; i ++ ) {\n\n\t\t\tconst level = levels[ i ];\n\n\t\t\tthis.addLevel( level.object.clone(), level.distance, level.hysteresis );\n\n\t\t}\n\n\t\tthis.autoUpdate = source.autoUpdate;\n\n\t\treturn this;\n\n\t}\n\n\taddLevel( object, distance = 0, hysteresis = 0 ) {\n\n\t\tdistance = Math.abs( distance );\n\n\t\tconst levels = this.levels;\n\n\t\tlet l;\n\n\t\tfor ( l = 0; l < levels.length; l ++ ) {\n\n\t\t\tif ( distance < levels[ l ].distance ) {\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tlevels.splice( l, 0, { distance: distance, hysteresis: hysteresis, object: object } );\n\n\t\tthis.add( object );\n\n\t\treturn this;\n\n\t}\n\n\tgetCurrentLevel() {\n\n\t\treturn this._currentLevel;\n\n\t}\n\n\n\n\tgetObjectForDistance( distance ) {\n\n\t\tconst levels = this.levels;\n\n\t\tif ( levels.length > 0 ) {\n\n\t\t\tlet i, l;\n\n\t\t\tfor ( i = 1, l = levels.length; i < l; i ++ ) {\n\n\t\t\t\tlet levelDistance = levels[ i ].distance;\n\n\t\t\t\tif ( levels[ i ].object.visible ) {\n\n\t\t\t\t\tlevelDistance -= levelDistance * levels[ i ].hysteresis;\n\n\t\t\t\t}\n\n\t\t\t\tif ( distance < levelDistance ) {\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn levels[ i - 1 ].object;\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst levels = this.levels;\n\n\t\tif ( levels.length > 0 ) {\n\n\t\t\t_v1$2.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\tconst distance = raycaster.ray.origin.distanceTo( _v1$2 );\n\n\t\t\tthis.getObjectForDistance( distance ).raycast( raycaster, intersects );\n\n\t\t}\n\n\t}\n\n\tupdate( camera ) {\n\n\t\tconst levels = this.levels;\n\n\t\tif ( levels.length > 1 ) {\n\n\t\t\t_v1$2.setFromMatrixPosition( camera.matrixWorld );\n\t\t\t_v2$1.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\tconst distance = _v1$2.distanceTo( _v2$1 ) / camera.zoom;\n\n\t\t\tlevels[ 0 ].object.visible = true;\n\n\t\t\tlet i, l;\n\n\t\t\tfor ( i = 1, l = levels.length; i < l; i ++ ) {\n\n\t\t\t\tlet levelDistance = levels[ i ].distance;\n\n\t\t\t\tif ( levels[ i ].object.visible ) {\n\n\t\t\t\t\tlevelDistance -= levelDistance * levels[ i ].hysteresis;\n\n\t\t\t\t}\n\n\t\t\t\tif ( distance >= levelDistance ) {\n\n\t\t\t\t\tlevels[ i - 1 ].object.visible = false;\n\t\t\t\t\tlevels[ i ].object.visible = true;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._currentLevel = i - 1;\n\n\t\t\tfor ( ; i < l; i ++ ) {\n\n\t\t\t\tlevels[ i ].object.visible = false;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tif ( this.autoUpdate === false ) data.object.autoUpdate = false;\n\n\t\tdata.object.levels = [];\n\n\t\tconst levels = this.levels;\n\n\t\tfor ( let i = 0, l = levels.length; i < l; i ++ ) {\n\n\t\t\tconst level = levels[ i ];\n\n\t\t\tdata.object.levels.push( {\n\t\t\t\tobject: level.object.uuid,\n\t\t\t\tdistance: level.distance,\n\t\t\t\thysteresis: level.hysteresis\n\t\t\t} );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n}\n\nconst _basePosition = /*@__PURE__*/ new Vector3();\n\nconst _skinIndex = /*@__PURE__*/ new Vector4();\nconst _skinWeight = /*@__PURE__*/ new Vector4();\n\nconst _vector3 = /*@__PURE__*/ new Vector3();\nconst _matrix4 = /*@__PURE__*/ new Matrix4();\nconst _vertex = /*@__PURE__*/ new Vector3();\n\nconst _sphere$4 = /*@__PURE__*/ new Sphere();\nconst _inverseMatrix$2 = /*@__PURE__*/ new Matrix4();\nconst _ray$2 = /*@__PURE__*/ new Ray();\n\nclass SkinnedMesh extends Mesh {\n\n\tconstructor( geometry, material ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isSkinnedMesh = true;\n\n\t\tthis.type = 'SkinnedMesh';\n\n\t\tthis.bindMode = AttachedBindMode;\n\t\tthis.bindMatrix = new Matrix4();\n\t\tthis.bindMatrixInverse = new Matrix4();\n\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t}\n\n\tcomputeBoundingBox() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.boundingBox = new Box3();\n\n\t\t}\n\n\t\tthis.boundingBox.makeEmpty();\n\n\t\tconst positionAttribute = geometry.getAttribute( 'position' );\n\n\t\tfor ( let i = 0; i < positionAttribute.count; i ++ ) {\n\n\t\t\tthis.getVertexPosition( i, _vertex );\n\t\t\tthis.boundingBox.expandByPoint( _vertex );\n\n\t\t}\n\n\t}\n\n\tcomputeBoundingSphere() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tif ( this.boundingSphere === null ) {\n\n\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tthis.boundingSphere.makeEmpty();\n\n\t\tconst positionAttribute = geometry.getAttribute( 'position' );\n\n\t\tfor ( let i = 0; i < positionAttribute.count; i ++ ) {\n\n\t\t\tthis.getVertexPosition( i, _vertex );\n\t\t\tthis.boundingSphere.expandByPoint( _vertex );\n\n\t\t}\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.bindMode = source.bindMode;\n\t\tthis.bindMatrix.copy( source.bindMatrix );\n\t\tthis.bindMatrixInverse.copy( source.bindMatrixInverse );\n\n\t\tthis.skeleton = source.skeleton;\n\n\t\tif ( source.boundingBox !== null ) this.boundingBox = source.boundingBox.clone();\n\t\tif ( source.boundingSphere !== null ) this.boundingSphere = source.boundingSphere.clone();\n\n\t\treturn this;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst material = this.material;\n\t\tconst matrixWorld = this.matrixWorld;\n\n\t\tif ( material === undefined ) return;\n\n\t\t// test with bounding sphere in world space\n\n\t\tif ( this.boundingSphere === null ) this.computeBoundingSphere();\n\n\t\t_sphere$4.copy( this.boundingSphere );\n\t\t_sphere$4.applyMatrix4( matrixWorld );\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere$4 ) === false ) return;\n\n\t\t// convert ray to local space of skinned mesh\n\n\t\t_inverseMatrix$2.copy( matrixWorld ).invert();\n\t\t_ray$2.copy( raycaster.ray ).applyMatrix4( _inverseMatrix$2 );\n\n\t\t// test with bounding box in local space\n\n\t\tif ( this.boundingBox !== null ) {\n\n\t\t\tif ( _ray$2.intersectsBox( this.boundingBox ) === false ) return;\n\n\t\t}\n\n\t\t// test for intersections with geometry\n\n\t\tthis._computeIntersections( raycaster, intersects, _ray$2 );\n\n\t}\n\n\tgetVertexPosition( index, target ) {\n\n\t\tsuper.getVertexPosition( index, target );\n\n\t\tthis.applyBoneTransform( index, target );\n\n\t\treturn target;\n\n\t}\n\n\tbind( skeleton, bindMatrix ) {\n\n\t\tthis.skeleton = skeleton;\n\n\t\tif ( bindMatrix === undefined ) {\n\n\t\t\tthis.updateMatrixWorld( true );\n\n\t\t\tthis.skeleton.calculateInverses();\n\n\t\t\tbindMatrix = this.matrixWorld;\n\n\t\t}\n\n\t\tthis.bindMatrix.copy( bindMatrix );\n\t\tthis.bindMatrixInverse.copy( bindMatrix ).invert();\n\n\t}\n\n\tpose() {\n\n\t\tthis.skeleton.pose();\n\n\t}\n\n\tnormalizeSkinWeights() {\n\n\t\tconst vector = new Vector4();\n\n\t\tconst skinWeight = this.geometry.attributes.skinWeight;\n\n\t\tfor ( let i = 0, l = skinWeight.count; i < l; i ++ ) {\n\n\t\t\tvector.fromBufferAttribute( skinWeight, i );\n\n\t\t\tconst scale = 1.0 / vector.manhattanLength();\n\n\t\t\tif ( scale !== Infinity ) {\n\n\t\t\t\tvector.multiplyScalar( scale );\n\n\t\t\t} else {\n\n\t\t\t\tvector.set( 1, 0, 0, 0 ); // do something reasonable\n\n\t\t\t}\n\n\t\t\tskinWeight.setXYZW( i, vector.x, vector.y, vector.z, vector.w );\n\n\t\t}\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tif ( this.bindMode === AttachedBindMode ) {\n\n\t\t\tthis.bindMatrixInverse.copy( this.matrixWorld ).invert();\n\n\t\t} else if ( this.bindMode === DetachedBindMode ) {\n\n\t\t\tthis.bindMatrixInverse.copy( this.bindMatrix ).invert();\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.SkinnedMesh: Unrecognized bindMode: ' + this.bindMode );\n\n\t\t}\n\n\t}\n\n\tapplyBoneTransform( index, vector ) {\n\n\t\tconst skeleton = this.skeleton;\n\t\tconst geometry = this.geometry;\n\n\t\t_skinIndex.fromBufferAttribute( geometry.attributes.skinIndex, index );\n\t\t_skinWeight.fromBufferAttribute( geometry.attributes.skinWeight, index );\n\n\t\t_basePosition.copy( vector ).applyMatrix4( this.bindMatrix );\n\n\t\tvector.set( 0, 0, 0 );\n\n\t\tfor ( let i = 0; i < 4; i ++ ) {\n\n\t\t\tconst weight = _skinWeight.getComponent( i );\n\n\t\t\tif ( weight !== 0 ) {\n\n\t\t\t\tconst boneIndex = _skinIndex.getComponent( i );\n\n\t\t\t\t_matrix4.multiplyMatrices( skeleton.bones[ boneIndex ].matrixWorld, skeleton.boneInverses[ boneIndex ] );\n\n\t\t\t\tvector.addScaledVector( _vector3.copy( _basePosition ).applyMatrix4( _matrix4 ), weight );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn vector.applyMatrix4( this.bindMatrixInverse );\n\n\t}\n\n}\n\nclass Bone extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isBone = true;\n\n\t\tthis.type = 'Bone';\n\n\t}\n\n}\n\nclass DataTexture extends Texture {\n\n\tconstructor( data = null, width = 1, height = 1, format, type, mapping, wrapS, wrapT, magFilter = NearestFilter, minFilter = NearestFilter, anisotropy, colorSpace ) {\n\n\t\tsuper( null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, colorSpace );\n\n\t\tthis.isDataTexture = true;\n\n\t\tthis.image = { data: data, width: width, height: height };\n\n\t\tthis.generateMipmaps = false;\n\t\tthis.flipY = false;\n\t\tthis.unpackAlignment = 1;\n\n\t}\n\n}\n\nconst _offsetMatrix = /*@__PURE__*/ new Matrix4();\nconst _identityMatrix$1 = /*@__PURE__*/ new Matrix4();\n\nclass Skeleton {\n\n\tconstructor( bones = [], boneInverses = [] ) {\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.bones = bones.slice( 0 );\n\t\tthis.boneInverses = boneInverses;\n\t\tthis.boneMatrices = null;\n\n\t\tthis.boneTexture = null;\n\n\t\tthis.init();\n\n\t}\n\n\tinit() {\n\n\t\tconst bones = this.bones;\n\t\tconst boneInverses = this.boneInverses;\n\n\t\tthis.boneMatrices = new Float32Array( bones.length * 16 );\n\n\t\t// calculate inverse bone matrices if necessary\n\n\t\tif ( boneInverses.length === 0 ) {\n\n\t\t\tthis.calculateInverses();\n\n\t\t} else {\n\n\t\t\t// handle special case\n\n\t\t\tif ( bones.length !== boneInverses.length ) {\n\n\t\t\t\tconsole.warn( 'THREE.Skeleton: Number of inverse bone matrices does not match amount of bones.' );\n\n\t\t\t\tthis.boneInverses = [];\n\n\t\t\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\t\t\tthis.boneInverses.push( new Matrix4() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcalculateInverses() {\n\n\t\tthis.boneInverses.length = 0;\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst inverse = new Matrix4();\n\n\t\t\tif ( this.bones[ i ] ) {\n\n\t\t\t\tinverse.copy( this.bones[ i ].matrixWorld ).invert();\n\n\t\t\t}\n\n\t\t\tthis.boneInverses.push( inverse );\n\n\t\t}\n\n\t}\n\n\tpose() {\n\n\t\t// recover the bind-time world matrices\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst bone = this.bones[ i ];\n\n\t\t\tif ( bone ) {\n\n\t\t\t\tbone.matrixWorld.copy( this.boneInverses[ i ] ).invert();\n\n\t\t\t}\n\n\t\t}\n\n\t\t// compute the local matrices, positions, rotations and scales\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst bone = this.bones[ i ];\n\n\t\t\tif ( bone ) {\n\n\t\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\t\tbone.matrix.copy( bone.parent.matrixWorld ).invert();\n\t\t\t\t\tbone.matrix.multiply( bone.matrixWorld );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbone.matrix.copy( bone.matrixWorld );\n\n\t\t\t\t}\n\n\t\t\t\tbone.matrix.decompose( bone.position, bone.quaternion, bone.scale );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tupdate() {\n\n\t\tconst bones = this.bones;\n\t\tconst boneInverses = this.boneInverses;\n\t\tconst boneMatrices = this.boneMatrices;\n\t\tconst boneTexture = this.boneTexture;\n\n\t\t// flatten bone matrices to array\n\n\t\tfor ( let i = 0, il = bones.length; i < il; i ++ ) {\n\n\t\t\t// compute the offset between the current and the original transform\n\n\t\t\tconst matrix = bones[ i ] ? bones[ i ].matrixWorld : _identityMatrix$1;\n\n\t\t\t_offsetMatrix.multiplyMatrices( matrix, boneInverses[ i ] );\n\t\t\t_offsetMatrix.toArray( boneMatrices, i * 16 );\n\n\t\t}\n\n\t\tif ( boneTexture !== null ) {\n\n\t\t\tboneTexture.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new Skeleton( this.bones, this.boneInverses );\n\n\t}\n\n\tcomputeBoneTexture() {\n\n\t\t// layout (1 matrix = 4 pixels)\n\t\t//      RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)\n\t\t//  with  8x8  pixel texture max   16 bones * 4 pixels =  (8 * 8)\n\t\t//       16x16 pixel texture max   64 bones * 4 pixels = (16 * 16)\n\t\t//       32x32 pixel texture max  256 bones * 4 pixels = (32 * 32)\n\t\t//       64x64 pixel texture max 1024 bones * 4 pixels = (64 * 64)\n\n\t\tlet size = Math.sqrt( this.bones.length * 4 ); // 4 pixels needed for 1 matrix\n\t\tsize = Math.ceil( size / 4 ) * 4;\n\t\tsize = Math.max( size, 4 );\n\n\t\tconst boneMatrices = new Float32Array( size * size * 4 ); // 4 floats per RGBA pixel\n\t\tboneMatrices.set( this.boneMatrices ); // copy current values\n\n\t\tconst boneTexture = new DataTexture( boneMatrices, size, size, RGBAFormat, FloatType );\n\t\tboneTexture.needsUpdate = true;\n\n\t\tthis.boneMatrices = boneMatrices;\n\t\tthis.boneTexture = boneTexture;\n\n\t\treturn this;\n\n\t}\n\n\tgetBoneByName( name ) {\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst bone = this.bones[ i ];\n\n\t\t\tif ( bone.name === name ) {\n\n\t\t\t\treturn bone;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn undefined;\n\n\t}\n\n\tdispose( ) {\n\n\t\tif ( this.boneTexture !== null ) {\n\n\t\t\tthis.boneTexture.dispose();\n\n\t\t\tthis.boneTexture = null;\n\n\t\t}\n\n\t}\n\n\tfromJSON( json, bones ) {\n\n\t\tthis.uuid = json.uuid;\n\n\t\tfor ( let i = 0, l = json.bones.length; i < l; i ++ ) {\n\n\t\t\tconst uuid = json.bones[ i ];\n\t\t\tlet bone = bones[ uuid ];\n\n\t\t\tif ( bone === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Skeleton: No bone found with UUID:', uuid );\n\t\t\t\tbone = new Bone();\n\n\t\t\t}\n\n\t\t\tthis.bones.push( bone );\n\t\t\tthis.boneInverses.push( new Matrix4().fromArray( json.boneInverses[ i ] ) );\n\n\t\t}\n\n\t\tthis.init();\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.6,\n\t\t\t\ttype: 'Skeleton',\n\t\t\t\tgenerator: 'Skeleton.toJSON'\n\t\t\t},\n\t\t\tbones: [],\n\t\t\tboneInverses: []\n\t\t};\n\n\t\tdata.uuid = this.uuid;\n\n\t\tconst bones = this.bones;\n\t\tconst boneInverses = this.boneInverses;\n\n\t\tfor ( let i = 0, l = bones.length; i < l; i ++ ) {\n\n\t\t\tconst bone = bones[ i ];\n\t\t\tdata.bones.push( bone.uuid );\n\n\t\t\tconst boneInverse = boneInverses[ i ];\n\t\t\tdata.boneInverses.push( boneInverse.toArray() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass InstancedBufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized, meshPerAttribute = 1 ) {\n\n\t\tsuper( array, itemSize, normalized );\n\n\t\tthis.isInstancedBufferAttribute = true;\n\n\t\tthis.meshPerAttribute = meshPerAttribute;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.meshPerAttribute = source.meshPerAttribute;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.meshPerAttribute = this.meshPerAttribute;\n\n\t\tdata.isInstancedBufferAttribute = true;\n\n\t\treturn data;\n\n\t}\n\n}\n\nconst _instanceLocalMatrix = /*@__PURE__*/ new Matrix4();\nconst _instanceWorldMatrix = /*@__PURE__*/ new Matrix4();\n\nconst _instanceIntersects = [];\n\nconst _box3 = /*@__PURE__*/ new Box3();\nconst _identity = /*@__PURE__*/ new Matrix4();\nconst _mesh$1 = /*@__PURE__*/ new Mesh();\nconst _sphere$3 = /*@__PURE__*/ new Sphere();\n\nclass InstancedMesh extends Mesh {\n\n\tconstructor( geometry, material, count ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isInstancedMesh = true;\n\n\t\tthis.instanceMatrix = new InstancedBufferAttribute( new Float32Array( count * 16 ), 16 );\n\t\tthis.instanceColor = null;\n\t\tthis.morphTexture = null;\n\n\t\tthis.count = count;\n\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tthis.setMatrixAt( i, _identity );\n\n\t\t}\n\n\t}\n\n\tcomputeBoundingBox() {\n\n\t\tconst geometry = this.geometry;\n\t\tconst count = this.count;\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.boundingBox = new Box3();\n\n\t\t}\n\n\t\tif ( geometry.boundingBox === null ) {\n\n\t\t\tgeometry.computeBoundingBox();\n\n\t\t}\n\n\t\tthis.boundingBox.makeEmpty();\n\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tthis.getMatrixAt( i, _instanceLocalMatrix );\n\n\t\t\t_box3.copy( geometry.boundingBox ).applyMatrix4( _instanceLocalMatrix );\n\n\t\t\tthis.boundingBox.union( _box3 );\n\n\t\t}\n\n\t}\n\n\tcomputeBoundingSphere() {\n\n\t\tconst geometry = this.geometry;\n\t\tconst count = this.count;\n\n\t\tif ( this.boundingSphere === null ) {\n\n\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tif ( geometry.boundingSphere === null ) {\n\n\t\t\tgeometry.computeBoundingSphere();\n\n\t\t}\n\n\t\tthis.boundingSphere.makeEmpty();\n\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tthis.getMatrixAt( i, _instanceLocalMatrix );\n\n\t\t\t_sphere$3.copy( geometry.boundingSphere ).applyMatrix4( _instanceLocalMatrix );\n\n\t\t\tthis.boundingSphere.union( _sphere$3 );\n\n\t\t}\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.instanceMatrix.copy( source.instanceMatrix );\n\n\t\tif ( source.morphTexture !== null ) this.morphTexture = source.morphTexture.clone();\n\t\tif ( source.instanceColor !== null ) this.instanceColor = source.instanceColor.clone();\n\n\t\tthis.count = source.count;\n\n\t\tif ( source.boundingBox !== null ) this.boundingBox = source.boundingBox.clone();\n\t\tif ( source.boundingSphere !== null ) this.boundingSphere = source.boundingSphere.clone();\n\n\t\treturn this;\n\n\t}\n\n\tgetColorAt( index, color ) {\n\n\t\tcolor.fromArray( this.instanceColor.array, index * 3 );\n\n\t}\n\n\tgetMatrixAt( index, matrix ) {\n\n\t\tmatrix.fromArray( this.instanceMatrix.array, index * 16 );\n\n\t}\n\n\tgetMorphAt( index, object ) {\n\n\t\tconst objectInfluences = object.morphTargetInfluences;\n\n\t\tconst array = this.morphTexture.source.data.data;\n\n\t\tconst len = objectInfluences.length + 1; // All influences + the baseInfluenceSum\n\n\t\tconst dataIndex = index * len + 1; // Skip the baseInfluenceSum at the beginning\n\n\t\tfor ( let i = 0; i < objectInfluences.length; i ++ ) {\n\n\t\t\tobjectInfluences[ i ] = array[ dataIndex + i ];\n\n\t\t}\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst matrixWorld = this.matrixWorld;\n\t\tconst raycastTimes = this.count;\n\n\t\t_mesh$1.geometry = this.geometry;\n\t\t_mesh$1.material = this.material;\n\n\t\tif ( _mesh$1.material === undefined ) return;\n\n\t\t// test with bounding sphere first\n\n\t\tif ( this.boundingSphere === null ) this.computeBoundingSphere();\n\n\t\t_sphere$3.copy( this.boundingSphere );\n\t\t_sphere$3.applyMatrix4( matrixWorld );\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere$3 ) === false ) return;\n\n\t\t// now test each instance\n\n\t\tfor ( let instanceId = 0; instanceId < raycastTimes; instanceId ++ ) {\n\n\t\t\t// calculate the world matrix for each instance\n\n\t\t\tthis.getMatrixAt( instanceId, _instanceLocalMatrix );\n\n\t\t\t_instanceWorldMatrix.multiplyMatrices( matrixWorld, _instanceLocalMatrix );\n\n\t\t\t// the mesh represents this single instance\n\n\t\t\t_mesh$1.matrixWorld = _instanceWorldMatrix;\n\n\t\t\t_mesh$1.raycast( raycaster, _instanceIntersects );\n\n\t\t\t// process the result of raycast\n\n\t\t\tfor ( let i = 0, l = _instanceIntersects.length; i < l; i ++ ) {\n\n\t\t\t\tconst intersect = _instanceIntersects[ i ];\n\t\t\t\tintersect.instanceId = instanceId;\n\t\t\t\tintersect.object = this;\n\t\t\t\tintersects.push( intersect );\n\n\t\t\t}\n\n\t\t\t_instanceIntersects.length = 0;\n\n\t\t}\n\n\t}\n\n\tsetColorAt( index, color ) {\n\n\t\tif ( this.instanceColor === null ) {\n\n\t\t\tthis.instanceColor = new InstancedBufferAttribute( new Float32Array( this.instanceMatrix.count * 3 ), 3 );\n\n\t\t}\n\n\t\tcolor.toArray( this.instanceColor.array, index * 3 );\n\n\t}\n\n\tsetMatrixAt( index, matrix ) {\n\n\t\tmatrix.toArray( this.instanceMatrix.array, index * 16 );\n\n\t}\n\n\tsetMorphAt( index, object ) {\n\n\t\tconst objectInfluences = object.morphTargetInfluences;\n\n\t\tconst len = objectInfluences.length + 1; // morphBaseInfluence + all influences\n\n\t\tif ( this.morphTexture === null ) {\n\n\t\t\tthis.morphTexture = new DataTexture( new Float32Array( len * this.count ), len, this.count, RedFormat, FloatType );\n\n\t\t}\n\n\t\tconst array = this.morphTexture.source.data.data;\n\n\t\tlet morphInfluencesSum = 0;\n\n\t\tfor ( let i = 0; i < objectInfluences.length; i ++ ) {\n\n\t\t\tmorphInfluencesSum += objectInfluences[ i ];\n\n\t\t}\n\n\t\tconst morphBaseInfluence = this.geometry.morphTargetsRelative ? 1 : 1 - morphInfluencesSum;\n\n\t\tconst dataIndex = len * index;\n\n\t\tarray[ dataIndex ] = morphBaseInfluence;\n\n\t\tarray.set( objectInfluences, dataIndex + 1 );\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t\tif ( this.morphTexture !== null ) {\n\n\t\t\tthis.morphTexture.dispose();\n\t\t\tthis.morphTexture = null;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nfunction sortOpaque( a, b ) {\n\n\treturn a.z - b.z;\n\n}\n\nfunction sortTransparent( a, b ) {\n\n\treturn b.z - a.z;\n\n}\n\nclass MultiDrawRenderList {\n\n\tconstructor() {\n\n\t\tthis.index = 0;\n\t\tthis.pool = [];\n\t\tthis.list = [];\n\n\t}\n\n\tpush( drawRange, z, index ) {\n\n\t\tconst pool = this.pool;\n\t\tconst list = this.list;\n\t\tif ( this.index >= pool.length ) {\n\n\t\t\tpool.push( {\n\n\t\t\t\tstart: - 1,\n\t\t\t\tcount: - 1,\n\t\t\t\tz: - 1,\n\t\t\t\tindex: - 1,\n\n\t\t\t} );\n\n\t\t}\n\n\t\tconst item = pool[ this.index ];\n\t\tlist.push( item );\n\t\tthis.index ++;\n\n\t\titem.start = drawRange.start;\n\t\titem.count = drawRange.count;\n\t\titem.z = z;\n\t\titem.index = index;\n\n\t}\n\n\treset() {\n\n\t\tthis.list.length = 0;\n\t\tthis.index = 0;\n\n\t}\n\n}\n\nconst _matrix$1 = /*@__PURE__*/ new Matrix4();\nconst _invMatrixWorld = /*@__PURE__*/ new Matrix4();\nconst _identityMatrix = /*@__PURE__*/ new Matrix4();\nconst _whiteColor = /*@__PURE__*/ new Color( 1, 1, 1 );\nconst _projScreenMatrix$2 = /*@__PURE__*/ new Matrix4();\nconst _frustum = /*@__PURE__*/ new Frustum();\nconst _box$1 = /*@__PURE__*/ new Box3();\nconst _sphere$2 = /*@__PURE__*/ new Sphere();\nconst _vector$5 = /*@__PURE__*/ new Vector3();\nconst _forward = /*@__PURE__*/ new Vector3();\nconst _temp = /*@__PURE__*/ new Vector3();\nconst _renderList = /*@__PURE__*/ new MultiDrawRenderList();\nconst _mesh = /*@__PURE__*/ new Mesh();\nconst _batchIntersects = [];\n\n// @TODO: SkinnedMesh support?\n// @TODO: geometry.groups support?\n// @TODO: geometry.drawRange support?\n// @TODO: geometry.morphAttributes support?\n// @TODO: Support uniform parameter per geometry\n// @TODO: Add an \"optimize\" function to pack geometry and remove data gaps\n\n// copies data from attribute \"src\" into \"target\" starting at \"targetOffset\"\nfunction copyAttributeData( src, target, targetOffset = 0 ) {\n\n\tconst itemSize = target.itemSize;\n\tif ( src.isInterleavedBufferAttribute || src.array.constructor !== target.array.constructor ) {\n\n\t\t// use the component getters and setters if the array data cannot\n\t\t// be copied directly\n\t\tconst vertexCount = src.count;\n\t\tfor ( let i = 0; i < vertexCount; i ++ ) {\n\n\t\t\tfor ( let c = 0; c < itemSize; c ++ ) {\n\n\t\t\t\ttarget.setComponent( i + targetOffset, c, src.getComponent( i, c ) );\n\n\t\t\t}\n\n\t\t}\n\n\t} else {\n\n\t\t// faster copy approach using typed array set function\n\t\ttarget.array.set( src.array, targetOffset * itemSize );\n\n\t}\n\n\ttarget.needsUpdate = true;\n\n}\n\nclass BatchedMesh extends Mesh {\n\n\tget maxInstanceCount() {\n\n\t\treturn this._maxInstanceCount;\n\n\t}\n\n\tconstructor( maxInstanceCount, maxVertexCount, maxIndexCount = maxVertexCount * 2, material ) {\n\n\t\tsuper( new BufferGeometry(), material );\n\n\t\tthis.isBatchedMesh = true;\n\t\tthis.perObjectFrustumCulled = true;\n\t\tthis.sortObjects = true;\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\t\tthis.customSort = null;\n\n\t\t// stores visible, active, and geometry id per object\n\t\tthis._drawInfo = [];\n\n\t\t// geometry information\n\t\tthis._drawRanges = [];\n\t\tthis._reservedRanges = [];\n\t\tthis._bounds = [];\n\n\t\tthis._maxInstanceCount = maxInstanceCount;\n\t\tthis._maxVertexCount = maxVertexCount;\n\t\tthis._maxIndexCount = maxIndexCount;\n\n\t\tthis._geometryInitialized = false;\n\t\tthis._geometryCount = 0;\n\t\tthis._multiDrawCounts = new Int32Array( maxInstanceCount );\n\t\tthis._multiDrawStarts = new Int32Array( maxInstanceCount );\n\t\tthis._multiDrawCount = 0;\n\t\tthis._multiDrawInstances = null;\n\t\tthis._visibilityChanged = true;\n\n\t\t// Local matrix per geometry by using data texture\n\t\tthis._matricesTexture = null;\n\t\tthis._indirectTexture = null;\n\t\tthis._colorsTexture = null;\n\n\t\tthis._initMatricesTexture();\n\t\tthis._initIndirectTexture();\n\n\t}\n\n\t_initMatricesTexture() {\n\n\t\t// layout (1 matrix = 4 pixels)\n\t\t//      RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)\n\t\t//  with  8x8  pixel texture max   16 matrices * 4 pixels =  (8 * 8)\n\t\t//       16x16 pixel texture max   64 matrices * 4 pixels = (16 * 16)\n\t\t//       32x32 pixel texture max  256 matrices * 4 pixels = (32 * 32)\n\t\t//       64x64 pixel texture max 1024 matrices * 4 pixels = (64 * 64)\n\n\t\tlet size = Math.sqrt( this._maxInstanceCount * 4 ); // 4 pixels needed for 1 matrix\n\t\tsize = Math.ceil( size / 4 ) * 4;\n\t\tsize = Math.max( size, 4 );\n\n\t\tconst matricesArray = new Float32Array( size * size * 4 ); // 4 floats per RGBA pixel\n\t\tconst matricesTexture = new DataTexture( matricesArray, size, size, RGBAFormat, FloatType );\n\n\t\tthis._matricesTexture = matricesTexture;\n\n\t}\n\n\t_initIndirectTexture() {\n\n\t\tlet size = Math.sqrt( this._maxInstanceCount );\n\t\tsize = Math.ceil( size );\n\n\t\tconst indirectArray = new Uint32Array( size * size );\n\t\tconst indirectTexture = new DataTexture( indirectArray, size, size, RedIntegerFormat, UnsignedIntType );\n\n\t\tthis._indirectTexture = indirectTexture;\n\n\t}\n\n\t_initColorsTexture() {\n\n\t\tlet size = Math.sqrt( this._maxIndexCount );\n\t\tsize = Math.ceil( size );\n\n\t\t// 4 floats per RGBA pixel initialized to white\n\t\tconst colorsArray = new Float32Array( size * size * 4 ).fill( 1 );\n\t\tconst colorsTexture = new DataTexture( colorsArray, size, size, RGBAFormat, FloatType );\n\t\tcolorsTexture.colorSpace = ColorManagement.workingColorSpace;\n\n\t\tthis._colorsTexture = colorsTexture;\n\n\t}\n\n\t_initializeGeometry( reference ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst maxVertexCount = this._maxVertexCount;\n\t\tconst maxIndexCount = this._maxIndexCount;\n\t\tif ( this._geometryInitialized === false ) {\n\n\t\t\tfor ( const attributeName in reference.attributes ) {\n\n\t\t\t\tconst srcAttribute = reference.getAttribute( attributeName );\n\t\t\t\tconst { array, itemSize, normalized } = srcAttribute;\n\n\t\t\t\tconst dstArray = new array.constructor( maxVertexCount * itemSize );\n\t\t\t\tconst dstAttribute = new BufferAttribute( dstArray, itemSize, normalized );\n\n\t\t\t\tgeometry.setAttribute( attributeName, dstAttribute );\n\n\t\t\t}\n\n\t\t\tif ( reference.getIndex() !== null ) {\n\n\t\t\t\t// Reserve last u16 index for primitive restart.\n\t\t\t\tconst indexArray = maxVertexCount > 65535\n\t\t\t\t\t? new Uint32Array( maxIndexCount )\n\t\t\t\t\t: new Uint16Array( maxIndexCount );\n\n\t\t\t\tgeometry.setIndex( new BufferAttribute( indexArray, 1 ) );\n\n\t\t\t}\n\n\t\t\tthis._geometryInitialized = true;\n\n\t\t}\n\n\t}\n\n\t// Make sure the geometry is compatible with the existing combined geometry attributes\n\t_validateGeometry( geometry ) {\n\n\t\t// check to ensure the geometries are using consistent attributes and indices\n\t\tconst batchGeometry = this.geometry;\n\t\tif ( Boolean( geometry.getIndex() ) !== Boolean( batchGeometry.getIndex() ) ) {\n\n\t\t\tthrow new Error( 'BatchedMesh: All geometries must consistently have \"index\".' );\n\n\t\t}\n\n\t\tfor ( const attributeName in batchGeometry.attributes ) {\n\n\t\t\tif ( ! geometry.hasAttribute( attributeName ) ) {\n\n\t\t\t\tthrow new Error( `BatchedMesh: Added geometry missing \"${ attributeName }\". All geometries must have consistent attributes.` );\n\n\t\t\t}\n\n\t\t\tconst srcAttribute = geometry.getAttribute( attributeName );\n\t\t\tconst dstAttribute = batchGeometry.getAttribute( attributeName );\n\t\t\tif ( srcAttribute.itemSize !== dstAttribute.itemSize || srcAttribute.normalized !== dstAttribute.normalized ) {\n\n\t\t\t\tthrow new Error( 'BatchedMesh: All attributes must have a consistent itemSize and normalized value.' );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tsetCustomSort( func ) {\n\n\t\tthis.customSort = func;\n\t\treturn this;\n\n\t}\n\n\tcomputeBoundingBox() {\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.boundingBox = new Box3();\n\n\t\t}\n\n\t\tconst geometryCount = this._geometryCount;\n\t\tconst boundingBox = this.boundingBox;\n\t\tconst drawInfo = this._drawInfo;\n\n\t\tboundingBox.makeEmpty();\n\t\tfor ( let i = 0; i < geometryCount; i ++ ) {\n\n\t\t\tif ( drawInfo[ i ].active === false ) continue;\n\n\t\t\tconst geometryId = drawInfo[ i ].geometryIndex;\n\t\t\tthis.getMatrixAt( i, _matrix$1 );\n\t\t\tthis.getBoundingBoxAt( geometryId, _box$1 ).applyMatrix4( _matrix$1 );\n\t\t\tboundingBox.union( _box$1 );\n\n\t\t}\n\n\t}\n\n\tcomputeBoundingSphere() {\n\n\t\tif ( this.boundingSphere === null ) {\n\n\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tconst boundingSphere = this.boundingSphere;\n\t\tconst drawInfo = this._drawInfo;\n\n\t\tboundingSphere.makeEmpty();\n\t\tfor ( let i = 0, l = drawInfo.length; i < l; i ++ ) {\n\n\t\t\tif ( drawInfo[ i ].active === false ) continue;\n\n\t\t\tconst geometryId = drawInfo[ i ].geometryIndex;\n\t\t\tthis.getMatrixAt( i, _matrix$1 );\n\t\t\tthis.getBoundingSphereAt( geometryId, _sphere$2 ).applyMatrix4( _matrix$1 );\n\t\t\tboundingSphere.union( _sphere$2 );\n\n\t\t}\n\n\t}\n\n\taddInstance( geometryId ) {\n\n\t\t// ensure we're not over geometry\n\t\tif ( this._drawInfo.length >= this._maxInstanceCount ) {\n\n\t\t\tthrow new Error( 'BatchedMesh: Maximum item count reached.' );\n\n\t\t}\n\n\t\tthis._drawInfo.push( {\n\n\t\t\tvisible: true,\n\t\t\tactive: true,\n\t\t\tgeometryIndex: geometryId,\n\n\t\t} );\n\n\t\t// initialize the matrix\n\t\tconst drawId = this._drawInfo.length - 1;\n\t\tconst matricesTexture = this._matricesTexture;\n\t\tconst matricesArray = matricesTexture.image.data;\n\t\t_identityMatrix.toArray( matricesArray, drawId * 16 );\n\t\tmatricesTexture.needsUpdate = true;\n\n\t\tconst colorsTexture = this._colorsTexture;\n\t\tif ( colorsTexture ) {\n\n\t\t\t_whiteColor.toArray( colorsTexture.image.data, drawId * 4 );\n\t\t\tcolorsTexture.needsUpdate = true;\n\n\t\t}\n\n\t\treturn drawId;\n\n\t}\n\n\taddGeometry( geometry, vertexCount = - 1, indexCount = - 1 ) {\n\n\t\tthis._initializeGeometry( geometry );\n\n\t\tthis._validateGeometry( geometry );\n\n\t\t// ensure we're not over geometry\n\t\tif ( this._drawInfo.length >= this._maxInstanceCount ) {\n\n\t\t\tthrow new Error( 'BatchedMesh: Maximum item count reached.' );\n\n\t\t}\n\n\t\t// get the necessary range fo the geometry\n\t\tconst reservedRange = {\n\t\t\tvertexStart: - 1,\n\t\t\tvertexCount: - 1,\n\t\t\tindexStart: - 1,\n\t\t\tindexCount: - 1,\n\t\t};\n\n\t\tlet lastRange = null;\n\t\tconst reservedRanges = this._reservedRanges;\n\t\tconst drawRanges = this._drawRanges;\n\t\tconst bounds = this._bounds;\n\t\tif ( this._geometryCount !== 0 ) {\n\n\t\t\tlastRange = reservedRanges[ reservedRanges.length - 1 ];\n\n\t\t}\n\n\t\tif ( vertexCount === - 1 ) {\n\n\t\t\treservedRange.vertexCount = geometry.getAttribute( 'position' ).count;\n\n\t\t} else {\n\n\t\t\treservedRange.vertexCount = vertexCount;\n\n\t\t}\n\n\t\tif ( lastRange === null ) {\n\n\t\t\treservedRange.vertexStart = 0;\n\n\t\t} else {\n\n\t\t\treservedRange.vertexStart = lastRange.vertexStart + lastRange.vertexCount;\n\n\t\t}\n\n\t\tconst index = geometry.getIndex();\n\t\tconst hasIndex = index !== null;\n\t\tif ( hasIndex ) {\n\n\t\t\tif ( indexCount\t=== - 1 ) {\n\n\t\t\t\treservedRange.indexCount = index.count;\n\n\t\t\t} else {\n\n\t\t\t\treservedRange.indexCount = indexCount;\n\n\t\t\t}\n\n\t\t\tif ( lastRange === null ) {\n\n\t\t\t\treservedRange.indexStart = 0;\n\n\t\t\t} else {\n\n\t\t\t\treservedRange.indexStart = lastRange.indexStart + lastRange.indexCount;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif (\n\t\t\treservedRange.indexStart !== - 1 &&\n\t\t\treservedRange.indexStart + reservedRange.indexCount > this._maxIndexCount ||\n\t\t\treservedRange.vertexStart + reservedRange.vertexCount > this._maxVertexCount\n\t\t) {\n\n\t\t\tthrow new Error( 'BatchedMesh: Reserved space request exceeds the maximum buffer size.' );\n\n\t\t}\n\n\t\t// update id\n\t\tconst geometryId = this._geometryCount;\n\t\tthis._geometryCount ++;\n\n\t\t// add the reserved range and draw range objects\n\t\treservedRanges.push( reservedRange );\n\t\tdrawRanges.push( {\n\t\t\tstart: hasIndex ? reservedRange.indexStart : reservedRange.vertexStart,\n\t\t\tcount: - 1\n\t\t} );\n\t\tbounds.push( {\n\t\t\tboxInitialized: false,\n\t\t\tbox: new Box3(),\n\n\t\t\tsphereInitialized: false,\n\t\t\tsphere: new Sphere()\n\t\t} );\n\n\t\t// update the geometry\n\t\tthis.setGeometryAt( geometryId, geometry );\n\n\t\treturn geometryId;\n\n\t}\n\n\tsetGeometryAt( geometryId, geometry ) {\n\n\t\tif ( geometryId >= this._geometryCount ) {\n\n\t\t\tthrow new Error( 'BatchedMesh: Maximum geometry count reached.' );\n\n\t\t}\n\n\t\tthis._validateGeometry( geometry );\n\n\t\tconst batchGeometry = this.geometry;\n\t\tconst hasIndex = batchGeometry.getIndex() !== null;\n\t\tconst dstIndex = batchGeometry.getIndex();\n\t\tconst srcIndex = geometry.getIndex();\n\t\tconst reservedRange = this._reservedRanges[ geometryId ];\n\t\tif (\n\t\t\thasIndex &&\n\t\t\tsrcIndex.count > reservedRange.indexCount ||\n\t\t\tgeometry.attributes.position.count > reservedRange.vertexCount\n\t\t) {\n\n\t\t\tthrow new Error( 'BatchedMesh: Reserved space not large enough for provided geometry.' );\n\n\t\t}\n\n\t\t// copy geometry over\n\t\tconst vertexStart = reservedRange.vertexStart;\n\t\tconst vertexCount = reservedRange.vertexCount;\n\t\tfor ( const attributeName in batchGeometry.attributes ) {\n\n\t\t\t// copy attribute data\n\t\t\tconst srcAttribute = geometry.getAttribute( attributeName );\n\t\t\tconst dstAttribute = batchGeometry.getAttribute( attributeName );\n\t\t\tcopyAttributeData( srcAttribute, dstAttribute, vertexStart );\n\n\t\t\t// fill the rest in with zeroes\n\t\t\tconst itemSize = srcAttribute.itemSize;\n\t\t\tfor ( let i = srcAttribute.count, l = vertexCount; i < l; i ++ ) {\n\n\t\t\t\tconst index = vertexStart + i;\n\t\t\t\tfor ( let c = 0; c < itemSize; c ++ ) {\n\n\t\t\t\t\tdstAttribute.setComponent( index, c, 0 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tdstAttribute.needsUpdate = true;\n\t\t\tdstAttribute.addUpdateRange( vertexStart * itemSize, vertexCount * itemSize );\n\n\t\t}\n\n\t\t// copy index\n\t\tif ( hasIndex ) {\n\n\t\t\tconst indexStart = reservedRange.indexStart;\n\n\t\t\t// copy index data over\n\t\t\tfor ( let i = 0; i < srcIndex.count; i ++ ) {\n\n\t\t\t\tdstIndex.setX( indexStart + i, vertexStart + srcIndex.getX( i ) );\n\n\t\t\t}\n\n\t\t\t// fill the rest in with zeroes\n\t\t\tfor ( let i = srcIndex.count, l = reservedRange.indexCount; i < l; i ++ ) {\n\n\t\t\t\tdstIndex.setX( indexStart + i, vertexStart );\n\n\t\t\t}\n\n\t\t\tdstIndex.needsUpdate = true;\n\t\t\tdstIndex.addUpdateRange( indexStart, reservedRange.indexCount );\n\n\t\t}\n\n\t\t// store the bounding boxes\n\t\tconst bound = this._bounds[ geometryId ];\n\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\tbound.box.copy( geometry.boundingBox );\n\t\t\tbound.boxInitialized = true;\n\n\t\t} else {\n\n\t\t\tbound.boxInitialized = false;\n\n\t\t}\n\n\t\tif ( geometry.boundingSphere !== null ) {\n\n\t\t\tbound.sphere.copy( geometry.boundingSphere );\n\t\t\tbound.sphereInitialized = true;\n\n\t\t} else {\n\n\t\t\tbound.sphereInitialized = false;\n\n\t\t}\n\n\t\t// set drawRange count\n\t\tconst drawRange = this._drawRanges[ geometryId ];\n\t\tconst posAttr = geometry.getAttribute( 'position' );\n\t\tdrawRange.count = hasIndex ? srcIndex.count : posAttr.count;\n\t\tthis._visibilityChanged = true;\n\n\t\treturn geometryId;\n\n\t}\n\n\t/*\n\tdeleteGeometry( geometryId ) {\n\n\t\t// TODO: delete geometry and associated instances\n\n\t}\n\t*/\n\n\t/*\n\tdeleteInstance( instanceId ) {\n\n\t\t// Note: User needs to call optimize() afterward to pack the data.\n\n\t\tconst drawInfo = this._drawInfo;\n\t\tif ( instanceId >= drawInfo.length || drawInfo[ instanceId ].active === false ) {\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tdrawInfo[ instanceId ].active = false;\n\t\tthis._visibilityChanged = true;\n\n\t\treturn this;\n\n\t}\n\t*/\n\n\t// get bounding box and compute it if it doesn't exist\n\tgetBoundingBoxAt( geometryId, target ) {\n\n\t\tif ( geometryId >= this._geometryCount ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// compute bounding box\n\t\tconst bound = this._bounds[ geometryId ];\n\t\tconst box = bound.box;\n\t\tconst geometry = this.geometry;\n\t\tif ( bound.boxInitialized === false ) {\n\n\t\t\tbox.makeEmpty();\n\n\t\t\tconst index = geometry.index;\n\t\t\tconst position = geometry.attributes.position;\n\t\t\tconst drawRange = this._drawRanges[ geometryId ];\n\t\t\tfor ( let i = drawRange.start, l = drawRange.start + drawRange.count; i < l; i ++ ) {\n\n\t\t\t\tlet iv = i;\n\t\t\t\tif ( index ) {\n\n\t\t\t\t\tiv = index.getX( iv );\n\n\t\t\t\t}\n\n\t\t\t\tbox.expandByPoint( _vector$5.fromBufferAttribute( position, iv ) );\n\n\t\t\t}\n\n\t\t\tbound.boxInitialized = true;\n\n\t\t}\n\n\t\ttarget.copy( box );\n\t\treturn target;\n\n\t}\n\n\t// get bounding sphere and compute it if it doesn't exist\n\tgetBoundingSphereAt( geometryId, target ) {\n\n\t\tif ( geometryId >= this._geometryCount ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// compute bounding sphere\n\t\tconst bound = this._bounds[ geometryId ];\n\t\tconst sphere = bound.sphere;\n\t\tconst geometry = this.geometry;\n\t\tif ( bound.sphereInitialized === false ) {\n\n\t\t\tsphere.makeEmpty();\n\n\t\t\tthis.getBoundingBoxAt( geometryId, _box$1 );\n\t\t\t_box$1.getCenter( sphere.center );\n\n\t\t\tconst index = geometry.index;\n\t\t\tconst position = geometry.attributes.position;\n\t\t\tconst drawRange = this._drawRanges[ geometryId ];\n\n\t\t\tlet maxRadiusSq = 0;\n\t\t\tfor ( let i = drawRange.start, l = drawRange.start + drawRange.count; i < l; i ++ ) {\n\n\t\t\t\tlet iv = i;\n\t\t\t\tif ( index ) {\n\n\t\t\t\t\tiv = index.getX( iv );\n\n\t\t\t\t}\n\n\t\t\t\t_vector$5.fromBufferAttribute( position, iv );\n\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, sphere.center.distanceToSquared( _vector$5 ) );\n\n\t\t\t}\n\n\t\t\tsphere.radius = Math.sqrt( maxRadiusSq );\n\t\t\tbound.sphereInitialized = true;\n\n\t\t}\n\n\t\ttarget.copy( sphere );\n\t\treturn target;\n\n\t}\n\n\tsetMatrixAt( instanceId, matrix ) {\n\n\t\t// @TODO: Map geometryId to index of the arrays because\n\t\t//        optimize() can make geometryId mismatch the index\n\n\t\tconst drawInfo = this._drawInfo;\n\t\tconst matricesTexture = this._matricesTexture;\n\t\tconst matricesArray = this._matricesTexture.image.data;\n\t\tif ( instanceId >= drawInfo.length || drawInfo[ instanceId ].active === false ) {\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tmatrix.toArray( matricesArray, instanceId * 16 );\n\t\tmatricesTexture.needsUpdate = true;\n\n\t\treturn this;\n\n\t}\n\n\tgetMatrixAt( instanceId, matrix ) {\n\n\t\tconst drawInfo = this._drawInfo;\n\t\tconst matricesArray = this._matricesTexture.image.data;\n\t\tif ( instanceId >= drawInfo.length || drawInfo[ instanceId ].active === false ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\treturn matrix.fromArray( matricesArray, instanceId * 16 );\n\n\t}\n\n\tsetColorAt( instanceId, color ) {\n\n\t\tif ( this._colorsTexture === null ) {\n\n\t\t\tthis._initColorsTexture();\n\n\t\t}\n\n\t\t// @TODO: Map id to index of the arrays because\n\t\t//        optimize() can make id mismatch the index\n\n\t\tconst colorsTexture = this._colorsTexture;\n\t\tconst colorsArray = this._colorsTexture.image.data;\n\t\tconst drawInfo = this._drawInfo;\n\t\tif ( instanceId >= drawInfo.length || drawInfo[ instanceId ].active === false ) {\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tcolor.toArray( colorsArray, instanceId * 4 );\n\t\tcolorsTexture.needsUpdate = true;\n\n\t\treturn this;\n\n\t}\n\n\tgetColorAt( instanceId, color ) {\n\n\t\tconst colorsArray = this._colorsTexture.image.data;\n\t\tconst drawInfo = this._drawInfo;\n\t\tif ( instanceId >= drawInfo.length || drawInfo[ instanceId ].active === false ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\treturn color.fromArray( colorsArray, instanceId * 4 );\n\n\t}\n\n\tsetVisibleAt( instanceId, value ) {\n\n\t\t// if the geometry is out of range, not active, or visibility state\n\t\t// does not change then return early\n\t\tconst drawInfo = this._drawInfo;\n\t\tif (\n\t\t\tinstanceId >= drawInfo.length ||\n\t\t\tdrawInfo[ instanceId ].active === false ||\n\t\t\tdrawInfo[ instanceId ].visible === value\n\t\t) {\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tdrawInfo[ instanceId ].visible = value;\n\t\tthis._visibilityChanged = true;\n\n\t\treturn this;\n\n\t}\n\n\tgetVisibleAt( instanceId ) {\n\n\t\t// return early if the geometry is out of range or not active\n\t\tconst drawInfo = this._drawInfo;\n\t\tif ( instanceId >= drawInfo.length || drawInfo[ instanceId ].active === false ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\treturn drawInfo[ instanceId ].visible;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst drawInfo = this._drawInfo;\n\t\tconst drawRanges = this._drawRanges;\n\t\tconst matrixWorld = this.matrixWorld;\n\t\tconst batchGeometry = this.geometry;\n\n\t\t// iterate over each geometry\n\t\t_mesh.material = this.material;\n\t\t_mesh.geometry.index = batchGeometry.index;\n\t\t_mesh.geometry.attributes = batchGeometry.attributes;\n\t\tif ( _mesh.geometry.boundingBox === null ) {\n\n\t\t\t_mesh.geometry.boundingBox = new Box3();\n\n\t\t}\n\n\t\tif ( _mesh.geometry.boundingSphere === null ) {\n\n\t\t\t_mesh.geometry.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tfor ( let i = 0, l = drawInfo.length; i < l; i ++ ) {\n\n\t\t\tif ( ! drawInfo[ i ].visible || ! drawInfo[ i ].active ) {\n\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tconst geometryId = drawInfo[ i ].geometryIndex;\n\t\t\tconst drawRange = drawRanges[ geometryId ];\n\t\t\t_mesh.geometry.setDrawRange( drawRange.start, drawRange.count );\n\n\t\t\t// ge the intersects\n\t\t\tthis.getMatrixAt( i, _mesh.matrixWorld ).premultiply( matrixWorld );\n\t\t\tthis.getBoundingBoxAt( geometryId, _mesh.geometry.boundingBox );\n\t\t\tthis.getBoundingSphereAt( geometryId, _mesh.geometry.boundingSphere );\n\t\t\t_mesh.raycast( raycaster, _batchIntersects );\n\n\t\t\t// add batch id to the intersects\n\t\t\tfor ( let j = 0, l = _batchIntersects.length; j < l; j ++ ) {\n\n\t\t\t\tconst intersect = _batchIntersects[ j ];\n\t\t\t\tintersect.object = this;\n\t\t\t\tintersect.batchId = i;\n\t\t\t\tintersects.push( intersect );\n\n\t\t\t}\n\n\t\t\t_batchIntersects.length = 0;\n\n\t\t}\n\n\t\t_mesh.material = null;\n\t\t_mesh.geometry.index = null;\n\t\t_mesh.geometry.attributes = {};\n\t\t_mesh.geometry.setDrawRange( 0, Infinity );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.geometry = source.geometry.clone();\n\t\tthis.perObjectFrustumCulled = source.perObjectFrustumCulled;\n\t\tthis.sortObjects = source.sortObjects;\n\t\tthis.boundingBox = source.boundingBox !== null ? source.boundingBox.clone() : null;\n\t\tthis.boundingSphere = source.boundingSphere !== null ? source.boundingSphere.clone() : null;\n\n\t\tthis._drawRanges = source._drawRanges.map( range => ( { ...range } ) );\n\t\tthis._reservedRanges = source._reservedRanges.map( range => ( { ...range } ) );\n\n\t\tthis._drawInfo = source._drawInfo.map( inf => ( { ...inf } ) );\n\t\tthis._bounds = source._bounds.map( bound => ( {\n\t\t\tboxInitialized: bound.boxInitialized,\n\t\t\tbox: bound.box.clone(),\n\n\t\t\tsphereInitialized: bound.sphereInitialized,\n\t\t\tsphere: bound.sphere.clone()\n\t\t} ) );\n\n\t\tthis._maxInstanceCount = source._maxInstanceCount;\n\t\tthis._maxVertexCount = source._maxVertexCount;\n\t\tthis._maxIndexCount = source._maxIndexCount;\n\n\t\tthis._geometryInitialized = source._geometryInitialized;\n\t\tthis._geometryCount = source._geometryCount;\n\t\tthis._multiDrawCounts = source._multiDrawCounts.slice();\n\t\tthis._multiDrawStarts = source._multiDrawStarts.slice();\n\n\t\tthis._matricesTexture = source._matricesTexture.clone();\n\t\tthis._matricesTexture.image.data = this._matricesTexture.image.slice();\n\n\t\tif ( this._colorsTexture !== null ) {\n\n\t\t\tthis._colorsTexture = source._colorsTexture.clone();\n\t\t\tthis._colorsTexture.image.data = this._colorsTexture.image.slice();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\t// Assuming the geometry is not shared with other meshes\n\t\tthis.geometry.dispose();\n\n\t\tthis._matricesTexture.dispose();\n\t\tthis._matricesTexture = null;\n\n\t\tthis._indirectTexture.dispose();\n\t\tthis._indirectTexture = null;\n\n\t\tif ( this._colorsTexture !== null ) {\n\n\t\t\tthis._colorsTexture.dispose();\n\t\t\tthis._colorsTexture = null;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tonBeforeRender( renderer, scene, camera, geometry, material/*, _group*/ ) {\n\n\t\t// if visibility has not changed and frustum culling and object sorting is not required\n\t\t// then skip iterating over all items\n\t\tif ( ! this._visibilityChanged && ! this.perObjectFrustumCulled && ! this.sortObjects ) {\n\n\t\t\treturn;\n\n\t\t}\n\n\t\t// the indexed version of the multi draw function requires specifying the start\n\t\t// offset in bytes.\n\t\tconst index = geometry.getIndex();\n\t\tconst bytesPerElement = index === null ? 1 : index.array.BYTES_PER_ELEMENT;\n\n\t\tconst drawInfo = this._drawInfo;\n\t\tconst multiDrawStarts = this._multiDrawStarts;\n\t\tconst multiDrawCounts = this._multiDrawCounts;\n\t\tconst drawRanges = this._drawRanges;\n\t\tconst perObjectFrustumCulled = this.perObjectFrustumCulled;\n\t\tconst indirectTexture = this._indirectTexture;\n\t\tconst indirectArray = indirectTexture.image.data;\n\n\t\t// prepare the frustum in the local frame\n\t\tif ( perObjectFrustumCulled ) {\n\n\t\t\t_projScreenMatrix$2\n\t\t\t\t.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse )\n\t\t\t\t.multiply( this.matrixWorld );\n\t\t\t_frustum.setFromProjectionMatrix(\n\t\t\t\t_projScreenMatrix$2,\n\t\t\t\trenderer.coordinateSystem\n\t\t\t);\n\n\t\t}\n\n\t\tlet count = 0;\n\t\tif ( this.sortObjects ) {\n\n\t\t\t// get the camera position in the local frame\n\t\t\t_invMatrixWorld.copy( this.matrixWorld ).invert();\n\t\t\t_vector$5.setFromMatrixPosition( camera.matrixWorld ).applyMatrix4( _invMatrixWorld );\n\t\t\t_forward.set( 0, 0, - 1 ).transformDirection( camera.matrixWorld ).transformDirection( _invMatrixWorld );\n\n\t\t\tfor ( let i = 0, l = drawInfo.length; i < l; i ++ ) {\n\n\t\t\t\tif ( drawInfo[ i ].visible && drawInfo[ i ].active ) {\n\n\t\t\t\t\tconst geometryId = drawInfo[ i ].geometryIndex;\n\n\t\t\t\t\t// get the bounds in world space\n\t\t\t\t\tthis.getMatrixAt( i, _matrix$1 );\n\t\t\t\t\tthis.getBoundingSphereAt( geometryId, _sphere$2 ).applyMatrix4( _matrix$1 );\n\n\t\t\t\t\t// determine whether the batched geometry is within the frustum\n\t\t\t\t\tlet culled = false;\n\t\t\t\t\tif ( perObjectFrustumCulled ) {\n\n\t\t\t\t\t\tculled = ! _frustum.intersectsSphere( _sphere$2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! culled ) {\n\n\t\t\t\t\t\t// get the distance from camera used for sorting\n\t\t\t\t\t\tconst z = _temp.subVectors( _sphere$2.center, _vector$5 ).dot( _forward );\n\t\t\t\t\t\t_renderList.push( drawRanges[ geometryId ], z, i );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Sort the draw ranges and prep for rendering\n\t\t\tconst list = _renderList.list;\n\t\t\tconst customSort = this.customSort;\n\t\t\tif ( customSort === null ) {\n\n\t\t\t\tlist.sort( material.transparent ? sortTransparent : sortOpaque );\n\n\t\t\t} else {\n\n\t\t\t\tcustomSort.call( this, list, camera );\n\n\t\t\t}\n\n\t\t\tfor ( let i = 0, l = list.length; i < l; i ++ ) {\n\n\t\t\t\tconst item = list[ i ];\n\t\t\t\tmultiDrawStarts[ count ] = item.start * bytesPerElement;\n\t\t\t\tmultiDrawCounts[ count ] = item.count;\n\t\t\t\tindirectArray[ count ] = item.index;\n\t\t\t\tcount ++;\n\n\t\t\t}\n\n\t\t\t_renderList.reset();\n\n\t\t} else {\n\n\t\t\tfor ( let i = 0, l = drawInfo.length; i < l; i ++ ) {\n\n\t\t\t\tif ( drawInfo[ i ].visible && drawInfo[ i ].active ) {\n\n\t\t\t\t\tconst geometryId = drawInfo[ i ].geometryIndex;\n\n\t\t\t\t\t// determine whether the batched geometry is within the frustum\n\t\t\t\t\tlet culled = false;\n\t\t\t\t\tif ( perObjectFrustumCulled ) {\n\n\t\t\t\t\t\t// get the bounds in world space\n\t\t\t\t\t\tthis.getMatrixAt( i, _matrix$1 );\n\t\t\t\t\t\tthis.getBoundingSphereAt( geometryId, _sphere$2 ).applyMatrix4( _matrix$1 );\n\t\t\t\t\t\tculled = ! _frustum.intersectsSphere( _sphere$2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! culled ) {\n\n\t\t\t\t\t\tconst range = drawRanges[ geometryId ];\n\t\t\t\t\t\tmultiDrawStarts[ count ] = range.start * bytesPerElement;\n\t\t\t\t\t\tmultiDrawCounts[ count ] = range.count;\n\t\t\t\t\t\tindirectArray[ count ] = i;\n\t\t\t\t\t\tcount ++;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tindirectTexture.needsUpdate = true;\n\t\tthis._multiDrawCount = count;\n\t\tthis._visibilityChanged = false;\n\n\t}\n\n\tonBeforeShadow( renderer, object, camera, shadowCamera, geometry, depthMaterial/* , group */ ) {\n\n\t\tthis.onBeforeRender( renderer, null, shadowCamera, geometry, depthMaterial );\n\n\t}\n\n}\n\nclass LineBasicMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isLineBasicMaterial = true;\n\n\t\tthis.type = 'LineBasicMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\n\t\tthis.linewidth = 1;\n\t\tthis.linecap = 'round';\n\t\tthis.linejoin = 'round';\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.linewidth = source.linewidth;\n\t\tthis.linecap = source.linecap;\n\t\tthis.linejoin = source.linejoin;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _vStart = /*@__PURE__*/ new Vector3();\nconst _vEnd = /*@__PURE__*/ new Vector3();\n\nconst _inverseMatrix$1 = /*@__PURE__*/ new Matrix4();\nconst _ray$1 = /*@__PURE__*/ new Ray();\nconst _sphere$1 = /*@__PURE__*/ new Sphere();\n\nconst _intersectPointOnRay = /*@__PURE__*/ new Vector3();\nconst _intersectPointOnSegment = /*@__PURE__*/ new Vector3();\n\nclass Line extends Object3D {\n\n\tconstructor( geometry = new BufferGeometry(), material = new LineBasicMaterial() ) {\n\n\t\tsuper();\n\n\t\tthis.isLine = true;\n\n\t\tthis.type = 'Line';\n\n\t\tthis.geometry = geometry;\n\t\tthis.material = material;\n\n\t\tthis.updateMorphTargets();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.material = Array.isArray( source.material ) ? source.material.slice() : source.material;\n\t\tthis.geometry = source.geometry;\n\n\t\treturn this;\n\n\t}\n\n\tcomputeLineDistances() {\n\n\t\tconst geometry = this.geometry;\n\n\t\t// we assume non-indexed geometry\n\n\t\tif ( geometry.index === null ) {\n\n\t\t\tconst positionAttribute = geometry.attributes.position;\n\t\t\tconst lineDistances = [ 0 ];\n\n\t\t\tfor ( let i = 1, l = positionAttribute.count; i < l; i ++ ) {\n\n\t\t\t\t_vStart.fromBufferAttribute( positionAttribute, i - 1 );\n\t\t\t\t_vEnd.fromBufferAttribute( positionAttribute, i );\n\n\t\t\t\tlineDistances[ i ] = lineDistances[ i - 1 ];\n\t\t\t\tlineDistances[ i ] += _vStart.distanceTo( _vEnd );\n\n\t\t\t}\n\n\t\t\tgeometry.setAttribute( 'lineDistance', new Float32BufferAttribute( lineDistances, 1 ) );\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.' );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst matrixWorld = this.matrixWorld;\n\t\tconst threshold = raycaster.params.Line.threshold;\n\t\tconst drawRange = geometry.drawRange;\n\n\t\t// Checking boundingSphere distance to ray\n\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t_sphere$1.copy( geometry.boundingSphere );\n\t\t_sphere$1.applyMatrix4( matrixWorld );\n\t\t_sphere$1.radius += threshold;\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere$1 ) === false ) return;\n\n\t\t//\n\n\t\t_inverseMatrix$1.copy( matrixWorld ).invert();\n\t\t_ray$1.copy( raycaster.ray ).applyMatrix4( _inverseMatrix$1 );\n\n\t\tconst localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\n\t\tconst localThresholdSq = localThreshold * localThreshold;\n\n\t\tconst step = this.isLineSegments ? 2 : 1;\n\n\t\tconst index = geometry.index;\n\t\tconst attributes = geometry.attributes;\n\t\tconst positionAttribute = attributes.position;\n\n\t\tif ( index !== null ) {\n\n\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\tconst end = Math.min( index.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\tfor ( let i = start, l = end - 1; i < l; i += step ) {\n\n\t\t\t\tconst a = index.getX( i );\n\t\t\t\tconst b = index.getX( i + 1 );\n\n\t\t\t\tconst intersect = checkIntersection( this, raycaster, _ray$1, localThresholdSq, a, b );\n\n\t\t\t\tif ( intersect ) {\n\n\t\t\t\t\tintersects.push( intersect );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( this.isLineLoop ) {\n\n\t\t\t\tconst a = index.getX( end - 1 );\n\t\t\t\tconst b = index.getX( start );\n\n\t\t\t\tconst intersect = checkIntersection( this, raycaster, _ray$1, localThresholdSq, a, b );\n\n\t\t\t\tif ( intersect ) {\n\n\t\t\t\t\tintersects.push( intersect );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\tconst end = Math.min( positionAttribute.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\tfor ( let i = start, l = end - 1; i < l; i += step ) {\n\n\t\t\t\tconst intersect = checkIntersection( this, raycaster, _ray$1, localThresholdSq, i, i + 1 );\n\n\t\t\t\tif ( intersect ) {\n\n\t\t\t\t\tintersects.push( intersect );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( this.isLineLoop ) {\n\n\t\t\t\tconst intersect = checkIntersection( this, raycaster, _ray$1, localThresholdSq, end - 1, start );\n\n\t\t\t\tif ( intersect ) {\n\n\t\t\t\t\tintersects.push( intersect );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tconst morphAttributes = geometry.morphAttributes;\n\t\tconst keys = Object.keys( morphAttributes );\n\n\t\tif ( keys.length > 0 ) {\n\n\t\t\tconst morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\tfor ( let m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\tconst name = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nfunction checkIntersection( object, raycaster, ray, thresholdSq, a, b ) {\n\n\tconst positionAttribute = object.geometry.attributes.position;\n\n\t_vStart.fromBufferAttribute( positionAttribute, a );\n\t_vEnd.fromBufferAttribute( positionAttribute, b );\n\n\tconst distSq = ray.distanceSqToSegment( _vStart, _vEnd, _intersectPointOnRay, _intersectPointOnSegment );\n\n\tif ( distSq > thresholdSq ) return;\n\n\t_intersectPointOnRay.applyMatrix4( object.matrixWorld ); // Move back to world space for distance calculation\n\n\tconst distance = raycaster.ray.origin.distanceTo( _intersectPointOnRay );\n\n\tif ( distance < raycaster.near || distance > raycaster.far ) return;\n\n\treturn {\n\n\t\tdistance: distance,\n\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t// point: raycaster.ray.at( distance ),\n\t\tpoint: _intersectPointOnSegment.clone().applyMatrix4( object.matrixWorld ),\n\t\tindex: a,\n\t\tface: null,\n\t\tfaceIndex: null,\n\t\tobject: object\n\n\t};\n\n}\n\nconst _start = /*@__PURE__*/ new Vector3();\nconst _end = /*@__PURE__*/ new Vector3();\n\nclass LineSegments extends Line {\n\n\tconstructor( geometry, material ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isLineSegments = true;\n\n\t\tthis.type = 'LineSegments';\n\n\t}\n\n\tcomputeLineDistances() {\n\n\t\tconst geometry = this.geometry;\n\n\t\t// we assume non-indexed geometry\n\n\t\tif ( geometry.index === null ) {\n\n\t\t\tconst positionAttribute = geometry.attributes.position;\n\t\t\tconst lineDistances = [];\n\n\t\t\tfor ( let i = 0, l = positionAttribute.count; i < l; i += 2 ) {\n\n\t\t\t\t_start.fromBufferAttribute( positionAttribute, i );\n\t\t\t\t_end.fromBufferAttribute( positionAttribute, i + 1 );\n\n\t\t\t\tlineDistances[ i ] = ( i === 0 ) ? 0 : lineDistances[ i - 1 ];\n\t\t\t\tlineDistances[ i + 1 ] = lineDistances[ i ] + _start.distanceTo( _end );\n\n\t\t\t}\n\n\t\t\tgeometry.setAttribute( 'lineDistance', new Float32BufferAttribute( lineDistances, 1 ) );\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.' );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LineLoop extends Line {\n\n\tconstructor( geometry, material ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isLineLoop = true;\n\n\t\tthis.type = 'LineLoop';\n\n\t}\n\n}\n\nclass PointsMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isPointsMaterial = true;\n\n\t\tthis.type = 'PointsMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.size = 1;\n\t\tthis.sizeAttenuation = true;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.size = source.size;\n\t\tthis.sizeAttenuation = source.sizeAttenuation;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _inverseMatrix = /*@__PURE__*/ new Matrix4();\nconst _ray = /*@__PURE__*/ new Ray();\nconst _sphere = /*@__PURE__*/ new Sphere();\nconst _position$2 = /*@__PURE__*/ new Vector3();\n\nclass Points extends Object3D {\n\n\tconstructor( geometry = new BufferGeometry(), material = new PointsMaterial() ) {\n\n\t\tsuper();\n\n\t\tthis.isPoints = true;\n\n\t\tthis.type = 'Points';\n\n\t\tthis.geometry = geometry;\n\t\tthis.material = material;\n\n\t\tthis.updateMorphTargets();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.material = Array.isArray( source.material ) ? source.material.slice() : source.material;\n\t\tthis.geometry = source.geometry;\n\n\t\treturn this;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst matrixWorld = this.matrixWorld;\n\t\tconst threshold = raycaster.params.Points.threshold;\n\t\tconst drawRange = geometry.drawRange;\n\n\t\t// Checking boundingSphere distance to ray\n\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t_sphere.copy( geometry.boundingSphere );\n\t\t_sphere.applyMatrix4( matrixWorld );\n\t\t_sphere.radius += threshold;\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere ) === false ) return;\n\n\t\t//\n\n\t\t_inverseMatrix.copy( matrixWorld ).invert();\n\t\t_ray.copy( raycaster.ray ).applyMatrix4( _inverseMatrix );\n\n\t\tconst localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\n\t\tconst localThresholdSq = localThreshold * localThreshold;\n\n\t\tconst index = geometry.index;\n\t\tconst attributes = geometry.attributes;\n\t\tconst positionAttribute = attributes.position;\n\n\t\tif ( index !== null ) {\n\n\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\tconst end = Math.min( index.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\tfor ( let i = start, il = end; i < il; i ++ ) {\n\n\t\t\t\tconst a = index.getX( i );\n\n\t\t\t\t_position$2.fromBufferAttribute( positionAttribute, a );\n\n\t\t\t\ttestPoint( _position$2, a, localThresholdSq, matrixWorld, raycaster, intersects, this );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\tconst end = Math.min( positionAttribute.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\tfor ( let i = start, l = end; i < l; i ++ ) {\n\n\t\t\t\t_position$2.fromBufferAttribute( positionAttribute, i );\n\n\t\t\t\ttestPoint( _position$2, i, localThresholdSq, matrixWorld, raycaster, intersects, this );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tconst morphAttributes = geometry.morphAttributes;\n\t\tconst keys = Object.keys( morphAttributes );\n\n\t\tif ( keys.length > 0 ) {\n\n\t\t\tconst morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\tfor ( let m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\tconst name = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nfunction testPoint( point, index, localThresholdSq, matrixWorld, raycaster, intersects, object ) {\n\n\tconst rayPointDistanceSq = _ray.distanceSqToPoint( point );\n\n\tif ( rayPointDistanceSq < localThresholdSq ) {\n\n\t\tconst intersectPoint = new Vector3();\n\n\t\t_ray.closestPointToPoint( point, intersectPoint );\n\t\tintersectPoint.applyMatrix4( matrixWorld );\n\n\t\tconst distance = raycaster.ray.origin.distanceTo( intersectPoint );\n\n\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\n\n\t\tintersects.push( {\n\n\t\t\tdistance: distance,\n\t\t\tdistanceToRay: Math.sqrt( rayPointDistanceSq ),\n\t\t\tpoint: intersectPoint,\n\t\t\tindex: index,\n\t\t\tface: null,\n\t\t\tobject: object\n\n\t\t} );\n\n\t}\n\n}\n\nclass VideoTexture extends Texture {\n\n\tconstructor( video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\n\n\t\tsuper( video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\tthis.isVideoTexture = true;\n\n\t\tthis.minFilter = minFilter !== undefined ? minFilter : LinearFilter;\n\t\tthis.magFilter = magFilter !== undefined ? magFilter : LinearFilter;\n\n\t\tthis.generateMipmaps = false;\n\n\t\tconst scope = this;\n\n\t\tfunction updateVideo() {\n\n\t\t\tscope.needsUpdate = true;\n\t\t\tvideo.requestVideoFrameCallback( updateVideo );\n\n\t\t}\n\n\t\tif ( 'requestVideoFrameCallback' in video ) {\n\n\t\t\tvideo.requestVideoFrameCallback( updateVideo );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.image ).copy( this );\n\n\t}\n\n\tupdate() {\n\n\t\tconst video = this.image;\n\t\tconst hasVideoFrameCallback = 'requestVideoFrameCallback' in video;\n\n\t\tif ( hasVideoFrameCallback === false && video.readyState >= video.HAVE_CURRENT_DATA ) {\n\n\t\t\tthis.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n}\n\nclass FramebufferTexture extends Texture {\n\n\tconstructor( width, height ) {\n\n\t\tsuper( { width, height } );\n\n\t\tthis.isFramebufferTexture = true;\n\n\t\tthis.magFilter = NearestFilter;\n\t\tthis.minFilter = NearestFilter;\n\n\t\tthis.generateMipmaps = false;\n\n\t\tthis.needsUpdate = true;\n\n\t}\n\n}\n\nclass CompressedTexture extends Texture {\n\n\tconstructor( mipmaps, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, colorSpace ) {\n\n\t\tsuper( null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, colorSpace );\n\n\t\tthis.isCompressedTexture = true;\n\n\t\tthis.image = { width: width, height: height };\n\t\tthis.mipmaps = mipmaps;\n\n\t\t// no flipping for cube textures\n\t\t// (also flipping doesn't work for compressed textures )\n\n\t\tthis.flipY = false;\n\n\t\t// can't generate mipmaps for compressed textures\n\t\t// mips must be embedded in DDS files\n\n\t\tthis.generateMipmaps = false;\n\n\t}\n\n}\n\nclass CompressedArrayTexture extends CompressedTexture {\n\n\tconstructor( mipmaps, width, height, depth, format, type ) {\n\n\t\tsuper( mipmaps, width, height, format, type );\n\n\t\tthis.isCompressedArrayTexture = true;\n\t\tthis.image.depth = depth;\n\t\tthis.wrapR = ClampToEdgeWrapping;\n\n\t\tthis.layerUpdates = new Set();\n\n\t}\n\n\taddLayerUpdate( layerIndex ) {\n\n\t\tthis.layerUpdates.add( layerIndex );\n\n\t}\n\n\tclearLayerUpdates() {\n\n\t\tthis.layerUpdates.clear();\n\n\t}\n\n}\n\nclass CompressedCubeTexture extends CompressedTexture {\n\n\tconstructor( images, format, type ) {\n\n\t\tsuper( undefined, images[ 0 ].width, images[ 0 ].height, format, type, CubeReflectionMapping );\n\n\t\tthis.isCompressedCubeTexture = true;\n\t\tthis.isCubeTexture = true;\n\n\t\tthis.image = images;\n\n\t}\n\n}\n\nclass CanvasTexture extends Texture {\n\n\tconstructor( canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\n\n\t\tsuper( canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\tthis.isCanvasTexture = true;\n\n\t\tthis.needsUpdate = true;\n\n\t}\n\n}\n\n/**\n * Extensible curve object.\n *\n * Some common of curve methods:\n * .getPoint( t, optionalTarget ), .getTangent( t, optionalTarget )\n * .getPointAt( u, optionalTarget ), .getTangentAt( u, optionalTarget )\n * .getPoints(), .getSpacedPoints()\n * .getLength()\n * .updateArcLengths()\n *\n * This following curves inherit from THREE.Curve:\n *\n * -- 2D curves --\n * THREE.ArcCurve\n * THREE.CubicBezierCurve\n * THREE.EllipseCurve\n * THREE.LineCurve\n * THREE.QuadraticBezierCurve\n * THREE.SplineCurve\n *\n * -- 3D curves --\n * THREE.CatmullRomCurve3\n * THREE.CubicBezierCurve3\n * THREE.LineCurve3\n * THREE.QuadraticBezierCurve3\n *\n * A series of curves can be represented as a THREE.CurvePath.\n *\n **/\n\nclass Curve {\n\n\tconstructor() {\n\n\t\tthis.type = 'Curve';\n\n\t\tthis.arcLengthDivisions = 200;\n\n\t}\n\n\t// Virtual base class method to overwrite and implement in subclasses\n\t//\t- t [0 .. 1]\n\n\tgetPoint( /* t, optionalTarget */ ) {\n\n\t\tconsole.warn( 'THREE.Curve: .getPoint() not implemented.' );\n\t\treturn null;\n\n\t}\n\n\t// Get point at relative position in curve according to arc length\n\t// - u [0 .. 1]\n\n\tgetPointAt( u, optionalTarget ) {\n\n\t\tconst t = this.getUtoTmapping( u );\n\t\treturn this.getPoint( t, optionalTarget );\n\n\t}\n\n\t// Get sequence of points using getPoint( t )\n\n\tgetPoints( divisions = 5 ) {\n\n\t\tconst points = [];\n\n\t\tfor ( let d = 0; d <= divisions; d ++ ) {\n\n\t\t\tpoints.push( this.getPoint( d / divisions ) );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\t// Get sequence of points using getPointAt( u )\n\n\tgetSpacedPoints( divisions = 5 ) {\n\n\t\tconst points = [];\n\n\t\tfor ( let d = 0; d <= divisions; d ++ ) {\n\n\t\t\tpoints.push( this.getPointAt( d / divisions ) );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\t// Get total curve arc length\n\n\tgetLength() {\n\n\t\tconst lengths = this.getLengths();\n\t\treturn lengths[ lengths.length - 1 ];\n\n\t}\n\n\t// Get list of cumulative segment lengths\n\n\tgetLengths( divisions = this.arcLengthDivisions ) {\n\n\t\tif ( this.cacheArcLengths &&\n\t\t\t( this.cacheArcLengths.length === divisions + 1 ) &&\n\t\t\t! this.needsUpdate ) {\n\n\t\t\treturn this.cacheArcLengths;\n\n\t\t}\n\n\t\tthis.needsUpdate = false;\n\n\t\tconst cache = [];\n\t\tlet current, last = this.getPoint( 0 );\n\t\tlet sum = 0;\n\n\t\tcache.push( 0 );\n\n\t\tfor ( let p = 1; p <= divisions; p ++ ) {\n\n\t\t\tcurrent = this.getPoint( p / divisions );\n\t\t\tsum += current.distanceTo( last );\n\t\t\tcache.push( sum );\n\t\t\tlast = current;\n\n\t\t}\n\n\t\tthis.cacheArcLengths = cache;\n\n\t\treturn cache; // { sums: cache, sum: sum }; Sum is in the last element.\n\n\t}\n\n\tupdateArcLengths() {\n\n\t\tthis.needsUpdate = true;\n\t\tthis.getLengths();\n\n\t}\n\n\t// Given u ( 0 .. 1 ), get a t to find p. This gives you points which are equidistant\n\n\tgetUtoTmapping( u, distance ) {\n\n\t\tconst arcLengths = this.getLengths();\n\n\t\tlet i = 0;\n\t\tconst il = arcLengths.length;\n\n\t\tlet targetArcLength; // The targeted u distance value to get\n\n\t\tif ( distance ) {\n\n\t\t\ttargetArcLength = distance;\n\n\t\t} else {\n\n\t\t\ttargetArcLength = u * arcLengths[ il - 1 ];\n\n\t\t}\n\n\t\t// binary search for the index with largest value smaller than target u distance\n\n\t\tlet low = 0, high = il - 1, comparison;\n\n\t\twhile ( low <= high ) {\n\n\t\t\ti = Math.floor( low + ( high - low ) / 2 ); // less likely to overflow, though probably not issue here, JS doesn't really have integers, all numbers are floats\n\n\t\t\tcomparison = arcLengths[ i ] - targetArcLength;\n\n\t\t\tif ( comparison < 0 ) {\n\n\t\t\t\tlow = i + 1;\n\n\t\t\t} else if ( comparison > 0 ) {\n\n\t\t\t\thigh = i - 1;\n\n\t\t\t} else {\n\n\t\t\t\thigh = i;\n\t\t\t\tbreak;\n\n\t\t\t\t// DONE\n\n\t\t\t}\n\n\t\t}\n\n\t\ti = high;\n\n\t\tif ( arcLengths[ i ] === targetArcLength ) {\n\n\t\t\treturn i / ( il - 1 );\n\n\t\t}\n\n\t\t// we could get finer grain at lengths, or use simple interpolation between two points\n\n\t\tconst lengthBefore = arcLengths[ i ];\n\t\tconst lengthAfter = arcLengths[ i + 1 ];\n\n\t\tconst segmentLength = lengthAfter - lengthBefore;\n\n\t\t// determine where we are between the 'before' and 'after' points\n\n\t\tconst segmentFraction = ( targetArcLength - lengthBefore ) / segmentLength;\n\n\t\t// add that fractional amount to t\n\n\t\tconst t = ( i + segmentFraction ) / ( il - 1 );\n\n\t\treturn t;\n\n\t}\n\n\t// Returns a unit vector tangent at t\n\t// In case any sub curve does not implement its tangent derivation,\n\t// 2 points a small delta apart will be used to find its gradient\n\t// which seems to give a reasonable approximation\n\n\tgetTangent( t, optionalTarget ) {\n\n\t\tconst delta = 0.0001;\n\t\tlet t1 = t - delta;\n\t\tlet t2 = t + delta;\n\n\t\t// Capping in case of danger\n\n\t\tif ( t1 < 0 ) t1 = 0;\n\t\tif ( t2 > 1 ) t2 = 1;\n\n\t\tconst pt1 = this.getPoint( t1 );\n\t\tconst pt2 = this.getPoint( t2 );\n\n\t\tconst tangent = optionalTarget || ( ( pt1.isVector2 ) ? new Vector2() : new Vector3() );\n\n\t\ttangent.copy( pt2 ).sub( pt1 ).normalize();\n\n\t\treturn tangent;\n\n\t}\n\n\tgetTangentAt( u, optionalTarget ) {\n\n\t\tconst t = this.getUtoTmapping( u );\n\t\treturn this.getTangent( t, optionalTarget );\n\n\t}\n\n\tcomputeFrenetFrames( segments, closed ) {\n\n\t\t// see http://www.cs.indiana.edu/pub/techreports/TR425.pdf\n\n\t\tconst normal = new Vector3();\n\n\t\tconst tangents = [];\n\t\tconst normals = [];\n\t\tconst binormals = [];\n\n\t\tconst vec = new Vector3();\n\t\tconst mat = new Matrix4();\n\n\t\t// compute the tangent vectors for each segment on the curve\n\n\t\tfor ( let i = 0; i <= segments; i ++ ) {\n\n\t\t\tconst u = i / segments;\n\n\t\t\ttangents[ i ] = this.getTangentAt( u, new Vector3() );\n\n\t\t}\n\n\t\t// select an initial normal vector perpendicular to the first tangent vector,\n\t\t// and in the direction of the minimum tangent xyz component\n\n\t\tnormals[ 0 ] = new Vector3();\n\t\tbinormals[ 0 ] = new Vector3();\n\t\tlet min = Number.MAX_VALUE;\n\t\tconst tx = Math.abs( tangents[ 0 ].x );\n\t\tconst ty = Math.abs( tangents[ 0 ].y );\n\t\tconst tz = Math.abs( tangents[ 0 ].z );\n\n\t\tif ( tx <= min ) {\n\n\t\t\tmin = tx;\n\t\t\tnormal.set( 1, 0, 0 );\n\n\t\t}\n\n\t\tif ( ty <= min ) {\n\n\t\t\tmin = ty;\n\t\t\tnormal.set( 0, 1, 0 );\n\n\t\t}\n\n\t\tif ( tz <= min ) {\n\n\t\t\tnormal.set( 0, 0, 1 );\n\n\t\t}\n\n\t\tvec.crossVectors( tangents[ 0 ], normal ).normalize();\n\n\t\tnormals[ 0 ].crossVectors( tangents[ 0 ], vec );\n\t\tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] );\n\n\n\t\t// compute the slowly-varying normal and binormal vectors for each segment on the curve\n\n\t\tfor ( let i = 1; i <= segments; i ++ ) {\n\n\t\t\tnormals[ i ] = normals[ i - 1 ].clone();\n\n\t\t\tbinormals[ i ] = binormals[ i - 1 ].clone();\n\n\t\t\tvec.crossVectors( tangents[ i - 1 ], tangents[ i ] );\n\n\t\t\tif ( vec.length() > Number.EPSILON ) {\n\n\t\t\t\tvec.normalize();\n\n\t\t\t\tconst theta = Math.acos( clamp( tangents[ i - 1 ].dot( tangents[ i ] ), - 1, 1 ) ); // clamp for floating pt errors\n\n\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( vec, theta ) );\n\n\t\t\t}\n\n\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\n\n\t\t}\n\n\t\t// if the curve is closed, postprocess the vectors so the first and last normal vectors are the same\n\n\t\tif ( closed === true ) {\n\n\t\t\tlet theta = Math.acos( clamp( normals[ 0 ].dot( normals[ segments ] ), - 1, 1 ) );\n\t\t\ttheta /= segments;\n\n\t\t\tif ( tangents[ 0 ].dot( vec.crossVectors( normals[ 0 ], normals[ segments ] ) ) > 0 ) {\n\n\t\t\t\ttheta = - theta;\n\n\t\t\t}\n\n\t\t\tfor ( let i = 1; i <= segments; i ++ ) {\n\n\t\t\t\t// twist a little...\n\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( tangents[ i ], theta * i ) );\n\t\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn {\n\t\t\ttangents: tangents,\n\t\t\tnormals: normals,\n\t\t\tbinormals: binormals\n\t\t};\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.arcLengthDivisions = source.arcLengthDivisions;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.6,\n\t\t\t\ttype: 'Curve',\n\t\t\t\tgenerator: 'Curve.toJSON'\n\t\t\t}\n\t\t};\n\n\t\tdata.arcLengthDivisions = this.arcLengthDivisions;\n\t\tdata.type = this.type;\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tthis.arcLengthDivisions = json.arcLengthDivisions;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass EllipseCurve extends Curve {\n\n\tconstructor( aX = 0, aY = 0, xRadius = 1, yRadius = 1, aStartAngle = 0, aEndAngle = Math.PI * 2, aClockwise = false, aRotation = 0 ) {\n\n\t\tsuper();\n\n\t\tthis.isEllipseCurve = true;\n\n\t\tthis.type = 'EllipseCurve';\n\n\t\tthis.aX = aX;\n\t\tthis.aY = aY;\n\n\t\tthis.xRadius = xRadius;\n\t\tthis.yRadius = yRadius;\n\n\t\tthis.aStartAngle = aStartAngle;\n\t\tthis.aEndAngle = aEndAngle;\n\n\t\tthis.aClockwise = aClockwise;\n\n\t\tthis.aRotation = aRotation;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst twoPi = Math.PI * 2;\n\t\tlet deltaAngle = this.aEndAngle - this.aStartAngle;\n\t\tconst samePoints = Math.abs( deltaAngle ) < Number.EPSILON;\n\n\t\t// ensures that deltaAngle is 0 .. 2 PI\n\t\twhile ( deltaAngle < 0 ) deltaAngle += twoPi;\n\t\twhile ( deltaAngle > twoPi ) deltaAngle -= twoPi;\n\n\t\tif ( deltaAngle < Number.EPSILON ) {\n\n\t\t\tif ( samePoints ) {\n\n\t\t\t\tdeltaAngle = 0;\n\n\t\t\t} else {\n\n\t\t\t\tdeltaAngle = twoPi;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.aClockwise === true && ! samePoints ) {\n\n\t\t\tif ( deltaAngle === twoPi ) {\n\n\t\t\t\tdeltaAngle = - twoPi;\n\n\t\t\t} else {\n\n\t\t\t\tdeltaAngle = deltaAngle - twoPi;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst angle = this.aStartAngle + t * deltaAngle;\n\t\tlet x = this.aX + this.xRadius * Math.cos( angle );\n\t\tlet y = this.aY + this.yRadius * Math.sin( angle );\n\n\t\tif ( this.aRotation !== 0 ) {\n\n\t\t\tconst cos = Math.cos( this.aRotation );\n\t\t\tconst sin = Math.sin( this.aRotation );\n\n\t\t\tconst tx = x - this.aX;\n\t\t\tconst ty = y - this.aY;\n\n\t\t\t// Rotate the point about the center of the ellipse.\n\t\t\tx = tx * cos - ty * sin + this.aX;\n\t\t\ty = tx * sin + ty * cos + this.aY;\n\n\t\t}\n\n\t\treturn point.set( x, y );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.aX = source.aX;\n\t\tthis.aY = source.aY;\n\n\t\tthis.xRadius = source.xRadius;\n\t\tthis.yRadius = source.yRadius;\n\n\t\tthis.aStartAngle = source.aStartAngle;\n\t\tthis.aEndAngle = source.aEndAngle;\n\n\t\tthis.aClockwise = source.aClockwise;\n\n\t\tthis.aRotation = source.aRotation;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.aX = this.aX;\n\t\tdata.aY = this.aY;\n\n\t\tdata.xRadius = this.xRadius;\n\t\tdata.yRadius = this.yRadius;\n\n\t\tdata.aStartAngle = this.aStartAngle;\n\t\tdata.aEndAngle = this.aEndAngle;\n\n\t\tdata.aClockwise = this.aClockwise;\n\n\t\tdata.aRotation = this.aRotation;\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.aX = json.aX;\n\t\tthis.aY = json.aY;\n\n\t\tthis.xRadius = json.xRadius;\n\t\tthis.yRadius = json.yRadius;\n\n\t\tthis.aStartAngle = json.aStartAngle;\n\t\tthis.aEndAngle = json.aEndAngle;\n\n\t\tthis.aClockwise = json.aClockwise;\n\n\t\tthis.aRotation = json.aRotation;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass ArcCurve extends EllipseCurve {\n\n\tconstructor( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tsuper( aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\n\n\t\tthis.isArcCurve = true;\n\n\t\tthis.type = 'ArcCurve';\n\n\t}\n\n}\n\n/**\n * Centripetal CatmullRom Curve - which is useful for avoiding\n * cusps and self-intersections in non-uniform catmull rom curves.\n * http://www.cemyuksel.com/research/catmullrom_param/catmullrom.pdf\n *\n * curve.type accepts centripetal(default), chordal and catmullrom\n * curve.tension is used for catmullrom which defaults to 0.5\n */\n\n\n/*\nBased on an optimized c++ solution in\n - http://stackoverflow.com/questions/9489736/catmull-rom-curve-with-no-cusps-and-no-self-intersections/\n - http://ideone.com/NoEbVM\n\nThis CubicPoly class could be used for reusing some variables and calculations,\nbut for three.js curve use, it could be possible inlined and flatten into a single function call\nwhich can be placed in CurveUtils.\n*/\n\nfunction CubicPoly() {\n\n\tlet c0 = 0, c1 = 0, c2 = 0, c3 = 0;\n\n\t/*\n\t * Compute coefficients for a cubic polynomial\n\t *   p(s) = c0 + c1*s + c2*s^2 + c3*s^3\n\t * such that\n\t *   p(0) = x0, p(1) = x1\n\t *  and\n\t *   p'(0) = t0, p'(1) = t1.\n\t */\n\tfunction init( x0, x1, t0, t1 ) {\n\n\t\tc0 = x0;\n\t\tc1 = t0;\n\t\tc2 = - 3 * x0 + 3 * x1 - 2 * t0 - t1;\n\t\tc3 = 2 * x0 - 2 * x1 + t0 + t1;\n\n\t}\n\n\treturn {\n\n\t\tinitCatmullRom: function ( x0, x1, x2, x3, tension ) {\n\n\t\t\tinit( x1, x2, tension * ( x2 - x0 ), tension * ( x3 - x1 ) );\n\n\t\t},\n\n\t\tinitNonuniformCatmullRom: function ( x0, x1, x2, x3, dt0, dt1, dt2 ) {\n\n\t\t\t// compute tangents when parameterized in [t1,t2]\n\t\t\tlet t1 = ( x1 - x0 ) / dt0 - ( x2 - x0 ) / ( dt0 + dt1 ) + ( x2 - x1 ) / dt1;\n\t\t\tlet t2 = ( x2 - x1 ) / dt1 - ( x3 - x1 ) / ( dt1 + dt2 ) + ( x3 - x2 ) / dt2;\n\n\t\t\t// rescale tangents for parametrization in [0,1]\n\t\t\tt1 *= dt1;\n\t\t\tt2 *= dt1;\n\n\t\t\tinit( x1, x2, t1, t2 );\n\n\t\t},\n\n\t\tcalc: function ( t ) {\n\n\t\t\tconst t2 = t * t;\n\t\t\tconst t3 = t2 * t;\n\t\t\treturn c0 + c1 * t + c2 * t2 + c3 * t3;\n\n\t\t}\n\n\t};\n\n}\n\n//\n\nconst tmp = /*@__PURE__*/ new Vector3();\nconst px = /*@__PURE__*/ new CubicPoly();\nconst py = /*@__PURE__*/ new CubicPoly();\nconst pz = /*@__PURE__*/ new CubicPoly();\n\nclass CatmullRomCurve3 extends Curve {\n\n\tconstructor( points = [], closed = false, curveType = 'centripetal', tension = 0.5 ) {\n\n\t\tsuper();\n\n\t\tthis.isCatmullRomCurve3 = true;\n\n\t\tthis.type = 'CatmullRomCurve3';\n\n\t\tthis.points = points;\n\t\tthis.closed = closed;\n\t\tthis.curveType = curveType;\n\t\tthis.tension = tension;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst points = this.points;\n\t\tconst l = points.length;\n\n\t\tconst p = ( l - ( this.closed ? 0 : 1 ) ) * t;\n\t\tlet intPoint = Math.floor( p );\n\t\tlet weight = p - intPoint;\n\n\t\tif ( this.closed ) {\n\n\t\t\tintPoint += intPoint > 0 ? 0 : ( Math.floor( Math.abs( intPoint ) / l ) + 1 ) * l;\n\n\t\t} else if ( weight === 0 && intPoint === l - 1 ) {\n\n\t\t\tintPoint = l - 2;\n\t\t\tweight = 1;\n\n\t\t}\n\n\t\tlet p0, p3; // 4 points (p1 & p2 defined below)\n\n\t\tif ( this.closed || intPoint > 0 ) {\n\n\t\t\tp0 = points[ ( intPoint - 1 ) % l ];\n\n\t\t} else {\n\n\t\t\t// extrapolate first point\n\t\t\ttmp.subVectors( points[ 0 ], points[ 1 ] ).add( points[ 0 ] );\n\t\t\tp0 = tmp;\n\n\t\t}\n\n\t\tconst p1 = points[ intPoint % l ];\n\t\tconst p2 = points[ ( intPoint + 1 ) % l ];\n\n\t\tif ( this.closed || intPoint + 2 < l ) {\n\n\t\t\tp3 = points[ ( intPoint + 2 ) % l ];\n\n\t\t} else {\n\n\t\t\t// extrapolate last point\n\t\t\ttmp.subVectors( points[ l - 1 ], points[ l - 2 ] ).add( points[ l - 1 ] );\n\t\t\tp3 = tmp;\n\n\t\t}\n\n\t\tif ( this.curveType === 'centripetal' || this.curveType === 'chordal' ) {\n\n\t\t\t// init Centripetal / Chordal Catmull-Rom\n\t\t\tconst pow = this.curveType === 'chordal' ? 0.5 : 0.25;\n\t\t\tlet dt0 = Math.pow( p0.distanceToSquared( p1 ), pow );\n\t\t\tlet dt1 = Math.pow( p1.distanceToSquared( p2 ), pow );\n\t\t\tlet dt2 = Math.pow( p2.distanceToSquared( p3 ), pow );\n\n\t\t\t// safety check for repeated points\n\t\t\tif ( dt1 < 1e-4 ) dt1 = 1.0;\n\t\t\tif ( dt0 < 1e-4 ) dt0 = dt1;\n\t\t\tif ( dt2 < 1e-4 ) dt2 = dt1;\n\n\t\t\tpx.initNonuniformCatmullRom( p0.x, p1.x, p2.x, p3.x, dt0, dt1, dt2 );\n\t\t\tpy.initNonuniformCatmullRom( p0.y, p1.y, p2.y, p3.y, dt0, dt1, dt2 );\n\t\t\tpz.initNonuniformCatmullRom( p0.z, p1.z, p2.z, p3.z, dt0, dt1, dt2 );\n\n\t\t} else if ( this.curveType === 'catmullrom' ) {\n\n\t\t\tpx.initCatmullRom( p0.x, p1.x, p2.x, p3.x, this.tension );\n\t\t\tpy.initCatmullRom( p0.y, p1.y, p2.y, p3.y, this.tension );\n\t\t\tpz.initCatmullRom( p0.z, p1.z, p2.z, p3.z, this.tension );\n\n\t\t}\n\n\t\tpoint.set(\n\t\t\tpx.calc( weight ),\n\t\t\tpy.calc( weight ),\n\t\t\tpz.calc( weight )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = source.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = source.points[ i ];\n\n\t\t\tthis.points.push( point.clone() );\n\n\t\t}\n\n\t\tthis.closed = source.closed;\n\t\tthis.curveType = source.curveType;\n\t\tthis.tension = source.tension;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.points = [];\n\n\t\tfor ( let i = 0, l = this.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = this.points[ i ];\n\t\t\tdata.points.push( point.toArray() );\n\n\t\t}\n\n\t\tdata.closed = this.closed;\n\t\tdata.curveType = this.curveType;\n\t\tdata.tension = this.tension;\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = json.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = json.points[ i ];\n\t\t\tthis.points.push( new Vector3().fromArray( point ) );\n\n\t\t}\n\n\t\tthis.closed = json.closed;\n\t\tthis.curveType = json.curveType;\n\t\tthis.tension = json.tension;\n\n\t\treturn this;\n\n\t}\n\n}\n\n/**\n * Bezier Curves formulas obtained from\n * https://en.wikipedia.org/wiki/B%C3%A9zier_curve\n */\n\nfunction CatmullRom( t, p0, p1, p2, p3 ) {\n\n\tconst v0 = ( p2 - p0 ) * 0.5;\n\tconst v1 = ( p3 - p1 ) * 0.5;\n\tconst t2 = t * t;\n\tconst t3 = t * t2;\n\treturn ( 2 * p1 - 2 * p2 + v0 + v1 ) * t3 + ( - 3 * p1 + 3 * p2 - 2 * v0 - v1 ) * t2 + v0 * t + p1;\n\n}\n\n//\n\nfunction QuadraticBezierP0( t, p ) {\n\n\tconst k = 1 - t;\n\treturn k * k * p;\n\n}\n\nfunction QuadraticBezierP1( t, p ) {\n\n\treturn 2 * ( 1 - t ) * t * p;\n\n}\n\nfunction QuadraticBezierP2( t, p ) {\n\n\treturn t * t * p;\n\n}\n\nfunction QuadraticBezier( t, p0, p1, p2 ) {\n\n\treturn QuadraticBezierP0( t, p0 ) + QuadraticBezierP1( t, p1 ) +\n\t\tQuadraticBezierP2( t, p2 );\n\n}\n\n//\n\nfunction CubicBezierP0( t, p ) {\n\n\tconst k = 1 - t;\n\treturn k * k * k * p;\n\n}\n\nfunction CubicBezierP1( t, p ) {\n\n\tconst k = 1 - t;\n\treturn 3 * k * k * t * p;\n\n}\n\nfunction CubicBezierP2( t, p ) {\n\n\treturn 3 * ( 1 - t ) * t * t * p;\n\n}\n\nfunction CubicBezierP3( t, p ) {\n\n\treturn t * t * t * p;\n\n}\n\nfunction CubicBezier( t, p0, p1, p2, p3 ) {\n\n\treturn CubicBezierP0( t, p0 ) + CubicBezierP1( t, p1 ) + CubicBezierP2( t, p2 ) +\n\t\tCubicBezierP3( t, p3 );\n\n}\n\nclass CubicBezierCurve extends Curve {\n\n\tconstructor( v0 = new Vector2(), v1 = new Vector2(), v2 = new Vector2(), v3 = new Vector2() ) {\n\n\t\tsuper();\n\n\t\tthis.isCubicBezierCurve = true;\n\n\t\tthis.type = 'CubicBezierCurve';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\t\tthis.v3 = v3;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3;\n\n\t\tpoint.set(\n\t\t\tCubicBezier( t, v0.x, v1.x, v2.x, v3.x ),\n\t\t\tCubicBezier( t, v0.y, v1.y, v2.y, v3.y )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\t\tthis.v3.copy( source.v3 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\t\tdata.v3 = this.v3.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\t\tthis.v3.fromArray( json.v3 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass CubicBezierCurve3 extends Curve {\n\n\tconstructor( v0 = new Vector3(), v1 = new Vector3(), v2 = new Vector3(), v3 = new Vector3() ) {\n\n\t\tsuper();\n\n\t\tthis.isCubicBezierCurve3 = true;\n\n\t\tthis.type = 'CubicBezierCurve3';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\t\tthis.v3 = v3;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3;\n\n\t\tpoint.set(\n\t\t\tCubicBezier( t, v0.x, v1.x, v2.x, v3.x ),\n\t\t\tCubicBezier( t, v0.y, v1.y, v2.y, v3.y ),\n\t\t\tCubicBezier( t, v0.z, v1.z, v2.z, v3.z )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\t\tthis.v3.copy( source.v3 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\t\tdata.v3 = this.v3.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\t\tthis.v3.fromArray( json.v3 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LineCurve extends Curve {\n\n\tconstructor( v1 = new Vector2(), v2 = new Vector2() ) {\n\n\t\tsuper();\n\n\t\tthis.isLineCurve = true;\n\n\t\tthis.type = 'LineCurve';\n\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tif ( t === 1 ) {\n\n\t\t\tpoint.copy( this.v2 );\n\n\t\t} else {\n\n\t\t\tpoint.copy( this.v2 ).sub( this.v1 );\n\t\t\tpoint.multiplyScalar( t ).add( this.v1 );\n\n\t\t}\n\n\t\treturn point;\n\n\t}\n\n\t// Line curve is linear, so we can overwrite default getPointAt\n\tgetPointAt( u, optionalTarget ) {\n\n\t\treturn this.getPoint( u, optionalTarget );\n\n\t}\n\n\tgetTangent( t, optionalTarget = new Vector2() ) {\n\n\t\treturn optionalTarget.subVectors( this.v2, this.v1 ).normalize();\n\n\t}\n\n\tgetTangentAt( u, optionalTarget ) {\n\n\t\treturn this.getTangent( u, optionalTarget );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LineCurve3 extends Curve {\n\n\tconstructor( v1 = new Vector3(), v2 = new Vector3() ) {\n\n\t\tsuper();\n\n\t\tthis.isLineCurve3 = true;\n\n\t\tthis.type = 'LineCurve3';\n\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tif ( t === 1 ) {\n\n\t\t\tpoint.copy( this.v2 );\n\n\t\t} else {\n\n\t\t\tpoint.copy( this.v2 ).sub( this.v1 );\n\t\t\tpoint.multiplyScalar( t ).add( this.v1 );\n\n\t\t}\n\n\t\treturn point;\n\n\t}\n\n\t// Line curve is linear, so we can overwrite default getPointAt\n\tgetPointAt( u, optionalTarget ) {\n\n\t\treturn this.getPoint( u, optionalTarget );\n\n\t}\n\n\tgetTangent( t, optionalTarget = new Vector3() ) {\n\n\t\treturn optionalTarget.subVectors( this.v2, this.v1 ).normalize();\n\n\t}\n\n\tgetTangentAt( u, optionalTarget ) {\n\n\t\treturn this.getTangent( u, optionalTarget );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass QuadraticBezierCurve extends Curve {\n\n\tconstructor( v0 = new Vector2(), v1 = new Vector2(), v2 = new Vector2() ) {\n\n\t\tsuper();\n\n\t\tthis.isQuadraticBezierCurve = true;\n\n\t\tthis.type = 'QuadraticBezierCurve';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2;\n\n\t\tpoint.set(\n\t\t\tQuadraticBezier( t, v0.x, v1.x, v2.x ),\n\t\t\tQuadraticBezier( t, v0.y, v1.y, v2.y )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass QuadraticBezierCurve3 extends Curve {\n\n\tconstructor( v0 = new Vector3(), v1 = new Vector3(), v2 = new Vector3() ) {\n\n\t\tsuper();\n\n\t\tthis.isQuadraticBezierCurve3 = true;\n\n\t\tthis.type = 'QuadraticBezierCurve3';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2;\n\n\t\tpoint.set(\n\t\t\tQuadraticBezier( t, v0.x, v1.x, v2.x ),\n\t\t\tQuadraticBezier( t, v0.y, v1.y, v2.y ),\n\t\t\tQuadraticBezier( t, v0.z, v1.z, v2.z )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass SplineCurve extends Curve {\n\n\tconstructor( points = [] ) {\n\n\t\tsuper();\n\n\t\tthis.isSplineCurve = true;\n\n\t\tthis.type = 'SplineCurve';\n\n\t\tthis.points = points;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst points = this.points;\n\t\tconst p = ( points.length - 1 ) * t;\n\n\t\tconst intPoint = Math.floor( p );\n\t\tconst weight = p - intPoint;\n\n\t\tconst p0 = points[ intPoint === 0 ? intPoint : intPoint - 1 ];\n\t\tconst p1 = points[ intPoint ];\n\t\tconst p2 = points[ intPoint > points.length - 2 ? points.length - 1 : intPoint + 1 ];\n\t\tconst p3 = points[ intPoint > points.length - 3 ? points.length - 1 : intPoint + 2 ];\n\n\t\tpoint.set(\n\t\t\tCatmullRom( weight, p0.x, p1.x, p2.x, p3.x ),\n\t\t\tCatmullRom( weight, p0.y, p1.y, p2.y, p3.y )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = source.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = source.points[ i ];\n\n\t\t\tthis.points.push( point.clone() );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.points = [];\n\n\t\tfor ( let i = 0, l = this.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = this.points[ i ];\n\t\t\tdata.points.push( point.toArray() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = json.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = json.points[ i ];\n\t\t\tthis.points.push( new Vector2().fromArray( point ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nvar Curves = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tArcCurve: ArcCurve,\n\tCatmullRomCurve3: CatmullRomCurve3,\n\tCubicBezierCurve: CubicBezierCurve,\n\tCubicBezierCurve3: CubicBezierCurve3,\n\tEllipseCurve: EllipseCurve,\n\tLineCurve: LineCurve,\n\tLineCurve3: LineCurve3,\n\tQuadraticBezierCurve: QuadraticBezierCurve,\n\tQuadraticBezierCurve3: QuadraticBezierCurve3,\n\tSplineCurve: SplineCurve\n});\n\n/**************************************************************\n *\tCurved Path - a curve path is simply a array of connected\n *  curves, but retains the api of a curve\n **************************************************************/\n\nclass CurvePath extends Curve {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.type = 'CurvePath';\n\n\t\tthis.curves = [];\n\t\tthis.autoClose = false; // Automatically closes the path\n\n\t}\n\n\tadd( curve ) {\n\n\t\tthis.curves.push( curve );\n\n\t}\n\n\tclosePath() {\n\n\t\t// Add a line curve if start and end of lines are not connected\n\t\tconst startPoint = this.curves[ 0 ].getPoint( 0 );\n\t\tconst endPoint = this.curves[ this.curves.length - 1 ].getPoint( 1 );\n\n\t\tif ( ! startPoint.equals( endPoint ) ) {\n\n\t\t\tconst lineType = ( startPoint.isVector2 === true ) ? 'LineCurve' : 'LineCurve3';\n\t\t\tthis.curves.push( new Curves[ lineType ]( endPoint, startPoint ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// To get accurate point with reference to\n\t// entire path distance at time t,\n\t// following has to be done:\n\n\t// 1. Length of each sub path have to be known\n\t// 2. Locate and identify type of curve\n\t// 3. Get t for the curve\n\t// 4. Return curve.getPointAt(t')\n\n\tgetPoint( t, optionalTarget ) {\n\n\t\tconst d = t * this.getLength();\n\t\tconst curveLengths = this.getCurveLengths();\n\t\tlet i = 0;\n\n\t\t// To think about boundaries points.\n\n\t\twhile ( i < curveLengths.length ) {\n\n\t\t\tif ( curveLengths[ i ] >= d ) {\n\n\t\t\t\tconst diff = curveLengths[ i ] - d;\n\t\t\t\tconst curve = this.curves[ i ];\n\n\t\t\t\tconst segmentLength = curve.getLength();\n\t\t\t\tconst u = segmentLength === 0 ? 0 : 1 - diff / segmentLength;\n\n\t\t\t\treturn curve.getPointAt( u, optionalTarget );\n\n\t\t\t}\n\n\t\t\ti ++;\n\n\t\t}\n\n\t\treturn null;\n\n\t\t// loop where sum != 0, sum > d , sum+1 <d\n\n\t}\n\n\t// We cannot use the default THREE.Curve getPoint() with getLength() because in\n\t// THREE.Curve, getLength() depends on getPoint() but in THREE.CurvePath\n\t// getPoint() depends on getLength\n\n\tgetLength() {\n\n\t\tconst lens = this.getCurveLengths();\n\t\treturn lens[ lens.length - 1 ];\n\n\t}\n\n\t// cacheLengths must be recalculated.\n\tupdateArcLengths() {\n\n\t\tthis.needsUpdate = true;\n\t\tthis.cacheLengths = null;\n\t\tthis.getCurveLengths();\n\n\t}\n\n\t// Compute lengths and cache them\n\t// We cannot overwrite getLengths() because UtoT mapping uses it.\n\n\tgetCurveLengths() {\n\n\t\t// We use cache values if curves and cache array are same length\n\n\t\tif ( this.cacheLengths && this.cacheLengths.length === this.curves.length ) {\n\n\t\t\treturn this.cacheLengths;\n\n\t\t}\n\n\t\t// Get length of sub-curve\n\t\t// Push sums into cached array\n\n\t\tconst lengths = [];\n\t\tlet sums = 0;\n\n\t\tfor ( let i = 0, l = this.curves.length; i < l; i ++ ) {\n\n\t\t\tsums += this.curves[ i ].getLength();\n\t\t\tlengths.push( sums );\n\n\t\t}\n\n\t\tthis.cacheLengths = lengths;\n\n\t\treturn lengths;\n\n\t}\n\n\tgetSpacedPoints( divisions = 40 ) {\n\n\t\tconst points = [];\n\n\t\tfor ( let i = 0; i <= divisions; i ++ ) {\n\n\t\t\tpoints.push( this.getPoint( i / divisions ) );\n\n\t\t}\n\n\t\tif ( this.autoClose ) {\n\n\t\t\tpoints.push( points[ 0 ] );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\tgetPoints( divisions = 12 ) {\n\n\t\tconst points = [];\n\t\tlet last;\n\n\t\tfor ( let i = 0, curves = this.curves; i < curves.length; i ++ ) {\n\n\t\t\tconst curve = curves[ i ];\n\t\t\tconst resolution = curve.isEllipseCurve ? divisions * 2\n\t\t\t\t: ( curve.isLineCurve || curve.isLineCurve3 ) ? 1\n\t\t\t\t\t: curve.isSplineCurve ? divisions * curve.points.length\n\t\t\t\t\t\t: divisions;\n\n\t\t\tconst pts = curve.getPoints( resolution );\n\n\t\t\tfor ( let j = 0; j < pts.length; j ++ ) {\n\n\t\t\t\tconst point = pts[ j ];\n\n\t\t\t\tif ( last && last.equals( point ) ) continue; // ensures no consecutive points are duplicates\n\n\t\t\t\tpoints.push( point );\n\t\t\t\tlast = point;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.autoClose && points.length > 1 && ! points[ points.length - 1 ].equals( points[ 0 ] ) ) {\n\n\t\t\tpoints.push( points[ 0 ] );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.curves = [];\n\n\t\tfor ( let i = 0, l = source.curves.length; i < l; i ++ ) {\n\n\t\t\tconst curve = source.curves[ i ];\n\n\t\t\tthis.curves.push( curve.clone() );\n\n\t\t}\n\n\t\tthis.autoClose = source.autoClose;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.autoClose = this.autoClose;\n\t\tdata.curves = [];\n\n\t\tfor ( let i = 0, l = this.curves.length; i < l; i ++ ) {\n\n\t\t\tconst curve = this.curves[ i ];\n\t\t\tdata.curves.push( curve.toJSON() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.autoClose = json.autoClose;\n\t\tthis.curves = [];\n\n\t\tfor ( let i = 0, l = json.curves.length; i < l; i ++ ) {\n\n\t\t\tconst curve = json.curves[ i ];\n\t\t\tthis.curves.push( new Curves[ curve.type ]().fromJSON( curve ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass Path extends CurvePath {\n\n\tconstructor( points ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'Path';\n\n\t\tthis.currentPoint = new Vector2();\n\n\t\tif ( points ) {\n\n\t\t\tthis.setFromPoints( points );\n\n\t\t}\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tthis.moveTo( points[ 0 ].x, points[ 0 ].y );\n\n\t\tfor ( let i = 1, l = points.length; i < l; i ++ ) {\n\n\t\t\tthis.lineTo( points[ i ].x, points[ i ].y );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tmoveTo( x, y ) {\n\n\t\tthis.currentPoint.set( x, y ); // TODO consider referencing vectors instead of copying?\n\n\t\treturn this;\n\n\t}\n\n\tlineTo( x, y ) {\n\n\t\tconst curve = new LineCurve( this.currentPoint.clone(), new Vector2( x, y ) );\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( x, y );\n\n\t\treturn this;\n\n\t}\n\n\tquadraticCurveTo( aCPx, aCPy, aX, aY ) {\n\n\t\tconst curve = new QuadraticBezierCurve(\n\t\t\tthis.currentPoint.clone(),\n\t\t\tnew Vector2( aCPx, aCPy ),\n\t\t\tnew Vector2( aX, aY )\n\t\t);\n\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tbezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\n\n\t\tconst curve = new CubicBezierCurve(\n\t\t\tthis.currentPoint.clone(),\n\t\t\tnew Vector2( aCP1x, aCP1y ),\n\t\t\tnew Vector2( aCP2x, aCP2y ),\n\t\t\tnew Vector2( aX, aY )\n\t\t);\n\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tsplineThru( pts /*Array of Vector*/ ) {\n\n\t\tconst npts = [ this.currentPoint.clone() ].concat( pts );\n\n\t\tconst curve = new SplineCurve( npts );\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.copy( pts[ pts.length - 1 ] );\n\n\t\treturn this;\n\n\t}\n\n\tarc( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tconst x0 = this.currentPoint.x;\n\t\tconst y0 = this.currentPoint.y;\n\n\t\tthis.absarc( aX + x0, aY + y0, aRadius,\n\t\t\taStartAngle, aEndAngle, aClockwise );\n\n\t\treturn this;\n\n\t}\n\n\tabsarc( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tthis.absellipse( aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\n\n\t\treturn this;\n\n\t}\n\n\tellipse( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\t\tconst x0 = this.currentPoint.x;\n\t\tconst y0 = this.currentPoint.y;\n\n\t\tthis.absellipse( aX + x0, aY + y0, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\n\n\t\treturn this;\n\n\t}\n\n\tabsellipse( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\t\tconst curve = new EllipseCurve( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\n\n\t\tif ( this.curves.length > 0 ) {\n\n\t\t\t// if a previous curve is present, attempt to join\n\t\t\tconst firstPoint = curve.getPoint( 0 );\n\n\t\t\tif ( ! firstPoint.equals( this.currentPoint ) ) {\n\n\t\t\t\tthis.lineTo( firstPoint.x, firstPoint.y );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.curves.push( curve );\n\n\t\tconst lastPoint = curve.getPoint( 1 );\n\t\tthis.currentPoint.copy( lastPoint );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.currentPoint.copy( source.currentPoint );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.currentPoint = this.currentPoint.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.currentPoint.fromArray( json.currentPoint );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LatheGeometry extends BufferGeometry {\n\n\tconstructor( points = [ new Vector2( 0, - 0.5 ), new Vector2( 0.5, 0 ), new Vector2( 0, 0.5 ) ], segments = 12, phiStart = 0, phiLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'LatheGeometry';\n\n\t\tthis.parameters = {\n\t\t\tpoints: points,\n\t\t\tsegments: segments,\n\t\t\tphiStart: phiStart,\n\t\t\tphiLength: phiLength\n\t\t};\n\n\t\tsegments = Math.floor( segments );\n\n\t\t// clamp phiLength so it's in range of [ 0, 2PI ]\n\n\t\tphiLength = clamp( phiLength, 0, Math.PI * 2 );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst uvs = [];\n\t\tconst initNormals = [];\n\t\tconst normals = [];\n\n\t\t// helper variables\n\n\t\tconst inverseSegments = 1.0 / segments;\n\t\tconst vertex = new Vector3();\n\t\tconst uv = new Vector2();\n\t\tconst normal = new Vector3();\n\t\tconst curNormal = new Vector3();\n\t\tconst prevNormal = new Vector3();\n\t\tlet dx = 0;\n\t\tlet dy = 0;\n\n\t\t// pre-compute normals for initial \"meridian\"\n\n\t\tfor ( let j = 0; j <= ( points.length - 1 ); j ++ ) {\n\n\t\t\tswitch ( j ) {\n\n\t\t\t\tcase 0:\t\t\t\t// special handling for 1st vertex on path\n\n\t\t\t\t\tdx = points[ j + 1 ].x - points[ j ].x;\n\t\t\t\t\tdy = points[ j + 1 ].y - points[ j ].y;\n\n\t\t\t\t\tnormal.x = dy * 1.0;\n\t\t\t\t\tnormal.y = - dx;\n\t\t\t\t\tnormal.z = dy * 0.0;\n\n\t\t\t\t\tprevNormal.copy( normal );\n\n\t\t\t\t\tnormal.normalize();\n\n\t\t\t\t\tinitNormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ( points.length - 1 ):\t// special handling for last Vertex on path\n\n\t\t\t\t\tinitNormals.push( prevNormal.x, prevNormal.y, prevNormal.z );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\t\t\t// default handling for all vertices in between\n\n\t\t\t\t\tdx = points[ j + 1 ].x - points[ j ].x;\n\t\t\t\t\tdy = points[ j + 1 ].y - points[ j ].y;\n\n\t\t\t\t\tnormal.x = dy * 1.0;\n\t\t\t\t\tnormal.y = - dx;\n\t\t\t\t\tnormal.z = dy * 0.0;\n\n\t\t\t\t\tcurNormal.copy( normal );\n\n\t\t\t\t\tnormal.x += prevNormal.x;\n\t\t\t\t\tnormal.y += prevNormal.y;\n\t\t\t\t\tnormal.z += prevNormal.z;\n\n\t\t\t\t\tnormal.normalize();\n\n\t\t\t\t\tinitNormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t\tprevNormal.copy( curNormal );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate vertices, uvs and normals\n\n\t\tfor ( let i = 0; i <= segments; i ++ ) {\n\n\t\t\tconst phi = phiStart + i * inverseSegments * phiLength;\n\n\t\t\tconst sin = Math.sin( phi );\n\t\t\tconst cos = Math.cos( phi );\n\n\t\t\tfor ( let j = 0; j <= ( points.length - 1 ); j ++ ) {\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = points[ j ].x * sin;\n\t\t\t\tvertex.y = points[ j ].y;\n\t\t\t\tvertex.z = points[ j ].x * cos;\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuv.x = i / segments;\n\t\t\t\tuv.y = j / ( points.length - 1 );\n\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t\t// normal\n\n\t\t\t\tconst x = initNormals[ 3 * j + 0 ] * sin;\n\t\t\t\tconst y = initNormals[ 3 * j + 1 ];\n\t\t\t\tconst z = initNormals[ 3 * j + 0 ] * cos;\n\n\t\t\t\tnormals.push( x, y, z );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let i = 0; i < segments; i ++ ) {\n\n\t\t\tfor ( let j = 0; j < ( points.length - 1 ); j ++ ) {\n\n\t\t\t\tconst base = j + i * points.length;\n\n\t\t\t\tconst a = base;\n\t\t\t\tconst b = base + points.length;\n\t\t\t\tconst c = base + points.length + 1;\n\t\t\t\tconst d = base + 1;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( c, d, b );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new LatheGeometry( data.points, data.segments, data.phiStart, data.phiLength );\n\n\t}\n\n}\n\nclass CapsuleGeometry extends LatheGeometry {\n\n\tconstructor( radius = 1, length = 1, capSegments = 4, radialSegments = 8 ) {\n\n\t\tconst path = new Path();\n\t\tpath.absarc( 0, - length / 2, radius, Math.PI * 1.5, 0 );\n\t\tpath.absarc( 0, length / 2, radius, 0, Math.PI * 0.5 );\n\n\t\tsuper( path.getPoints( capSegments ), radialSegments );\n\n\t\tthis.type = 'CapsuleGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tlength: length,\n\t\t\tcapSegments: capSegments,\n\t\t\tradialSegments: radialSegments,\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new CapsuleGeometry( data.radius, data.length, data.capSegments, data.radialSegments );\n\n\t}\n\n}\n\nclass CircleGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, segments = 32, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'CircleGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tsegments: segments,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tsegments = Math.max( 3, segments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tconst vertex = new Vector3();\n\t\tconst uv = new Vector2();\n\n\t\t// center point\n\n\t\tvertices.push( 0, 0, 0 );\n\t\tnormals.push( 0, 0, 1 );\n\t\tuvs.push( 0.5, 0.5 );\n\n\t\tfor ( let s = 0, i = 3; s <= segments; s ++, i += 3 ) {\n\n\t\t\tconst segment = thetaStart + s / segments * thetaLength;\n\n\t\t\t// vertex\n\n\t\t\tvertex.x = radius * Math.cos( segment );\n\t\t\tvertex.y = radius * Math.sin( segment );\n\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t// normal\n\n\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t// uvs\n\n\t\t\tuv.x = ( vertices[ i ] / radius + 1 ) / 2;\n\t\t\tuv.y = ( vertices[ i + 1 ] / radius + 1 ) / 2;\n\n\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let i = 1; i <= segments; i ++ ) {\n\n\t\t\tindices.push( i, i + 1, 0 );\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new CircleGeometry( data.radius, data.segments, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass CylinderGeometry extends BufferGeometry {\n\n\tconstructor( radiusTop = 1, radiusBottom = 1, height = 1, radialSegments = 32, heightSegments = 1, openEnded = false, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'CylinderGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradiusTop: radiusTop,\n\t\t\tradiusBottom: radiusBottom,\n\t\t\theight: height,\n\t\t\tradialSegments: radialSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\topenEnded: openEnded,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tconst scope = this;\n\n\t\tradialSegments = Math.floor( radialSegments );\n\t\theightSegments = Math.floor( heightSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tlet index = 0;\n\t\tconst indexArray = [];\n\t\tconst halfHeight = height / 2;\n\t\tlet groupStart = 0;\n\n\t\t// generate geometry\n\n\t\tgenerateTorso();\n\n\t\tif ( openEnded === false ) {\n\n\t\t\tif ( radiusTop > 0 ) generateCap( true );\n\t\t\tif ( radiusBottom > 0 ) generateCap( false );\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\tfunction generateTorso() {\n\n\t\t\tconst normal = new Vector3();\n\t\t\tconst vertex = new Vector3();\n\n\t\t\tlet groupCount = 0;\n\n\t\t\t// this will be used to calculate the normal\n\t\t\tconst slope = ( radiusBottom - radiusTop ) / height;\n\n\t\t\t// generate vertices, normals and uvs\n\n\t\t\tfor ( let y = 0; y <= heightSegments; y ++ ) {\n\n\t\t\t\tconst indexRow = [];\n\n\t\t\t\tconst v = y / heightSegments;\n\n\t\t\t\t// calculate the radius of the current row\n\n\t\t\t\tconst radius = v * ( radiusBottom - radiusTop ) + radiusTop;\n\n\t\t\t\tfor ( let x = 0; x <= radialSegments; x ++ ) {\n\n\t\t\t\t\tconst u = x / radialSegments;\n\n\t\t\t\t\tconst theta = u * thetaLength + thetaStart;\n\n\t\t\t\t\tconst sinTheta = Math.sin( theta );\n\t\t\t\t\tconst cosTheta = Math.cos( theta );\n\n\t\t\t\t\t// vertex\n\n\t\t\t\t\tvertex.x = radius * sinTheta;\n\t\t\t\t\tvertex.y = - v * height + halfHeight;\n\t\t\t\t\tvertex.z = radius * cosTheta;\n\t\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t\t// normal\n\n\t\t\t\t\tnormal.set( sinTheta, slope, cosTheta ).normalize();\n\t\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t\t// uv\n\n\t\t\t\t\tuvs.push( u, 1 - v );\n\n\t\t\t\t\t// save index of vertex in respective row\n\n\t\t\t\t\tindexRow.push( index ++ );\n\n\t\t\t\t}\n\n\t\t\t\t// now save vertices of the row in our index array\n\n\t\t\t\tindexArray.push( indexRow );\n\n\t\t\t}\n\n\t\t\t// generate indices\n\n\t\t\tfor ( let x = 0; x < radialSegments; x ++ ) {\n\n\t\t\t\tfor ( let y = 0; y < heightSegments; y ++ ) {\n\n\t\t\t\t\t// we use the index array to access the correct indices\n\n\t\t\t\t\tconst a = indexArray[ y ][ x ];\n\t\t\t\t\tconst b = indexArray[ y + 1 ][ x ];\n\t\t\t\t\tconst c = indexArray[ y + 1 ][ x + 1 ];\n\t\t\t\t\tconst d = indexArray[ y ][ x + 1 ];\n\n\t\t\t\t\t// faces\n\n\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t\t// update group counter\n\n\t\t\t\t\tgroupCount += 6;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\t\tscope.addGroup( groupStart, groupCount, 0 );\n\n\t\t\t// calculate new start value for groups\n\n\t\t\tgroupStart += groupCount;\n\n\t\t}\n\n\t\tfunction generateCap( top ) {\n\n\t\t\t// save the index of the first center vertex\n\t\t\tconst centerIndexStart = index;\n\n\t\t\tconst uv = new Vector2();\n\t\t\tconst vertex = new Vector3();\n\n\t\t\tlet groupCount = 0;\n\n\t\t\tconst radius = ( top === true ) ? radiusTop : radiusBottom;\n\t\t\tconst sign = ( top === true ) ? 1 : - 1;\n\n\t\t\t// first we generate the center vertex data of the cap.\n\t\t\t// because the geometry needs one set of uvs per face,\n\t\t\t// we must generate a center vertex per face/segment\n\n\t\t\tfor ( let x = 1; x <= radialSegments; x ++ ) {\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertices.push( 0, halfHeight * sign, 0 );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormals.push( 0, sign, 0 );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( 0.5, 0.5 );\n\n\t\t\t\t// increase index\n\n\t\t\t\tindex ++;\n\n\t\t\t}\n\n\t\t\t// save the index of the last center vertex\n\t\t\tconst centerIndexEnd = index;\n\n\t\t\t// now we generate the surrounding vertices, normals and uvs\n\n\t\t\tfor ( let x = 0; x <= radialSegments; x ++ ) {\n\n\t\t\t\tconst u = x / radialSegments;\n\t\t\t\tconst theta = u * thetaLength + thetaStart;\n\n\t\t\t\tconst cosTheta = Math.cos( theta );\n\t\t\t\tconst sinTheta = Math.sin( theta );\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = radius * sinTheta;\n\t\t\t\tvertex.y = halfHeight * sign;\n\t\t\t\tvertex.z = radius * cosTheta;\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormals.push( 0, sign, 0 );\n\n\t\t\t\t// uv\n\n\t\t\t\tuv.x = ( cosTheta * 0.5 ) + 0.5;\n\t\t\t\tuv.y = ( sinTheta * 0.5 * sign ) + 0.5;\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t\t// increase index\n\n\t\t\t\tindex ++;\n\n\t\t\t}\n\n\t\t\t// generate indices\n\n\t\t\tfor ( let x = 0; x < radialSegments; x ++ ) {\n\n\t\t\t\tconst c = centerIndexStart + x;\n\t\t\t\tconst i = centerIndexEnd + x;\n\n\t\t\t\tif ( top === true ) {\n\n\t\t\t\t\t// face top\n\n\t\t\t\t\tindices.push( i, i + 1, c );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// face bottom\n\n\t\t\t\t\tindices.push( i + 1, i, c );\n\n\t\t\t\t}\n\n\t\t\t\tgroupCount += 3;\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\t\tscope.addGroup( groupStart, groupCount, top === true ? 1 : 2 );\n\n\t\t\t// calculate new start value for groups\n\n\t\t\tgroupStart += groupCount;\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new CylinderGeometry( data.radiusTop, data.radiusBottom, data.height, data.radialSegments, data.heightSegments, data.openEnded, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass ConeGeometry extends CylinderGeometry {\n\n\tconstructor( radius = 1, height = 1, radialSegments = 32, heightSegments = 1, openEnded = false, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper( 0, radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength );\n\n\t\tthis.type = 'ConeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\theight: height,\n\t\t\tradialSegments: radialSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\topenEnded: openEnded,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new ConeGeometry( data.radius, data.height, data.radialSegments, data.heightSegments, data.openEnded, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass PolyhedronGeometry extends BufferGeometry {\n\n\tconstructor( vertices = [], indices = [], radius = 1, detail = 0 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'PolyhedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tvertices: vertices,\n\t\t\tindices: indices,\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t\t// default buffer data\n\n\t\tconst vertexBuffer = [];\n\t\tconst uvBuffer = [];\n\n\t\t// the subdivision creates the vertex buffer data\n\n\t\tsubdivide( detail );\n\n\t\t// all vertices should lie on a conceptual sphere with a given radius\n\n\t\tapplyRadius( radius );\n\n\t\t// finally, create the uv data\n\n\t\tgenerateUVs();\n\n\t\t// build non-indexed geometry\n\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertexBuffer, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( vertexBuffer.slice(), 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvBuffer, 2 ) );\n\n\t\tif ( detail === 0 ) {\n\n\t\t\tthis.computeVertexNormals(); // flat normals\n\n\t\t} else {\n\n\t\t\tthis.normalizeNormals(); // smooth normals\n\n\t\t}\n\n\t\t// helper functions\n\n\t\tfunction subdivide( detail ) {\n\n\t\t\tconst a = new Vector3();\n\t\t\tconst b = new Vector3();\n\t\t\tconst c = new Vector3();\n\n\t\t\t// iterate over all faces and apply a subdivision with the given detail value\n\n\t\t\tfor ( let i = 0; i < indices.length; i += 3 ) {\n\n\t\t\t\t// get the vertices of the face\n\n\t\t\t\tgetVertexByIndex( indices[ i + 0 ], a );\n\t\t\t\tgetVertexByIndex( indices[ i + 1 ], b );\n\t\t\t\tgetVertexByIndex( indices[ i + 2 ], c );\n\n\t\t\t\t// perform subdivision\n\n\t\t\t\tsubdivideFace( a, b, c, detail );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction subdivideFace( a, b, c, detail ) {\n\n\t\t\tconst cols = detail + 1;\n\n\t\t\t// we use this multidimensional array as a data structure for creating the subdivision\n\n\t\t\tconst v = [];\n\n\t\t\t// construct all of the vertices for this subdivision\n\n\t\t\tfor ( let i = 0; i <= cols; i ++ ) {\n\n\t\t\t\tv[ i ] = [];\n\n\t\t\t\tconst aj = a.clone().lerp( c, i / cols );\n\t\t\t\tconst bj = b.clone().lerp( c, i / cols );\n\n\t\t\t\tconst rows = cols - i;\n\n\t\t\t\tfor ( let j = 0; j <= rows; j ++ ) {\n\n\t\t\t\t\tif ( j === 0 && i === cols ) {\n\n\t\t\t\t\t\tv[ i ][ j ] = aj;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tv[ i ][ j ] = aj.clone().lerp( bj, j / rows );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// construct all of the faces\n\n\t\t\tfor ( let i = 0; i < cols; i ++ ) {\n\n\t\t\t\tfor ( let j = 0; j < 2 * ( cols - i ) - 1; j ++ ) {\n\n\t\t\t\t\tconst k = Math.floor( j / 2 );\n\n\t\t\t\t\tif ( j % 2 === 0 ) {\n\n\t\t\t\t\t\tpushVertex( v[ i ][ k + 1 ] );\n\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k ] );\n\t\t\t\t\t\tpushVertex( v[ i ][ k ] );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpushVertex( v[ i ][ k + 1 ] );\n\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k + 1 ] );\n\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction applyRadius( radius ) {\n\n\t\t\tconst vertex = new Vector3();\n\n\t\t\t// iterate over the entire buffer and apply the radius to each vertex\n\n\t\t\tfor ( let i = 0; i < vertexBuffer.length; i += 3 ) {\n\n\t\t\t\tvertex.x = vertexBuffer[ i + 0 ];\n\t\t\t\tvertex.y = vertexBuffer[ i + 1 ];\n\t\t\t\tvertex.z = vertexBuffer[ i + 2 ];\n\n\t\t\t\tvertex.normalize().multiplyScalar( radius );\n\n\t\t\t\tvertexBuffer[ i + 0 ] = vertex.x;\n\t\t\t\tvertexBuffer[ i + 1 ] = vertex.y;\n\t\t\t\tvertexBuffer[ i + 2 ] = vertex.z;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction generateUVs() {\n\n\t\t\tconst vertex = new Vector3();\n\n\t\t\tfor ( let i = 0; i < vertexBuffer.length; i += 3 ) {\n\n\t\t\t\tvertex.x = vertexBuffer[ i + 0 ];\n\t\t\t\tvertex.y = vertexBuffer[ i + 1 ];\n\t\t\t\tvertex.z = vertexBuffer[ i + 2 ];\n\n\t\t\t\tconst u = azimuth( vertex ) / 2 / Math.PI + 0.5;\n\t\t\t\tconst v = inclination( vertex ) / Math.PI + 0.5;\n\t\t\t\tuvBuffer.push( u, 1 - v );\n\n\t\t\t}\n\n\t\t\tcorrectUVs();\n\n\t\t\tcorrectSeam();\n\n\t\t}\n\n\t\tfunction correctSeam() {\n\n\t\t\t// handle case when face straddles the seam, see #3269\n\n\t\t\tfor ( let i = 0; i < uvBuffer.length; i += 6 ) {\n\n\t\t\t\t// uv data of a single face\n\n\t\t\t\tconst x0 = uvBuffer[ i + 0 ];\n\t\t\t\tconst x1 = uvBuffer[ i + 2 ];\n\t\t\t\tconst x2 = uvBuffer[ i + 4 ];\n\n\t\t\t\tconst max = Math.max( x0, x1, x2 );\n\t\t\t\tconst min = Math.min( x0, x1, x2 );\n\n\t\t\t\t// 0.9 is somewhat arbitrary\n\n\t\t\t\tif ( max > 0.9 && min < 0.1 ) {\n\n\t\t\t\t\tif ( x0 < 0.2 ) uvBuffer[ i + 0 ] += 1;\n\t\t\t\t\tif ( x1 < 0.2 ) uvBuffer[ i + 2 ] += 1;\n\t\t\t\t\tif ( x2 < 0.2 ) uvBuffer[ i + 4 ] += 1;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction pushVertex( vertex ) {\n\n\t\t\tvertexBuffer.push( vertex.x, vertex.y, vertex.z );\n\n\t\t}\n\n\t\tfunction getVertexByIndex( index, vertex ) {\n\n\t\t\tconst stride = index * 3;\n\n\t\t\tvertex.x = vertices[ stride + 0 ];\n\t\t\tvertex.y = vertices[ stride + 1 ];\n\t\t\tvertex.z = vertices[ stride + 2 ];\n\n\t\t}\n\n\t\tfunction correctUVs() {\n\n\t\t\tconst a = new Vector3();\n\t\t\tconst b = new Vector3();\n\t\t\tconst c = new Vector3();\n\n\t\t\tconst centroid = new Vector3();\n\n\t\t\tconst uvA = new Vector2();\n\t\t\tconst uvB = new Vector2();\n\t\t\tconst uvC = new Vector2();\n\n\t\t\tfor ( let i = 0, j = 0; i < vertexBuffer.length; i += 9, j += 6 ) {\n\n\t\t\t\ta.set( vertexBuffer[ i + 0 ], vertexBuffer[ i + 1 ], vertexBuffer[ i + 2 ] );\n\t\t\t\tb.set( vertexBuffer[ i + 3 ], vertexBuffer[ i + 4 ], vertexBuffer[ i + 5 ] );\n\t\t\t\tc.set( vertexBuffer[ i + 6 ], vertexBuffer[ i + 7 ], vertexBuffer[ i + 8 ] );\n\n\t\t\t\tuvA.set( uvBuffer[ j + 0 ], uvBuffer[ j + 1 ] );\n\t\t\t\tuvB.set( uvBuffer[ j + 2 ], uvBuffer[ j + 3 ] );\n\t\t\t\tuvC.set( uvBuffer[ j + 4 ], uvBuffer[ j + 5 ] );\n\n\t\t\t\tcentroid.copy( a ).add( b ).add( c ).divideScalar( 3 );\n\n\t\t\t\tconst azi = azimuth( centroid );\n\n\t\t\t\tcorrectUV( uvA, j + 0, a, azi );\n\t\t\t\tcorrectUV( uvB, j + 2, b, azi );\n\t\t\t\tcorrectUV( uvC, j + 4, c, azi );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction correctUV( uv, stride, vector, azimuth ) {\n\n\t\t\tif ( ( azimuth < 0 ) && ( uv.x === 1 ) ) {\n\n\t\t\t\tuvBuffer[ stride ] = uv.x - 1;\n\n\t\t\t}\n\n\t\t\tif ( ( vector.x === 0 ) && ( vector.z === 0 ) ) {\n\n\t\t\t\tuvBuffer[ stride ] = azimuth / 2 / Math.PI + 0.5;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Angle around the Y axis, counter-clockwise when looking from above.\n\n\t\tfunction azimuth( vector ) {\n\n\t\t\treturn Math.atan2( vector.z, - vector.x );\n\n\t\t}\n\n\n\t\t// Angle above the XZ plane.\n\n\t\tfunction inclination( vector ) {\n\n\t\t\treturn Math.atan2( - vector.y, Math.sqrt( ( vector.x * vector.x ) + ( vector.z * vector.z ) ) );\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new PolyhedronGeometry( data.vertices, data.indices, data.radius, data.details );\n\n\t}\n\n}\n\nclass DodecahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst t = ( 1 + Math.sqrt( 5 ) ) / 2;\n\t\tconst r = 1 / t;\n\n\t\tconst vertices = [\n\n\t\t\t// (±1, ±1, ±1)\n\t\t\t- 1, - 1, - 1,\t- 1, - 1, 1,\n\t\t\t- 1, 1, - 1, - 1, 1, 1,\n\t\t\t1, - 1, - 1, 1, - 1, 1,\n\t\t\t1, 1, - 1, 1, 1, 1,\n\n\t\t\t// (0, ±1/φ, ±φ)\n\t\t\t0, - r, - t, 0, - r, t,\n\t\t\t0, r, - t, 0, r, t,\n\n\t\t\t// (±1/φ, ±φ, 0)\n\t\t\t- r, - t, 0, - r, t, 0,\n\t\t\tr, - t, 0, r, t, 0,\n\n\t\t\t// (±φ, 0, ±1/φ)\n\t\t\t- t, 0, - r, t, 0, - r,\n\t\t\t- t, 0, r, t, 0, r\n\t\t];\n\n\t\tconst indices = [\n\t\t\t3, 11, 7, \t3, 7, 15, \t3, 15, 13,\n\t\t\t7, 19, 17, \t7, 17, 6, \t7, 6, 15,\n\t\t\t17, 4, 8, \t17, 8, 10, \t17, 10, 6,\n\t\t\t8, 0, 16, \t8, 16, 2, \t8, 2, 10,\n\t\t\t0, 12, 1, \t0, 1, 18, \t0, 18, 16,\n\t\t\t6, 10, 2, \t6, 2, 13, \t6, 13, 15,\n\t\t\t2, 16, 18, \t2, 18, 3, \t2, 3, 13,\n\t\t\t18, 1, 9, \t18, 9, 11, \t18, 11, 3,\n\t\t\t4, 14, 12, \t4, 12, 0, \t4, 0, 8,\n\t\t\t11, 9, 5, \t11, 5, 19, \t11, 19, 7,\n\t\t\t19, 5, 14, \t19, 14, 4, \t19, 4, 17,\n\t\t\t1, 12, 14, \t1, 14, 5, \t1, 5, 9\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'DodecahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new DodecahedronGeometry( data.radius, data.detail );\n\n\t}\n\n}\n\nconst _v0 = /*@__PURE__*/ new Vector3();\nconst _v1$1 = /*@__PURE__*/ new Vector3();\nconst _normal = /*@__PURE__*/ new Vector3();\nconst _triangle = /*@__PURE__*/ new Triangle();\n\nclass EdgesGeometry extends BufferGeometry {\n\n\tconstructor( geometry = null, thresholdAngle = 1 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'EdgesGeometry';\n\n\t\tthis.parameters = {\n\t\t\tgeometry: geometry,\n\t\t\tthresholdAngle: thresholdAngle\n\t\t};\n\n\t\tif ( geometry !== null ) {\n\n\t\t\tconst precisionPoints = 4;\n\t\t\tconst precision = Math.pow( 10, precisionPoints );\n\t\t\tconst thresholdDot = Math.cos( DEG2RAD * thresholdAngle );\n\n\t\t\tconst indexAttr = geometry.getIndex();\n\t\t\tconst positionAttr = geometry.getAttribute( 'position' );\n\t\t\tconst indexCount = indexAttr ? indexAttr.count : positionAttr.count;\n\n\t\t\tconst indexArr = [ 0, 0, 0 ];\n\t\t\tconst vertKeys = [ 'a', 'b', 'c' ];\n\t\t\tconst hashes = new Array( 3 );\n\n\t\t\tconst edgeData = {};\n\t\t\tconst vertices = [];\n\t\t\tfor ( let i = 0; i < indexCount; i += 3 ) {\n\n\t\t\t\tif ( indexAttr ) {\n\n\t\t\t\t\tindexArr[ 0 ] = indexAttr.getX( i );\n\t\t\t\t\tindexArr[ 1 ] = indexAttr.getX( i + 1 );\n\t\t\t\t\tindexArr[ 2 ] = indexAttr.getX( i + 2 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tindexArr[ 0 ] = i;\n\t\t\t\t\tindexArr[ 1 ] = i + 1;\n\t\t\t\t\tindexArr[ 2 ] = i + 2;\n\n\t\t\t\t}\n\n\t\t\t\tconst { a, b, c } = _triangle;\n\t\t\t\ta.fromBufferAttribute( positionAttr, indexArr[ 0 ] );\n\t\t\t\tb.fromBufferAttribute( positionAttr, indexArr[ 1 ] );\n\t\t\t\tc.fromBufferAttribute( positionAttr, indexArr[ 2 ] );\n\t\t\t\t_triangle.getNormal( _normal );\n\n\t\t\t\t// create hashes for the edge from the vertices\n\t\t\t\thashes[ 0 ] = `${ Math.round( a.x * precision ) },${ Math.round( a.y * precision ) },${ Math.round( a.z * precision ) }`;\n\t\t\t\thashes[ 1 ] = `${ Math.round( b.x * precision ) },${ Math.round( b.y * precision ) },${ Math.round( b.z * precision ) }`;\n\t\t\t\thashes[ 2 ] = `${ Math.round( c.x * precision ) },${ Math.round( c.y * precision ) },${ Math.round( c.z * precision ) }`;\n\n\t\t\t\t// skip degenerate triangles\n\t\t\t\tif ( hashes[ 0 ] === hashes[ 1 ] || hashes[ 1 ] === hashes[ 2 ] || hashes[ 2 ] === hashes[ 0 ] ) {\n\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\t// iterate over every edge\n\t\t\t\tfor ( let j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t// get the first and next vertex making up the edge\n\t\t\t\t\tconst jNext = ( j + 1 ) % 3;\n\t\t\t\t\tconst vecHash0 = hashes[ j ];\n\t\t\t\t\tconst vecHash1 = hashes[ jNext ];\n\t\t\t\t\tconst v0 = _triangle[ vertKeys[ j ] ];\n\t\t\t\t\tconst v1 = _triangle[ vertKeys[ jNext ] ];\n\n\t\t\t\t\tconst hash = `${ vecHash0 }_${ vecHash1 }`;\n\t\t\t\t\tconst reverseHash = `${ vecHash1 }_${ vecHash0 }`;\n\n\t\t\t\t\tif ( reverseHash in edgeData && edgeData[ reverseHash ] ) {\n\n\t\t\t\t\t\t// if we found a sibling edge add it into the vertex array if\n\t\t\t\t\t\t// it meets the angle threshold and delete the edge from the map.\n\t\t\t\t\t\tif ( _normal.dot( edgeData[ reverseHash ].normal ) <= thresholdDot ) {\n\n\t\t\t\t\t\t\tvertices.push( v0.x, v0.y, v0.z );\n\t\t\t\t\t\t\tvertices.push( v1.x, v1.y, v1.z );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tedgeData[ reverseHash ] = null;\n\n\t\t\t\t\t} else if ( ! ( hash in edgeData ) ) {\n\n\t\t\t\t\t\t// if we've already got an edge here then skip adding a new one\n\t\t\t\t\t\tedgeData[ hash ] = {\n\n\t\t\t\t\t\t\tindex0: indexArr[ j ],\n\t\t\t\t\t\t\tindex1: indexArr[ jNext ],\n\t\t\t\t\t\t\tnormal: _normal.clone(),\n\n\t\t\t\t\t\t};\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// iterate over all remaining, unmatched edges and add them to the vertex array\n\t\t\tfor ( const key in edgeData ) {\n\n\t\t\t\tif ( edgeData[ key ] ) {\n\n\t\t\t\t\tconst { index0, index1 } = edgeData[ key ];\n\t\t\t\t\t_v0.fromBufferAttribute( positionAttr, index0 );\n\t\t\t\t\t_v1$1.fromBufferAttribute( positionAttr, index1 );\n\n\t\t\t\t\tvertices.push( _v0.x, _v0.y, _v0.z );\n\t\t\t\t\tvertices.push( _v1$1.x, _v1$1.y, _v1$1.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass Shape extends Path {\n\n\tconstructor( points ) {\n\n\t\tsuper( points );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.type = 'Shape';\n\n\t\tthis.holes = [];\n\n\t}\n\n\tgetPointsHoles( divisions ) {\n\n\t\tconst holesPts = [];\n\n\t\tfor ( let i = 0, l = this.holes.length; i < l; i ++ ) {\n\n\t\t\tholesPts[ i ] = this.holes[ i ].getPoints( divisions );\n\n\t\t}\n\n\t\treturn holesPts;\n\n\t}\n\n\t// get points of shape and holes (keypoints based on segments parameter)\n\n\textractPoints( divisions ) {\n\n\t\treturn {\n\n\t\t\tshape: this.getPoints( divisions ),\n\t\t\tholes: this.getPointsHoles( divisions )\n\n\t\t};\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.holes = [];\n\n\t\tfor ( let i = 0, l = source.holes.length; i < l; i ++ ) {\n\n\t\t\tconst hole = source.holes[ i ];\n\n\t\t\tthis.holes.push( hole.clone() );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.uuid = this.uuid;\n\t\tdata.holes = [];\n\n\t\tfor ( let i = 0, l = this.holes.length; i < l; i ++ ) {\n\n\t\t\tconst hole = this.holes[ i ];\n\t\t\tdata.holes.push( hole.toJSON() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.uuid = json.uuid;\n\t\tthis.holes = [];\n\n\t\tfor ( let i = 0, l = json.holes.length; i < l; i ++ ) {\n\n\t\t\tconst hole = json.holes[ i ];\n\t\t\tthis.holes.push( new Path().fromJSON( hole ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\n/**\n * Port from https://github.com/mapbox/earcut (v2.2.4)\n */\n\nconst Earcut = {\n\n\ttriangulate: function ( data, holeIndices, dim = 2 ) {\n\n\t\tconst hasHoles = holeIndices && holeIndices.length;\n\t\tconst outerLen = hasHoles ? holeIndices[ 0 ] * dim : data.length;\n\t\tlet outerNode = linkedList( data, 0, outerLen, dim, true );\n\t\tconst triangles = [];\n\n\t\tif ( ! outerNode || outerNode.next === outerNode.prev ) return triangles;\n\n\t\tlet minX, minY, maxX, maxY, x, y, invSize;\n\n\t\tif ( hasHoles ) outerNode = eliminateHoles( data, holeIndices, outerNode, dim );\n\n\t\t// if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox\n\t\tif ( data.length > 80 * dim ) {\n\n\t\t\tminX = maxX = data[ 0 ];\n\t\t\tminY = maxY = data[ 1 ];\n\n\t\t\tfor ( let i = dim; i < outerLen; i += dim ) {\n\n\t\t\t\tx = data[ i ];\n\t\t\t\ty = data[ i + 1 ];\n\t\t\t\tif ( x < minX ) minX = x;\n\t\t\t\tif ( y < minY ) minY = y;\n\t\t\t\tif ( x > maxX ) maxX = x;\n\t\t\t\tif ( y > maxY ) maxY = y;\n\n\t\t\t}\n\n\t\t\t// minX, minY and invSize are later used to transform coords into integers for z-order calculation\n\t\t\tinvSize = Math.max( maxX - minX, maxY - minY );\n\t\t\tinvSize = invSize !== 0 ? 32767 / invSize : 0;\n\n\t\t}\n\n\t\tearcutLinked( outerNode, triangles, dim, minX, minY, invSize, 0 );\n\n\t\treturn triangles;\n\n\t}\n\n};\n\n// create a circular doubly linked list from polygon points in the specified winding order\nfunction linkedList( data, start, end, dim, clockwise ) {\n\n\tlet i, last;\n\n\tif ( clockwise === ( signedArea( data, start, end, dim ) > 0 ) ) {\n\n\t\tfor ( i = start; i < end; i += dim ) last = insertNode( i, data[ i ], data[ i + 1 ], last );\n\n\t} else {\n\n\t\tfor ( i = end - dim; i >= start; i -= dim ) last = insertNode( i, data[ i ], data[ i + 1 ], last );\n\n\t}\n\n\tif ( last && equals( last, last.next ) ) {\n\n\t\tremoveNode( last );\n\t\tlast = last.next;\n\n\t}\n\n\treturn last;\n\n}\n\n// eliminate colinear or duplicate points\nfunction filterPoints( start, end ) {\n\n\tif ( ! start ) return start;\n\tif ( ! end ) end = start;\n\n\tlet p = start,\n\t\tagain;\n\tdo {\n\n\t\tagain = false;\n\n\t\tif ( ! p.steiner && ( equals( p, p.next ) || area( p.prev, p, p.next ) === 0 ) ) {\n\n\t\t\tremoveNode( p );\n\t\t\tp = end = p.prev;\n\t\t\tif ( p === p.next ) break;\n\t\t\tagain = true;\n\n\t\t} else {\n\n\t\t\tp = p.next;\n\n\t\t}\n\n\t} while ( again || p !== end );\n\n\treturn end;\n\n}\n\n// main ear slicing loop which triangulates a polygon (given as a linked list)\nfunction earcutLinked( ear, triangles, dim, minX, minY, invSize, pass ) {\n\n\tif ( ! ear ) return;\n\n\t// interlink polygon nodes in z-order\n\tif ( ! pass && invSize ) indexCurve( ear, minX, minY, invSize );\n\n\tlet stop = ear,\n\t\tprev, next;\n\n\t// iterate through ears, slicing them one by one\n\twhile ( ear.prev !== ear.next ) {\n\n\t\tprev = ear.prev;\n\t\tnext = ear.next;\n\n\t\tif ( invSize ? isEarHashed( ear, minX, minY, invSize ) : isEar( ear ) ) {\n\n\t\t\t// cut off the triangle\n\t\t\ttriangles.push( prev.i / dim | 0 );\n\t\t\ttriangles.push( ear.i / dim | 0 );\n\t\t\ttriangles.push( next.i / dim | 0 );\n\n\t\t\tremoveNode( ear );\n\n\t\t\t// skipping the next vertex leads to less sliver triangles\n\t\t\tear = next.next;\n\t\t\tstop = next.next;\n\n\t\t\tcontinue;\n\n\t\t}\n\n\t\tear = next;\n\n\t\t// if we looped through the whole remaining polygon and can't find any more ears\n\t\tif ( ear === stop ) {\n\n\t\t\t// try filtering points and slicing again\n\t\t\tif ( ! pass ) {\n\n\t\t\t\tearcutLinked( filterPoints( ear ), triangles, dim, minX, minY, invSize, 1 );\n\n\t\t\t\t// if this didn't work, try curing all small self-intersections locally\n\n\t\t\t} else if ( pass === 1 ) {\n\n\t\t\t\tear = cureLocalIntersections( filterPoints( ear ), triangles, dim );\n\t\t\t\tearcutLinked( ear, triangles, dim, minX, minY, invSize, 2 );\n\n\t\t\t\t// as a last resort, try splitting the remaining polygon into two\n\n\t\t\t} else if ( pass === 2 ) {\n\n\t\t\t\tsplitEarcut( ear, triangles, dim, minX, minY, invSize );\n\n\t\t\t}\n\n\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n}\n\n// check whether a polygon node forms a valid ear with adjacent nodes\nfunction isEar( ear ) {\n\n\tconst a = ear.prev,\n\t\tb = ear,\n\t\tc = ear.next;\n\n\tif ( area( a, b, c ) >= 0 ) return false; // reflex, can't be an ear\n\n\t// now make sure we don't have other points inside the potential ear\n\tconst ax = a.x, bx = b.x, cx = c.x, ay = a.y, by = b.y, cy = c.y;\n\n\t// triangle bbox; min & max are calculated like this for speed\n\tconst x0 = ax < bx ? ( ax < cx ? ax : cx ) : ( bx < cx ? bx : cx ),\n\t\ty0 = ay < by ? ( ay < cy ? ay : cy ) : ( by < cy ? by : cy ),\n\t\tx1 = ax > bx ? ( ax > cx ? ax : cx ) : ( bx > cx ? bx : cx ),\n\t\ty1 = ay > by ? ( ay > cy ? ay : cy ) : ( by > cy ? by : cy );\n\n\tlet p = c.next;\n\twhile ( p !== a ) {\n\n\t\tif ( p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 &&\n\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, p.x, p.y ) &&\n\t\t\tarea( p.prev, p, p.next ) >= 0 ) return false;\n\t\tp = p.next;\n\n\t}\n\n\treturn true;\n\n}\n\nfunction isEarHashed( ear, minX, minY, invSize ) {\n\n\tconst a = ear.prev,\n\t\tb = ear,\n\t\tc = ear.next;\n\n\tif ( area( a, b, c ) >= 0 ) return false; // reflex, can't be an ear\n\n\tconst ax = a.x, bx = b.x, cx = c.x, ay = a.y, by = b.y, cy = c.y;\n\n\t// triangle bbox; min & max are calculated like this for speed\n\tconst x0 = ax < bx ? ( ax < cx ? ax : cx ) : ( bx < cx ? bx : cx ),\n\t\ty0 = ay < by ? ( ay < cy ? ay : cy ) : ( by < cy ? by : cy ),\n\t\tx1 = ax > bx ? ( ax > cx ? ax : cx ) : ( bx > cx ? bx : cx ),\n\t\ty1 = ay > by ? ( ay > cy ? ay : cy ) : ( by > cy ? by : cy );\n\n\t// z-order range for the current triangle bbox;\n\tconst minZ = zOrder( x0, y0, minX, minY, invSize ),\n\t\tmaxZ = zOrder( x1, y1, minX, minY, invSize );\n\n\tlet p = ear.prevZ,\n\t\tn = ear.nextZ;\n\n\t// look for points inside the triangle in both directions\n\twhile ( p && p.z >= minZ && n && n.z <= maxZ ) {\n\n\t\tif ( p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 && p !== a && p !== c &&\n\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, p.x, p.y ) && area( p.prev, p, p.next ) >= 0 ) return false;\n\t\tp = p.prevZ;\n\n\t\tif ( n.x >= x0 && n.x <= x1 && n.y >= y0 && n.y <= y1 && n !== a && n !== c &&\n\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, n.x, n.y ) && area( n.prev, n, n.next ) >= 0 ) return false;\n\t\tn = n.nextZ;\n\n\t}\n\n\t// look for remaining points in decreasing z-order\n\twhile ( p && p.z >= minZ ) {\n\n\t\tif ( p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 && p !== a && p !== c &&\n\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, p.x, p.y ) && area( p.prev, p, p.next ) >= 0 ) return false;\n\t\tp = p.prevZ;\n\n\t}\n\n\t// look for remaining points in increasing z-order\n\twhile ( n && n.z <= maxZ ) {\n\n\t\tif ( n.x >= x0 && n.x <= x1 && n.y >= y0 && n.y <= y1 && n !== a && n !== c &&\n\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, n.x, n.y ) && area( n.prev, n, n.next ) >= 0 ) return false;\n\t\tn = n.nextZ;\n\n\t}\n\n\treturn true;\n\n}\n\n// go through all polygon nodes and cure small local self-intersections\nfunction cureLocalIntersections( start, triangles, dim ) {\n\n\tlet p = start;\n\tdo {\n\n\t\tconst a = p.prev,\n\t\t\tb = p.next.next;\n\n\t\tif ( ! equals( a, b ) && intersects( a, p, p.next, b ) && locallyInside( a, b ) && locallyInside( b, a ) ) {\n\n\t\t\ttriangles.push( a.i / dim | 0 );\n\t\t\ttriangles.push( p.i / dim | 0 );\n\t\t\ttriangles.push( b.i / dim | 0 );\n\n\t\t\t// remove two nodes involved\n\t\t\tremoveNode( p );\n\t\t\tremoveNode( p.next );\n\n\t\t\tp = start = b;\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\treturn filterPoints( p );\n\n}\n\n// try splitting polygon into two and triangulate them independently\nfunction splitEarcut( start, triangles, dim, minX, minY, invSize ) {\n\n\t// look for a valid diagonal that divides the polygon into two\n\tlet a = start;\n\tdo {\n\n\t\tlet b = a.next.next;\n\t\twhile ( b !== a.prev ) {\n\n\t\t\tif ( a.i !== b.i && isValidDiagonal( a, b ) ) {\n\n\t\t\t\t// split the polygon in two by the diagonal\n\t\t\t\tlet c = splitPolygon( a, b );\n\n\t\t\t\t// filter colinear points around the cuts\n\t\t\t\ta = filterPoints( a, a.next );\n\t\t\t\tc = filterPoints( c, c.next );\n\n\t\t\t\t// run earcut on each half\n\t\t\t\tearcutLinked( a, triangles, dim, minX, minY, invSize, 0 );\n\t\t\t\tearcutLinked( c, triangles, dim, minX, minY, invSize, 0 );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tb = b.next;\n\n\t\t}\n\n\t\ta = a.next;\n\n\t} while ( a !== start );\n\n}\n\n// link every hole into the outer loop, producing a single-ring polygon without holes\nfunction eliminateHoles( data, holeIndices, outerNode, dim ) {\n\n\tconst queue = [];\n\tlet i, len, start, end, list;\n\n\tfor ( i = 0, len = holeIndices.length; i < len; i ++ ) {\n\n\t\tstart = holeIndices[ i ] * dim;\n\t\tend = i < len - 1 ? holeIndices[ i + 1 ] * dim : data.length;\n\t\tlist = linkedList( data, start, end, dim, false );\n\t\tif ( list === list.next ) list.steiner = true;\n\t\tqueue.push( getLeftmost( list ) );\n\n\t}\n\n\tqueue.sort( compareX );\n\n\t// process holes from left to right\n\tfor ( i = 0; i < queue.length; i ++ ) {\n\n\t\touterNode = eliminateHole( queue[ i ], outerNode );\n\n\t}\n\n\treturn outerNode;\n\n}\n\nfunction compareX( a, b ) {\n\n\treturn a.x - b.x;\n\n}\n\n// find a bridge between vertices that connects hole with an outer ring and link it\nfunction eliminateHole( hole, outerNode ) {\n\n\tconst bridge = findHoleBridge( hole, outerNode );\n\tif ( ! bridge ) {\n\n\t\treturn outerNode;\n\n\t}\n\n\tconst bridgeReverse = splitPolygon( bridge, hole );\n\n\t// filter collinear points around the cuts\n\tfilterPoints( bridgeReverse, bridgeReverse.next );\n\treturn filterPoints( bridge, bridge.next );\n\n}\n\n// David Eberly's algorithm for finding a bridge between hole and outer polygon\nfunction findHoleBridge( hole, outerNode ) {\n\n\tlet p = outerNode,\n\t\tqx = - Infinity,\n\t\tm;\n\n\tconst hx = hole.x, hy = hole.y;\n\n\t// find a segment intersected by a ray from the hole's leftmost point to the left;\n\t// segment's endpoint with lesser x will be potential connection point\n\tdo {\n\n\t\tif ( hy <= p.y && hy >= p.next.y && p.next.y !== p.y ) {\n\n\t\t\tconst x = p.x + ( hy - p.y ) * ( p.next.x - p.x ) / ( p.next.y - p.y );\n\t\t\tif ( x <= hx && x > qx ) {\n\n\t\t\t\tqx = x;\n\t\t\t\tm = p.x < p.next.x ? p : p.next;\n\t\t\t\tif ( x === hx ) return m; // hole touches outer segment; pick leftmost endpoint\n\n\t\t\t}\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== outerNode );\n\n\tif ( ! m ) return null;\n\n\t// look for points inside the triangle of hole point, segment intersection and endpoint;\n\t// if there are no points found, we have a valid connection;\n\t// otherwise choose the point of the minimum angle with the ray as connection point\n\n\tconst stop = m,\n\t\tmx = m.x,\n\t\tmy = m.y;\n\tlet tanMin = Infinity, tan;\n\n\tp = m;\n\n\tdo {\n\n\t\tif ( hx >= p.x && p.x >= mx && hx !== p.x &&\n\t\t\t\tpointInTriangle( hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y ) ) {\n\n\t\t\ttan = Math.abs( hy - p.y ) / ( hx - p.x ); // tangential\n\n\t\t\tif ( locallyInside( p, hole ) && ( tan < tanMin || ( tan === tanMin && ( p.x > m.x || ( p.x === m.x && sectorContainsSector( m, p ) ) ) ) ) ) {\n\n\t\t\t\tm = p;\n\t\t\t\ttanMin = tan;\n\n\t\t\t}\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== stop );\n\n\treturn m;\n\n}\n\n// whether sector in vertex m contains sector in vertex p in the same coordinates\nfunction sectorContainsSector( m, p ) {\n\n\treturn area( m.prev, m, p.prev ) < 0 && area( p.next, m, m.next ) < 0;\n\n}\n\n// interlink polygon nodes in z-order\nfunction indexCurve( start, minX, minY, invSize ) {\n\n\tlet p = start;\n\tdo {\n\n\t\tif ( p.z === 0 ) p.z = zOrder( p.x, p.y, minX, minY, invSize );\n\t\tp.prevZ = p.prev;\n\t\tp.nextZ = p.next;\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\tp.prevZ.nextZ = null;\n\tp.prevZ = null;\n\n\tsortLinked( p );\n\n}\n\n// Simon Tatham's linked list merge sort algorithm\n// http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html\nfunction sortLinked( list ) {\n\n\tlet i, p, q, e, tail, numMerges, pSize, qSize,\n\t\tinSize = 1;\n\n\tdo {\n\n\t\tp = list;\n\t\tlist = null;\n\t\ttail = null;\n\t\tnumMerges = 0;\n\n\t\twhile ( p ) {\n\n\t\t\tnumMerges ++;\n\t\t\tq = p;\n\t\t\tpSize = 0;\n\t\t\tfor ( i = 0; i < inSize; i ++ ) {\n\n\t\t\t\tpSize ++;\n\t\t\t\tq = q.nextZ;\n\t\t\t\tif ( ! q ) break;\n\n\t\t\t}\n\n\t\t\tqSize = inSize;\n\n\t\t\twhile ( pSize > 0 || ( qSize > 0 && q ) ) {\n\n\t\t\t\tif ( pSize !== 0 && ( qSize === 0 || ! q || p.z <= q.z ) ) {\n\n\t\t\t\t\te = p;\n\t\t\t\t\tp = p.nextZ;\n\t\t\t\t\tpSize --;\n\n\t\t\t\t} else {\n\n\t\t\t\t\te = q;\n\t\t\t\t\tq = q.nextZ;\n\t\t\t\t\tqSize --;\n\n\t\t\t\t}\n\n\t\t\t\tif ( tail ) tail.nextZ = e;\n\t\t\t\telse list = e;\n\n\t\t\t\te.prevZ = tail;\n\t\t\t\ttail = e;\n\n\t\t\t}\n\n\t\t\tp = q;\n\n\t\t}\n\n\t\ttail.nextZ = null;\n\t\tinSize *= 2;\n\n\t} while ( numMerges > 1 );\n\n\treturn list;\n\n}\n\n// z-order of a point given coords and inverse of the longer side of data bbox\nfunction zOrder( x, y, minX, minY, invSize ) {\n\n\t// coords are transformed into non-negative 15-bit integer range\n\tx = ( x - minX ) * invSize | 0;\n\ty = ( y - minY ) * invSize | 0;\n\n\tx = ( x | ( x << 8 ) ) & 0x00FF00FF;\n\tx = ( x | ( x << 4 ) ) & 0x0F0F0F0F;\n\tx = ( x | ( x << 2 ) ) & 0x33333333;\n\tx = ( x | ( x << 1 ) ) & 0x55555555;\n\n\ty = ( y | ( y << 8 ) ) & 0x00FF00FF;\n\ty = ( y | ( y << 4 ) ) & 0x0F0F0F0F;\n\ty = ( y | ( y << 2 ) ) & 0x33333333;\n\ty = ( y | ( y << 1 ) ) & 0x55555555;\n\n\treturn x | ( y << 1 );\n\n}\n\n// find the leftmost node of a polygon ring\nfunction getLeftmost( start ) {\n\n\tlet p = start,\n\t\tleftmost = start;\n\tdo {\n\n\t\tif ( p.x < leftmost.x || ( p.x === leftmost.x && p.y < leftmost.y ) ) leftmost = p;\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\treturn leftmost;\n\n}\n\n// check if a point lies within a convex triangle\nfunction pointInTriangle( ax, ay, bx, by, cx, cy, px, py ) {\n\n\treturn ( cx - px ) * ( ay - py ) >= ( ax - px ) * ( cy - py ) &&\n           ( ax - px ) * ( by - py ) >= ( bx - px ) * ( ay - py ) &&\n           ( bx - px ) * ( cy - py ) >= ( cx - px ) * ( by - py );\n\n}\n\n// check if a diagonal between two polygon nodes is valid (lies in polygon interior)\nfunction isValidDiagonal( a, b ) {\n\n\treturn a.next.i !== b.i && a.prev.i !== b.i && ! intersectsPolygon( a, b ) && // dones't intersect other edges\n           ( locallyInside( a, b ) && locallyInside( b, a ) && middleInside( a, b ) && // locally visible\n            ( area( a.prev, a, b.prev ) || area( a, b.prev, b ) ) || // does not create opposite-facing sectors\n            equals( a, b ) && area( a.prev, a, a.next ) > 0 && area( b.prev, b, b.next ) > 0 ); // special zero-length case\n\n}\n\n// signed area of a triangle\nfunction area( p, q, r ) {\n\n\treturn ( q.y - p.y ) * ( r.x - q.x ) - ( q.x - p.x ) * ( r.y - q.y );\n\n}\n\n// check if two points are equal\nfunction equals( p1, p2 ) {\n\n\treturn p1.x === p2.x && p1.y === p2.y;\n\n}\n\n// check if two segments intersect\nfunction intersects( p1, q1, p2, q2 ) {\n\n\tconst o1 = sign( area( p1, q1, p2 ) );\n\tconst o2 = sign( area( p1, q1, q2 ) );\n\tconst o3 = sign( area( p2, q2, p1 ) );\n\tconst o4 = sign( area( p2, q2, q1 ) );\n\n\tif ( o1 !== o2 && o3 !== o4 ) return true; // general case\n\n\tif ( o1 === 0 && onSegment( p1, p2, q1 ) ) return true; // p1, q1 and p2 are collinear and p2 lies on p1q1\n\tif ( o2 === 0 && onSegment( p1, q2, q1 ) ) return true; // p1, q1 and q2 are collinear and q2 lies on p1q1\n\tif ( o3 === 0 && onSegment( p2, p1, q2 ) ) return true; // p2, q2 and p1 are collinear and p1 lies on p2q2\n\tif ( o4 === 0 && onSegment( p2, q1, q2 ) ) return true; // p2, q2 and q1 are collinear and q1 lies on p2q2\n\n\treturn false;\n\n}\n\n// for collinear points p, q, r, check if point q lies on segment pr\nfunction onSegment( p, q, r ) {\n\n\treturn q.x <= Math.max( p.x, r.x ) && q.x >= Math.min( p.x, r.x ) && q.y <= Math.max( p.y, r.y ) && q.y >= Math.min( p.y, r.y );\n\n}\n\nfunction sign( num ) {\n\n\treturn num > 0 ? 1 : num < 0 ? - 1 : 0;\n\n}\n\n// check if a polygon diagonal intersects any polygon segments\nfunction intersectsPolygon( a, b ) {\n\n\tlet p = a;\n\tdo {\n\n\t\tif ( p.i !== a.i && p.next.i !== a.i && p.i !== b.i && p.next.i !== b.i &&\n\t\t\tintersects( p, p.next, a, b ) ) return true;\n\t\tp = p.next;\n\n\t} while ( p !== a );\n\n\treturn false;\n\n}\n\n// check if a polygon diagonal is locally inside the polygon\nfunction locallyInside( a, b ) {\n\n\treturn area( a.prev, a, a.next ) < 0 ?\n\t\tarea( a, b, a.next ) >= 0 && area( a, a.prev, b ) >= 0 :\n\t\tarea( a, b, a.prev ) < 0 || area( a, a.next, b ) < 0;\n\n}\n\n// check if the middle point of a polygon diagonal is inside the polygon\nfunction middleInside( a, b ) {\n\n\tlet p = a,\n\t\tinside = false;\n\tconst px = ( a.x + b.x ) / 2,\n\t\tpy = ( a.y + b.y ) / 2;\n\tdo {\n\n\t\tif ( ( ( p.y > py ) !== ( p.next.y > py ) ) && p.next.y !== p.y &&\n\t\t\t( px < ( p.next.x - p.x ) * ( py - p.y ) / ( p.next.y - p.y ) + p.x ) )\n\t\t\tinside = ! inside;\n\t\tp = p.next;\n\n\t} while ( p !== a );\n\n\treturn inside;\n\n}\n\n// link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;\n// if one belongs to the outer ring and another to a hole, it merges it into a single ring\nfunction splitPolygon( a, b ) {\n\n\tconst a2 = new Node( a.i, a.x, a.y ),\n\t\tb2 = new Node( b.i, b.x, b.y ),\n\t\tan = a.next,\n\t\tbp = b.prev;\n\n\ta.next = b;\n\tb.prev = a;\n\n\ta2.next = an;\n\tan.prev = a2;\n\n\tb2.next = a2;\n\ta2.prev = b2;\n\n\tbp.next = b2;\n\tb2.prev = bp;\n\n\treturn b2;\n\n}\n\n// create a node and optionally link it with previous one (in a circular doubly linked list)\nfunction insertNode( i, x, y, last ) {\n\n\tconst p = new Node( i, x, y );\n\n\tif ( ! last ) {\n\n\t\tp.prev = p;\n\t\tp.next = p;\n\n\t} else {\n\n\t\tp.next = last.next;\n\t\tp.prev = last;\n\t\tlast.next.prev = p;\n\t\tlast.next = p;\n\n\t}\n\n\treturn p;\n\n}\n\nfunction removeNode( p ) {\n\n\tp.next.prev = p.prev;\n\tp.prev.next = p.next;\n\n\tif ( p.prevZ ) p.prevZ.nextZ = p.nextZ;\n\tif ( p.nextZ ) p.nextZ.prevZ = p.prevZ;\n\n}\n\nfunction Node( i, x, y ) {\n\n\t// vertex index in coordinates array\n\tthis.i = i;\n\n\t// vertex coordinates\n\tthis.x = x;\n\tthis.y = y;\n\n\t// previous and next vertex nodes in a polygon ring\n\tthis.prev = null;\n\tthis.next = null;\n\n\t// z-order curve value\n\tthis.z = 0;\n\n\t// previous and next nodes in z-order\n\tthis.prevZ = null;\n\tthis.nextZ = null;\n\n\t// indicates whether this is a steiner point\n\tthis.steiner = false;\n\n}\n\nfunction signedArea( data, start, end, dim ) {\n\n\tlet sum = 0;\n\tfor ( let i = start, j = end - dim; i < end; i += dim ) {\n\n\t\tsum += ( data[ j ] - data[ i ] ) * ( data[ i + 1 ] + data[ j + 1 ] );\n\t\tj = i;\n\n\t}\n\n\treturn sum;\n\n}\n\nclass ShapeUtils {\n\n\t// calculate area of the contour polygon\n\n\tstatic area( contour ) {\n\n\t\tconst n = contour.length;\n\t\tlet a = 0.0;\n\n\t\tfor ( let p = n - 1, q = 0; q < n; p = q ++ ) {\n\n\t\t\ta += contour[ p ].x * contour[ q ].y - contour[ q ].x * contour[ p ].y;\n\n\t\t}\n\n\t\treturn a * 0.5;\n\n\t}\n\n\tstatic isClockWise( pts ) {\n\n\t\treturn ShapeUtils.area( pts ) < 0;\n\n\t}\n\n\tstatic triangulateShape( contour, holes ) {\n\n\t\tconst vertices = []; // flat array of vertices like [ x0,y0, x1,y1, x2,y2, ... ]\n\t\tconst holeIndices = []; // array of hole indices\n\t\tconst faces = []; // final array of vertex indices like [ [ a,b,d ], [ b,c,d ] ]\n\n\t\tremoveDupEndPts( contour );\n\t\taddContour( vertices, contour );\n\n\t\t//\n\n\t\tlet holeIndex = contour.length;\n\n\t\tholes.forEach( removeDupEndPts );\n\n\t\tfor ( let i = 0; i < holes.length; i ++ ) {\n\n\t\t\tholeIndices.push( holeIndex );\n\t\t\tholeIndex += holes[ i ].length;\n\t\t\taddContour( vertices, holes[ i ] );\n\n\t\t}\n\n\t\t//\n\n\t\tconst triangles = Earcut.triangulate( vertices, holeIndices );\n\n\t\t//\n\n\t\tfor ( let i = 0; i < triangles.length; i += 3 ) {\n\n\t\t\tfaces.push( triangles.slice( i, i + 3 ) );\n\n\t\t}\n\n\t\treturn faces;\n\n\t}\n\n}\n\nfunction removeDupEndPts( points ) {\n\n\tconst l = points.length;\n\n\tif ( l > 2 && points[ l - 1 ].equals( points[ 0 ] ) ) {\n\n\t\tpoints.pop();\n\n\t}\n\n}\n\nfunction addContour( vertices, contour ) {\n\n\tfor ( let i = 0; i < contour.length; i ++ ) {\n\n\t\tvertices.push( contour[ i ].x );\n\t\tvertices.push( contour[ i ].y );\n\n\t}\n\n}\n\n/**\n * Creates extruded geometry from a path shape.\n *\n * parameters = {\n *\n *  curveSegments: <int>, // number of points on the curves\n *  steps: <int>, // number of points for z-side extrusions / used for subdividing segments of extrude spline too\n *  depth: <float>, // Depth to extrude the shape\n *\n *  bevelEnabled: <bool>, // turn on bevel\n *  bevelThickness: <float>, // how deep into the original shape bevel goes\n *  bevelSize: <float>, // how far from shape outline (including bevelOffset) is bevel\n *  bevelOffset: <float>, // how far from shape outline does bevel start\n *  bevelSegments: <int>, // number of bevel layers\n *\n *  extrudePath: <THREE.Curve> // curve to extrude shape along\n *\n *  UVGenerator: <Object> // object that provides UV generator functions\n *\n * }\n */\n\n\nclass ExtrudeGeometry extends BufferGeometry {\n\n\tconstructor( shapes = new Shape( [ new Vector2( 0.5, 0.5 ), new Vector2( - 0.5, 0.5 ), new Vector2( - 0.5, - 0.5 ), new Vector2( 0.5, - 0.5 ) ] ), options = {} ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'ExtrudeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tshapes: shapes,\n\t\t\toptions: options\n\t\t};\n\n\t\tshapes = Array.isArray( shapes ) ? shapes : [ shapes ];\n\n\t\tconst scope = this;\n\n\t\tconst verticesArray = [];\n\t\tconst uvArray = [];\n\n\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tconst shape = shapes[ i ];\n\t\t\taddShape( shape );\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( verticesArray, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvArray, 2 ) );\n\n\t\tthis.computeVertexNormals();\n\n\t\t// functions\n\n\t\tfunction addShape( shape ) {\n\n\t\t\tconst placeholder = [];\n\n\t\t\t// options\n\n\t\t\tconst curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;\n\t\t\tconst steps = options.steps !== undefined ? options.steps : 1;\n\t\t\tconst depth = options.depth !== undefined ? options.depth : 1;\n\n\t\t\tlet bevelEnabled = options.bevelEnabled !== undefined ? options.bevelEnabled : true;\n\t\t\tlet bevelThickness = options.bevelThickness !== undefined ? options.bevelThickness : 0.2;\n\t\t\tlet bevelSize = options.bevelSize !== undefined ? options.bevelSize : bevelThickness - 0.1;\n\t\t\tlet bevelOffset = options.bevelOffset !== undefined ? options.bevelOffset : 0;\n\t\t\tlet bevelSegments = options.bevelSegments !== undefined ? options.bevelSegments : 3;\n\n\t\t\tconst extrudePath = options.extrudePath;\n\n\t\t\tconst uvgen = options.UVGenerator !== undefined ? options.UVGenerator : WorldUVGenerator;\n\n\t\t\t//\n\n\t\t\tlet extrudePts, extrudeByPath = false;\n\t\t\tlet splineTube, binormal, normal, position2;\n\n\t\t\tif ( extrudePath ) {\n\n\t\t\t\textrudePts = extrudePath.getSpacedPoints( steps );\n\n\t\t\t\textrudeByPath = true;\n\t\t\t\tbevelEnabled = false; // bevels not supported for path extrusion\n\n\t\t\t\t// SETUP TNB variables\n\n\t\t\t\t// TODO1 - have a .isClosed in spline?\n\n\t\t\t\tsplineTube = extrudePath.computeFrenetFrames( steps, false );\n\n\t\t\t\t// console.log(splineTube, 'splineTube', splineTube.normals.length, 'steps', steps, 'extrudePts', extrudePts.length);\n\n\t\t\t\tbinormal = new Vector3();\n\t\t\t\tnormal = new Vector3();\n\t\t\t\tposition2 = new Vector3();\n\n\t\t\t}\n\n\t\t\t// Safeguards if bevels are not enabled\n\n\t\t\tif ( ! bevelEnabled ) {\n\n\t\t\t\tbevelSegments = 0;\n\t\t\t\tbevelThickness = 0;\n\t\t\t\tbevelSize = 0;\n\t\t\t\tbevelOffset = 0;\n\n\t\t\t}\n\n\t\t\t// Variables initialization\n\n\t\t\tconst shapePoints = shape.extractPoints( curveSegments );\n\n\t\t\tlet vertices = shapePoints.shape;\n\t\t\tconst holes = shapePoints.holes;\n\n\t\t\tconst reverse = ! ShapeUtils.isClockWise( vertices );\n\n\t\t\tif ( reverse ) {\n\n\t\t\t\tvertices = vertices.reverse();\n\n\t\t\t\t// Maybe we should also check if holes are in the opposite direction, just to be safe ...\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\n\t\t\t\t\tif ( ShapeUtils.isClockWise( ahole ) ) {\n\n\t\t\t\t\t\tholes[ h ] = ahole.reverse();\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t\tconst faces = ShapeUtils.triangulateShape( vertices, holes );\n\n\t\t\t/* Vertices */\n\n\t\t\tconst contour = vertices; // vertices has all points but contour has only points of circumference\n\n\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tconst ahole = holes[ h ];\n\n\t\t\t\tvertices = vertices.concat( ahole );\n\n\t\t\t}\n\n\n\t\t\tfunction scalePt2( pt, vec, size ) {\n\n\t\t\t\tif ( ! vec ) console.error( 'THREE.ExtrudeGeometry: vec does not exist' );\n\n\t\t\t\treturn pt.clone().addScaledVector( vec, size );\n\n\t\t\t}\n\n\t\t\tconst vlen = vertices.length, flen = faces.length;\n\n\n\t\t\t// Find directions for point movement\n\n\n\t\t\tfunction getBevelVec( inPt, inPrev, inNext ) {\n\n\t\t\t\t// computes for inPt the corresponding point inPt' on a new contour\n\t\t\t\t//   shifted by 1 unit (length of normalized vector) to the left\n\t\t\t\t// if we walk along contour clockwise, this new contour is outside the old one\n\t\t\t\t//\n\t\t\t\t// inPt' is the intersection of the two lines parallel to the two\n\t\t\t\t//  adjacent edges of inPt at a distance of 1 unit on the left side.\n\n\t\t\t\tlet v_trans_x, v_trans_y, shrink_by; // resulting translation vector for inPt\n\n\t\t\t\t// good reading for geometry algorithms (here: line-line intersection)\n\t\t\t\t// http://geomalgorithms.com/a05-_intersect-1.html\n\n\t\t\t\tconst v_prev_x = inPt.x - inPrev.x,\n\t\t\t\t\tv_prev_y = inPt.y - inPrev.y;\n\t\t\t\tconst v_next_x = inNext.x - inPt.x,\n\t\t\t\t\tv_next_y = inNext.y - inPt.y;\n\n\t\t\t\tconst v_prev_lensq = ( v_prev_x * v_prev_x + v_prev_y * v_prev_y );\n\n\t\t\t\t// check for collinear edges\n\t\t\t\tconst collinear0 = ( v_prev_x * v_next_y - v_prev_y * v_next_x );\n\n\t\t\t\tif ( Math.abs( collinear0 ) > Number.EPSILON ) {\n\n\t\t\t\t\t// not collinear\n\n\t\t\t\t\t// length of vectors for normalizing\n\n\t\t\t\t\tconst v_prev_len = Math.sqrt( v_prev_lensq );\n\t\t\t\t\tconst v_next_len = Math.sqrt( v_next_x * v_next_x + v_next_y * v_next_y );\n\n\t\t\t\t\t// shift adjacent points by unit vectors to the left\n\n\t\t\t\t\tconst ptPrevShift_x = ( inPrev.x - v_prev_y / v_prev_len );\n\t\t\t\t\tconst ptPrevShift_y = ( inPrev.y + v_prev_x / v_prev_len );\n\n\t\t\t\t\tconst ptNextShift_x = ( inNext.x - v_next_y / v_next_len );\n\t\t\t\t\tconst ptNextShift_y = ( inNext.y + v_next_x / v_next_len );\n\n\t\t\t\t\t// scaling factor for v_prev to intersection point\n\n\t\t\t\t\tconst sf = ( ( ptNextShift_x - ptPrevShift_x ) * v_next_y -\n\t\t\t\t\t\t\t( ptNextShift_y - ptPrevShift_y ) * v_next_x ) /\n\t\t\t\t\t\t( v_prev_x * v_next_y - v_prev_y * v_next_x );\n\n\t\t\t\t\t// vector from inPt to intersection point\n\n\t\t\t\t\tv_trans_x = ( ptPrevShift_x + v_prev_x * sf - inPt.x );\n\t\t\t\t\tv_trans_y = ( ptPrevShift_y + v_prev_y * sf - inPt.y );\n\n\t\t\t\t\t// Don't normalize!, otherwise sharp corners become ugly\n\t\t\t\t\t//  but prevent crazy spikes\n\t\t\t\t\tconst v_trans_lensq = ( v_trans_x * v_trans_x + v_trans_y * v_trans_y );\n\t\t\t\t\tif ( v_trans_lensq <= 2 ) {\n\n\t\t\t\t\t\treturn new Vector2( v_trans_x, v_trans_y );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tshrink_by = Math.sqrt( v_trans_lensq / 2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// handle special case of collinear edges\n\n\t\t\t\t\tlet direction_eq = false; // assumes: opposite\n\n\t\t\t\t\tif ( v_prev_x > Number.EPSILON ) {\n\n\t\t\t\t\t\tif ( v_next_x > Number.EPSILON ) {\n\n\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( v_prev_x < - Number.EPSILON ) {\n\n\t\t\t\t\t\t\tif ( v_next_x < - Number.EPSILON ) {\n\n\t\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tif ( Math.sign( v_prev_y ) === Math.sign( v_next_y ) ) {\n\n\t\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( direction_eq ) {\n\n\t\t\t\t\t\t// console.log(\"Warning: lines are a straight sequence\");\n\t\t\t\t\t\tv_trans_x = - v_prev_y;\n\t\t\t\t\t\tv_trans_y = v_prev_x;\n\t\t\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// console.log(\"Warning: lines are a straight spike\");\n\t\t\t\t\t\tv_trans_x = v_prev_x;\n\t\t\t\t\t\tv_trans_y = v_prev_y;\n\t\t\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq / 2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn new Vector2( v_trans_x / shrink_by, v_trans_y / shrink_by );\n\n\t\t\t}\n\n\n\t\t\tconst contourMovements = [];\n\n\t\t\tfor ( let i = 0, il = contour.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\n\n\t\t\t\tif ( j === il ) j = 0;\n\t\t\t\tif ( k === il ) k = 0;\n\n\t\t\t\t//  (j)---(i)---(k)\n\t\t\t\t// console.log('i,j,k', i, j , k)\n\n\t\t\t\tcontourMovements[ i ] = getBevelVec( contour[ i ], contour[ j ], contour[ k ] );\n\n\t\t\t}\n\n\t\t\tconst holesMovements = [];\n\t\t\tlet oneHoleMovements, verticesMovements = contourMovements.concat();\n\n\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tconst ahole = holes[ h ];\n\n\t\t\t\toneHoleMovements = [];\n\n\t\t\t\tfor ( let i = 0, il = ahole.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\n\n\t\t\t\t\tif ( j === il ) j = 0;\n\t\t\t\t\tif ( k === il ) k = 0;\n\n\t\t\t\t\t//  (j)---(i)---(k)\n\t\t\t\t\toneHoleMovements[ i ] = getBevelVec( ahole[ i ], ahole[ j ], ahole[ k ] );\n\n\t\t\t\t}\n\n\t\t\t\tholesMovements.push( oneHoleMovements );\n\t\t\t\tverticesMovements = verticesMovements.concat( oneHoleMovements );\n\n\t\t\t}\n\n\n\t\t\t// Loop bevelSegments, 1 for the front, 1 for the back\n\n\t\t\tfor ( let b = 0; b < bevelSegments; b ++ ) {\n\n\t\t\t\t//for ( b = bevelSegments; b > 0; b -- ) {\n\n\t\t\t\tconst t = b / bevelSegments;\n\t\t\t\tconst z = bevelThickness * Math.cos( t * Math.PI / 2 );\n\t\t\t\tconst bs = bevelSize * Math.sin( t * Math.PI / 2 ) + bevelOffset;\n\n\t\t\t\t// contract shape\n\n\t\t\t\tfor ( let i = 0, il = contour.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst vert = scalePt2( contour[ i ], contourMovements[ i ], bs );\n\n\t\t\t\t\tv( vert.x, vert.y, - z );\n\n\t\t\t\t}\n\n\t\t\t\t// expand holes\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\t\t\t\t\toneHoleMovements = holesMovements[ h ];\n\n\t\t\t\t\tfor ( let i = 0, il = ahole.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tconst vert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\n\n\t\t\t\t\t\tv( vert.x, vert.y, - z );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst bs = bevelSize + bevelOffset;\n\n\t\t\t// Back facing vertices\n\n\t\t\tfor ( let i = 0; i < vlen; i ++ ) {\n\n\t\t\t\tconst vert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\n\n\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\tv( vert.x, vert.y, 0 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// v( vert.x, vert.y + extrudePts[ 0 ].y, extrudePts[ 0 ].x );\n\n\t\t\t\t\tnormal.copy( splineTube.normals[ 0 ] ).multiplyScalar( vert.x );\n\t\t\t\t\tbinormal.copy( splineTube.binormals[ 0 ] ).multiplyScalar( vert.y );\n\n\t\t\t\t\tposition2.copy( extrudePts[ 0 ] ).add( normal ).add( binormal );\n\n\t\t\t\t\tv( position2.x, position2.y, position2.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Add stepped vertices...\n\t\t\t// Including front facing vertices\n\n\t\t\tfor ( let s = 1; s <= steps; s ++ ) {\n\n\t\t\t\tfor ( let i = 0; i < vlen; i ++ ) {\n\n\t\t\t\t\tconst vert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\n\n\t\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\t\tv( vert.x, vert.y, depth / steps * s );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// v( vert.x, vert.y + extrudePts[ s - 1 ].y, extrudePts[ s - 1 ].x );\n\n\t\t\t\t\t\tnormal.copy( splineTube.normals[ s ] ).multiplyScalar( vert.x );\n\t\t\t\t\t\tbinormal.copy( splineTube.binormals[ s ] ).multiplyScalar( vert.y );\n\n\t\t\t\t\t\tposition2.copy( extrudePts[ s ] ).add( normal ).add( binormal );\n\n\t\t\t\t\t\tv( position2.x, position2.y, position2.z );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t\t// Add bevel segments planes\n\n\t\t\t//for ( b = 1; b <= bevelSegments; b ++ ) {\n\t\t\tfor ( let b = bevelSegments - 1; b >= 0; b -- ) {\n\n\t\t\t\tconst t = b / bevelSegments;\n\t\t\t\tconst z = bevelThickness * Math.cos( t * Math.PI / 2 );\n\t\t\t\tconst bs = bevelSize * Math.sin( t * Math.PI / 2 ) + bevelOffset;\n\n\t\t\t\t// contract shape\n\n\t\t\t\tfor ( let i = 0, il = contour.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst vert = scalePt2( contour[ i ], contourMovements[ i ], bs );\n\t\t\t\t\tv( vert.x, vert.y, depth + z );\n\n\t\t\t\t}\n\n\t\t\t\t// expand holes\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\t\t\t\t\toneHoleMovements = holesMovements[ h ];\n\n\t\t\t\t\tfor ( let i = 0, il = ahole.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tconst vert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\n\n\t\t\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\t\t\tv( vert.x, vert.y, depth + z );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tv( vert.x, vert.y + extrudePts[ steps - 1 ].y, extrudePts[ steps - 1 ].x + z );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t/* Faces */\n\n\t\t\t// Top and bottom faces\n\n\t\t\tbuildLidFaces();\n\n\t\t\t// Sides faces\n\n\t\t\tbuildSideFaces();\n\n\n\t\t\t/////  Internal functions\n\n\t\t\tfunction buildLidFaces() {\n\n\t\t\t\tconst start = verticesArray.length / 3;\n\n\t\t\t\tif ( bevelEnabled ) {\n\n\t\t\t\t\tlet layer = 0; // steps + 1\n\t\t\t\t\tlet offset = vlen * layer;\n\n\t\t\t\t\t// Bottom faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 2 ] + offset, face[ 1 ] + offset, face[ 0 ] + offset );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tlayer = steps + bevelSegments * 2;\n\t\t\t\t\toffset = vlen * layer;\n\n\t\t\t\t\t// Top faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 0 ] + offset, face[ 1 ] + offset, face[ 2 ] + offset );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// Bottom faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 2 ], face[ 1 ], face[ 0 ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// Top faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 0 ] + vlen * steps, face[ 1 ] + vlen * steps, face[ 2 ] + vlen * steps );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tscope.addGroup( start, verticesArray.length / 3 - start, 0 );\n\n\t\t\t}\n\n\t\t\t// Create faces for the z-sides of the shape\n\n\t\t\tfunction buildSideFaces() {\n\n\t\t\t\tconst start = verticesArray.length / 3;\n\t\t\t\tlet layeroffset = 0;\n\t\t\t\tsidewalls( contour, layeroffset );\n\t\t\t\tlayeroffset += contour.length;\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\t\t\t\t\tsidewalls( ahole, layeroffset );\n\n\t\t\t\t\t//, true\n\t\t\t\t\tlayeroffset += ahole.length;\n\n\t\t\t\t}\n\n\n\t\t\t\tscope.addGroup( start, verticesArray.length / 3 - start, 1 );\n\n\n\t\t\t}\n\n\t\t\tfunction sidewalls( contour, layeroffset ) {\n\n\t\t\t\tlet i = contour.length;\n\n\t\t\t\twhile ( -- i >= 0 ) {\n\n\t\t\t\t\tconst j = i;\n\t\t\t\t\tlet k = i - 1;\n\t\t\t\t\tif ( k < 0 ) k = contour.length - 1;\n\n\t\t\t\t\t//console.log('b', i,j, i-1, k,vertices.length);\n\n\t\t\t\t\tfor ( let s = 0, sl = ( steps + bevelSegments * 2 ); s < sl; s ++ ) {\n\n\t\t\t\t\t\tconst slen1 = vlen * s;\n\t\t\t\t\t\tconst slen2 = vlen * ( s + 1 );\n\n\t\t\t\t\t\tconst a = layeroffset + j + slen1,\n\t\t\t\t\t\t\tb = layeroffset + k + slen1,\n\t\t\t\t\t\t\tc = layeroffset + k + slen2,\n\t\t\t\t\t\t\td = layeroffset + j + slen2;\n\n\t\t\t\t\t\tf4( a, b, c, d );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfunction v( x, y, z ) {\n\n\t\t\t\tplaceholder.push( x );\n\t\t\t\tplaceholder.push( y );\n\t\t\t\tplaceholder.push( z );\n\n\t\t\t}\n\n\n\t\t\tfunction f3( a, b, c ) {\n\n\t\t\t\taddVertex( a );\n\t\t\t\taddVertex( b );\n\t\t\t\taddVertex( c );\n\n\t\t\t\tconst nextIndex = verticesArray.length / 3;\n\t\t\t\tconst uvs = uvgen.generateTopUV( scope, verticesArray, nextIndex - 3, nextIndex - 2, nextIndex - 1 );\n\n\t\t\t\taddUV( uvs[ 0 ] );\n\t\t\t\taddUV( uvs[ 1 ] );\n\t\t\t\taddUV( uvs[ 2 ] );\n\n\t\t\t}\n\n\t\t\tfunction f4( a, b, c, d ) {\n\n\t\t\t\taddVertex( a );\n\t\t\t\taddVertex( b );\n\t\t\t\taddVertex( d );\n\n\t\t\t\taddVertex( b );\n\t\t\t\taddVertex( c );\n\t\t\t\taddVertex( d );\n\n\n\t\t\t\tconst nextIndex = verticesArray.length / 3;\n\t\t\t\tconst uvs = uvgen.generateSideWallUV( scope, verticesArray, nextIndex - 6, nextIndex - 3, nextIndex - 2, nextIndex - 1 );\n\n\t\t\t\taddUV( uvs[ 0 ] );\n\t\t\t\taddUV( uvs[ 1 ] );\n\t\t\t\taddUV( uvs[ 3 ] );\n\n\t\t\t\taddUV( uvs[ 1 ] );\n\t\t\t\taddUV( uvs[ 2 ] );\n\t\t\t\taddUV( uvs[ 3 ] );\n\n\t\t\t}\n\n\t\t\tfunction addVertex( index ) {\n\n\t\t\t\tverticesArray.push( placeholder[ index * 3 + 0 ] );\n\t\t\t\tverticesArray.push( placeholder[ index * 3 + 1 ] );\n\t\t\t\tverticesArray.push( placeholder[ index * 3 + 2 ] );\n\n\t\t\t}\n\n\n\t\t\tfunction addUV( vector2 ) {\n\n\t\t\t\tuvArray.push( vector2.x );\n\t\t\t\tuvArray.push( vector2.y );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tconst shapes = this.parameters.shapes;\n\t\tconst options = this.parameters.options;\n\n\t\treturn toJSON$1( shapes, options, data );\n\n\t}\n\n\tstatic fromJSON( data, shapes ) {\n\n\t\tconst geometryShapes = [];\n\n\t\tfor ( let j = 0, jl = data.shapes.length; j < jl; j ++ ) {\n\n\t\t\tconst shape = shapes[ data.shapes[ j ] ];\n\n\t\t\tgeometryShapes.push( shape );\n\n\t\t}\n\n\t\tconst extrudePath = data.options.extrudePath;\n\n\t\tif ( extrudePath !== undefined ) {\n\n\t\t\tdata.options.extrudePath = new Curves[ extrudePath.type ]().fromJSON( extrudePath );\n\n\t\t}\n\n\t\treturn new ExtrudeGeometry( geometryShapes, data.options );\n\n\t}\n\n}\n\nconst WorldUVGenerator = {\n\n\tgenerateTopUV: function ( geometry, vertices, indexA, indexB, indexC ) {\n\n\t\tconst a_x = vertices[ indexA * 3 ];\n\t\tconst a_y = vertices[ indexA * 3 + 1 ];\n\t\tconst b_x = vertices[ indexB * 3 ];\n\t\tconst b_y = vertices[ indexB * 3 + 1 ];\n\t\tconst c_x = vertices[ indexC * 3 ];\n\t\tconst c_y = vertices[ indexC * 3 + 1 ];\n\n\t\treturn [\n\t\t\tnew Vector2( a_x, a_y ),\n\t\t\tnew Vector2( b_x, b_y ),\n\t\t\tnew Vector2( c_x, c_y )\n\t\t];\n\n\t},\n\n\tgenerateSideWallUV: function ( geometry, vertices, indexA, indexB, indexC, indexD ) {\n\n\t\tconst a_x = vertices[ indexA * 3 ];\n\t\tconst a_y = vertices[ indexA * 3 + 1 ];\n\t\tconst a_z = vertices[ indexA * 3 + 2 ];\n\t\tconst b_x = vertices[ indexB * 3 ];\n\t\tconst b_y = vertices[ indexB * 3 + 1 ];\n\t\tconst b_z = vertices[ indexB * 3 + 2 ];\n\t\tconst c_x = vertices[ indexC * 3 ];\n\t\tconst c_y = vertices[ indexC * 3 + 1 ];\n\t\tconst c_z = vertices[ indexC * 3 + 2 ];\n\t\tconst d_x = vertices[ indexD * 3 ];\n\t\tconst d_y = vertices[ indexD * 3 + 1 ];\n\t\tconst d_z = vertices[ indexD * 3 + 2 ];\n\n\t\tif ( Math.abs( a_y - b_y ) < Math.abs( a_x - b_x ) ) {\n\n\t\t\treturn [\n\t\t\t\tnew Vector2( a_x, 1 - a_z ),\n\t\t\t\tnew Vector2( b_x, 1 - b_z ),\n\t\t\t\tnew Vector2( c_x, 1 - c_z ),\n\t\t\t\tnew Vector2( d_x, 1 - d_z )\n\t\t\t];\n\n\t\t} else {\n\n\t\t\treturn [\n\t\t\t\tnew Vector2( a_y, 1 - a_z ),\n\t\t\t\tnew Vector2( b_y, 1 - b_z ),\n\t\t\t\tnew Vector2( c_y, 1 - c_z ),\n\t\t\t\tnew Vector2( d_y, 1 - d_z )\n\t\t\t];\n\n\t\t}\n\n\t}\n\n};\n\nfunction toJSON$1( shapes, options, data ) {\n\n\tdata.shapes = [];\n\n\tif ( Array.isArray( shapes ) ) {\n\n\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tconst shape = shapes[ i ];\n\n\t\t\tdata.shapes.push( shape.uuid );\n\n\t\t}\n\n\t} else {\n\n\t\tdata.shapes.push( shapes.uuid );\n\n\t}\n\n\tdata.options = Object.assign( {}, options );\n\n\tif ( options.extrudePath !== undefined ) data.options.extrudePath = options.extrudePath.toJSON();\n\n\treturn data;\n\n}\n\nclass IcosahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst t = ( 1 + Math.sqrt( 5 ) ) / 2;\n\n\t\tconst vertices = [\n\t\t\t- 1, t, 0, \t1, t, 0, \t- 1, - t, 0, \t1, - t, 0,\n\t\t\t0, - 1, t, \t0, 1, t,\t0, - 1, - t, \t0, 1, - t,\n\t\t\tt, 0, - 1, \tt, 0, 1, \t- t, 0, - 1, \t- t, 0, 1\n\t\t];\n\n\t\tconst indices = [\n\t\t\t0, 11, 5, \t0, 5, 1, \t0, 1, 7, \t0, 7, 10, \t0, 10, 11,\n\t\t\t1, 5, 9, \t5, 11, 4,\t11, 10, 2,\t10, 7, 6,\t7, 1, 8,\n\t\t\t3, 9, 4, \t3, 4, 2,\t3, 2, 6,\t3, 6, 8,\t3, 8, 9,\n\t\t\t4, 9, 5, \t2, 4, 11,\t6, 2, 10,\t8, 6, 7,\t9, 8, 1\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'IcosahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new IcosahedronGeometry( data.radius, data.detail );\n\n\t}\n\n}\n\nclass OctahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst vertices = [\n\t\t\t1, 0, 0, \t- 1, 0, 0,\t0, 1, 0,\n\t\t\t0, - 1, 0, \t0, 0, 1,\t0, 0, - 1\n\t\t];\n\n\t\tconst indices = [\n\t\t\t0, 2, 4,\t0, 4, 3,\t0, 3, 5,\n\t\t\t0, 5, 2,\t1, 2, 5,\t1, 5, 3,\n\t\t\t1, 3, 4,\t1, 4, 2\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'OctahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new OctahedronGeometry( data.radius, data.detail );\n\n\t}\n\n}\n\nclass RingGeometry extends BufferGeometry {\n\n\tconstructor( innerRadius = 0.5, outerRadius = 1, thetaSegments = 32, phiSegments = 1, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'RingGeometry';\n\n\t\tthis.parameters = {\n\t\t\tinnerRadius: innerRadius,\n\t\t\touterRadius: outerRadius,\n\t\t\tthetaSegments: thetaSegments,\n\t\t\tphiSegments: phiSegments,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tthetaSegments = Math.max( 3, thetaSegments );\n\t\tphiSegments = Math.max( 1, phiSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// some helper variables\n\n\t\tlet radius = innerRadius;\n\t\tconst radiusStep = ( ( outerRadius - innerRadius ) / phiSegments );\n\t\tconst vertex = new Vector3();\n\t\tconst uv = new Vector2();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let j = 0; j <= phiSegments; j ++ ) {\n\n\t\t\tfor ( let i = 0; i <= thetaSegments; i ++ ) {\n\n\t\t\t\t// values are generate from the inside of the ring to the outside\n\n\t\t\t\tconst segment = thetaStart + i / thetaSegments * thetaLength;\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = radius * Math.cos( segment );\n\t\t\t\tvertex.y = radius * Math.sin( segment );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t\t// uv\n\n\t\t\t\tuv.x = ( vertex.x / outerRadius + 1 ) / 2;\n\t\t\t\tuv.y = ( vertex.y / outerRadius + 1 ) / 2;\n\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t}\n\n\t\t\t// increase the radius for next row of vertices\n\n\t\t\tradius += radiusStep;\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let j = 0; j < phiSegments; j ++ ) {\n\n\t\t\tconst thetaSegmentLevel = j * ( thetaSegments + 1 );\n\n\t\t\tfor ( let i = 0; i < thetaSegments; i ++ ) {\n\n\t\t\t\tconst segment = i + thetaSegmentLevel;\n\n\t\t\t\tconst a = segment;\n\t\t\t\tconst b = segment + thetaSegments + 1;\n\t\t\t\tconst c = segment + thetaSegments + 2;\n\t\t\t\tconst d = segment + 1;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new RingGeometry( data.innerRadius, data.outerRadius, data.thetaSegments, data.phiSegments, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass ShapeGeometry extends BufferGeometry {\n\n\tconstructor( shapes = new Shape( [ new Vector2( 0, 0.5 ), new Vector2( - 0.5, - 0.5 ), new Vector2( 0.5, - 0.5 ) ] ), curveSegments = 12 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'ShapeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tshapes: shapes,\n\t\t\tcurveSegments: curveSegments\n\t\t};\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tlet groupStart = 0;\n\t\tlet groupCount = 0;\n\n\t\t// allow single and array values for \"shapes\" parameter\n\n\t\tif ( Array.isArray( shapes ) === false ) {\n\n\t\t\taddShape( shapes );\n\n\t\t} else {\n\n\t\t\tfor ( let i = 0; i < shapes.length; i ++ ) {\n\n\t\t\t\taddShape( shapes[ i ] );\n\n\t\t\t\tthis.addGroup( groupStart, groupCount, i ); // enables MultiMaterial support\n\n\t\t\t\tgroupStart += groupCount;\n\t\t\t\tgroupCount = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\n\t\t// helper functions\n\n\t\tfunction addShape( shape ) {\n\n\t\t\tconst indexOffset = vertices.length / 3;\n\t\t\tconst points = shape.extractPoints( curveSegments );\n\n\t\t\tlet shapeVertices = points.shape;\n\t\t\tconst shapeHoles = points.holes;\n\n\t\t\t// check direction of vertices\n\n\t\t\tif ( ShapeUtils.isClockWise( shapeVertices ) === false ) {\n\n\t\t\t\tshapeVertices = shapeVertices.reverse();\n\n\t\t\t}\n\n\t\t\tfor ( let i = 0, l = shapeHoles.length; i < l; i ++ ) {\n\n\t\t\t\tconst shapeHole = shapeHoles[ i ];\n\n\t\t\t\tif ( ShapeUtils.isClockWise( shapeHole ) === true ) {\n\n\t\t\t\t\tshapeHoles[ i ] = shapeHole.reverse();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst faces = ShapeUtils.triangulateShape( shapeVertices, shapeHoles );\n\n\t\t\t// join vertices of inner and outer paths to a single array\n\n\t\t\tfor ( let i = 0, l = shapeHoles.length; i < l; i ++ ) {\n\n\t\t\t\tconst shapeHole = shapeHoles[ i ];\n\t\t\t\tshapeVertices = shapeVertices.concat( shapeHole );\n\n\t\t\t}\n\n\t\t\t// vertices, normals, uvs\n\n\t\t\tfor ( let i = 0, l = shapeVertices.length; i < l; i ++ ) {\n\n\t\t\t\tconst vertex = shapeVertices[ i ];\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, 0 );\n\t\t\t\tnormals.push( 0, 0, 1 );\n\t\t\t\tuvs.push( vertex.x, vertex.y ); // world uvs\n\n\t\t\t}\n\n\t\t\t// indices\n\n\t\t\tfor ( let i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\t\tconst face = faces[ i ];\n\n\t\t\t\tconst a = face[ 0 ] + indexOffset;\n\t\t\t\tconst b = face[ 1 ] + indexOffset;\n\t\t\t\tconst c = face[ 2 ] + indexOffset;\n\n\t\t\t\tindices.push( a, b, c );\n\t\t\t\tgroupCount += 3;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tconst shapes = this.parameters.shapes;\n\n\t\treturn toJSON( shapes, data );\n\n\t}\n\n\tstatic fromJSON( data, shapes ) {\n\n\t\tconst geometryShapes = [];\n\n\t\tfor ( let j = 0, jl = data.shapes.length; j < jl; j ++ ) {\n\n\t\t\tconst shape = shapes[ data.shapes[ j ] ];\n\n\t\t\tgeometryShapes.push( shape );\n\n\t\t}\n\n\t\treturn new ShapeGeometry( geometryShapes, data.curveSegments );\n\n\t}\n\n}\n\nfunction toJSON( shapes, data ) {\n\n\tdata.shapes = [];\n\n\tif ( Array.isArray( shapes ) ) {\n\n\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tconst shape = shapes[ i ];\n\n\t\t\tdata.shapes.push( shape.uuid );\n\n\t\t}\n\n\t} else {\n\n\t\tdata.shapes.push( shapes.uuid );\n\n\t}\n\n\treturn data;\n\n}\n\nclass SphereGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, widthSegments = 32, heightSegments = 16, phiStart = 0, phiLength = Math.PI * 2, thetaStart = 0, thetaLength = Math.PI ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'SphereGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\tphiStart: phiStart,\n\t\t\tphiLength: phiLength,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\twidthSegments = Math.max( 3, Math.floor( widthSegments ) );\n\t\theightSegments = Math.max( 2, Math.floor( heightSegments ) );\n\n\t\tconst thetaEnd = Math.min( thetaStart + thetaLength, Math.PI );\n\n\t\tlet index = 0;\n\t\tconst grid = [];\n\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let iy = 0; iy <= heightSegments; iy ++ ) {\n\n\t\t\tconst verticesRow = [];\n\n\t\t\tconst v = iy / heightSegments;\n\n\t\t\t// special case for the poles\n\n\t\t\tlet uOffset = 0;\n\n\t\t\tif ( iy === 0 && thetaStart === 0 ) {\n\n\t\t\t\tuOffset = 0.5 / widthSegments;\n\n\t\t\t} else if ( iy === heightSegments && thetaEnd === Math.PI ) {\n\n\t\t\t\tuOffset = - 0.5 / widthSegments;\n\n\t\t\t}\n\n\t\t\tfor ( let ix = 0; ix <= widthSegments; ix ++ ) {\n\n\t\t\t\tconst u = ix / widthSegments;\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = - radius * Math.cos( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\n\t\t\t\tvertex.y = radius * Math.cos( thetaStart + v * thetaLength );\n\t\t\t\tvertex.z = radius * Math.sin( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormal.copy( vertex ).normalize();\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( u + uOffset, 1 - v );\n\n\t\t\t\tverticesRow.push( index ++ );\n\n\t\t\t}\n\n\t\t\tgrid.push( verticesRow );\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let iy = 0; iy < heightSegments; iy ++ ) {\n\n\t\t\tfor ( let ix = 0; ix < widthSegments; ix ++ ) {\n\n\t\t\t\tconst a = grid[ iy ][ ix + 1 ];\n\t\t\t\tconst b = grid[ iy ][ ix ];\n\t\t\t\tconst c = grid[ iy + 1 ][ ix ];\n\t\t\t\tconst d = grid[ iy + 1 ][ ix + 1 ];\n\n\t\t\t\tif ( iy !== 0 || thetaStart > 0 ) indices.push( a, b, d );\n\t\t\t\tif ( iy !== heightSegments - 1 || thetaEnd < Math.PI ) indices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new SphereGeometry( data.radius, data.widthSegments, data.heightSegments, data.phiStart, data.phiLength, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass TetrahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst vertices = [\n\t\t\t1, 1, 1, \t- 1, - 1, 1, \t- 1, 1, - 1, \t1, - 1, - 1\n\t\t];\n\n\t\tconst indices = [\n\t\t\t2, 1, 0, \t0, 3, 2,\t1, 3, 0,\t2, 3, 1\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'TetrahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new TetrahedronGeometry( data.radius, data.detail );\n\n\t}\n\n}\n\nclass TorusGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, tube = 0.4, radialSegments = 12, tubularSegments = 48, arc = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'TorusGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\ttube: tube,\n\t\t\tradialSegments: radialSegments,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tarc: arc\n\t\t};\n\n\t\tradialSegments = Math.floor( radialSegments );\n\t\ttubularSegments = Math.floor( tubularSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tconst center = new Vector3();\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\tfor ( let i = 0; i <= tubularSegments; i ++ ) {\n\n\t\t\t\tconst u = i / tubularSegments * arc;\n\t\t\t\tconst v = j / radialSegments * Math.PI * 2;\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = ( radius + tube * Math.cos( v ) ) * Math.cos( u );\n\t\t\t\tvertex.y = ( radius + tube * Math.cos( v ) ) * Math.sin( u );\n\t\t\t\tvertex.z = tube * Math.sin( v );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tcenter.x = radius * Math.cos( u );\n\t\t\t\tcenter.y = radius * Math.sin( u );\n\t\t\t\tnormal.subVectors( vertex, center ).normalize();\n\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( i / tubularSegments );\n\t\t\t\tuvs.push( j / radialSegments );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( let j = 1; j <= radialSegments; j ++ ) {\n\n\t\t\tfor ( let i = 1; i <= tubularSegments; i ++ ) {\n\n\t\t\t\t// indices\n\n\t\t\t\tconst a = ( tubularSegments + 1 ) * j + i - 1;\n\t\t\t\tconst b = ( tubularSegments + 1 ) * ( j - 1 ) + i - 1;\n\t\t\t\tconst c = ( tubularSegments + 1 ) * ( j - 1 ) + i;\n\t\t\t\tconst d = ( tubularSegments + 1 ) * j + i;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new TorusGeometry( data.radius, data.tube, data.radialSegments, data.tubularSegments, data.arc );\n\n\t}\n\n}\n\nclass TorusKnotGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, tube = 0.4, tubularSegments = 64, radialSegments = 8, p = 2, q = 3 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'TorusKnotGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\ttube: tube,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tradialSegments: radialSegments,\n\t\t\tp: p,\n\t\t\tq: q\n\t\t};\n\n\t\ttubularSegments = Math.floor( tubularSegments );\n\t\tradialSegments = Math.floor( radialSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\n\t\tconst P1 = new Vector3();\n\t\tconst P2 = new Vector3();\n\n\t\tconst B = new Vector3();\n\t\tconst T = new Vector3();\n\t\tconst N = new Vector3();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let i = 0; i <= tubularSegments; ++ i ) {\n\n\t\t\t// the radian \"u\" is used to calculate the position on the torus curve of the current tubular segment\n\n\t\t\tconst u = i / tubularSegments * p * Math.PI * 2;\n\n\t\t\t// now we calculate two points. P1 is our current position on the curve, P2 is a little farther ahead.\n\t\t\t// these points are used to create a special \"coordinate space\", which is necessary to calculate the correct vertex positions\n\n\t\t\tcalculatePositionOnCurve( u, p, q, radius, P1 );\n\t\t\tcalculatePositionOnCurve( u + 0.01, p, q, radius, P2 );\n\n\t\t\t// calculate orthonormal basis\n\n\t\t\tT.subVectors( P2, P1 );\n\t\t\tN.addVectors( P2, P1 );\n\t\t\tB.crossVectors( T, N );\n\t\t\tN.crossVectors( B, T );\n\n\t\t\t// normalize B, N. T can be ignored, we don't use it\n\n\t\t\tB.normalize();\n\t\t\tN.normalize();\n\n\t\t\tfor ( let j = 0; j <= radialSegments; ++ j ) {\n\n\t\t\t\t// now calculate the vertices. they are nothing more than an extrusion of the torus curve.\n\t\t\t\t// because we extrude a shape in the xy-plane, there is no need to calculate a z-value.\n\n\t\t\t\tconst v = j / radialSegments * Math.PI * 2;\n\t\t\t\tconst cx = - tube * Math.cos( v );\n\t\t\t\tconst cy = tube * Math.sin( v );\n\n\t\t\t\t// now calculate the final vertex position.\n\t\t\t\t// first we orient the extrusion with our basis vectors, then we add it to the current position on the curve\n\n\t\t\t\tvertex.x = P1.x + ( cx * N.x + cy * B.x );\n\t\t\t\tvertex.y = P1.y + ( cx * N.y + cy * B.y );\n\t\t\t\tvertex.z = P1.z + ( cx * N.z + cy * B.z );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal (P1 is always the center/origin of the extrusion, thus we can use it to calculate the normal)\n\n\t\t\t\tnormal.subVectors( vertex, P1 ).normalize();\n\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( i / tubularSegments );\n\t\t\t\tuvs.push( j / radialSegments );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( let j = 1; j <= tubularSegments; j ++ ) {\n\n\t\t\tfor ( let i = 1; i <= radialSegments; i ++ ) {\n\n\t\t\t\t// indices\n\n\t\t\t\tconst a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\n\t\t\t\tconst b = ( radialSegments + 1 ) * j + ( i - 1 );\n\t\t\t\tconst c = ( radialSegments + 1 ) * j + i;\n\t\t\t\tconst d = ( radialSegments + 1 ) * ( j - 1 ) + i;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\t// this function calculates the current position on the torus curve\n\n\t\tfunction calculatePositionOnCurve( u, p, q, radius, position ) {\n\n\t\t\tconst cu = Math.cos( u );\n\t\t\tconst su = Math.sin( u );\n\t\t\tconst quOverP = q / p * u;\n\t\t\tconst cs = Math.cos( quOverP );\n\n\t\t\tposition.x = radius * ( 2 + cs ) * 0.5 * cu;\n\t\t\tposition.y = radius * ( 2 + cs ) * su * 0.5;\n\t\t\tposition.z = radius * Math.sin( quOverP ) * 0.5;\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new TorusKnotGeometry( data.radius, data.tube, data.tubularSegments, data.radialSegments, data.p, data.q );\n\n\t}\n\n}\n\nclass TubeGeometry extends BufferGeometry {\n\n\tconstructor( path = new QuadraticBezierCurve3( new Vector3( - 1, - 1, 0 ), new Vector3( - 1, 1, 0 ), new Vector3( 1, 1, 0 ) ), tubularSegments = 64, radius = 1, radialSegments = 8, closed = false ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'TubeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tpath: path,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tradius: radius,\n\t\t\tradialSegments: radialSegments,\n\t\t\tclosed: closed\n\t\t};\n\n\t\tconst frames = path.computeFrenetFrames( tubularSegments, closed );\n\n\t\t// expose internals\n\n\t\tthis.tangents = frames.tangents;\n\t\tthis.normals = frames.normals;\n\t\tthis.binormals = frames.binormals;\n\n\t\t// helper variables\n\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\t\tconst uv = new Vector2();\n\t\tlet P = new Vector3();\n\n\t\t// buffer\n\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\t\tconst indices = [];\n\n\t\t// create buffer data\n\n\t\tgenerateBufferData();\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\t// functions\n\n\t\tfunction generateBufferData() {\n\n\t\t\tfor ( let i = 0; i < tubularSegments; i ++ ) {\n\n\t\t\t\tgenerateSegment( i );\n\n\t\t\t}\n\n\t\t\t// if the geometry is not closed, generate the last row of vertices and normals\n\t\t\t// at the regular position on the given path\n\t\t\t//\n\t\t\t// if the geometry is closed, duplicate the first row of vertices and normals (uvs will differ)\n\n\t\t\tgenerateSegment( ( closed === false ) ? tubularSegments : 0 );\n\n\t\t\t// uvs are generated in a separate function.\n\t\t\t// this makes it easy compute correct values for closed geometries\n\n\t\t\tgenerateUVs();\n\n\t\t\t// finally create faces\n\n\t\t\tgenerateIndices();\n\n\t\t}\n\n\t\tfunction generateSegment( i ) {\n\n\t\t\t// we use getPointAt to sample evenly distributed points from the given path\n\n\t\t\tP = path.getPointAt( i / tubularSegments, P );\n\n\t\t\t// retrieve corresponding normal and binormal\n\n\t\t\tconst N = frames.normals[ i ];\n\t\t\tconst B = frames.binormals[ i ];\n\n\t\t\t// generate normals and vertices for the current segment\n\n\t\t\tfor ( let j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\t\tconst v = j / radialSegments * Math.PI * 2;\n\n\t\t\t\tconst sin = Math.sin( v );\n\t\t\t\tconst cos = - Math.cos( v );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormal.x = ( cos * N.x + sin * B.x );\n\t\t\t\tnormal.y = ( cos * N.y + sin * B.y );\n\t\t\t\tnormal.z = ( cos * N.z + sin * B.z );\n\t\t\t\tnormal.normalize();\n\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = P.x + radius * normal.x;\n\t\t\t\tvertex.y = P.y + radius * normal.y;\n\t\t\t\tvertex.z = P.z + radius * normal.z;\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction generateIndices() {\n\n\t\t\tfor ( let j = 1; j <= tubularSegments; j ++ ) {\n\n\t\t\t\tfor ( let i = 1; i <= radialSegments; i ++ ) {\n\n\t\t\t\t\tconst a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\n\t\t\t\t\tconst b = ( radialSegments + 1 ) * j + ( i - 1 );\n\t\t\t\t\tconst c = ( radialSegments + 1 ) * j + i;\n\t\t\t\t\tconst d = ( radialSegments + 1 ) * ( j - 1 ) + i;\n\n\t\t\t\t\t// faces\n\n\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction generateUVs() {\n\n\t\t\tfor ( let i = 0; i <= tubularSegments; i ++ ) {\n\n\t\t\t\tfor ( let j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\t\t\tuv.x = i / tubularSegments;\n\t\t\t\t\tuv.y = j / radialSegments;\n\n\t\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.path = this.parameters.path.toJSON();\n\n\t\treturn data;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\t// This only works for built-in curves (e.g. CatmullRomCurve3).\n\t\t// User defined curves or instances of CurvePath will not be deserialized.\n\t\treturn new TubeGeometry(\n\t\t\tnew Curves[ data.path.type ]().fromJSON( data.path ),\n\t\t\tdata.tubularSegments,\n\t\t\tdata.radius,\n\t\t\tdata.radialSegments,\n\t\t\tdata.closed\n\t\t);\n\n\t}\n\n}\n\nclass WireframeGeometry extends BufferGeometry {\n\n\tconstructor( geometry = null ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'WireframeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tgeometry: geometry\n\t\t};\n\n\t\tif ( geometry !== null ) {\n\n\t\t\t// buffer\n\n\t\t\tconst vertices = [];\n\t\t\tconst edges = new Set();\n\n\t\t\t// helper variables\n\n\t\t\tconst start = new Vector3();\n\t\t\tconst end = new Vector3();\n\n\t\t\tif ( geometry.index !== null ) {\n\n\t\t\t\t// indexed BufferGeometry\n\n\t\t\t\tconst position = geometry.attributes.position;\n\t\t\t\tconst indices = geometry.index;\n\t\t\t\tlet groups = geometry.groups;\n\n\t\t\t\tif ( groups.length === 0 ) {\n\n\t\t\t\t\tgroups = [ { start: 0, count: indices.count, materialIndex: 0 } ];\n\n\t\t\t\t}\n\n\t\t\t\t// create a data structure that contains all edges without duplicates\n\n\t\t\t\tfor ( let o = 0, ol = groups.length; o < ol; ++ o ) {\n\n\t\t\t\t\tconst group = groups[ o ];\n\n\t\t\t\t\tconst groupStart = group.start;\n\t\t\t\t\tconst groupCount = group.count;\n\n\t\t\t\t\tfor ( let i = groupStart, l = ( groupStart + groupCount ); i < l; i += 3 ) {\n\n\t\t\t\t\t\tfor ( let j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t\t\tconst index1 = indices.getX( i + j );\n\t\t\t\t\t\t\tconst index2 = indices.getX( i + ( j + 1 ) % 3 );\n\n\t\t\t\t\t\t\tstart.fromBufferAttribute( position, index1 );\n\t\t\t\t\t\t\tend.fromBufferAttribute( position, index2 );\n\n\t\t\t\t\t\t\tif ( isUniqueEdge( start, end, edges ) === true ) {\n\n\t\t\t\t\t\t\t\tvertices.push( start.x, start.y, start.z );\n\t\t\t\t\t\t\t\tvertices.push( end.x, end.y, end.z );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// non-indexed BufferGeometry\n\n\t\t\t\tconst position = geometry.attributes.position;\n\n\t\t\t\tfor ( let i = 0, l = ( position.count / 3 ); i < l; i ++ ) {\n\n\t\t\t\t\tfor ( let j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t\t// three edges per triangle, an edge is represented as (index1, index2)\n\t\t\t\t\t\t// e.g. the first triangle has the following edges: (0,1),(1,2),(2,0)\n\n\t\t\t\t\t\tconst index1 = 3 * i + j;\n\t\t\t\t\t\tconst index2 = 3 * i + ( ( j + 1 ) % 3 );\n\n\t\t\t\t\t\tstart.fromBufferAttribute( position, index1 );\n\t\t\t\t\t\tend.fromBufferAttribute( position, index2 );\n\n\t\t\t\t\t\tif ( isUniqueEdge( start, end, edges ) === true ) {\n\n\t\t\t\t\t\t\tvertices.push( start.x, start.y, start.z );\n\t\t\t\t\t\t\tvertices.push( end.x, end.y, end.z );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// build geometry\n\n\t\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n}\n\nfunction isUniqueEdge( start, end, edges ) {\n\n\tconst hash1 = `${start.x},${start.y},${start.z}-${end.x},${end.y},${end.z}`;\n\tconst hash2 = `${end.x},${end.y},${end.z}-${start.x},${start.y},${start.z}`; // coincident edge\n\n\tif ( edges.has( hash1 ) === true || edges.has( hash2 ) === true ) {\n\n\t\treturn false;\n\n\t} else {\n\n\t\tedges.add( hash1 );\n\t\tedges.add( hash2 );\n\t\treturn true;\n\n\t}\n\n}\n\nvar Geometries = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tBoxGeometry: BoxGeometry,\n\tCapsuleGeometry: CapsuleGeometry,\n\tCircleGeometry: CircleGeometry,\n\tConeGeometry: ConeGeometry,\n\tCylinderGeometry: CylinderGeometry,\n\tDodecahedronGeometry: DodecahedronGeometry,\n\tEdgesGeometry: EdgesGeometry,\n\tExtrudeGeometry: ExtrudeGeometry,\n\tIcosahedronGeometry: IcosahedronGeometry,\n\tLatheGeometry: LatheGeometry,\n\tOctahedronGeometry: OctahedronGeometry,\n\tPlaneGeometry: PlaneGeometry,\n\tPolyhedronGeometry: PolyhedronGeometry,\n\tRingGeometry: RingGeometry,\n\tShapeGeometry: ShapeGeometry,\n\tSphereGeometry: SphereGeometry,\n\tTetrahedronGeometry: TetrahedronGeometry,\n\tTorusGeometry: TorusGeometry,\n\tTorusKnotGeometry: TorusKnotGeometry,\n\tTubeGeometry: TubeGeometry,\n\tWireframeGeometry: WireframeGeometry\n});\n\nclass ShadowMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isShadowMaterial = true;\n\n\t\tthis.type = 'ShadowMaterial';\n\n\t\tthis.color = new Color( 0x000000 );\n\t\tthis.transparent = true;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass RawShaderMaterial extends ShaderMaterial {\n\n\tconstructor( parameters ) {\n\n\t\tsuper( parameters );\n\n\t\tthis.isRawShaderMaterial = true;\n\n\t\tthis.type = 'RawShaderMaterial';\n\n\t}\n\n}\n\nclass MeshStandardMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshStandardMaterial = true;\n\n\t\tthis.defines = { 'STANDARD': '' };\n\n\t\tthis.type = 'MeshStandardMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\t\tthis.roughness = 1.0;\n\t\tthis.metalness = 0.0;\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.roughnessMap = null;\n\n\t\tthis.metalnessMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.envMapRotation = new Euler();\n\t\tthis.envMapIntensity = 1.0;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.flatShading = false;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.defines = { 'STANDARD': '' };\n\n\t\tthis.color.copy( source.color );\n\t\tthis.roughness = source.roughness;\n\t\tthis.metalness = source.metalness;\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.roughnessMap = source.roughnessMap;\n\n\t\tthis.metalnessMap = source.metalnessMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.envMapRotation.copy( source.envMapRotation );\n\t\tthis.envMapIntensity = source.envMapIntensity;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshPhysicalMaterial extends MeshStandardMaterial {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshPhysicalMaterial = true;\n\n\t\tthis.defines = {\n\n\t\t\t'STANDARD': '',\n\t\t\t'PHYSICAL': ''\n\n\t\t};\n\n\t\tthis.type = 'MeshPhysicalMaterial';\n\n\t\tthis.anisotropyRotation = 0;\n\t\tthis.anisotropyMap = null;\n\n\t\tthis.clearcoatMap = null;\n\t\tthis.clearcoatRoughness = 0.0;\n\t\tthis.clearcoatRoughnessMap = null;\n\t\tthis.clearcoatNormalScale = new Vector2( 1, 1 );\n\t\tthis.clearcoatNormalMap = null;\n\n\t\tthis.ior = 1.5;\n\n\t\tObject.defineProperty( this, 'reflectivity', {\n\t\t\tget: function () {\n\n\t\t\t\treturn ( clamp( 2.5 * ( this.ior - 1 ) / ( this.ior + 1 ), 0, 1 ) );\n\n\t\t\t},\n\t\t\tset: function ( reflectivity ) {\n\n\t\t\t\tthis.ior = ( 1 + 0.4 * reflectivity ) / ( 1 - 0.4 * reflectivity );\n\n\t\t\t}\n\t\t} );\n\n\t\tthis.iridescenceMap = null;\n\t\tthis.iridescenceIOR = 1.3;\n\t\tthis.iridescenceThicknessRange = [ 100, 400 ];\n\t\tthis.iridescenceThicknessMap = null;\n\n\t\tthis.sheenColor = new Color( 0x000000 );\n\t\tthis.sheenColorMap = null;\n\t\tthis.sheenRoughness = 1.0;\n\t\tthis.sheenRoughnessMap = null;\n\n\t\tthis.transmissionMap = null;\n\n\t\tthis.thickness = 0;\n\t\tthis.thicknessMap = null;\n\t\tthis.attenuationDistance = Infinity;\n\t\tthis.attenuationColor = new Color( 1, 1, 1 );\n\n\t\tthis.specularIntensity = 1.0;\n\t\tthis.specularIntensityMap = null;\n\t\tthis.specularColor = new Color( 1, 1, 1 );\n\t\tthis.specularColorMap = null;\n\n\t\tthis._anisotropy = 0;\n\t\tthis._clearcoat = 0;\n\t\tthis._dispersion = 0;\n\t\tthis._iridescence = 0;\n\t\tthis._sheen = 0.0;\n\t\tthis._transmission = 0;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tget anisotropy() {\n\n\t\treturn this._anisotropy;\n\n\t}\n\n\tset anisotropy( value ) {\n\n\t\tif ( this._anisotropy > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._anisotropy = value;\n\n\t}\n\n\tget clearcoat() {\n\n\t\treturn this._clearcoat;\n\n\t}\n\n\tset clearcoat( value ) {\n\n\t\tif ( this._clearcoat > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._clearcoat = value;\n\n\t}\n\n\tget iridescence() {\n\n\t\treturn this._iridescence;\n\n\t}\n\n\tset iridescence( value ) {\n\n\t\tif ( this._iridescence > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._iridescence = value;\n\n\t}\n\n\tget dispersion() {\n\n\t\treturn this._dispersion;\n\n\t}\n\n\tset dispersion( value ) {\n\n\t\tif ( this._dispersion > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._dispersion = value;\n\n\t}\n\n\tget sheen() {\n\n\t\treturn this._sheen;\n\n\t}\n\n\tset sheen( value ) {\n\n\t\tif ( this._sheen > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._sheen = value;\n\n\t}\n\n\tget transmission() {\n\n\t\treturn this._transmission;\n\n\t}\n\n\tset transmission( value ) {\n\n\t\tif ( this._transmission > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._transmission = value;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.defines = {\n\n\t\t\t'STANDARD': '',\n\t\t\t'PHYSICAL': ''\n\n\t\t};\n\n\t\tthis.anisotropy = source.anisotropy;\n\t\tthis.anisotropyRotation = source.anisotropyRotation;\n\t\tthis.anisotropyMap = source.anisotropyMap;\n\n\t\tthis.clearcoat = source.clearcoat;\n\t\tthis.clearcoatMap = source.clearcoatMap;\n\t\tthis.clearcoatRoughness = source.clearcoatRoughness;\n\t\tthis.clearcoatRoughnessMap = source.clearcoatRoughnessMap;\n\t\tthis.clearcoatNormalMap = source.clearcoatNormalMap;\n\t\tthis.clearcoatNormalScale.copy( source.clearcoatNormalScale );\n\n\t\tthis.dispersion = source.dispersion;\n\t\tthis.ior = source.ior;\n\n\t\tthis.iridescence = source.iridescence;\n\t\tthis.iridescenceMap = source.iridescenceMap;\n\t\tthis.iridescenceIOR = source.iridescenceIOR;\n\t\tthis.iridescenceThicknessRange = [ ...source.iridescenceThicknessRange ];\n\t\tthis.iridescenceThicknessMap = source.iridescenceThicknessMap;\n\n\t\tthis.sheen = source.sheen;\n\t\tthis.sheenColor.copy( source.sheenColor );\n\t\tthis.sheenColorMap = source.sheenColorMap;\n\t\tthis.sheenRoughness = source.sheenRoughness;\n\t\tthis.sheenRoughnessMap = source.sheenRoughnessMap;\n\n\t\tthis.transmission = source.transmission;\n\t\tthis.transmissionMap = source.transmissionMap;\n\n\t\tthis.thickness = source.thickness;\n\t\tthis.thicknessMap = source.thicknessMap;\n\t\tthis.attenuationDistance = source.attenuationDistance;\n\t\tthis.attenuationColor.copy( source.attenuationColor );\n\n\t\tthis.specularIntensity = source.specularIntensity;\n\t\tthis.specularIntensityMap = source.specularIntensityMap;\n\t\tthis.specularColor.copy( source.specularColor );\n\t\tthis.specularColorMap = source.specularColorMap;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshPhongMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshPhongMaterial = true;\n\n\t\tthis.type = 'MeshPhongMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\t\tthis.specular = new Color( 0x111111 );\n\t\tthis.shininess = 30;\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.envMapRotation = new Euler();\n\t\tthis.combine = MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.flatShading = false;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\t\tthis.specular.copy( source.specular );\n\t\tthis.shininess = source.shininess;\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.envMapRotation.copy( source.envMapRotation );\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshToonMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshToonMaterial = true;\n\n\t\tthis.defines = { 'TOON': '' };\n\n\t\tthis.type = 'MeshToonMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\t\tthis.gradientMap = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\t\tthis.gradientMap = source.gradientMap;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshNormalMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshNormalMaterial = true;\n\n\t\tthis.type = 'MeshNormalMaterial';\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.flatShading = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshLambertMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshLambertMaterial = true;\n\n\t\tthis.type = 'MeshLambertMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.envMapRotation = new Euler();\n\t\tthis.combine = MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.flatShading = false;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.envMapRotation.copy( source.envMapRotation );\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshMatcapMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshMatcapMaterial = true;\n\n\t\tthis.defines = { 'MATCAP': '' };\n\n\t\tthis.type = 'MeshMatcapMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\n\t\tthis.matcap = null;\n\n\t\tthis.map = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.flatShading = false;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.defines = { 'MATCAP': '' };\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.matcap = source.matcap;\n\n\t\tthis.map = source.map;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LineDashedMaterial extends LineBasicMaterial {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isLineDashedMaterial = true;\n\n\t\tthis.type = 'LineDashedMaterial';\n\n\t\tthis.scale = 1;\n\t\tthis.dashSize = 3;\n\t\tthis.gapSize = 1;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.scale = source.scale;\n\t\tthis.dashSize = source.dashSize;\n\t\tthis.gapSize = source.gapSize;\n\n\t\treturn this;\n\n\t}\n\n}\n\n// converts an array to a specific type\nfunction convertArray( array, type, forceClone ) {\n\n\tif ( ! array || // let 'undefined' and 'null' pass\n\t\t! forceClone && array.constructor === type ) return array;\n\n\tif ( typeof type.BYTES_PER_ELEMENT === 'number' ) {\n\n\t\treturn new type( array ); // create typed array\n\n\t}\n\n\treturn Array.prototype.slice.call( array ); // create Array\n\n}\n\nfunction isTypedArray( object ) {\n\n\treturn ArrayBuffer.isView( object ) &&\n\t\t! ( object instanceof DataView );\n\n}\n\n// returns an array by which times and values can be sorted\nfunction getKeyframeOrder( times ) {\n\n\tfunction compareTime( i, j ) {\n\n\t\treturn times[ i ] - times[ j ];\n\n\t}\n\n\tconst n = times.length;\n\tconst result = new Array( n );\n\tfor ( let i = 0; i !== n; ++ i ) result[ i ] = i;\n\n\tresult.sort( compareTime );\n\n\treturn result;\n\n}\n\n// uses the array previously returned by 'getKeyframeOrder' to sort data\nfunction sortedArray( values, stride, order ) {\n\n\tconst nValues = values.length;\n\tconst result = new values.constructor( nValues );\n\n\tfor ( let i = 0, dstOffset = 0; dstOffset !== nValues; ++ i ) {\n\n\t\tconst srcOffset = order[ i ] * stride;\n\n\t\tfor ( let j = 0; j !== stride; ++ j ) {\n\n\t\t\tresult[ dstOffset ++ ] = values[ srcOffset + j ];\n\n\t\t}\n\n\t}\n\n\treturn result;\n\n}\n\n// function for parsing AOS keyframe formats\nfunction flattenJSON( jsonKeys, times, values, valuePropertyName ) {\n\n\tlet i = 1, key = jsonKeys[ 0 ];\n\n\twhile ( key !== undefined && key[ valuePropertyName ] === undefined ) {\n\n\t\tkey = jsonKeys[ i ++ ];\n\n\t}\n\n\tif ( key === undefined ) return; // no data\n\n\tlet value = key[ valuePropertyName ];\n\tif ( value === undefined ) return; // no data\n\n\tif ( Array.isArray( value ) ) {\n\n\t\tdo {\n\n\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\tif ( value !== undefined ) {\n\n\t\t\t\ttimes.push( key.time );\n\t\t\t\tvalues.push.apply( values, value ); // push all elements\n\n\t\t\t}\n\n\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t} while ( key !== undefined );\n\n\t} else if ( value.toArray !== undefined ) {\n\n\t\t// ...assume THREE.Math-ish\n\n\t\tdo {\n\n\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\tif ( value !== undefined ) {\n\n\t\t\t\ttimes.push( key.time );\n\t\t\t\tvalue.toArray( values, values.length );\n\n\t\t\t}\n\n\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t} while ( key !== undefined );\n\n\t} else {\n\n\t\t// otherwise push as-is\n\n\t\tdo {\n\n\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\tif ( value !== undefined ) {\n\n\t\t\t\ttimes.push( key.time );\n\t\t\t\tvalues.push( value );\n\n\t\t\t}\n\n\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t} while ( key !== undefined );\n\n\t}\n\n}\n\nfunction subclip( sourceClip, name, startFrame, endFrame, fps = 30 ) {\n\n\tconst clip = sourceClip.clone();\n\n\tclip.name = name;\n\n\tconst tracks = [];\n\n\tfor ( let i = 0; i < clip.tracks.length; ++ i ) {\n\n\t\tconst track = clip.tracks[ i ];\n\t\tconst valueSize = track.getValueSize();\n\n\t\tconst times = [];\n\t\tconst values = [];\n\n\t\tfor ( let j = 0; j < track.times.length; ++ j ) {\n\n\t\t\tconst frame = track.times[ j ] * fps;\n\n\t\t\tif ( frame < startFrame || frame >= endFrame ) continue;\n\n\t\t\ttimes.push( track.times[ j ] );\n\n\t\t\tfor ( let k = 0; k < valueSize; ++ k ) {\n\n\t\t\t\tvalues.push( track.values[ j * valueSize + k ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( times.length === 0 ) continue;\n\n\t\ttrack.times = convertArray( times, track.times.constructor );\n\t\ttrack.values = convertArray( values, track.values.constructor );\n\n\t\ttracks.push( track );\n\n\t}\n\n\tclip.tracks = tracks;\n\n\t// find minimum .times value across all tracks in the trimmed clip\n\n\tlet minStartTime = Infinity;\n\n\tfor ( let i = 0; i < clip.tracks.length; ++ i ) {\n\n\t\tif ( minStartTime > clip.tracks[ i ].times[ 0 ] ) {\n\n\t\t\tminStartTime = clip.tracks[ i ].times[ 0 ];\n\n\t\t}\n\n\t}\n\n\t// shift all tracks such that clip begins at t=0\n\n\tfor ( let i = 0; i < clip.tracks.length; ++ i ) {\n\n\t\tclip.tracks[ i ].shift( - 1 * minStartTime );\n\n\t}\n\n\tclip.resetDuration();\n\n\treturn clip;\n\n}\n\nfunction makeClipAdditive( targetClip, referenceFrame = 0, referenceClip = targetClip, fps = 30 ) {\n\n\tif ( fps <= 0 ) fps = 30;\n\n\tconst numTracks = referenceClip.tracks.length;\n\tconst referenceTime = referenceFrame / fps;\n\n\t// Make each track's values relative to the values at the reference frame\n\tfor ( let i = 0; i < numTracks; ++ i ) {\n\n\t\tconst referenceTrack = referenceClip.tracks[ i ];\n\t\tconst referenceTrackType = referenceTrack.ValueTypeName;\n\n\t\t// Skip this track if it's non-numeric\n\t\tif ( referenceTrackType === 'bool' || referenceTrackType === 'string' ) continue;\n\n\t\t// Find the track in the target clip whose name and type matches the reference track\n\t\tconst targetTrack = targetClip.tracks.find( function ( track ) {\n\n\t\t\treturn track.name === referenceTrack.name\n\t\t\t\t&& track.ValueTypeName === referenceTrackType;\n\n\t\t} );\n\n\t\tif ( targetTrack === undefined ) continue;\n\n\t\tlet referenceOffset = 0;\n\t\tconst referenceValueSize = referenceTrack.getValueSize();\n\n\t\tif ( referenceTrack.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline ) {\n\n\t\t\treferenceOffset = referenceValueSize / 3;\n\n\t\t}\n\n\t\tlet targetOffset = 0;\n\t\tconst targetValueSize = targetTrack.getValueSize();\n\n\t\tif ( targetTrack.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline ) {\n\n\t\t\ttargetOffset = targetValueSize / 3;\n\n\t\t}\n\n\t\tconst lastIndex = referenceTrack.times.length - 1;\n\t\tlet referenceValue;\n\n\t\t// Find the value to subtract out of the track\n\t\tif ( referenceTime <= referenceTrack.times[ 0 ] ) {\n\n\t\t\t// Reference frame is earlier than the first keyframe, so just use the first keyframe\n\t\t\tconst startIndex = referenceOffset;\n\t\t\tconst endIndex = referenceValueSize - referenceOffset;\n\t\t\treferenceValue = referenceTrack.values.slice( startIndex, endIndex );\n\n\t\t} else if ( referenceTime >= referenceTrack.times[ lastIndex ] ) {\n\n\t\t\t// Reference frame is after the last keyframe, so just use the last keyframe\n\t\t\tconst startIndex = lastIndex * referenceValueSize + referenceOffset;\n\t\t\tconst endIndex = startIndex + referenceValueSize - referenceOffset;\n\t\t\treferenceValue = referenceTrack.values.slice( startIndex, endIndex );\n\n\t\t} else {\n\n\t\t\t// Interpolate to the reference value\n\t\t\tconst interpolant = referenceTrack.createInterpolant();\n\t\t\tconst startIndex = referenceOffset;\n\t\t\tconst endIndex = referenceValueSize - referenceOffset;\n\t\t\tinterpolant.evaluate( referenceTime );\n\t\t\treferenceValue = interpolant.resultBuffer.slice( startIndex, endIndex );\n\n\t\t}\n\n\t\t// Conjugate the quaternion\n\t\tif ( referenceTrackType === 'quaternion' ) {\n\n\t\t\tconst referenceQuat = new Quaternion().fromArray( referenceValue ).normalize().conjugate();\n\t\t\treferenceQuat.toArray( referenceValue );\n\n\t\t}\n\n\t\t// Subtract the reference value from all of the track values\n\n\t\tconst numTimes = targetTrack.times.length;\n\t\tfor ( let j = 0; j < numTimes; ++ j ) {\n\n\t\t\tconst valueStart = j * targetValueSize + targetOffset;\n\n\t\t\tif ( referenceTrackType === 'quaternion' ) {\n\n\t\t\t\t// Multiply the conjugate for quaternion track types\n\t\t\t\tQuaternion.multiplyQuaternionsFlat(\n\t\t\t\t\ttargetTrack.values,\n\t\t\t\t\tvalueStart,\n\t\t\t\t\treferenceValue,\n\t\t\t\t\t0,\n\t\t\t\t\ttargetTrack.values,\n\t\t\t\t\tvalueStart\n\t\t\t\t);\n\n\t\t\t} else {\n\n\t\t\t\tconst valueEnd = targetValueSize - targetOffset * 2;\n\n\t\t\t\t// Subtract each value for all other numeric track types\n\t\t\t\tfor ( let k = 0; k < valueEnd; ++ k ) {\n\n\t\t\t\t\ttargetTrack.values[ valueStart + k ] -= referenceValue[ k ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttargetClip.blendMode = AdditiveAnimationBlendMode;\n\n\treturn targetClip;\n\n}\n\nconst AnimationUtils = {\n\tconvertArray: convertArray,\n\tisTypedArray: isTypedArray,\n\tgetKeyframeOrder: getKeyframeOrder,\n\tsortedArray: sortedArray,\n\tflattenJSON: flattenJSON,\n\tsubclip: subclip,\n\tmakeClipAdditive: makeClipAdditive\n};\n\n/**\n * Abstract base class of interpolants over parametric samples.\n *\n * The parameter domain is one dimensional, typically the time or a path\n * along a curve defined by the data.\n *\n * The sample values can have any dimensionality and derived classes may\n * apply special interpretations to the data.\n *\n * This class provides the interval seek in a Template Method, deferring\n * the actual interpolation to derived classes.\n *\n * Time complexity is O(1) for linear access crossing at most two points\n * and O(log N) for random access, where N is the number of positions.\n *\n * References:\n *\n * \t\thttp://www.oodesign.com/template-method-pattern.html\n *\n */\n\nclass Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tthis.parameterPositions = parameterPositions;\n\t\tthis._cachedIndex = 0;\n\n\t\tthis.resultBuffer = resultBuffer !== undefined ?\n\t\t\tresultBuffer : new sampleValues.constructor( sampleSize );\n\t\tthis.sampleValues = sampleValues;\n\t\tthis.valueSize = sampleSize;\n\n\t\tthis.settings = null;\n\t\tthis.DefaultSettings_ = {};\n\n\t}\n\n\tevaluate( t ) {\n\n\t\tconst pp = this.parameterPositions;\n\t\tlet i1 = this._cachedIndex,\n\t\t\tt1 = pp[ i1 ],\n\t\t\tt0 = pp[ i1 - 1 ];\n\n\t\tvalidate_interval: {\n\n\t\t\tseek: {\n\n\t\t\t\tlet right;\n\n\t\t\t\tlinear_scan: {\n\n\t\t\t\t\t//- See http://jsperf.com/comparison-to-undefined/3\n\t\t\t\t\t//- slower code:\n\t\t\t\t\t//-\n\t\t\t\t\t//- \t\t\t\tif ( t >= t1 || t1 === undefined ) {\n\t\t\t\t\tforward_scan: if ( ! ( t < t1 ) ) {\n\n\t\t\t\t\t\tfor ( let giveUpAt = i1 + 2; ; ) {\n\n\t\t\t\t\t\t\tif ( t1 === undefined ) {\n\n\t\t\t\t\t\t\t\tif ( t < t0 ) break forward_scan;\n\n\t\t\t\t\t\t\t\t// after end\n\n\t\t\t\t\t\t\t\ti1 = pp.length;\n\t\t\t\t\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\t\t\t\t\treturn this.copySampleValue_( i1 - 1 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( i1 === giveUpAt ) break; // this loop\n\n\t\t\t\t\t\t\tt0 = t1;\n\t\t\t\t\t\t\tt1 = pp[ ++ i1 ];\n\n\t\t\t\t\t\t\tif ( t < t1 ) {\n\n\t\t\t\t\t\t\t\t// we have arrived at the sought interval\n\t\t\t\t\t\t\t\tbreak seek;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// prepare binary search on the right side of the index\n\t\t\t\t\t\tright = pp.length;\n\t\t\t\t\t\tbreak linear_scan;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t//- slower code:\n\t\t\t\t\t//-\t\t\t\t\tif ( t < t0 || t0 === undefined ) {\n\t\t\t\t\tif ( ! ( t >= t0 ) ) {\n\n\t\t\t\t\t\t// looping?\n\n\t\t\t\t\t\tconst t1global = pp[ 1 ];\n\n\t\t\t\t\t\tif ( t < t1global ) {\n\n\t\t\t\t\t\t\ti1 = 2; // + 1, using the scan for the details\n\t\t\t\t\t\t\tt0 = t1global;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// linear reverse scan\n\n\t\t\t\t\t\tfor ( let giveUpAt = i1 - 2; ; ) {\n\n\t\t\t\t\t\t\tif ( t0 === undefined ) {\n\n\t\t\t\t\t\t\t\t// before start\n\n\t\t\t\t\t\t\t\tthis._cachedIndex = 0;\n\t\t\t\t\t\t\t\treturn this.copySampleValue_( 0 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( i1 === giveUpAt ) break; // this loop\n\n\t\t\t\t\t\t\tt1 = t0;\n\t\t\t\t\t\t\tt0 = pp[ -- i1 - 1 ];\n\n\t\t\t\t\t\t\tif ( t >= t0 ) {\n\n\t\t\t\t\t\t\t\t// we have arrived at the sought interval\n\t\t\t\t\t\t\t\tbreak seek;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// prepare binary search on the left side of the index\n\t\t\t\t\t\tright = i1;\n\t\t\t\t\t\ti1 = 0;\n\t\t\t\t\t\tbreak linear_scan;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// the interval is valid\n\n\t\t\t\t\tbreak validate_interval;\n\n\t\t\t\t} // linear scan\n\n\t\t\t\t// binary search\n\n\t\t\t\twhile ( i1 < right ) {\n\n\t\t\t\t\tconst mid = ( i1 + right ) >>> 1;\n\n\t\t\t\t\tif ( t < pp[ mid ] ) {\n\n\t\t\t\t\t\tright = mid;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ti1 = mid + 1;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tt1 = pp[ i1 ];\n\t\t\t\tt0 = pp[ i1 - 1 ];\n\n\t\t\t\t// check boundary cases, again\n\n\t\t\t\tif ( t0 === undefined ) {\n\n\t\t\t\t\tthis._cachedIndex = 0;\n\t\t\t\t\treturn this.copySampleValue_( 0 );\n\n\t\t\t\t}\n\n\t\t\t\tif ( t1 === undefined ) {\n\n\t\t\t\t\ti1 = pp.length;\n\t\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\t\treturn this.copySampleValue_( i1 - 1 );\n\n\t\t\t\t}\n\n\t\t\t} // seek\n\n\t\t\tthis._cachedIndex = i1;\n\n\t\t\tthis.intervalChanged_( i1, t0, t1 );\n\n\t\t} // validate_interval\n\n\t\treturn this.interpolate_( i1, t0, t, t1 );\n\n\t}\n\n\tgetSettings_() {\n\n\t\treturn this.settings || this.DefaultSettings_;\n\n\t}\n\n\tcopySampleValue_( index ) {\n\n\t\t// copies a sample value to the result buffer\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = index * stride;\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] = values[ offset + i ];\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n\t// Template methods for derived classes:\n\n\tinterpolate_( /* i1, t0, t, t1 */ ) {\n\n\t\tthrow new Error( 'call to abstract method' );\n\t\t// implementations shall return this.resultBuffer\n\n\t}\n\n\tintervalChanged_( /* i1, t0, t1 */ ) {\n\n\t\t// empty\n\n\t}\n\n}\n\n/**\n * Fast and simple cubic spline interpolant.\n *\n * It was derived from a Hermitian construction setting the first derivative\n * at each sample position to the linear slope between neighboring positions\n * over their parameter interval.\n */\n\nclass CubicInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t\tthis._weightPrev = - 0;\n\t\tthis._offsetPrev = - 0;\n\t\tthis._weightNext = - 0;\n\t\tthis._offsetNext = - 0;\n\n\t\tthis.DefaultSettings_ = {\n\n\t\t\tendingStart: ZeroCurvatureEnding,\n\t\t\tendingEnd: ZeroCurvatureEnding\n\n\t\t};\n\n\t}\n\n\tintervalChanged_( i1, t0, t1 ) {\n\n\t\tconst pp = this.parameterPositions;\n\t\tlet iPrev = i1 - 2,\n\t\t\tiNext = i1 + 1,\n\n\t\t\ttPrev = pp[ iPrev ],\n\t\t\ttNext = pp[ iNext ];\n\n\t\tif ( tPrev === undefined ) {\n\n\t\t\tswitch ( this.getSettings_().endingStart ) {\n\n\t\t\t\tcase ZeroSlopeEnding:\n\n\t\t\t\t\t// f'(t0) = 0\n\t\t\t\t\tiPrev = i1;\n\t\t\t\t\ttPrev = 2 * t0 - t1;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase WrapAroundEnding:\n\n\t\t\t\t\t// use the other end of the curve\n\t\t\t\t\tiPrev = pp.length - 2;\n\t\t\t\t\ttPrev = t0 + pp[ iPrev ] - pp[ iPrev + 1 ];\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault: // ZeroCurvatureEnding\n\n\t\t\t\t\t// f''(t0) = 0 a.k.a. Natural Spline\n\t\t\t\t\tiPrev = i1;\n\t\t\t\t\ttPrev = t1;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( tNext === undefined ) {\n\n\t\t\tswitch ( this.getSettings_().endingEnd ) {\n\n\t\t\t\tcase ZeroSlopeEnding:\n\n\t\t\t\t\t// f'(tN) = 0\n\t\t\t\t\tiNext = i1;\n\t\t\t\t\ttNext = 2 * t1 - t0;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase WrapAroundEnding:\n\n\t\t\t\t\t// use the other end of the curve\n\t\t\t\t\tiNext = 1;\n\t\t\t\t\ttNext = t1 + pp[ 1 ] - pp[ 0 ];\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault: // ZeroCurvatureEnding\n\n\t\t\t\t\t// f''(tN) = 0, a.k.a. Natural Spline\n\t\t\t\t\tiNext = i1 - 1;\n\t\t\t\t\ttNext = t0;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst halfDt = ( t1 - t0 ) * 0.5,\n\t\t\tstride = this.valueSize;\n\n\t\tthis._weightPrev = halfDt / ( t0 - tPrev );\n\t\tthis._weightNext = halfDt / ( tNext - t1 );\n\t\tthis._offsetPrev = iPrev * stride;\n\t\tthis._offsetNext = iNext * stride;\n\n\t}\n\n\tinterpolate_( i1, t0, t, t1 ) {\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\to1 = i1 * stride,\t\to0 = o1 - stride,\n\t\t\toP = this._offsetPrev, \toN = this._offsetNext,\n\t\t\twP = this._weightPrev,\twN = this._weightNext,\n\n\t\t\tp = ( t - t0 ) / ( t1 - t0 ),\n\t\t\tpp = p * p,\n\t\t\tppp = pp * p;\n\n\t\t// evaluate polynomials\n\n\t\tconst sP = - wP * ppp + 2 * wP * pp - wP * p;\n\t\tconst s0 = ( 1 + wP ) * ppp + ( - 1.5 - 2 * wP ) * pp + ( - 0.5 + wP ) * p + 1;\n\t\tconst s1 = ( - 1 - wN ) * ppp + ( 1.5 + wN ) * pp + 0.5 * p;\n\t\tconst sN = wN * ppp - wN * pp;\n\n\t\t// combine data linearly\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] =\n\t\t\t\t\tsP * values[ oP + i ] +\n\t\t\t\t\ts0 * values[ o0 + i ] +\n\t\t\t\t\ts1 * values[ o1 + i ] +\n\t\t\t\t\tsN * values[ oN + i ];\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n}\n\nclass LinearInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tinterpolate_( i1, t0, t, t1 ) {\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\toffset1 = i1 * stride,\n\t\t\toffset0 = offset1 - stride,\n\n\t\t\tweight1 = ( t - t0 ) / ( t1 - t0 ),\n\t\t\tweight0 = 1 - weight1;\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] =\n\t\t\t\t\tvalues[ offset0 + i ] * weight0 +\n\t\t\t\t\tvalues[ offset1 + i ] * weight1;\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n}\n\n/**\n *\n * Interpolant that evaluates to the sample value at the position preceding\n * the parameter.\n */\n\nclass DiscreteInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tinterpolate_( i1 /*, t0, t, t1 */ ) {\n\n\t\treturn this.copySampleValue_( i1 - 1 );\n\n\t}\n\n}\n\nclass KeyframeTrack {\n\n\tconstructor( name, times, values, interpolation ) {\n\n\t\tif ( name === undefined ) throw new Error( 'THREE.KeyframeTrack: track name is undefined' );\n\t\tif ( times === undefined || times.length === 0 ) throw new Error( 'THREE.KeyframeTrack: no keyframes in track named ' + name );\n\n\t\tthis.name = name;\n\n\t\tthis.times = convertArray( times, this.TimeBufferType );\n\t\tthis.values = convertArray( values, this.ValueBufferType );\n\n\t\tthis.setInterpolation( interpolation || this.DefaultInterpolation );\n\n\t}\n\n\t// Serialization (in static context, because of constructor invocation\n\t// and automatic invocation of .toJSON):\n\n\tstatic toJSON( track ) {\n\n\t\tconst trackType = track.constructor;\n\n\t\tlet json;\n\n\t\t// derived classes can define a static toJSON method\n\t\tif ( trackType.toJSON !== this.toJSON ) {\n\n\t\t\tjson = trackType.toJSON( track );\n\n\t\t} else {\n\n\t\t\t// by default, we assume the data can be serialized as-is\n\t\t\tjson = {\n\n\t\t\t\t'name': track.name,\n\t\t\t\t'times': convertArray( track.times, Array ),\n\t\t\t\t'values': convertArray( track.values, Array )\n\n\t\t\t};\n\n\t\t\tconst interpolation = track.getInterpolation();\n\n\t\t\tif ( interpolation !== track.DefaultInterpolation ) {\n\n\t\t\t\tjson.interpolation = interpolation;\n\n\t\t\t}\n\n\t\t}\n\n\t\tjson.type = track.ValueTypeName; // mandatory\n\n\t\treturn json;\n\n\t}\n\n\tInterpolantFactoryMethodDiscrete( result ) {\n\n\t\treturn new DiscreteInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n\tInterpolantFactoryMethodLinear( result ) {\n\n\t\treturn new LinearInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n\tInterpolantFactoryMethodSmooth( result ) {\n\n\t\treturn new CubicInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n\tsetInterpolation( interpolation ) {\n\n\t\tlet factoryMethod;\n\n\t\tswitch ( interpolation ) {\n\n\t\t\tcase InterpolateDiscrete:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodDiscrete;\n\n\t\t\t\tbreak;\n\n\t\t\tcase InterpolateLinear:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodLinear;\n\n\t\t\t\tbreak;\n\n\t\t\tcase InterpolateSmooth:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodSmooth;\n\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tif ( factoryMethod === undefined ) {\n\n\t\t\tconst message = 'unsupported interpolation for ' +\n\t\t\t\tthis.ValueTypeName + ' keyframe track named ' + this.name;\n\n\t\t\tif ( this.createInterpolant === undefined ) {\n\n\t\t\t\t// fall back to default, unless the default itself is messed up\n\t\t\t\tif ( interpolation !== this.DefaultInterpolation ) {\n\n\t\t\t\t\tthis.setInterpolation( this.DefaultInterpolation );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new Error( message ); // fatal, in this case\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconsole.warn( 'THREE.KeyframeTrack:', message );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tthis.createInterpolant = factoryMethod;\n\n\t\treturn this;\n\n\t}\n\n\tgetInterpolation() {\n\n\t\tswitch ( this.createInterpolant ) {\n\n\t\t\tcase this.InterpolantFactoryMethodDiscrete:\n\n\t\t\t\treturn InterpolateDiscrete;\n\n\t\t\tcase this.InterpolantFactoryMethodLinear:\n\n\t\t\t\treturn InterpolateLinear;\n\n\t\t\tcase this.InterpolantFactoryMethodSmooth:\n\n\t\t\t\treturn InterpolateSmooth;\n\n\t\t}\n\n\t}\n\n\tgetValueSize() {\n\n\t\treturn this.values.length / this.times.length;\n\n\t}\n\n\t// move all keyframes either forwards or backwards in time\n\tshift( timeOffset ) {\n\n\t\tif ( timeOffset !== 0.0 ) {\n\n\t\t\tconst times = this.times;\n\n\t\t\tfor ( let i = 0, n = times.length; i !== n; ++ i ) {\n\n\t\t\t\ttimes[ i ] += timeOffset;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// scale all keyframe times by a factor (useful for frame <-> seconds conversions)\n\tscale( timeScale ) {\n\n\t\tif ( timeScale !== 1.0 ) {\n\n\t\t\tconst times = this.times;\n\n\t\t\tfor ( let i = 0, n = times.length; i !== n; ++ i ) {\n\n\t\t\t\ttimes[ i ] *= timeScale;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// removes keyframes before and after animation without changing any values within the range [startTime, endTime].\n\t// IMPORTANT: We do not shift around keys to the start of the track time, because for interpolated keys this will change their values\n\ttrim( startTime, endTime ) {\n\n\t\tconst times = this.times,\n\t\t\tnKeys = times.length;\n\n\t\tlet from = 0,\n\t\t\tto = nKeys - 1;\n\n\t\twhile ( from !== nKeys && times[ from ] < startTime ) {\n\n\t\t\t++ from;\n\n\t\t}\n\n\t\twhile ( to !== - 1 && times[ to ] > endTime ) {\n\n\t\t\t-- to;\n\n\t\t}\n\n\t\t++ to; // inclusive -> exclusive bound\n\n\t\tif ( from !== 0 || to !== nKeys ) {\n\n\t\t\t// empty tracks are forbidden, so keep at least one keyframe\n\t\t\tif ( from >= to ) {\n\n\t\t\t\tto = Math.max( to, 1 );\n\t\t\t\tfrom = to - 1;\n\n\t\t\t}\n\n\t\t\tconst stride = this.getValueSize();\n\t\t\tthis.times = times.slice( from, to );\n\t\t\tthis.values = this.values.slice( from * stride, to * stride );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// ensure we do not get a GarbageInGarbageOut situation, make sure tracks are at least minimally viable\n\tvalidate() {\n\n\t\tlet valid = true;\n\n\t\tconst valueSize = this.getValueSize();\n\t\tif ( valueSize - Math.floor( valueSize ) !== 0 ) {\n\n\t\t\tconsole.error( 'THREE.KeyframeTrack: Invalid value size in track.', this );\n\t\t\tvalid = false;\n\n\t\t}\n\n\t\tconst times = this.times,\n\t\t\tvalues = this.values,\n\n\t\t\tnKeys = times.length;\n\n\t\tif ( nKeys === 0 ) {\n\n\t\t\tconsole.error( 'THREE.KeyframeTrack: Track is empty.', this );\n\t\t\tvalid = false;\n\n\t\t}\n\n\t\tlet prevTime = null;\n\n\t\tfor ( let i = 0; i !== nKeys; i ++ ) {\n\n\t\t\tconst currTime = times[ i ];\n\n\t\t\tif ( typeof currTime === 'number' && isNaN( currTime ) ) {\n\n\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Time is not a valid number.', this, i, currTime );\n\t\t\t\tvalid = false;\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tif ( prevTime !== null && prevTime > currTime ) {\n\n\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Out of order keys.', this, i, currTime, prevTime );\n\t\t\t\tvalid = false;\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tprevTime = currTime;\n\n\t\t}\n\n\t\tif ( values !== undefined ) {\n\n\t\t\tif ( isTypedArray( values ) ) {\n\n\t\t\t\tfor ( let i = 0, n = values.length; i !== n; ++ i ) {\n\n\t\t\t\t\tconst value = values[ i ];\n\n\t\t\t\t\tif ( isNaN( value ) ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Value is not a valid number.', this, i, value );\n\t\t\t\t\t\tvalid = false;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn valid;\n\n\t}\n\n\t// removes equivalent sequential keys as common in morph target sequences\n\t// (0,0,0,0,1,1,1,0,0,0,0,0,0,0) --> (0,0,1,1,0,0)\n\toptimize() {\n\n\t\t// times or values may be shared with other tracks, so overwriting is unsafe\n\t\tconst times = this.times.slice(),\n\t\t\tvalues = this.values.slice(),\n\t\t\tstride = this.getValueSize(),\n\n\t\t\tsmoothInterpolation = this.getInterpolation() === InterpolateSmooth,\n\n\t\t\tlastIndex = times.length - 1;\n\n\t\tlet writeIndex = 1;\n\n\t\tfor ( let i = 1; i < lastIndex; ++ i ) {\n\n\t\t\tlet keep = false;\n\n\t\t\tconst time = times[ i ];\n\t\t\tconst timeNext = times[ i + 1 ];\n\n\t\t\t// remove adjacent keyframes scheduled at the same time\n\n\t\t\tif ( time !== timeNext && ( i !== 1 || time !== times[ 0 ] ) ) {\n\n\t\t\t\tif ( ! smoothInterpolation ) {\n\n\t\t\t\t\t// remove unnecessary keyframes same as their neighbors\n\n\t\t\t\t\tconst offset = i * stride,\n\t\t\t\t\t\toffsetP = offset - stride,\n\t\t\t\t\t\toffsetN = offset + stride;\n\n\t\t\t\t\tfor ( let j = 0; j !== stride; ++ j ) {\n\n\t\t\t\t\t\tconst value = values[ offset + j ];\n\n\t\t\t\t\t\tif ( value !== values[ offsetP + j ] ||\n\t\t\t\t\t\t\tvalue !== values[ offsetN + j ] ) {\n\n\t\t\t\t\t\t\tkeep = true;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tkeep = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// in-place compaction\n\n\t\t\tif ( keep ) {\n\n\t\t\t\tif ( i !== writeIndex ) {\n\n\t\t\t\t\ttimes[ writeIndex ] = times[ i ];\n\n\t\t\t\t\tconst readOffset = i * stride,\n\t\t\t\t\t\twriteOffset = writeIndex * stride;\n\n\t\t\t\t\tfor ( let j = 0; j !== stride; ++ j ) {\n\n\t\t\t\t\t\tvalues[ writeOffset + j ] = values[ readOffset + j ];\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t++ writeIndex;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// flush last keyframe (compaction looks ahead)\n\n\t\tif ( lastIndex > 0 ) {\n\n\t\t\ttimes[ writeIndex ] = times[ lastIndex ];\n\n\t\t\tfor ( let readOffset = lastIndex * stride, writeOffset = writeIndex * stride, j = 0; j !== stride; ++ j ) {\n\n\t\t\t\tvalues[ writeOffset + j ] = values[ readOffset + j ];\n\n\t\t\t}\n\n\t\t\t++ writeIndex;\n\n\t\t}\n\n\t\tif ( writeIndex !== times.length ) {\n\n\t\t\tthis.times = times.slice( 0, writeIndex );\n\t\t\tthis.values = values.slice( 0, writeIndex * stride );\n\n\t\t} else {\n\n\t\t\tthis.times = times;\n\t\t\tthis.values = values;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\tconst times = this.times.slice();\n\t\tconst values = this.values.slice();\n\n\t\tconst TypedKeyframeTrack = this.constructor;\n\t\tconst track = new TypedKeyframeTrack( this.name, times, values );\n\n\t\t// Interpolant argument to constructor is not saved, so copy the factory method directly.\n\t\ttrack.createInterpolant = this.createInterpolant;\n\n\t\treturn track;\n\n\t}\n\n}\n\nKeyframeTrack.prototype.TimeBufferType = Float32Array;\nKeyframeTrack.prototype.ValueBufferType = Float32Array;\nKeyframeTrack.prototype.DefaultInterpolation = InterpolateLinear;\n\n/**\n * A Track of Boolean keyframe values.\n */\nclass BooleanKeyframeTrack extends KeyframeTrack {\n\n\t// No interpolation parameter because only InterpolateDiscrete is valid.\n\tconstructor( name, times, values ) {\n\n\t\tsuper( name, times, values );\n\n\t}\n\n}\n\nBooleanKeyframeTrack.prototype.ValueTypeName = 'bool';\nBooleanKeyframeTrack.prototype.ValueBufferType = Array;\nBooleanKeyframeTrack.prototype.DefaultInterpolation = InterpolateDiscrete;\nBooleanKeyframeTrack.prototype.InterpolantFactoryMethodLinear = undefined;\nBooleanKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\n\n/**\n * A Track of keyframe values that represent color.\n */\nclass ColorKeyframeTrack extends KeyframeTrack {}\n\nColorKeyframeTrack.prototype.ValueTypeName = 'color';\n\n/**\n * A Track of numeric keyframe values.\n */\nclass NumberKeyframeTrack extends KeyframeTrack {}\n\nNumberKeyframeTrack.prototype.ValueTypeName = 'number';\n\n/**\n * Spherical linear unit quaternion interpolant.\n */\n\nclass QuaternionLinearInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tinterpolate_( i1, t0, t, t1 ) {\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\talpha = ( t - t0 ) / ( t1 - t0 );\n\n\t\tlet offset = i1 * stride;\n\n\t\tfor ( let end = offset + stride; offset !== end; offset += 4 ) {\n\n\t\t\tQuaternion.slerpFlat( result, 0, values, offset - stride, values, offset, alpha );\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n}\n\n/**\n * A Track of quaternion keyframe values.\n */\nclass QuaternionKeyframeTrack extends KeyframeTrack {\n\n\tInterpolantFactoryMethodLinear( result ) {\n\n\t\treturn new QuaternionLinearInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n}\n\nQuaternionKeyframeTrack.prototype.ValueTypeName = 'quaternion';\n// ValueBufferType is inherited\n// DefaultInterpolation is inherited;\nQuaternionKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\n\n/**\n * A Track that interpolates Strings\n */\nclass StringKeyframeTrack extends KeyframeTrack {\n\n\t// No interpolation parameter because only InterpolateDiscrete is valid.\n\tconstructor( name, times, values ) {\n\n\t\tsuper( name, times, values );\n\n\t}\n\n}\n\nStringKeyframeTrack.prototype.ValueTypeName = 'string';\nStringKeyframeTrack.prototype.ValueBufferType = Array;\nStringKeyframeTrack.prototype.DefaultInterpolation = InterpolateDiscrete;\nStringKeyframeTrack.prototype.InterpolantFactoryMethodLinear = undefined;\nStringKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\n\n/**\n * A Track of vectored keyframe values.\n */\nclass VectorKeyframeTrack extends KeyframeTrack {}\n\nVectorKeyframeTrack.prototype.ValueTypeName = 'vector';\n\nclass AnimationClip {\n\n\tconstructor( name = '', duration = - 1, tracks = [], blendMode = NormalAnimationBlendMode ) {\n\n\t\tthis.name = name;\n\t\tthis.tracks = tracks;\n\t\tthis.duration = duration;\n\t\tthis.blendMode = blendMode;\n\n\t\tthis.uuid = generateUUID();\n\n\t\t// this means it should figure out its duration by scanning the tracks\n\t\tif ( this.duration < 0 ) {\n\n\t\t\tthis.resetDuration();\n\n\t\t}\n\n\t}\n\n\n\tstatic parse( json ) {\n\n\t\tconst tracks = [],\n\t\t\tjsonTracks = json.tracks,\n\t\t\tframeTime = 1.0 / ( json.fps || 1.0 );\n\n\t\tfor ( let i = 0, n = jsonTracks.length; i !== n; ++ i ) {\n\n\t\t\ttracks.push( parseKeyframeTrack( jsonTracks[ i ] ).scale( frameTime ) );\n\n\t\t}\n\n\t\tconst clip = new this( json.name, json.duration, tracks, json.blendMode );\n\t\tclip.uuid = json.uuid;\n\n\t\treturn clip;\n\n\t}\n\n\tstatic toJSON( clip ) {\n\n\t\tconst tracks = [],\n\t\t\tclipTracks = clip.tracks;\n\n\t\tconst json = {\n\n\t\t\t'name': clip.name,\n\t\t\t'duration': clip.duration,\n\t\t\t'tracks': tracks,\n\t\t\t'uuid': clip.uuid,\n\t\t\t'blendMode': clip.blendMode\n\n\t\t};\n\n\t\tfor ( let i = 0, n = clipTracks.length; i !== n; ++ i ) {\n\n\t\t\ttracks.push( KeyframeTrack.toJSON( clipTracks[ i ] ) );\n\n\t\t}\n\n\t\treturn json;\n\n\t}\n\n\tstatic CreateFromMorphTargetSequence( name, morphTargetSequence, fps, noLoop ) {\n\n\t\tconst numMorphTargets = morphTargetSequence.length;\n\t\tconst tracks = [];\n\n\t\tfor ( let i = 0; i < numMorphTargets; i ++ ) {\n\n\t\t\tlet times = [];\n\t\t\tlet values = [];\n\n\t\t\ttimes.push(\n\t\t\t\t( i + numMorphTargets - 1 ) % numMorphTargets,\n\t\t\t\ti,\n\t\t\t\t( i + 1 ) % numMorphTargets );\n\n\t\t\tvalues.push( 0, 1, 0 );\n\n\t\t\tconst order = getKeyframeOrder( times );\n\t\t\ttimes = sortedArray( times, 1, order );\n\t\t\tvalues = sortedArray( values, 1, order );\n\n\t\t\t// if there is a key at the first frame, duplicate it as the\n\t\t\t// last frame as well for perfect loop.\n\t\t\tif ( ! noLoop && times[ 0 ] === 0 ) {\n\n\t\t\t\ttimes.push( numMorphTargets );\n\t\t\t\tvalues.push( values[ 0 ] );\n\n\t\t\t}\n\n\t\t\ttracks.push(\n\t\t\t\tnew NumberKeyframeTrack(\n\t\t\t\t\t'.morphTargetInfluences[' + morphTargetSequence[ i ].name + ']',\n\t\t\t\t\ttimes, values\n\t\t\t\t).scale( 1.0 / fps ) );\n\n\t\t}\n\n\t\treturn new this( name, - 1, tracks );\n\n\t}\n\n\tstatic findByName( objectOrClipArray, name ) {\n\n\t\tlet clipArray = objectOrClipArray;\n\n\t\tif ( ! Array.isArray( objectOrClipArray ) ) {\n\n\t\t\tconst o = objectOrClipArray;\n\t\t\tclipArray = o.geometry && o.geometry.animations || o.animations;\n\n\t\t}\n\n\t\tfor ( let i = 0; i < clipArray.length; i ++ ) {\n\n\t\t\tif ( clipArray[ i ].name === name ) {\n\n\t\t\t\treturn clipArray[ i ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\tstatic CreateClipsFromMorphTargetSequences( morphTargets, fps, noLoop ) {\n\n\t\tconst animationToMorphTargets = {};\n\n\t\t// tested with https://regex101.com/ on trick sequences\n\t\t// such flamingo_flyA_003, flamingo_run1_003, crdeath0059\n\t\tconst pattern = /^([\\w-]*?)([\\d]+)$/;\n\n\t\t// sort morph target names into animation groups based\n\t\t// patterns like Walk_001, Walk_002, Run_001, Run_002\n\t\tfor ( let i = 0, il = morphTargets.length; i < il; i ++ ) {\n\n\t\t\tconst morphTarget = morphTargets[ i ];\n\t\t\tconst parts = morphTarget.name.match( pattern );\n\n\t\t\tif ( parts && parts.length > 1 ) {\n\n\t\t\t\tconst name = parts[ 1 ];\n\n\t\t\t\tlet animationMorphTargets = animationToMorphTargets[ name ];\n\n\t\t\t\tif ( ! animationMorphTargets ) {\n\n\t\t\t\t\tanimationToMorphTargets[ name ] = animationMorphTargets = [];\n\n\t\t\t\t}\n\n\t\t\t\tanimationMorphTargets.push( morphTarget );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst clips = [];\n\n\t\tfor ( const name in animationToMorphTargets ) {\n\n\t\t\tclips.push( this.CreateFromMorphTargetSequence( name, animationToMorphTargets[ name ], fps, noLoop ) );\n\n\t\t}\n\n\t\treturn clips;\n\n\t}\n\n\t// parse the animation.hierarchy format\n\tstatic parseAnimation( animation, bones ) {\n\n\t\tif ( ! animation ) {\n\n\t\t\tconsole.error( 'THREE.AnimationClip: No animation in JSONLoader data.' );\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst addNonemptyTrack = function ( trackType, trackName, animationKeys, propertyName, destTracks ) {\n\n\t\t\t// only return track if there are actually keys.\n\t\t\tif ( animationKeys.length !== 0 ) {\n\n\t\t\t\tconst times = [];\n\t\t\t\tconst values = [];\n\n\t\t\t\tflattenJSON( animationKeys, times, values, propertyName );\n\n\t\t\t\t// empty keys are filtered out, so check again\n\t\t\t\tif ( times.length !== 0 ) {\n\n\t\t\t\t\tdestTracks.push( new trackType( trackName, times, values ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tconst tracks = [];\n\n\t\tconst clipName = animation.name || 'default';\n\t\tconst fps = animation.fps || 30;\n\t\tconst blendMode = animation.blendMode;\n\n\t\t// automatic length determination in AnimationClip.\n\t\tlet duration = animation.length || - 1;\n\n\t\tconst hierarchyTracks = animation.hierarchy || [];\n\n\t\tfor ( let h = 0; h < hierarchyTracks.length; h ++ ) {\n\n\t\t\tconst animationKeys = hierarchyTracks[ h ].keys;\n\n\t\t\t// skip empty tracks\n\t\t\tif ( ! animationKeys || animationKeys.length === 0 ) continue;\n\n\t\t\t// process morph targets\n\t\t\tif ( animationKeys[ 0 ].morphTargets ) {\n\n\t\t\t\t// figure out all morph targets used in this track\n\t\t\t\tconst morphTargetNames = {};\n\n\t\t\t\tlet k;\n\n\t\t\t\tfor ( k = 0; k < animationKeys.length; k ++ ) {\n\n\t\t\t\t\tif ( animationKeys[ k ].morphTargets ) {\n\n\t\t\t\t\t\tfor ( let m = 0; m < animationKeys[ k ].morphTargets.length; m ++ ) {\n\n\t\t\t\t\t\t\tmorphTargetNames[ animationKeys[ k ].morphTargets[ m ] ] = - 1;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// create a track for each morph target with all zero\n\t\t\t\t// morphTargetInfluences except for the keys in which\n\t\t\t\t// the morphTarget is named.\n\t\t\t\tfor ( const morphTargetName in morphTargetNames ) {\n\n\t\t\t\t\tconst times = [];\n\t\t\t\t\tconst values = [];\n\n\t\t\t\t\tfor ( let m = 0; m !== animationKeys[ k ].morphTargets.length; ++ m ) {\n\n\t\t\t\t\t\tconst animationKey = animationKeys[ k ];\n\n\t\t\t\t\t\ttimes.push( animationKey.time );\n\t\t\t\t\t\tvalues.push( ( animationKey.morphTarget === morphTargetName ) ? 1 : 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttracks.push( new NumberKeyframeTrack( '.morphTargetInfluence[' + morphTargetName + ']', times, values ) );\n\n\t\t\t\t}\n\n\t\t\t\tduration = morphTargetNames.length * fps;\n\n\t\t\t} else {\n\n\t\t\t\t// ...assume skeletal animation\n\n\t\t\t\tconst boneName = '.bones[' + bones[ h ].name + ']';\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tVectorKeyframeTrack, boneName + '.position',\n\t\t\t\t\tanimationKeys, 'pos', tracks );\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tQuaternionKeyframeTrack, boneName + '.quaternion',\n\t\t\t\t\tanimationKeys, 'rot', tracks );\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tVectorKeyframeTrack, boneName + '.scale',\n\t\t\t\t\tanimationKeys, 'scl', tracks );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( tracks.length === 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst clip = new this( clipName, duration, tracks, blendMode );\n\n\t\treturn clip;\n\n\t}\n\n\tresetDuration() {\n\n\t\tconst tracks = this.tracks;\n\t\tlet duration = 0;\n\n\t\tfor ( let i = 0, n = tracks.length; i !== n; ++ i ) {\n\n\t\t\tconst track = this.tracks[ i ];\n\n\t\t\tduration = Math.max( duration, track.times[ track.times.length - 1 ] );\n\n\t\t}\n\n\t\tthis.duration = duration;\n\n\t\treturn this;\n\n\t}\n\n\ttrim() {\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tthis.tracks[ i ].trim( 0, this.duration );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tvalidate() {\n\n\t\tlet valid = true;\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tvalid = valid && this.tracks[ i ].validate();\n\n\t\t}\n\n\t\treturn valid;\n\n\t}\n\n\toptimize() {\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tthis.tracks[ i ].optimize();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\tconst tracks = [];\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\ttracks.push( this.tracks[ i ].clone() );\n\n\t\t}\n\n\t\treturn new this.constructor( this.name, this.duration, tracks, this.blendMode );\n\n\t}\n\n\ttoJSON() {\n\n\t\treturn this.constructor.toJSON( this );\n\n\t}\n\n}\n\nfunction getTrackTypeForValueTypeName( typeName ) {\n\n\tswitch ( typeName.toLowerCase() ) {\n\n\t\tcase 'scalar':\n\t\tcase 'double':\n\t\tcase 'float':\n\t\tcase 'number':\n\t\tcase 'integer':\n\n\t\t\treturn NumberKeyframeTrack;\n\n\t\tcase 'vector':\n\t\tcase 'vector2':\n\t\tcase 'vector3':\n\t\tcase 'vector4':\n\n\t\t\treturn VectorKeyframeTrack;\n\n\t\tcase 'color':\n\n\t\t\treturn ColorKeyframeTrack;\n\n\t\tcase 'quaternion':\n\n\t\t\treturn QuaternionKeyframeTrack;\n\n\t\tcase 'bool':\n\t\tcase 'boolean':\n\n\t\t\treturn BooleanKeyframeTrack;\n\n\t\tcase 'string':\n\n\t\t\treturn StringKeyframeTrack;\n\n\t}\n\n\tthrow new Error( 'THREE.KeyframeTrack: Unsupported typeName: ' + typeName );\n\n}\n\nfunction parseKeyframeTrack( json ) {\n\n\tif ( json.type === undefined ) {\n\n\t\tthrow new Error( 'THREE.KeyframeTrack: track type undefined, can not parse' );\n\n\t}\n\n\tconst trackType = getTrackTypeForValueTypeName( json.type );\n\n\tif ( json.times === undefined ) {\n\n\t\tconst times = [], values = [];\n\n\t\tflattenJSON( json.keys, times, values, 'value' );\n\n\t\tjson.times = times;\n\t\tjson.values = values;\n\n\t}\n\n\t// derived classes can define a static parse method\n\tif ( trackType.parse !== undefined ) {\n\n\t\treturn trackType.parse( json );\n\n\t} else {\n\n\t\t// by default, we assume a constructor compatible with the base\n\t\treturn new trackType( json.name, json.times, json.values, json.interpolation );\n\n\t}\n\n}\n\nconst Cache = {\n\n\tenabled: false,\n\n\tfiles: {},\n\n\tadd: function ( key, file ) {\n\n\t\tif ( this.enabled === false ) return;\n\n\t\t// console.log( 'THREE.Cache', 'Adding key:', key );\n\n\t\tthis.files[ key ] = file;\n\n\t},\n\n\tget: function ( key ) {\n\n\t\tif ( this.enabled === false ) return;\n\n\t\t// console.log( 'THREE.Cache', 'Checking key:', key );\n\n\t\treturn this.files[ key ];\n\n\t},\n\n\tremove: function ( key ) {\n\n\t\tdelete this.files[ key ];\n\n\t},\n\n\tclear: function () {\n\n\t\tthis.files = {};\n\n\t}\n\n};\n\nclass LoadingManager {\n\n\tconstructor( onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tlet isLoading = false;\n\t\tlet itemsLoaded = 0;\n\t\tlet itemsTotal = 0;\n\t\tlet urlModifier = undefined;\n\t\tconst handlers = [];\n\n\t\t// Refer to #5689 for the reason why we don't set .onStart\n\t\t// in the constructor\n\n\t\tthis.onStart = undefined;\n\t\tthis.onLoad = onLoad;\n\t\tthis.onProgress = onProgress;\n\t\tthis.onError = onError;\n\n\t\tthis.itemStart = function ( url ) {\n\n\t\t\titemsTotal ++;\n\n\t\t\tif ( isLoading === false ) {\n\n\t\t\t\tif ( scope.onStart !== undefined ) {\n\n\t\t\t\t\tscope.onStart( url, itemsLoaded, itemsTotal );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tisLoading = true;\n\n\t\t};\n\n\t\tthis.itemEnd = function ( url ) {\n\n\t\t\titemsLoaded ++;\n\n\t\t\tif ( scope.onProgress !== undefined ) {\n\n\t\t\t\tscope.onProgress( url, itemsLoaded, itemsTotal );\n\n\t\t\t}\n\n\t\t\tif ( itemsLoaded === itemsTotal ) {\n\n\t\t\t\tisLoading = false;\n\n\t\t\t\tif ( scope.onLoad !== undefined ) {\n\n\t\t\t\t\tscope.onLoad();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.itemError = function ( url ) {\n\n\t\t\tif ( scope.onError !== undefined ) {\n\n\t\t\t\tscope.onError( url );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.resolveURL = function ( url ) {\n\n\t\t\tif ( urlModifier ) {\n\n\t\t\t\treturn urlModifier( url );\n\n\t\t\t}\n\n\t\t\treturn url;\n\n\t\t};\n\n\t\tthis.setURLModifier = function ( transform ) {\n\n\t\t\turlModifier = transform;\n\n\t\t\treturn this;\n\n\t\t};\n\n\t\tthis.addHandler = function ( regex, loader ) {\n\n\t\t\thandlers.push( regex, loader );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t\tthis.removeHandler = function ( regex ) {\n\n\t\t\tconst index = handlers.indexOf( regex );\n\n\t\t\tif ( index !== - 1 ) {\n\n\t\t\t\thandlers.splice( index, 2 );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t};\n\n\t\tthis.getHandler = function ( file ) {\n\n\t\t\tfor ( let i = 0, l = handlers.length; i < l; i += 2 ) {\n\n\t\t\t\tconst regex = handlers[ i ];\n\t\t\t\tconst loader = handlers[ i + 1 ];\n\n\t\t\t\tif ( regex.global ) regex.lastIndex = 0; // see #17920\n\n\t\t\t\tif ( regex.test( file ) ) {\n\n\t\t\t\t\treturn loader;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn null;\n\n\t\t};\n\n\t}\n\n}\n\nconst DefaultLoadingManager = /*@__PURE__*/ new LoadingManager();\n\nclass Loader {\n\n\tconstructor( manager ) {\n\n\t\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n\t\tthis.crossOrigin = 'anonymous';\n\t\tthis.withCredentials = false;\n\t\tthis.path = '';\n\t\tthis.resourcePath = '';\n\t\tthis.requestHeader = {};\n\n\t}\n\n\tload( /* url, onLoad, onProgress, onError */ ) {}\n\n\tloadAsync( url, onProgress ) {\n\n\t\tconst scope = this;\n\n\t\treturn new Promise( function ( resolve, reject ) {\n\n\t\t\tscope.load( url, resolve, onProgress, reject );\n\n\t\t} );\n\n\t}\n\n\tparse( /* data */ ) {}\n\n\tsetCrossOrigin( crossOrigin ) {\n\n\t\tthis.crossOrigin = crossOrigin;\n\t\treturn this;\n\n\t}\n\n\tsetWithCredentials( value ) {\n\n\t\tthis.withCredentials = value;\n\t\treturn this;\n\n\t}\n\n\tsetPath( path ) {\n\n\t\tthis.path = path;\n\t\treturn this;\n\n\t}\n\n\tsetResourcePath( resourcePath ) {\n\n\t\tthis.resourcePath = resourcePath;\n\t\treturn this;\n\n\t}\n\n\tsetRequestHeader( requestHeader ) {\n\n\t\tthis.requestHeader = requestHeader;\n\t\treturn this;\n\n\t}\n\n}\n\nLoader.DEFAULT_MATERIAL_NAME = '__DEFAULT';\n\nconst loading = {};\n\nclass HttpError extends Error {\n\n\tconstructor( message, response ) {\n\n\t\tsuper( message );\n\t\tthis.response = response;\n\n\t}\n\n}\n\nclass FileLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tif ( url === undefined ) url = '';\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tconst cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tthis.manager.itemStart( url );\n\n\t\t\tsetTimeout( () => {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tthis.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\t// Check if request is duplicate\n\n\t\tif ( loading[ url ] !== undefined ) {\n\n\t\t\tloading[ url ].push( {\n\n\t\t\t\tonLoad: onLoad,\n\t\t\t\tonProgress: onProgress,\n\t\t\t\tonError: onError\n\n\t\t\t} );\n\n\t\t\treturn;\n\n\t\t}\n\n\t\t// Initialise array for duplicate requests\n\t\tloading[ url ] = [];\n\n\t\tloading[ url ].push( {\n\t\t\tonLoad: onLoad,\n\t\t\tonProgress: onProgress,\n\t\t\tonError: onError,\n\t\t} );\n\n\t\t// create request\n\t\tconst req = new Request( url, {\n\t\t\theaders: new Headers( this.requestHeader ),\n\t\t\tcredentials: this.withCredentials ? 'include' : 'same-origin',\n\t\t\t// An abort controller could be added within a future PR\n\t\t} );\n\n\t\t// record states ( avoid data race )\n\t\tconst mimeType = this.mimeType;\n\t\tconst responseType = this.responseType;\n\n\t\t// start the fetch\n\t\tfetch( req )\n\t\t\t.then( response => {\n\n\t\t\t\tif ( response.status === 200 || response.status === 0 ) {\n\n\t\t\t\t\t// Some browsers return HTTP Status 0 when using non-http protocol\n\t\t\t\t\t// e.g. 'file://' or 'data://'. Handle as success.\n\n\t\t\t\t\tif ( response.status === 0 ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.FileLoader: HTTP Status 0 received.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// Workaround: Checking if response.body === undefined for Alipay browser #23548\n\n\t\t\t\t\tif ( typeof ReadableStream === 'undefined' || response.body === undefined || response.body.getReader === undefined ) {\n\n\t\t\t\t\t\treturn response;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst callbacks = loading[ url ];\n\t\t\t\t\tconst reader = response.body.getReader();\n\n\t\t\t\t\t// Nginx needs X-File-Size check\n\t\t\t\t\t// https://serverfault.com/questions/482875/why-does-nginx-remove-content-length-header-for-chunked-content\n\t\t\t\t\tconst contentLength = response.headers.get( 'X-File-Size' ) || response.headers.get( 'Content-Length' );\n\t\t\t\t\tconst total = contentLength ? parseInt( contentLength ) : 0;\n\t\t\t\t\tconst lengthComputable = total !== 0;\n\t\t\t\t\tlet loaded = 0;\n\n\t\t\t\t\t// periodically read data into the new stream tracking while download progress\n\t\t\t\t\tconst stream = new ReadableStream( {\n\t\t\t\t\t\tstart( controller ) {\n\n\t\t\t\t\t\t\treadData();\n\n\t\t\t\t\t\t\tfunction readData() {\n\n\t\t\t\t\t\t\t\treader.read().then( ( { done, value } ) => {\n\n\t\t\t\t\t\t\t\t\tif ( done ) {\n\n\t\t\t\t\t\t\t\t\t\tcontroller.close();\n\n\t\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\t\tloaded += value.byteLength;\n\n\t\t\t\t\t\t\t\t\t\tconst event = new ProgressEvent( 'progress', { lengthComputable, loaded, total } );\n\t\t\t\t\t\t\t\t\t\tfor ( let i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\t\t\t\t\t\t\tconst callback = callbacks[ i ];\n\t\t\t\t\t\t\t\t\t\t\tif ( callback.onProgress ) callback.onProgress( event );\n\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tcontroller.enqueue( value );\n\t\t\t\t\t\t\t\t\t\treadData();\n\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t}, ( e ) => {\n\n\t\t\t\t\t\t\t\t\tcontroller.error( e );\n\n\t\t\t\t\t\t\t\t} );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} );\n\n\t\t\t\t\treturn new Response( stream );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new HttpError( `fetch for \"${response.url}\" responded with ${response.status}: ${response.statusText}`, response );\n\n\t\t\t\t}\n\n\t\t\t} )\n\t\t\t.then( response => {\n\n\t\t\t\tswitch ( responseType ) {\n\n\t\t\t\t\tcase 'arraybuffer':\n\n\t\t\t\t\t\treturn response.arrayBuffer();\n\n\t\t\t\t\tcase 'blob':\n\n\t\t\t\t\t\treturn response.blob();\n\n\t\t\t\t\tcase 'document':\n\n\t\t\t\t\t\treturn response.text()\n\t\t\t\t\t\t\t.then( text => {\n\n\t\t\t\t\t\t\t\tconst parser = new DOMParser();\n\t\t\t\t\t\t\t\treturn parser.parseFromString( text, mimeType );\n\n\t\t\t\t\t\t\t} );\n\n\t\t\t\t\tcase 'json':\n\n\t\t\t\t\t\treturn response.json();\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tif ( mimeType === undefined ) {\n\n\t\t\t\t\t\t\treturn response.text();\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// sniff encoding\n\t\t\t\t\t\t\tconst re = /charset=\"?([^;\"\\s]*)\"?/i;\n\t\t\t\t\t\t\tconst exec = re.exec( mimeType );\n\t\t\t\t\t\t\tconst label = exec && exec[ 1 ] ? exec[ 1 ].toLowerCase() : undefined;\n\t\t\t\t\t\t\tconst decoder = new TextDecoder( label );\n\t\t\t\t\t\t\treturn response.arrayBuffer().then( ab => decoder.decode( ab ) );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} )\n\t\t\t.then( data => {\n\n\t\t\t\t// Add to cache only on HTTP success, so that we do not cache\n\t\t\t\t// error response bodies as proper responses to requests.\n\t\t\t\tCache.add( url, data );\n\n\t\t\t\tconst callbacks = loading[ url ];\n\t\t\t\tdelete loading[ url ];\n\n\t\t\t\tfor ( let i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst callback = callbacks[ i ];\n\t\t\t\t\tif ( callback.onLoad ) callback.onLoad( data );\n\n\t\t\t\t}\n\n\t\t\t} )\n\t\t\t.catch( err => {\n\n\t\t\t\t// Abort errors and other errors are handled the same\n\n\t\t\t\tconst callbacks = loading[ url ];\n\n\t\t\t\tif ( callbacks === undefined ) {\n\n\t\t\t\t\t// When onLoad was called and url was deleted in `loading`\n\t\t\t\t\tthis.manager.itemError( url );\n\t\t\t\t\tthrow err;\n\n\t\t\t\t}\n\n\t\t\t\tdelete loading[ url ];\n\n\t\t\t\tfor ( let i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst callback = callbacks[ i ];\n\t\t\t\t\tif ( callback.onError ) callback.onError( err );\n\n\t\t\t\t}\n\n\t\t\t\tthis.manager.itemError( url );\n\n\t\t\t} )\n\t\t\t.finally( () => {\n\n\t\t\t\tthis.manager.itemEnd( url );\n\n\t\t\t} );\n\n\t\tthis.manager.itemStart( url );\n\n\t}\n\n\tsetResponseType( value ) {\n\n\t\tthis.responseType = value;\n\t\treturn this;\n\n\t}\n\n\tsetMimeType( value ) {\n\n\t\tthis.mimeType = value;\n\t\treturn this;\n\n\t}\n\n}\n\nclass AnimationLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tparse( json ) {\n\n\t\tconst animations = [];\n\n\t\tfor ( let i = 0; i < json.length; i ++ ) {\n\n\t\t\tconst clip = AnimationClip.parse( json[ i ] );\n\n\t\t\tanimations.push( clip );\n\n\t\t}\n\n\t\treturn animations;\n\n\t}\n\n}\n\n/**\n * Abstract Base class to block based textures loader (dds, pvr, ...)\n *\n * Sub classes have to implement the parse() method which will be used in load().\n */\n\nclass CompressedTextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst images = [];\n\n\t\tconst texture = new CompressedTexture();\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\n\t\tlet loaded = 0;\n\n\t\tfunction loadTexture( i ) {\n\n\t\t\tloader.load( url[ i ], function ( buffer ) {\n\n\t\t\t\tconst texDatas = scope.parse( buffer, true );\n\n\t\t\t\timages[ i ] = {\n\t\t\t\t\twidth: texDatas.width,\n\t\t\t\t\theight: texDatas.height,\n\t\t\t\t\tformat: texDatas.format,\n\t\t\t\t\tmipmaps: texDatas.mipmaps\n\t\t\t\t};\n\n\t\t\t\tloaded += 1;\n\n\t\t\t\tif ( loaded === 6 ) {\n\n\t\t\t\t\tif ( texDatas.mipmapCount === 1 ) texture.minFilter = LinearFilter;\n\n\t\t\t\t\ttexture.image = images;\n\t\t\t\t\ttexture.format = texDatas.format;\n\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t\t}\n\n\t\t\t}, onProgress, onError );\n\n\t\t}\n\n\t\tif ( Array.isArray( url ) ) {\n\n\t\t\tfor ( let i = 0, il = url.length; i < il; ++ i ) {\n\n\t\t\t\tloadTexture( i );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// compressed cubemap texture stored in a single DDS file\n\n\t\t\tloader.load( url, function ( buffer ) {\n\n\t\t\t\tconst texDatas = scope.parse( buffer, true );\n\n\t\t\t\tif ( texDatas.isCubemap ) {\n\n\t\t\t\t\tconst faces = texDatas.mipmaps.length / texDatas.mipmapCount;\n\n\t\t\t\t\tfor ( let f = 0; f < faces; f ++ ) {\n\n\t\t\t\t\t\timages[ f ] = { mipmaps: [] };\n\n\t\t\t\t\t\tfor ( let i = 0; i < texDatas.mipmapCount; i ++ ) {\n\n\t\t\t\t\t\t\timages[ f ].mipmaps.push( texDatas.mipmaps[ f * texDatas.mipmapCount + i ] );\n\t\t\t\t\t\t\timages[ f ].format = texDatas.format;\n\t\t\t\t\t\t\timages[ f ].width = texDatas.width;\n\t\t\t\t\t\t\timages[ f ].height = texDatas.height;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.image = images;\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttexture.image.width = texDatas.width;\n\t\t\t\t\ttexture.image.height = texDatas.height;\n\t\t\t\t\ttexture.mipmaps = texDatas.mipmaps;\n\n\t\t\t\t}\n\n\t\t\t\tif ( texDatas.mipmapCount === 1 ) {\n\n\t\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t\t}\n\n\t\t\t\ttexture.format = texDatas.format;\n\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t}, onProgress, onError );\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n}\n\nclass ImageLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tconst scope = this;\n\n\t\tconst cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\tsetTimeout( function () {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\tconst image = createElementNS( 'img' );\n\n\t\tfunction onImageLoad() {\n\n\t\t\tremoveEventListeners();\n\n\t\t\tCache.add( url, this );\n\n\t\t\tif ( onLoad ) onLoad( this );\n\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t}\n\n\t\tfunction onImageError( event ) {\n\n\t\t\tremoveEventListeners();\n\n\t\t\tif ( onError ) onError( event );\n\n\t\t\tscope.manager.itemError( url );\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t}\n\n\t\tfunction removeEventListeners() {\n\n\t\t\timage.removeEventListener( 'load', onImageLoad, false );\n\t\t\timage.removeEventListener( 'error', onImageError, false );\n\n\t\t}\n\n\t\timage.addEventListener( 'load', onImageLoad, false );\n\t\timage.addEventListener( 'error', onImageError, false );\n\n\t\tif ( url.slice( 0, 5 ) !== 'data:' ) {\n\n\t\t\tif ( this.crossOrigin !== undefined ) image.crossOrigin = this.crossOrigin;\n\n\t\t}\n\n\t\tscope.manager.itemStart( url );\n\n\t\timage.src = url;\n\n\t\treturn image;\n\n\t}\n\n}\n\nclass CubeTextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( urls, onLoad, onProgress, onError ) {\n\n\t\tconst texture = new CubeTexture();\n\t\ttexture.colorSpace = SRGBColorSpace;\n\n\t\tconst loader = new ImageLoader( this.manager );\n\t\tloader.setCrossOrigin( this.crossOrigin );\n\t\tloader.setPath( this.path );\n\n\t\tlet loaded = 0;\n\n\t\tfunction loadTexture( i ) {\n\n\t\t\tloader.load( urls[ i ], function ( image ) {\n\n\t\t\t\ttexture.images[ i ] = image;\n\n\t\t\t\tloaded ++;\n\n\t\t\t\tif ( loaded === 6 ) {\n\n\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t\t}\n\n\t\t\t}, undefined, onError );\n\n\t\t}\n\n\t\tfor ( let i = 0; i < urls.length; ++ i ) {\n\n\t\t\tloadTexture( i );\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n}\n\n/**\n * Abstract Base class to load generic binary textures formats (rgbe, hdr, ...)\n *\n * Sub classes have to implement the parse() method which will be used in load().\n */\n\nclass DataTextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst texture = new DataTexture();\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setPath( this.path );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\t\tloader.load( url, function ( buffer ) {\n\n\t\t\tlet texData;\n\n\t\t\ttry {\n\n\t\t\t\ttexData = scope.parse( buffer );\n\n\t\t\t} catch ( error ) {\n\n\t\t\t\tif ( onError !== undefined ) {\n\n\t\t\t\t\tonError( error );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( error );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( texData.image !== undefined ) {\n\n\t\t\t\ttexture.image = texData.image;\n\n\t\t\t} else if ( texData.data !== undefined ) {\n\n\t\t\t\ttexture.image.width = texData.width;\n\t\t\t\ttexture.image.height = texData.height;\n\t\t\t\ttexture.image.data = texData.data;\n\n\t\t\t}\n\n\t\t\ttexture.wrapS = texData.wrapS !== undefined ? texData.wrapS : ClampToEdgeWrapping;\n\t\t\ttexture.wrapT = texData.wrapT !== undefined ? texData.wrapT : ClampToEdgeWrapping;\n\n\t\t\ttexture.magFilter = texData.magFilter !== undefined ? texData.magFilter : LinearFilter;\n\t\t\ttexture.minFilter = texData.minFilter !== undefined ? texData.minFilter : LinearFilter;\n\n\t\t\ttexture.anisotropy = texData.anisotropy !== undefined ? texData.anisotropy : 1;\n\n\t\t\tif ( texData.colorSpace !== undefined ) {\n\n\t\t\t\ttexture.colorSpace = texData.colorSpace;\n\n\t\t\t}\n\n\t\t\tif ( texData.flipY !== undefined ) {\n\n\t\t\t\ttexture.flipY = texData.flipY;\n\n\t\t\t}\n\n\t\t\tif ( texData.format !== undefined ) {\n\n\t\t\t\ttexture.format = texData.format;\n\n\t\t\t}\n\n\t\t\tif ( texData.type !== undefined ) {\n\n\t\t\t\ttexture.type = texData.type;\n\n\t\t\t}\n\n\t\t\tif ( texData.mipmaps !== undefined ) {\n\n\t\t\t\ttexture.mipmaps = texData.mipmaps;\n\t\t\t\ttexture.minFilter = LinearMipmapLinearFilter; // presumably...\n\n\t\t\t}\n\n\t\t\tif ( texData.mipmapCount === 1 ) {\n\n\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t}\n\n\t\t\tif ( texData.generateMipmaps !== undefined ) {\n\n\t\t\t\ttexture.generateMipmaps = texData.generateMipmaps;\n\n\t\t\t}\n\n\t\t\ttexture.needsUpdate = true;\n\n\t\t\tif ( onLoad ) onLoad( texture, texData );\n\n\t\t}, onProgress, onError );\n\n\n\t\treturn texture;\n\n\t}\n\n}\n\nclass TextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst texture = new Texture();\n\n\t\tconst loader = new ImageLoader( this.manager );\n\t\tloader.setCrossOrigin( this.crossOrigin );\n\t\tloader.setPath( this.path );\n\n\t\tloader.load( url, function ( image ) {\n\n\t\t\ttexture.image = image;\n\t\t\ttexture.needsUpdate = true;\n\n\t\t\tif ( onLoad !== undefined ) {\n\n\t\t\t\tonLoad( texture );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t\treturn texture;\n\n\t}\n\n}\n\nclass Light extends Object3D {\n\n\tconstructor( color, intensity = 1 ) {\n\n\t\tsuper();\n\n\t\tthis.isLight = true;\n\n\t\tthis.type = 'Light';\n\n\t\tthis.color = new Color( color );\n\t\tthis.intensity = intensity;\n\n\t}\n\n\tdispose() {\n\n\t\t// Empty here in base class; some subclasses override.\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.color.copy( source.color );\n\t\tthis.intensity = source.intensity;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.color = this.color.getHex();\n\t\tdata.object.intensity = this.intensity;\n\n\t\tif ( this.groundColor !== undefined ) data.object.groundColor = this.groundColor.getHex();\n\n\t\tif ( this.distance !== undefined ) data.object.distance = this.distance;\n\t\tif ( this.angle !== undefined ) data.object.angle = this.angle;\n\t\tif ( this.decay !== undefined ) data.object.decay = this.decay;\n\t\tif ( this.penumbra !== undefined ) data.object.penumbra = this.penumbra;\n\n\t\tif ( this.shadow !== undefined ) data.object.shadow = this.shadow.toJSON();\n\t\tif ( this.target !== undefined ) data.object.target = this.target.uuid;\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass HemisphereLight extends Light {\n\n\tconstructor( skyColor, groundColor, intensity ) {\n\n\t\tsuper( skyColor, intensity );\n\n\t\tthis.isHemisphereLight = true;\n\n\t\tthis.type = 'HemisphereLight';\n\n\t\tthis.position.copy( Object3D.DEFAULT_UP );\n\t\tthis.updateMatrix();\n\n\t\tthis.groundColor = new Color( groundColor );\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.groundColor.copy( source.groundColor );\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _projScreenMatrix$1 = /*@__PURE__*/ new Matrix4();\nconst _lightPositionWorld$1 = /*@__PURE__*/ new Vector3();\nconst _lookTarget$1 = /*@__PURE__*/ new Vector3();\n\nclass LightShadow {\n\n\tconstructor( camera ) {\n\n\t\tthis.camera = camera;\n\n\t\tthis.intensity = 1;\n\n\t\tthis.bias = 0;\n\t\tthis.normalBias = 0;\n\t\tthis.radius = 1;\n\t\tthis.blurSamples = 8;\n\n\t\tthis.mapSize = new Vector2( 512, 512 );\n\n\t\tthis.map = null;\n\t\tthis.mapPass = null;\n\t\tthis.matrix = new Matrix4();\n\n\t\tthis.autoUpdate = true;\n\t\tthis.needsUpdate = false;\n\n\t\tthis._frustum = new Frustum();\n\t\tthis._frameExtents = new Vector2( 1, 1 );\n\n\t\tthis._viewportCount = 1;\n\n\t\tthis._viewports = [\n\n\t\t\tnew Vector4( 0, 0, 1, 1 )\n\n\t\t];\n\n\t}\n\n\tgetViewportCount() {\n\n\t\treturn this._viewportCount;\n\n\t}\n\n\tgetFrustum() {\n\n\t\treturn this._frustum;\n\n\t}\n\n\tupdateMatrices( light ) {\n\n\t\tconst shadowCamera = this.camera;\n\t\tconst shadowMatrix = this.matrix;\n\n\t\t_lightPositionWorld$1.setFromMatrixPosition( light.matrixWorld );\n\t\tshadowCamera.position.copy( _lightPositionWorld$1 );\n\n\t\t_lookTarget$1.setFromMatrixPosition( light.target.matrixWorld );\n\t\tshadowCamera.lookAt( _lookTarget$1 );\n\t\tshadowCamera.updateMatrixWorld();\n\n\t\t_projScreenMatrix$1.multiplyMatrices( shadowCamera.projectionMatrix, shadowCamera.matrixWorldInverse );\n\t\tthis._frustum.setFromProjectionMatrix( _projScreenMatrix$1 );\n\n\t\tshadowMatrix.set(\n\t\t\t0.5, 0.0, 0.0, 0.5,\n\t\t\t0.0, 0.5, 0.0, 0.5,\n\t\t\t0.0, 0.0, 0.5, 0.5,\n\t\t\t0.0, 0.0, 0.0, 1.0\n\t\t);\n\n\t\tshadowMatrix.multiply( _projScreenMatrix$1 );\n\n\t}\n\n\tgetViewport( viewportIndex ) {\n\n\t\treturn this._viewports[ viewportIndex ];\n\n\t}\n\n\tgetFrameExtents() {\n\n\t\treturn this._frameExtents;\n\n\t}\n\n\tdispose() {\n\n\t\tif ( this.map ) {\n\n\t\t\tthis.map.dispose();\n\n\t\t}\n\n\t\tif ( this.mapPass ) {\n\n\t\t\tthis.mapPass.dispose();\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.camera = source.camera.clone();\n\n\t\tthis.intensity = source.intensity;\n\n\t\tthis.bias = source.bias;\n\t\tthis.radius = source.radius;\n\n\t\tthis.mapSize.copy( source.mapSize );\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst object = {};\n\n\t\tif ( this.intensity !== 1 ) object.intensity = this.intensity;\n\t\tif ( this.bias !== 0 ) object.bias = this.bias;\n\t\tif ( this.normalBias !== 0 ) object.normalBias = this.normalBias;\n\t\tif ( this.radius !== 1 ) object.radius = this.radius;\n\t\tif ( this.mapSize.x !== 512 || this.mapSize.y !== 512 ) object.mapSize = this.mapSize.toArray();\n\n\t\tobject.camera = this.camera.toJSON( false ).object;\n\t\tdelete object.camera.matrix;\n\n\t\treturn object;\n\n\t}\n\n}\n\nclass SpotLightShadow extends LightShadow {\n\n\tconstructor() {\n\n\t\tsuper( new PerspectiveCamera( 50, 1, 0.5, 500 ) );\n\n\t\tthis.isSpotLightShadow = true;\n\n\t\tthis.focus = 1;\n\n\t}\n\n\tupdateMatrices( light ) {\n\n\t\tconst camera = this.camera;\n\n\t\tconst fov = RAD2DEG * 2 * light.angle * this.focus;\n\t\tconst aspect = this.mapSize.width / this.mapSize.height;\n\t\tconst far = light.distance || camera.far;\n\n\t\tif ( fov !== camera.fov || aspect !== camera.aspect || far !== camera.far ) {\n\n\t\t\tcamera.fov = fov;\n\t\t\tcamera.aspect = aspect;\n\t\t\tcamera.far = far;\n\t\t\tcamera.updateProjectionMatrix();\n\n\t\t}\n\n\t\tsuper.updateMatrices( light );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.focus = source.focus;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass SpotLight extends Light {\n\n\tconstructor( color, intensity, distance = 0, angle = Math.PI / 3, penumbra = 0, decay = 2 ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isSpotLight = true;\n\n\t\tthis.type = 'SpotLight';\n\n\t\tthis.position.copy( Object3D.DEFAULT_UP );\n\t\tthis.updateMatrix();\n\n\t\tthis.target = new Object3D();\n\n\t\tthis.distance = distance;\n\t\tthis.angle = angle;\n\t\tthis.penumbra = penumbra;\n\t\tthis.decay = decay;\n\n\t\tthis.map = null;\n\n\t\tthis.shadow = new SpotLightShadow();\n\n\t}\n\n\tget power() {\n\n\t\t// compute the light's luminous power (in lumens) from its intensity (in candela)\n\t\t// by convention for a spotlight, luminous power (lm) = π * luminous intensity (cd)\n\t\treturn this.intensity * Math.PI;\n\n\t}\n\n\tset power( power ) {\n\n\t\t// set the light's intensity (in candela) from the desired luminous power (in lumens)\n\t\tthis.intensity = power / Math.PI;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.shadow.dispose();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.distance = source.distance;\n\t\tthis.angle = source.angle;\n\t\tthis.penumbra = source.penumbra;\n\t\tthis.decay = source.decay;\n\n\t\tthis.target = source.target.clone();\n\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _projScreenMatrix = /*@__PURE__*/ new Matrix4();\nconst _lightPositionWorld = /*@__PURE__*/ new Vector3();\nconst _lookTarget = /*@__PURE__*/ new Vector3();\n\nclass PointLightShadow extends LightShadow {\n\n\tconstructor() {\n\n\t\tsuper( new PerspectiveCamera( 90, 1, 0.5, 500 ) );\n\n\t\tthis.isPointLightShadow = true;\n\n\t\tthis._frameExtents = new Vector2( 4, 2 );\n\n\t\tthis._viewportCount = 6;\n\n\t\tthis._viewports = [\n\t\t\t// These viewports map a cube-map onto a 2D texture with the\n\t\t\t// following orientation:\n\t\t\t//\n\t\t\t//  xzXZ\n\t\t\t//   y Y\n\t\t\t//\n\t\t\t// X - Positive x direction\n\t\t\t// x - Negative x direction\n\t\t\t// Y - Positive y direction\n\t\t\t// y - Negative y direction\n\t\t\t// Z - Positive z direction\n\t\t\t// z - Negative z direction\n\n\t\t\t// positive X\n\t\t\tnew Vector4( 2, 1, 1, 1 ),\n\t\t\t// negative X\n\t\t\tnew Vector4( 0, 1, 1, 1 ),\n\t\t\t// positive Z\n\t\t\tnew Vector4( 3, 1, 1, 1 ),\n\t\t\t// negative Z\n\t\t\tnew Vector4( 1, 1, 1, 1 ),\n\t\t\t// positive Y\n\t\t\tnew Vector4( 3, 0, 1, 1 ),\n\t\t\t// negative Y\n\t\t\tnew Vector4( 1, 0, 1, 1 )\n\t\t];\n\n\t\tthis._cubeDirections = [\n\t\t\tnew Vector3( 1, 0, 0 ), new Vector3( - 1, 0, 0 ), new Vector3( 0, 0, 1 ),\n\t\t\tnew Vector3( 0, 0, - 1 ), new Vector3( 0, 1, 0 ), new Vector3( 0, - 1, 0 )\n\t\t];\n\n\t\tthis._cubeUps = [\n\t\t\tnew Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ),\n\t\t\tnew Vector3( 0, 1, 0 ), new Vector3( 0, 0, 1 ),\tnew Vector3( 0, 0, - 1 )\n\t\t];\n\n\t}\n\n\tupdateMatrices( light, viewportIndex = 0 ) {\n\n\t\tconst camera = this.camera;\n\t\tconst shadowMatrix = this.matrix;\n\n\t\tconst far = light.distance || camera.far;\n\n\t\tif ( far !== camera.far ) {\n\n\t\t\tcamera.far = far;\n\t\t\tcamera.updateProjectionMatrix();\n\n\t\t}\n\n\t\t_lightPositionWorld.setFromMatrixPosition( light.matrixWorld );\n\t\tcamera.position.copy( _lightPositionWorld );\n\n\t\t_lookTarget.copy( camera.position );\n\t\t_lookTarget.add( this._cubeDirections[ viewportIndex ] );\n\t\tcamera.up.copy( this._cubeUps[ viewportIndex ] );\n\t\tcamera.lookAt( _lookTarget );\n\t\tcamera.updateMatrixWorld();\n\n\t\tshadowMatrix.makeTranslation( - _lightPositionWorld.x, - _lightPositionWorld.y, - _lightPositionWorld.z );\n\n\t\t_projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\n\t\tthis._frustum.setFromProjectionMatrix( _projScreenMatrix );\n\n\t}\n\n}\n\nclass PointLight extends Light {\n\n\tconstructor( color, intensity, distance = 0, decay = 2 ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isPointLight = true;\n\n\t\tthis.type = 'PointLight';\n\n\t\tthis.distance = distance;\n\t\tthis.decay = decay;\n\n\t\tthis.shadow = new PointLightShadow();\n\n\t}\n\n\tget power() {\n\n\t\t// compute the light's luminous power (in lumens) from its intensity (in candela)\n\t\t// for an isotropic light source, luminous power (lm) = 4 π luminous intensity (cd)\n\t\treturn this.intensity * 4 * Math.PI;\n\n\t}\n\n\tset power( power ) {\n\n\t\t// set the light's intensity (in candela) from the desired luminous power (in lumens)\n\t\tthis.intensity = power / ( 4 * Math.PI );\n\n\t}\n\n\tdispose() {\n\n\t\tthis.shadow.dispose();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.distance = source.distance;\n\t\tthis.decay = source.decay;\n\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass DirectionalLightShadow extends LightShadow {\n\n\tconstructor() {\n\n\t\tsuper( new OrthographicCamera( - 5, 5, 5, - 5, 0.5, 500 ) );\n\n\t\tthis.isDirectionalLightShadow = true;\n\n\t}\n\n}\n\nclass DirectionalLight extends Light {\n\n\tconstructor( color, intensity ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isDirectionalLight = true;\n\n\t\tthis.type = 'DirectionalLight';\n\n\t\tthis.position.copy( Object3D.DEFAULT_UP );\n\t\tthis.updateMatrix();\n\n\t\tthis.target = new Object3D();\n\n\t\tthis.shadow = new DirectionalLightShadow();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.shadow.dispose();\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.target = source.target.clone();\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass AmbientLight extends Light {\n\n\tconstructor( color, intensity ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isAmbientLight = true;\n\n\t\tthis.type = 'AmbientLight';\n\n\t}\n\n}\n\nclass RectAreaLight extends Light {\n\n\tconstructor( color, intensity, width = 10, height = 10 ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isRectAreaLight = true;\n\n\t\tthis.type = 'RectAreaLight';\n\n\t\tthis.width = width;\n\t\tthis.height = height;\n\n\t}\n\n\tget power() {\n\n\t\t// compute the light's luminous power (in lumens) from its intensity (in nits)\n\t\treturn this.intensity * this.width * this.height * Math.PI;\n\n\t}\n\n\tset power( power ) {\n\n\t\t// set the light's intensity (in nits) from the desired luminous power (in lumens)\n\t\tthis.intensity = power / ( this.width * this.height * Math.PI );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.width = source.width;\n\t\tthis.height = source.height;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.width = this.width;\n\t\tdata.object.height = this.height;\n\n\t\treturn data;\n\n\t}\n\n}\n\n/**\n * Primary reference:\n *   https://graphics.stanford.edu/papers/envmap/envmap.pdf\n *\n * Secondary reference:\n *   https://www.ppsloan.org/publications/StupidSH36.pdf\n */\n\n// 3-band SH defined by 9 coefficients\n\nclass SphericalHarmonics3 {\n\n\tconstructor() {\n\n\t\tthis.isSphericalHarmonics3 = true;\n\n\t\tthis.coefficients = [];\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients.push( new Vector3() );\n\n\t\t}\n\n\t}\n\n\tset( coefficients ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].copy( coefficients[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tzero() {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].set( 0, 0, 0 );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// get the radiance in the direction of the normal\n\t// target is a Vector3\n\tgetAt( normal, target ) {\n\n\t\t// normal is assumed to be unit length\n\n\t\tconst x = normal.x, y = normal.y, z = normal.z;\n\n\t\tconst coeff = this.coefficients;\n\n\t\t// band 0\n\t\ttarget.copy( coeff[ 0 ] ).multiplyScalar( 0.282095 );\n\n\t\t// band 1\n\t\ttarget.addScaledVector( coeff[ 1 ], 0.488603 * y );\n\t\ttarget.addScaledVector( coeff[ 2 ], 0.488603 * z );\n\t\ttarget.addScaledVector( coeff[ 3 ], 0.488603 * x );\n\n\t\t// band 2\n\t\ttarget.addScaledVector( coeff[ 4 ], 1.092548 * ( x * y ) );\n\t\ttarget.addScaledVector( coeff[ 5 ], 1.092548 * ( y * z ) );\n\t\ttarget.addScaledVector( coeff[ 6 ], 0.315392 * ( 3.0 * z * z - 1.0 ) );\n\t\ttarget.addScaledVector( coeff[ 7 ], 1.092548 * ( x * z ) );\n\t\ttarget.addScaledVector( coeff[ 8 ], 0.546274 * ( x * x - y * y ) );\n\n\t\treturn target;\n\n\t}\n\n\t// get the irradiance (radiance convolved with cosine lobe) in the direction of the normal\n\t// target is a Vector3\n\t// https://graphics.stanford.edu/papers/envmap/envmap.pdf\n\tgetIrradianceAt( normal, target ) {\n\n\t\t// normal is assumed to be unit length\n\n\t\tconst x = normal.x, y = normal.y, z = normal.z;\n\n\t\tconst coeff = this.coefficients;\n\n\t\t// band 0\n\t\ttarget.copy( coeff[ 0 ] ).multiplyScalar( 0.886227 ); // π * 0.282095\n\n\t\t// band 1\n\t\ttarget.addScaledVector( coeff[ 1 ], 2.0 * 0.511664 * y ); // ( 2 * π / 3 ) * 0.488603\n\t\ttarget.addScaledVector( coeff[ 2 ], 2.0 * 0.511664 * z );\n\t\ttarget.addScaledVector( coeff[ 3 ], 2.0 * 0.511664 * x );\n\n\t\t// band 2\n\t\ttarget.addScaledVector( coeff[ 4 ], 2.0 * 0.429043 * x * y ); // ( π / 4 ) * 1.092548\n\t\ttarget.addScaledVector( coeff[ 5 ], 2.0 * 0.429043 * y * z );\n\t\ttarget.addScaledVector( coeff[ 6 ], 0.743125 * z * z - 0.247708 ); // ( π / 4 ) * 0.315392 * 3\n\t\ttarget.addScaledVector( coeff[ 7 ], 2.0 * 0.429043 * x * z );\n\t\ttarget.addScaledVector( coeff[ 8 ], 0.429043 * ( x * x - y * y ) ); // ( π / 4 ) * 0.546274\n\n\t\treturn target;\n\n\t}\n\n\tadd( sh ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].add( sh.coefficients[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\taddScaledSH( sh, s ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].addScaledVector( sh.coefficients[ i ], s );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tscale( s ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].multiplyScalar( s );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tlerp( sh, alpha ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].lerp( sh.coefficients[ i ], alpha );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tequals( sh ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tif ( ! this.coefficients[ i ].equals( sh.coefficients[ i ] ) ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tcopy( sh ) {\n\n\t\treturn this.set( sh.coefficients );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tconst coefficients = this.coefficients;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tcoefficients[ i ].fromArray( array, offset + ( i * 3 ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tconst coefficients = this.coefficients;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tcoefficients[ i ].toArray( array, offset + ( i * 3 ) );\n\n\t\t}\n\n\t\treturn array;\n\n\t}\n\n\t// evaluate the basis functions\n\t// shBasis is an Array[ 9 ]\n\tstatic getBasisAt( normal, shBasis ) {\n\n\t\t// normal is assumed to be unit length\n\n\t\tconst x = normal.x, y = normal.y, z = normal.z;\n\n\t\t// band 0\n\t\tshBasis[ 0 ] = 0.282095;\n\n\t\t// band 1\n\t\tshBasis[ 1 ] = 0.488603 * y;\n\t\tshBasis[ 2 ] = 0.488603 * z;\n\t\tshBasis[ 3 ] = 0.488603 * x;\n\n\t\t// band 2\n\t\tshBasis[ 4 ] = 1.092548 * x * y;\n\t\tshBasis[ 5 ] = 1.092548 * y * z;\n\t\tshBasis[ 6 ] = 0.315392 * ( 3 * z * z - 1 );\n\t\tshBasis[ 7 ] = 1.092548 * x * z;\n\t\tshBasis[ 8 ] = 0.546274 * ( x * x - y * y );\n\n\t}\n\n}\n\nclass LightProbe extends Light {\n\n\tconstructor( sh = new SphericalHarmonics3(), intensity = 1 ) {\n\n\t\tsuper( undefined, intensity );\n\n\t\tthis.isLightProbe = true;\n\n\t\tthis.sh = sh;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.sh.copy( source.sh );\n\n\t\treturn this;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tthis.intensity = json.intensity; // TODO: Move this bit to Light.fromJSON();\n\t\tthis.sh.fromArray( json.sh );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.sh = this.sh.toArray();\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass MaterialLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\t\tthis.textures = {};\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( scope.manager );\n\t\tloader.setPath( scope.path );\n\t\tloader.setRequestHeader( scope.requestHeader );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tparse( json ) {\n\n\t\tconst textures = this.textures;\n\n\t\tfunction getTexture( name ) {\n\n\t\t\tif ( textures[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.MaterialLoader: Undefined texture', name );\n\n\t\t\t}\n\n\t\t\treturn textures[ name ];\n\n\t\t}\n\n\t\tconst material = MaterialLoader.createMaterialFromType( json.type );\n\n\t\tif ( json.uuid !== undefined ) material.uuid = json.uuid;\n\t\tif ( json.name !== undefined ) material.name = json.name;\n\t\tif ( json.color !== undefined && material.color !== undefined ) material.color.setHex( json.color );\n\t\tif ( json.roughness !== undefined ) material.roughness = json.roughness;\n\t\tif ( json.metalness !== undefined ) material.metalness = json.metalness;\n\t\tif ( json.sheen !== undefined ) material.sheen = json.sheen;\n\t\tif ( json.sheenColor !== undefined ) material.sheenColor = new Color().setHex( json.sheenColor );\n\t\tif ( json.sheenRoughness !== undefined ) material.sheenRoughness = json.sheenRoughness;\n\t\tif ( json.emissive !== undefined && material.emissive !== undefined ) material.emissive.setHex( json.emissive );\n\t\tif ( json.specular !== undefined && material.specular !== undefined ) material.specular.setHex( json.specular );\n\t\tif ( json.specularIntensity !== undefined ) material.specularIntensity = json.specularIntensity;\n\t\tif ( json.specularColor !== undefined && material.specularColor !== undefined ) material.specularColor.setHex( json.specularColor );\n\t\tif ( json.shininess !== undefined ) material.shininess = json.shininess;\n\t\tif ( json.clearcoat !== undefined ) material.clearcoat = json.clearcoat;\n\t\tif ( json.clearcoatRoughness !== undefined ) material.clearcoatRoughness = json.clearcoatRoughness;\n\t\tif ( json.dispersion !== undefined ) material.dispersion = json.dispersion;\n\t\tif ( json.iridescence !== undefined ) material.iridescence = json.iridescence;\n\t\tif ( json.iridescenceIOR !== undefined ) material.iridescenceIOR = json.iridescenceIOR;\n\t\tif ( json.iridescenceThicknessRange !== undefined ) material.iridescenceThicknessRange = json.iridescenceThicknessRange;\n\t\tif ( json.transmission !== undefined ) material.transmission = json.transmission;\n\t\tif ( json.thickness !== undefined ) material.thickness = json.thickness;\n\t\tif ( json.attenuationDistance !== undefined ) material.attenuationDistance = json.attenuationDistance;\n\t\tif ( json.attenuationColor !== undefined && material.attenuationColor !== undefined ) material.attenuationColor.setHex( json.attenuationColor );\n\t\tif ( json.anisotropy !== undefined ) material.anisotropy = json.anisotropy;\n\t\tif ( json.anisotropyRotation !== undefined ) material.anisotropyRotation = json.anisotropyRotation;\n\t\tif ( json.fog !== undefined ) material.fog = json.fog;\n\t\tif ( json.flatShading !== undefined ) material.flatShading = json.flatShading;\n\t\tif ( json.blending !== undefined ) material.blending = json.blending;\n\t\tif ( json.combine !== undefined ) material.combine = json.combine;\n\t\tif ( json.side !== undefined ) material.side = json.side;\n\t\tif ( json.shadowSide !== undefined ) material.shadowSide = json.shadowSide;\n\t\tif ( json.opacity !== undefined ) material.opacity = json.opacity;\n\t\tif ( json.transparent !== undefined ) material.transparent = json.transparent;\n\t\tif ( json.alphaTest !== undefined ) material.alphaTest = json.alphaTest;\n\t\tif ( json.alphaHash !== undefined ) material.alphaHash = json.alphaHash;\n\t\tif ( json.depthFunc !== undefined ) material.depthFunc = json.depthFunc;\n\t\tif ( json.depthTest !== undefined ) material.depthTest = json.depthTest;\n\t\tif ( json.depthWrite !== undefined ) material.depthWrite = json.depthWrite;\n\t\tif ( json.colorWrite !== undefined ) material.colorWrite = json.colorWrite;\n\t\tif ( json.blendSrc !== undefined ) material.blendSrc = json.blendSrc;\n\t\tif ( json.blendDst !== undefined ) material.blendDst = json.blendDst;\n\t\tif ( json.blendEquation !== undefined ) material.blendEquation = json.blendEquation;\n\t\tif ( json.blendSrcAlpha !== undefined ) material.blendSrcAlpha = json.blendSrcAlpha;\n\t\tif ( json.blendDstAlpha !== undefined ) material.blendDstAlpha = json.blendDstAlpha;\n\t\tif ( json.blendEquationAlpha !== undefined ) material.blendEquationAlpha = json.blendEquationAlpha;\n\t\tif ( json.blendColor !== undefined && material.blendColor !== undefined ) material.blendColor.setHex( json.blendColor );\n\t\tif ( json.blendAlpha !== undefined ) material.blendAlpha = json.blendAlpha;\n\t\tif ( json.stencilWriteMask !== undefined ) material.stencilWriteMask = json.stencilWriteMask;\n\t\tif ( json.stencilFunc !== undefined ) material.stencilFunc = json.stencilFunc;\n\t\tif ( json.stencilRef !== undefined ) material.stencilRef = json.stencilRef;\n\t\tif ( json.stencilFuncMask !== undefined ) material.stencilFuncMask = json.stencilFuncMask;\n\t\tif ( json.stencilFail !== undefined ) material.stencilFail = json.stencilFail;\n\t\tif ( json.stencilZFail !== undefined ) material.stencilZFail = json.stencilZFail;\n\t\tif ( json.stencilZPass !== undefined ) material.stencilZPass = json.stencilZPass;\n\t\tif ( json.stencilWrite !== undefined ) material.stencilWrite = json.stencilWrite;\n\n\t\tif ( json.wireframe !== undefined ) material.wireframe = json.wireframe;\n\t\tif ( json.wireframeLinewidth !== undefined ) material.wireframeLinewidth = json.wireframeLinewidth;\n\t\tif ( json.wireframeLinecap !== undefined ) material.wireframeLinecap = json.wireframeLinecap;\n\t\tif ( json.wireframeLinejoin !== undefined ) material.wireframeLinejoin = json.wireframeLinejoin;\n\n\t\tif ( json.rotation !== undefined ) material.rotation = json.rotation;\n\n\t\tif ( json.linewidth !== undefined ) material.linewidth = json.linewidth;\n\t\tif ( json.dashSize !== undefined ) material.dashSize = json.dashSize;\n\t\tif ( json.gapSize !== undefined ) material.gapSize = json.gapSize;\n\t\tif ( json.scale !== undefined ) material.scale = json.scale;\n\n\t\tif ( json.polygonOffset !== undefined ) material.polygonOffset = json.polygonOffset;\n\t\tif ( json.polygonOffsetFactor !== undefined ) material.polygonOffsetFactor = json.polygonOffsetFactor;\n\t\tif ( json.polygonOffsetUnits !== undefined ) material.polygonOffsetUnits = json.polygonOffsetUnits;\n\n\t\tif ( json.dithering !== undefined ) material.dithering = json.dithering;\n\n\t\tif ( json.alphaToCoverage !== undefined ) material.alphaToCoverage = json.alphaToCoverage;\n\t\tif ( json.premultipliedAlpha !== undefined ) material.premultipliedAlpha = json.premultipliedAlpha;\n\t\tif ( json.forceSinglePass !== undefined ) material.forceSinglePass = json.forceSinglePass;\n\n\t\tif ( json.visible !== undefined ) material.visible = json.visible;\n\n\t\tif ( json.toneMapped !== undefined ) material.toneMapped = json.toneMapped;\n\n\t\tif ( json.userData !== undefined ) material.userData = json.userData;\n\n\t\tif ( json.vertexColors !== undefined ) {\n\n\t\t\tif ( typeof json.vertexColors === 'number' ) {\n\n\t\t\t\tmaterial.vertexColors = ( json.vertexColors > 0 ) ? true : false;\n\n\t\t\t} else {\n\n\t\t\t\tmaterial.vertexColors = json.vertexColors;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Shader Material\n\n\t\tif ( json.uniforms !== undefined ) {\n\n\t\t\tfor ( const name in json.uniforms ) {\n\n\t\t\t\tconst uniform = json.uniforms[ name ];\n\n\t\t\t\tmaterial.uniforms[ name ] = {};\n\n\t\t\t\tswitch ( uniform.type ) {\n\n\t\t\t\t\tcase 't':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = getTexture( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'c':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Color().setHex( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'v2':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector2().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'v3':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector3().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'v4':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector4().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'm3':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Matrix3().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'm4':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Matrix4().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = uniform.value;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( json.defines !== undefined ) material.defines = json.defines;\n\t\tif ( json.vertexShader !== undefined ) material.vertexShader = json.vertexShader;\n\t\tif ( json.fragmentShader !== undefined ) material.fragmentShader = json.fragmentShader;\n\t\tif ( json.glslVersion !== undefined ) material.glslVersion = json.glslVersion;\n\n\t\tif ( json.extensions !== undefined ) {\n\n\t\t\tfor ( const key in json.extensions ) {\n\n\t\t\t\tmaterial.extensions[ key ] = json.extensions[ key ];\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( json.lights !== undefined ) material.lights = json.lights;\n\t\tif ( json.clipping !== undefined ) material.clipping = json.clipping;\n\n\t\t// for PointsMaterial\n\n\t\tif ( json.size !== undefined ) material.size = json.size;\n\t\tif ( json.sizeAttenuation !== undefined ) material.sizeAttenuation = json.sizeAttenuation;\n\n\t\t// maps\n\n\t\tif ( json.map !== undefined ) material.map = getTexture( json.map );\n\t\tif ( json.matcap !== undefined ) material.matcap = getTexture( json.matcap );\n\n\t\tif ( json.alphaMap !== undefined ) material.alphaMap = getTexture( json.alphaMap );\n\n\t\tif ( json.bumpMap !== undefined ) material.bumpMap = getTexture( json.bumpMap );\n\t\tif ( json.bumpScale !== undefined ) material.bumpScale = json.bumpScale;\n\n\t\tif ( json.normalMap !== undefined ) material.normalMap = getTexture( json.normalMap );\n\t\tif ( json.normalMapType !== undefined ) material.normalMapType = json.normalMapType;\n\t\tif ( json.normalScale !== undefined ) {\n\n\t\t\tlet normalScale = json.normalScale;\n\n\t\t\tif ( Array.isArray( normalScale ) === false ) {\n\n\t\t\t\t// Blender exporter used to export a scalar. See #7459\n\n\t\t\t\tnormalScale = [ normalScale, normalScale ];\n\n\t\t\t}\n\n\t\t\tmaterial.normalScale = new Vector2().fromArray( normalScale );\n\n\t\t}\n\n\t\tif ( json.displacementMap !== undefined ) material.displacementMap = getTexture( json.displacementMap );\n\t\tif ( json.displacementScale !== undefined ) material.displacementScale = json.displacementScale;\n\t\tif ( json.displacementBias !== undefined ) material.displacementBias = json.displacementBias;\n\n\t\tif ( json.roughnessMap !== undefined ) material.roughnessMap = getTexture( json.roughnessMap );\n\t\tif ( json.metalnessMap !== undefined ) material.metalnessMap = getTexture( json.metalnessMap );\n\n\t\tif ( json.emissiveMap !== undefined ) material.emissiveMap = getTexture( json.emissiveMap );\n\t\tif ( json.emissiveIntensity !== undefined ) material.emissiveIntensity = json.emissiveIntensity;\n\n\t\tif ( json.specularMap !== undefined ) material.specularMap = getTexture( json.specularMap );\n\t\tif ( json.specularIntensityMap !== undefined ) material.specularIntensityMap = getTexture( json.specularIntensityMap );\n\t\tif ( json.specularColorMap !== undefined ) material.specularColorMap = getTexture( json.specularColorMap );\n\n\t\tif ( json.envMap !== undefined ) material.envMap = getTexture( json.envMap );\n\t\tif ( json.envMapRotation !== undefined ) material.envMapRotation.fromArray( json.envMapRotation );\n\t\tif ( json.envMapIntensity !== undefined ) material.envMapIntensity = json.envMapIntensity;\n\n\t\tif ( json.reflectivity !== undefined ) material.reflectivity = json.reflectivity;\n\t\tif ( json.refractionRatio !== undefined ) material.refractionRatio = json.refractionRatio;\n\n\t\tif ( json.lightMap !== undefined ) material.lightMap = getTexture( json.lightMap );\n\t\tif ( json.lightMapIntensity !== undefined ) material.lightMapIntensity = json.lightMapIntensity;\n\n\t\tif ( json.aoMap !== undefined ) material.aoMap = getTexture( json.aoMap );\n\t\tif ( json.aoMapIntensity !== undefined ) material.aoMapIntensity = json.aoMapIntensity;\n\n\t\tif ( json.gradientMap !== undefined ) material.gradientMap = getTexture( json.gradientMap );\n\n\t\tif ( json.clearcoatMap !== undefined ) material.clearcoatMap = getTexture( json.clearcoatMap );\n\t\tif ( json.clearcoatRoughnessMap !== undefined ) material.clearcoatRoughnessMap = getTexture( json.clearcoatRoughnessMap );\n\t\tif ( json.clearcoatNormalMap !== undefined ) material.clearcoatNormalMap = getTexture( json.clearcoatNormalMap );\n\t\tif ( json.clearcoatNormalScale !== undefined ) material.clearcoatNormalScale = new Vector2().fromArray( json.clearcoatNormalScale );\n\n\t\tif ( json.iridescenceMap !== undefined ) material.iridescenceMap = getTexture( json.iridescenceMap );\n\t\tif ( json.iridescenceThicknessMap !== undefined ) material.iridescenceThicknessMap = getTexture( json.iridescenceThicknessMap );\n\n\t\tif ( json.transmissionMap !== undefined ) material.transmissionMap = getTexture( json.transmissionMap );\n\t\tif ( json.thicknessMap !== undefined ) material.thicknessMap = getTexture( json.thicknessMap );\n\n\t\tif ( json.anisotropyMap !== undefined ) material.anisotropyMap = getTexture( json.anisotropyMap );\n\n\t\tif ( json.sheenColorMap !== undefined ) material.sheenColorMap = getTexture( json.sheenColorMap );\n\t\tif ( json.sheenRoughnessMap !== undefined ) material.sheenRoughnessMap = getTexture( json.sheenRoughnessMap );\n\n\t\treturn material;\n\n\t}\n\n\tsetTextures( value ) {\n\n\t\tthis.textures = value;\n\t\treturn this;\n\n\t}\n\n\tstatic createMaterialFromType( type ) {\n\n\t\tconst materialLib = {\n\t\t\tShadowMaterial,\n\t\t\tSpriteMaterial,\n\t\t\tRawShaderMaterial,\n\t\t\tShaderMaterial,\n\t\t\tPointsMaterial,\n\t\t\tMeshPhysicalMaterial,\n\t\t\tMeshStandardMaterial,\n\t\t\tMeshPhongMaterial,\n\t\t\tMeshToonMaterial,\n\t\t\tMeshNormalMaterial,\n\t\t\tMeshLambertMaterial,\n\t\t\tMeshDepthMaterial,\n\t\t\tMeshDistanceMaterial,\n\t\t\tMeshBasicMaterial,\n\t\t\tMeshMatcapMaterial,\n\t\t\tLineDashedMaterial,\n\t\t\tLineBasicMaterial,\n\t\t\tMaterial\n\t\t};\n\n\t\treturn new materialLib[ type ]();\n\n\t}\n\n}\n\nclass LoaderUtils {\n\n\tstatic decodeText( array ) { // @deprecated, r165\n\n\t\tconsole.warn( 'THREE.LoaderUtils: decodeText() has been deprecated with r165 and will be removed with r175. Use TextDecoder instead.' );\n\n\t\tif ( typeof TextDecoder !== 'undefined' ) {\n\n\t\t\treturn new TextDecoder().decode( array );\n\n\t\t}\n\n\t\t// Avoid the String.fromCharCode.apply(null, array) shortcut, which\n\t\t// throws a \"maximum call stack size exceeded\" error for large arrays.\n\n\t\tlet s = '';\n\n\t\tfor ( let i = 0, il = array.length; i < il; i ++ ) {\n\n\t\t\t// Implicitly assumes little-endian.\n\t\t\ts += String.fromCharCode( array[ i ] );\n\n\t\t}\n\n\t\ttry {\n\n\t\t\t// merges multi-byte utf-8 characters.\n\n\t\t\treturn decodeURIComponent( escape( s ) );\n\n\t\t} catch ( e ) { // see #16358\n\n\t\t\treturn s;\n\n\t\t}\n\n\t}\n\n\tstatic extractUrlBase( url ) {\n\n\t\tconst index = url.lastIndexOf( '/' );\n\n\t\tif ( index === - 1 ) return './';\n\n\t\treturn url.slice( 0, index + 1 );\n\n\t}\n\n\tstatic resolveURL( url, path ) {\n\n\t\t// Invalid URL\n\t\tif ( typeof url !== 'string' || url === '' ) return '';\n\n\t\t// Host Relative URL\n\t\tif ( /^https?:\\/\\//i.test( path ) && /^\\//.test( url ) ) {\n\n\t\t\tpath = path.replace( /(^https?:\\/\\/[^\\/]+).*/i, '$1' );\n\n\t\t}\n\n\t\t// Absolute URL http://,https://,//\n\t\tif ( /^(https?:)?\\/\\//i.test( url ) ) return url;\n\n\t\t// Data URI\n\t\tif ( /^data:.*,.*$/i.test( url ) ) return url;\n\n\t\t// Blob URL\n\t\tif ( /^blob:.*$/i.test( url ) ) return url;\n\n\t\t// Relative URL\n\t\treturn path + url;\n\n\t}\n\n}\n\nclass InstancedBufferGeometry extends BufferGeometry {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isInstancedBufferGeometry = true;\n\n\t\tthis.type = 'InstancedBufferGeometry';\n\t\tthis.instanceCount = Infinity;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.instanceCount = source.instanceCount;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.instanceCount = this.instanceCount;\n\n\t\tdata.isInstancedBufferGeometry = true;\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass BufferGeometryLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( scope.manager );\n\t\tloader.setPath( scope.path );\n\t\tloader.setRequestHeader( scope.requestHeader );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tparse( json ) {\n\n\t\tconst interleavedBufferMap = {};\n\t\tconst arrayBufferMap = {};\n\n\t\tfunction getInterleavedBuffer( json, uuid ) {\n\n\t\t\tif ( interleavedBufferMap[ uuid ] !== undefined ) return interleavedBufferMap[ uuid ];\n\n\t\t\tconst interleavedBuffers = json.interleavedBuffers;\n\t\t\tconst interleavedBuffer = interleavedBuffers[ uuid ];\n\n\t\t\tconst buffer = getArrayBuffer( json, interleavedBuffer.buffer );\n\n\t\t\tconst array = getTypedArray( interleavedBuffer.type, buffer );\n\t\t\tconst ib = new InterleavedBuffer( array, interleavedBuffer.stride );\n\t\t\tib.uuid = interleavedBuffer.uuid;\n\n\t\t\tinterleavedBufferMap[ uuid ] = ib;\n\n\t\t\treturn ib;\n\n\t\t}\n\n\t\tfunction getArrayBuffer( json, uuid ) {\n\n\t\t\tif ( arrayBufferMap[ uuid ] !== undefined ) return arrayBufferMap[ uuid ];\n\n\t\t\tconst arrayBuffers = json.arrayBuffers;\n\t\t\tconst arrayBuffer = arrayBuffers[ uuid ];\n\n\t\t\tconst ab = new Uint32Array( arrayBuffer ).buffer;\n\n\t\t\tarrayBufferMap[ uuid ] = ab;\n\n\t\t\treturn ab;\n\n\t\t}\n\n\t\tconst geometry = json.isInstancedBufferGeometry ? new InstancedBufferGeometry() : new BufferGeometry();\n\n\t\tconst index = json.data.index;\n\n\t\tif ( index !== undefined ) {\n\n\t\t\tconst typedArray = getTypedArray( index.type, index.array );\n\t\t\tgeometry.setIndex( new BufferAttribute( typedArray, 1 ) );\n\n\t\t}\n\n\t\tconst attributes = json.data.attributes;\n\n\t\tfor ( const key in attributes ) {\n\n\t\t\tconst attribute = attributes[ key ];\n\t\t\tlet bufferAttribute;\n\n\t\t\tif ( attribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\tconst interleavedBuffer = getInterleavedBuffer( json.data, attribute.data );\n\t\t\t\tbufferAttribute = new InterleavedBufferAttribute( interleavedBuffer, attribute.itemSize, attribute.offset, attribute.normalized );\n\n\t\t\t} else {\n\n\t\t\t\tconst typedArray = getTypedArray( attribute.type, attribute.array );\n\t\t\t\tconst bufferAttributeConstr = attribute.isInstancedBufferAttribute ? InstancedBufferAttribute : BufferAttribute;\n\t\t\t\tbufferAttribute = new bufferAttributeConstr( typedArray, attribute.itemSize, attribute.normalized );\n\n\t\t\t}\n\n\t\t\tif ( attribute.name !== undefined ) bufferAttribute.name = attribute.name;\n\t\t\tif ( attribute.usage !== undefined ) bufferAttribute.setUsage( attribute.usage );\n\n\t\t\tgeometry.setAttribute( key, bufferAttribute );\n\n\t\t}\n\n\t\tconst morphAttributes = json.data.morphAttributes;\n\n\t\tif ( morphAttributes ) {\n\n\t\t\tfor ( const key in morphAttributes ) {\n\n\t\t\t\tconst attributeArray = morphAttributes[ key ];\n\n\t\t\t\tconst array = [];\n\n\t\t\t\tfor ( let i = 0, il = attributeArray.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst attribute = attributeArray[ i ];\n\t\t\t\t\tlet bufferAttribute;\n\n\t\t\t\t\tif ( attribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\t\t\tconst interleavedBuffer = getInterleavedBuffer( json.data, attribute.data );\n\t\t\t\t\t\tbufferAttribute = new InterleavedBufferAttribute( interleavedBuffer, attribute.itemSize, attribute.offset, attribute.normalized );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst typedArray = getTypedArray( attribute.type, attribute.array );\n\t\t\t\t\t\tbufferAttribute = new BufferAttribute( typedArray, attribute.itemSize, attribute.normalized );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( attribute.name !== undefined ) bufferAttribute.name = attribute.name;\n\t\t\t\t\tarray.push( bufferAttribute );\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.morphAttributes[ key ] = array;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst morphTargetsRelative = json.data.morphTargetsRelative;\n\n\t\tif ( morphTargetsRelative ) {\n\n\t\t\tgeometry.morphTargetsRelative = true;\n\n\t\t}\n\n\t\tconst groups = json.data.groups || json.data.drawcalls || json.data.offsets;\n\n\t\tif ( groups !== undefined ) {\n\n\t\t\tfor ( let i = 0, n = groups.length; i !== n; ++ i ) {\n\n\t\t\t\tconst group = groups[ i ];\n\n\t\t\t\tgeometry.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst boundingSphere = json.data.boundingSphere;\n\n\t\tif ( boundingSphere !== undefined ) {\n\n\t\t\tconst center = new Vector3();\n\n\t\t\tif ( boundingSphere.center !== undefined ) {\n\n\t\t\t\tcenter.fromArray( boundingSphere.center );\n\n\t\t\t}\n\n\t\t\tgeometry.boundingSphere = new Sphere( center, boundingSphere.radius );\n\n\t\t}\n\n\t\tif ( json.name ) geometry.name = json.name;\n\t\tif ( json.userData ) geometry.userData = json.userData;\n\n\t\treturn geometry;\n\n\t}\n\n}\n\nclass ObjectLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst path = ( this.path === '' ) ? LoaderUtils.extractUrlBase( url ) : this.path;\n\t\tthis.resourcePath = this.resourcePath || path;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tlet json = null;\n\n\t\t\ttry {\n\n\t\t\t\tjson = JSON.parse( text );\n\n\t\t\t} catch ( error ) {\n\n\t\t\t\tif ( onError !== undefined ) onError( error );\n\n\t\t\t\tconsole.error( 'THREE:ObjectLoader: Can\\'t parse ' + url + '.', error.message );\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tconst metadata = json.metadata;\n\n\t\t\tif ( metadata === undefined || metadata.type === undefined || metadata.type.toLowerCase() === 'geometry' ) {\n\n\t\t\t\tif ( onError !== undefined ) onError( new Error( 'THREE.ObjectLoader: Can\\'t load ' + url ) );\n\n\t\t\t\tconsole.error( 'THREE.ObjectLoader: Can\\'t load ' + url );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tscope.parse( json, onLoad );\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tasync loadAsync( url, onProgress ) {\n\n\t\tconst scope = this;\n\n\t\tconst path = ( this.path === '' ) ? LoaderUtils.extractUrlBase( url ) : this.path;\n\t\tthis.resourcePath = this.resourcePath || path;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\n\t\tconst text = await loader.loadAsync( url, onProgress );\n\n\t\tconst json = JSON.parse( text );\n\n\t\tconst metadata = json.metadata;\n\n\t\tif ( metadata === undefined || metadata.type === undefined || metadata.type.toLowerCase() === 'geometry' ) {\n\n\t\t\tthrow new Error( 'THREE.ObjectLoader: Can\\'t load ' + url );\n\n\t\t}\n\n\t\treturn await scope.parseAsync( json );\n\n\t}\n\n\tparse( json, onLoad ) {\n\n\t\tconst animations = this.parseAnimations( json.animations );\n\t\tconst shapes = this.parseShapes( json.shapes );\n\t\tconst geometries = this.parseGeometries( json.geometries, shapes );\n\n\t\tconst images = this.parseImages( json.images, function () {\n\n\t\t\tif ( onLoad !== undefined ) onLoad( object );\n\n\t\t} );\n\n\t\tconst textures = this.parseTextures( json.textures, images );\n\t\tconst materials = this.parseMaterials( json.materials, textures );\n\n\t\tconst object = this.parseObject( json.object, geometries, materials, textures, animations );\n\t\tconst skeletons = this.parseSkeletons( json.skeletons, object );\n\n\t\tthis.bindSkeletons( object, skeletons );\n\t\tthis.bindLightTargets( object );\n\n\t\t//\n\n\t\tif ( onLoad !== undefined ) {\n\n\t\t\tlet hasImages = false;\n\n\t\t\tfor ( const uuid in images ) {\n\n\t\t\t\tif ( images[ uuid ].data instanceof HTMLImageElement ) {\n\n\t\t\t\t\thasImages = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( hasImages === false ) onLoad( object );\n\n\t\t}\n\n\t\treturn object;\n\n\t}\n\n\tasync parseAsync( json ) {\n\n\t\tconst animations = this.parseAnimations( json.animations );\n\t\tconst shapes = this.parseShapes( json.shapes );\n\t\tconst geometries = this.parseGeometries( json.geometries, shapes );\n\n\t\tconst images = await this.parseImagesAsync( json.images );\n\n\t\tconst textures = this.parseTextures( json.textures, images );\n\t\tconst materials = this.parseMaterials( json.materials, textures );\n\n\t\tconst object = this.parseObject( json.object, geometries, materials, textures, animations );\n\t\tconst skeletons = this.parseSkeletons( json.skeletons, object );\n\n\t\tthis.bindSkeletons( object, skeletons );\n\t\tthis.bindLightTargets( object );\n\n\t\treturn object;\n\n\t}\n\n\tparseShapes( json ) {\n\n\t\tconst shapes = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst shape = new Shape().fromJSON( json[ i ] );\n\n\t\t\t\tshapes[ shape.uuid ] = shape;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn shapes;\n\n\t}\n\n\tparseSkeletons( json, object ) {\n\n\t\tconst skeletons = {};\n\t\tconst bones = {};\n\n\t\t// generate bone lookup table\n\n\t\tobject.traverse( function ( child ) {\n\n\t\t\tif ( child.isBone ) bones[ child.uuid ] = child;\n\n\t\t} );\n\n\t\t// create skeletons\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst skeleton = new Skeleton().fromJSON( json[ i ], bones );\n\n\t\t\t\tskeletons[ skeleton.uuid ] = skeleton;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn skeletons;\n\n\t}\n\n\tparseGeometries( json, shapes ) {\n\n\t\tconst geometries = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tconst bufferGeometryLoader = new BufferGeometryLoader();\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tlet geometry;\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tswitch ( data.type ) {\n\n\t\t\t\t\tcase 'BufferGeometry':\n\t\t\t\t\tcase 'InstancedBufferGeometry':\n\n\t\t\t\t\t\tgeometry = bufferGeometryLoader.parse( data );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tif ( data.type in Geometries ) {\n\n\t\t\t\t\t\t\tgeometry = Geometries[ data.type ].fromJSON( data, shapes );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tconsole.warn( `THREE.ObjectLoader: Unsupported geometry type \"${ data.type }\"` );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.uuid = data.uuid;\n\n\t\t\t\tif ( data.name !== undefined ) geometry.name = data.name;\n\t\t\t\tif ( data.userData !== undefined ) geometry.userData = data.userData;\n\n\t\t\t\tgeometries[ data.uuid ] = geometry;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn geometries;\n\n\t}\n\n\tparseMaterials( json, textures ) {\n\n\t\tconst cache = {}; // MultiMaterial\n\t\tconst materials = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tconst loader = new MaterialLoader();\n\t\t\tloader.setTextures( textures );\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tif ( cache[ data.uuid ] === undefined ) {\n\n\t\t\t\t\tcache[ data.uuid ] = loader.parse( data );\n\n\t\t\t\t}\n\n\t\t\t\tmaterials[ data.uuid ] = cache[ data.uuid ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn materials;\n\n\t}\n\n\tparseAnimations( json ) {\n\n\t\tconst animations = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0; i < json.length; i ++ ) {\n\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tconst clip = AnimationClip.parse( data );\n\n\t\t\t\tanimations[ clip.uuid ] = clip;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn animations;\n\n\t}\n\n\tparseImages( json, onLoad ) {\n\n\t\tconst scope = this;\n\t\tconst images = {};\n\n\t\tlet loader;\n\n\t\tfunction loadImage( url ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\treturn loader.load( url, function () {\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, undefined, function () {\n\n\t\t\t\tscope.manager.itemError( url );\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t} );\n\n\t\t}\n\n\t\tfunction deserializeImage( image ) {\n\n\t\t\tif ( typeof image === 'string' ) {\n\n\t\t\t\tconst url = image;\n\n\t\t\t\tconst path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( url ) ? url : scope.resourcePath + url;\n\n\t\t\t\treturn loadImage( path );\n\n\t\t\t} else {\n\n\t\t\t\tif ( image.data ) {\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tdata: getTypedArray( image.type, image.data ),\n\t\t\t\t\t\twidth: image.width,\n\t\t\t\t\t\theight: image.height\n\t\t\t\t\t};\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( json !== undefined && json.length > 0 ) {\n\n\t\t\tconst manager = new LoadingManager( onLoad );\n\n\t\t\tloader = new ImageLoader( manager );\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\n\n\t\t\tfor ( let i = 0, il = json.length; i < il; i ++ ) {\n\n\t\t\t\tconst image = json[ i ];\n\t\t\t\tconst url = image.url;\n\n\t\t\t\tif ( Array.isArray( url ) ) {\n\n\t\t\t\t\t// load array of images e.g CubeTexture\n\n\t\t\t\t\tconst imageArray = [];\n\n\t\t\t\t\tfor ( let j = 0, jl = url.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tconst currentUrl = url[ j ];\n\n\t\t\t\t\t\tconst deserializedImage = deserializeImage( currentUrl );\n\n\t\t\t\t\t\tif ( deserializedImage !== null ) {\n\n\t\t\t\t\t\t\tif ( deserializedImage instanceof HTMLImageElement ) {\n\n\t\t\t\t\t\t\t\timageArray.push( deserializedImage );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t// special case: handle array of data textures for cube textures\n\n\t\t\t\t\t\t\t\timageArray.push( new DataTexture( deserializedImage.data, deserializedImage.width, deserializedImage.height ) );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\timages[ image.uuid ] = new Source( imageArray );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// load single image\n\n\t\t\t\t\tconst deserializedImage = deserializeImage( image.url );\n\t\t\t\t\timages[ image.uuid ] = new Source( deserializedImage );\n\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn images;\n\n\t}\n\n\tasync parseImagesAsync( json ) {\n\n\t\tconst scope = this;\n\t\tconst images = {};\n\n\t\tlet loader;\n\n\t\tasync function deserializeImage( image ) {\n\n\t\t\tif ( typeof image === 'string' ) {\n\n\t\t\t\tconst url = image;\n\n\t\t\t\tconst path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( url ) ? url : scope.resourcePath + url;\n\n\t\t\t\treturn await loader.loadAsync( path );\n\n\t\t\t} else {\n\n\t\t\t\tif ( image.data ) {\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tdata: getTypedArray( image.type, image.data ),\n\t\t\t\t\t\twidth: image.width,\n\t\t\t\t\t\theight: image.height\n\t\t\t\t\t};\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( json !== undefined && json.length > 0 ) {\n\n\t\t\tloader = new ImageLoader( this.manager );\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\n\n\t\t\tfor ( let i = 0, il = json.length; i < il; i ++ ) {\n\n\t\t\t\tconst image = json[ i ];\n\t\t\t\tconst url = image.url;\n\n\t\t\t\tif ( Array.isArray( url ) ) {\n\n\t\t\t\t\t// load array of images e.g CubeTexture\n\n\t\t\t\t\tconst imageArray = [];\n\n\t\t\t\t\tfor ( let j = 0, jl = url.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tconst currentUrl = url[ j ];\n\n\t\t\t\t\t\tconst deserializedImage = await deserializeImage( currentUrl );\n\n\t\t\t\t\t\tif ( deserializedImage !== null ) {\n\n\t\t\t\t\t\t\tif ( deserializedImage instanceof HTMLImageElement ) {\n\n\t\t\t\t\t\t\t\timageArray.push( deserializedImage );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t// special case: handle array of data textures for cube textures\n\n\t\t\t\t\t\t\t\timageArray.push( new DataTexture( deserializedImage.data, deserializedImage.width, deserializedImage.height ) );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\timages[ image.uuid ] = new Source( imageArray );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// load single image\n\n\t\t\t\t\tconst deserializedImage = await deserializeImage( image.url );\n\t\t\t\t\timages[ image.uuid ] = new Source( deserializedImage );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn images;\n\n\t}\n\n\tparseTextures( json, images ) {\n\n\t\tfunction parseConstant( value, type ) {\n\n\t\t\tif ( typeof value === 'number' ) return value;\n\n\t\t\tconsole.warn( 'THREE.ObjectLoader.parseTexture: Constant should be in numeric form.', value );\n\n\t\t\treturn type[ value ];\n\n\t\t}\n\n\t\tconst textures = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tif ( data.image === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: No \"image\" specified for', data.uuid );\n\n\t\t\t\t}\n\n\t\t\t\tif ( images[ data.image ] === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined image', data.image );\n\n\t\t\t\t}\n\n\t\t\t\tconst source = images[ data.image ];\n\t\t\t\tconst image = source.data;\n\n\t\t\t\tlet texture;\n\n\t\t\t\tif ( Array.isArray( image ) ) {\n\n\t\t\t\t\ttexture = new CubeTexture();\n\n\t\t\t\t\tif ( image.length === 6 ) texture.needsUpdate = true;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( image && image.data ) {\n\n\t\t\t\t\t\ttexture = new DataTexture();\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ttexture = new Texture();\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( image ) texture.needsUpdate = true; // textures can have undefined image data\n\n\t\t\t\t}\n\n\t\t\t\ttexture.source = source;\n\n\t\t\t\ttexture.uuid = data.uuid;\n\n\t\t\t\tif ( data.name !== undefined ) texture.name = data.name;\n\n\t\t\t\tif ( data.mapping !== undefined ) texture.mapping = parseConstant( data.mapping, TEXTURE_MAPPING );\n\t\t\t\tif ( data.channel !== undefined ) texture.channel = data.channel;\n\n\t\t\t\tif ( data.offset !== undefined ) texture.offset.fromArray( data.offset );\n\t\t\t\tif ( data.repeat !== undefined ) texture.repeat.fromArray( data.repeat );\n\t\t\t\tif ( data.center !== undefined ) texture.center.fromArray( data.center );\n\t\t\t\tif ( data.rotation !== undefined ) texture.rotation = data.rotation;\n\n\t\t\t\tif ( data.wrap !== undefined ) {\n\n\t\t\t\t\ttexture.wrapS = parseConstant( data.wrap[ 0 ], TEXTURE_WRAPPING );\n\t\t\t\t\ttexture.wrapT = parseConstant( data.wrap[ 1 ], TEXTURE_WRAPPING );\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.format !== undefined ) texture.format = data.format;\n\t\t\t\tif ( data.internalFormat !== undefined ) texture.internalFormat = data.internalFormat;\n\t\t\t\tif ( data.type !== undefined ) texture.type = data.type;\n\t\t\t\tif ( data.colorSpace !== undefined ) texture.colorSpace = data.colorSpace;\n\n\t\t\t\tif ( data.minFilter !== undefined ) texture.minFilter = parseConstant( data.minFilter, TEXTURE_FILTER );\n\t\t\t\tif ( data.magFilter !== undefined ) texture.magFilter = parseConstant( data.magFilter, TEXTURE_FILTER );\n\t\t\t\tif ( data.anisotropy !== undefined ) texture.anisotropy = data.anisotropy;\n\n\t\t\t\tif ( data.flipY !== undefined ) texture.flipY = data.flipY;\n\n\t\t\t\tif ( data.generateMipmaps !== undefined ) texture.generateMipmaps = data.generateMipmaps;\n\t\t\t\tif ( data.premultiplyAlpha !== undefined ) texture.premultiplyAlpha = data.premultiplyAlpha;\n\t\t\t\tif ( data.unpackAlignment !== undefined ) texture.unpackAlignment = data.unpackAlignment;\n\t\t\t\tif ( data.compareFunction !== undefined ) texture.compareFunction = data.compareFunction;\n\n\t\t\t\tif ( data.userData !== undefined ) texture.userData = data.userData;\n\n\t\t\t\ttextures[ data.uuid ] = texture;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn textures;\n\n\t}\n\n\tparseObject( data, geometries, materials, textures, animations ) {\n\n\t\tlet object;\n\n\t\tfunction getGeometry( name ) {\n\n\t\t\tif ( geometries[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined geometry', name );\n\n\t\t\t}\n\n\t\t\treturn geometries[ name ];\n\n\t\t}\n\n\t\tfunction getMaterial( name ) {\n\n\t\t\tif ( name === undefined ) return undefined;\n\n\t\t\tif ( Array.isArray( name ) ) {\n\n\t\t\t\tconst array = [];\n\n\t\t\t\tfor ( let i = 0, l = name.length; i < l; i ++ ) {\n\n\t\t\t\t\tconst uuid = name[ i ];\n\n\t\t\t\t\tif ( materials[ uuid ] === undefined ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', uuid );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tarray.push( materials[ uuid ] );\n\n\t\t\t\t}\n\n\t\t\t\treturn array;\n\n\t\t\t}\n\n\t\t\tif ( materials[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', name );\n\n\t\t\t}\n\n\t\t\treturn materials[ name ];\n\n\t\t}\n\n\t\tfunction getTexture( uuid ) {\n\n\t\t\tif ( textures[ uuid ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined texture', uuid );\n\n\t\t\t}\n\n\t\t\treturn textures[ uuid ];\n\n\t\t}\n\n\t\tlet geometry, material;\n\n\t\tswitch ( data.type ) {\n\n\t\t\tcase 'Scene':\n\n\t\t\t\tobject = new Scene();\n\n\t\t\t\tif ( data.background !== undefined ) {\n\n\t\t\t\t\tif ( Number.isInteger( data.background ) ) {\n\n\t\t\t\t\t\tobject.background = new Color( data.background );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tobject.background = getTexture( data.background );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.environment !== undefined ) {\n\n\t\t\t\t\tobject.environment = getTexture( data.environment );\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.fog !== undefined ) {\n\n\t\t\t\t\tif ( data.fog.type === 'Fog' ) {\n\n\t\t\t\t\t\tobject.fog = new Fog( data.fog.color, data.fog.near, data.fog.far );\n\n\t\t\t\t\t} else if ( data.fog.type === 'FogExp2' ) {\n\n\t\t\t\t\t\tobject.fog = new FogExp2( data.fog.color, data.fog.density );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( data.fog.name !== '' ) {\n\n\t\t\t\t\t\tobject.fog.name = data.fog.name;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.backgroundBlurriness !== undefined ) object.backgroundBlurriness = data.backgroundBlurriness;\n\t\t\t\tif ( data.backgroundIntensity !== undefined ) object.backgroundIntensity = data.backgroundIntensity;\n\t\t\t\tif ( data.backgroundRotation !== undefined ) object.backgroundRotation.fromArray( data.backgroundRotation );\n\n\t\t\t\tif ( data.environmentIntensity !== undefined ) object.environmentIntensity = data.environmentIntensity;\n\t\t\t\tif ( data.environmentRotation !== undefined ) object.environmentRotation.fromArray( data.environmentRotation );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PerspectiveCamera':\n\n\t\t\t\tobject = new PerspectiveCamera( data.fov, data.aspect, data.near, data.far );\n\n\t\t\t\tif ( data.focus !== undefined ) object.focus = data.focus;\n\t\t\t\tif ( data.zoom !== undefined ) object.zoom = data.zoom;\n\t\t\t\tif ( data.filmGauge !== undefined ) object.filmGauge = data.filmGauge;\n\t\t\t\tif ( data.filmOffset !== undefined ) object.filmOffset = data.filmOffset;\n\t\t\t\tif ( data.view !== undefined ) object.view = Object.assign( {}, data.view );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'OrthographicCamera':\n\n\t\t\t\tobject = new OrthographicCamera( data.left, data.right, data.top, data.bottom, data.near, data.far );\n\n\t\t\t\tif ( data.zoom !== undefined ) object.zoom = data.zoom;\n\t\t\t\tif ( data.view !== undefined ) object.view = Object.assign( {}, data.view );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'AmbientLight':\n\n\t\t\t\tobject = new AmbientLight( data.color, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'DirectionalLight':\n\n\t\t\t\tobject = new DirectionalLight( data.color, data.intensity );\n\t\t\t\tobject.target = data.target || '';\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PointLight':\n\n\t\t\t\tobject = new PointLight( data.color, data.intensity, data.distance, data.decay );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'RectAreaLight':\n\n\t\t\t\tobject = new RectAreaLight( data.color, data.intensity, data.width, data.height );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'SpotLight':\n\n\t\t\t\tobject = new SpotLight( data.color, data.intensity, data.distance, data.angle, data.penumbra, data.decay );\n\t\t\t\tobject.target = data.target || '';\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'HemisphereLight':\n\n\t\t\t\tobject = new HemisphereLight( data.color, data.groundColor, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LightProbe':\n\n\t\t\t\tobject = new LightProbe().fromJSON( data );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'SkinnedMesh':\n\n\t\t\t\tgeometry = getGeometry( data.geometry );\n\t\t\t \tmaterial = getMaterial( data.material );\n\n\t\t\t\tobject = new SkinnedMesh( geometry, material );\n\n\t\t\t\tif ( data.bindMode !== undefined ) object.bindMode = data.bindMode;\n\t\t\t\tif ( data.bindMatrix !== undefined ) object.bindMatrix.fromArray( data.bindMatrix );\n\t\t\t\tif ( data.skeleton !== undefined ) object.skeleton = data.skeleton;\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Mesh':\n\n\t\t\t\tgeometry = getGeometry( data.geometry );\n\t\t\t\tmaterial = getMaterial( data.material );\n\n\t\t\t\tobject = new Mesh( geometry, material );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'InstancedMesh':\n\n\t\t\t\tgeometry = getGeometry( data.geometry );\n\t\t\t\tmaterial = getMaterial( data.material );\n\t\t\t\tconst count = data.count;\n\t\t\t\tconst instanceMatrix = data.instanceMatrix;\n\t\t\t\tconst instanceColor = data.instanceColor;\n\n\t\t\t\tobject = new InstancedMesh( geometry, material, count );\n\t\t\t\tobject.instanceMatrix = new InstancedBufferAttribute( new Float32Array( instanceMatrix.array ), 16 );\n\t\t\t\tif ( instanceColor !== undefined ) object.instanceColor = new InstancedBufferAttribute( new Float32Array( instanceColor.array ), instanceColor.itemSize );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'BatchedMesh':\n\n\t\t\t\tgeometry = getGeometry( data.geometry );\n\t\t\t\tmaterial = getMaterial( data.material );\n\n\t\t\t\tobject = new BatchedMesh( data.maxInstanceCount, data.maxVertexCount, data.maxIndexCount, material );\n\t\t\t\tobject.geometry = geometry;\n\t\t\t\tobject.perObjectFrustumCulled = data.perObjectFrustumCulled;\n\t\t\t\tobject.sortObjects = data.sortObjects;\n\n\t\t\t\tobject._drawRanges = data.drawRanges;\n\t\t\t\tobject._reservedRanges = data.reservedRanges;\n\n\t\t\t\tobject._visibility = data.visibility;\n\t\t\t\tobject._active = data.active;\n\t\t\t\tobject._bounds = data.bounds.map( bound => {\n\n\t\t\t\t\tconst box = new Box3();\n\t\t\t\t\tbox.min.fromArray( bound.boxMin );\n\t\t\t\t\tbox.max.fromArray( bound.boxMax );\n\n\t\t\t\t\tconst sphere = new Sphere();\n\t\t\t\t\tsphere.radius = bound.sphereRadius;\n\t\t\t\t\tsphere.center.fromArray( bound.sphereCenter );\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tboxInitialized: bound.boxInitialized,\n\t\t\t\t\t\tbox: box,\n\n\t\t\t\t\t\tsphereInitialized: bound.sphereInitialized,\n\t\t\t\t\t\tsphere: sphere\n\t\t\t\t\t};\n\n\t\t\t\t} );\n\n\t\t\t\tobject._maxInstanceCount = data.maxInstanceCount;\n\t\t\t\tobject._maxVertexCount = data.maxVertexCount;\n\t\t\t\tobject._maxIndexCount = data.maxIndexCount;\n\n\t\t\t\tobject._geometryInitialized = data.geometryInitialized;\n\t\t\t\tobject._geometryCount = data.geometryCount;\n\n\t\t\t\tobject._matricesTexture = getTexture( data.matricesTexture.uuid );\n\t\t\t\tif ( data.colorsTexture !== undefined ) object._colorsTexture = getTexture( data.colorsTexture.uuid );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LOD':\n\n\t\t\t\tobject = new LOD();\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Line':\n\n\t\t\t\tobject = new Line( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LineLoop':\n\n\t\t\t\tobject = new LineLoop( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LineSegments':\n\n\t\t\t\tobject = new LineSegments( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PointCloud':\n\t\t\tcase 'Points':\n\n\t\t\t\tobject = new Points( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Sprite':\n\n\t\t\t\tobject = new Sprite( getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Group':\n\n\t\t\t\tobject = new Group();\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Bone':\n\n\t\t\t\tobject = new Bone();\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tobject = new Object3D();\n\n\t\t}\n\n\t\tobject.uuid = data.uuid;\n\n\t\tif ( data.name !== undefined ) object.name = data.name;\n\n\t\tif ( data.matrix !== undefined ) {\n\n\t\t\tobject.matrix.fromArray( data.matrix );\n\n\t\t\tif ( data.matrixAutoUpdate !== undefined ) object.matrixAutoUpdate = data.matrixAutoUpdate;\n\t\t\tif ( object.matrixAutoUpdate ) object.matrix.decompose( object.position, object.quaternion, object.scale );\n\n\t\t} else {\n\n\t\t\tif ( data.position !== undefined ) object.position.fromArray( data.position );\n\t\t\tif ( data.rotation !== undefined ) object.rotation.fromArray( data.rotation );\n\t\t\tif ( data.quaternion !== undefined ) object.quaternion.fromArray( data.quaternion );\n\t\t\tif ( data.scale !== undefined ) object.scale.fromArray( data.scale );\n\n\t\t}\n\n\t\tif ( data.up !== undefined ) object.up.fromArray( data.up );\n\n\t\tif ( data.castShadow !== undefined ) object.castShadow = data.castShadow;\n\t\tif ( data.receiveShadow !== undefined ) object.receiveShadow = data.receiveShadow;\n\n\t\tif ( data.shadow ) {\n\n\t\t\tif ( data.shadow.intensity !== undefined ) object.shadow.intensity = data.shadow.intensity;\n\t\t\tif ( data.shadow.bias !== undefined ) object.shadow.bias = data.shadow.bias;\n\t\t\tif ( data.shadow.normalBias !== undefined ) object.shadow.normalBias = data.shadow.normalBias;\n\t\t\tif ( data.shadow.radius !== undefined ) object.shadow.radius = data.shadow.radius;\n\t\t\tif ( data.shadow.mapSize !== undefined ) object.shadow.mapSize.fromArray( data.shadow.mapSize );\n\t\t\tif ( data.shadow.camera !== undefined ) object.shadow.camera = this.parseObject( data.shadow.camera );\n\n\t\t}\n\n\t\tif ( data.visible !== undefined ) object.visible = data.visible;\n\t\tif ( data.frustumCulled !== undefined ) object.frustumCulled = data.frustumCulled;\n\t\tif ( data.renderOrder !== undefined ) object.renderOrder = data.renderOrder;\n\t\tif ( data.userData !== undefined ) object.userData = data.userData;\n\t\tif ( data.layers !== undefined ) object.layers.mask = data.layers;\n\n\t\tif ( data.children !== undefined ) {\n\n\t\t\tconst children = data.children;\n\n\t\t\tfor ( let i = 0; i < children.length; i ++ ) {\n\n\t\t\t\tobject.add( this.parseObject( children[ i ], geometries, materials, textures, animations ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( data.animations !== undefined ) {\n\n\t\t\tconst objectAnimations = data.animations;\n\n\t\t\tfor ( let i = 0; i < objectAnimations.length; i ++ ) {\n\n\t\t\t\tconst uuid = objectAnimations[ i ];\n\n\t\t\t\tobject.animations.push( animations[ uuid ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( data.type === 'LOD' ) {\n\n\t\t\tif ( data.autoUpdate !== undefined ) object.autoUpdate = data.autoUpdate;\n\n\t\t\tconst levels = data.levels;\n\n\t\t\tfor ( let l = 0; l < levels.length; l ++ ) {\n\n\t\t\t\tconst level = levels[ l ];\n\t\t\t\tconst child = object.getObjectByProperty( 'uuid', level.object );\n\n\t\t\t\tif ( child !== undefined ) {\n\n\t\t\t\t\tobject.addLevel( child, level.distance, level.hysteresis );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn object;\n\n\t}\n\n\tbindSkeletons( object, skeletons ) {\n\n\t\tif ( Object.keys( skeletons ).length === 0 ) return;\n\n\t\tobject.traverse( function ( child ) {\n\n\t\t\tif ( child.isSkinnedMesh === true && child.skeleton !== undefined ) {\n\n\t\t\t\tconst skeleton = skeletons[ child.skeleton ];\n\n\t\t\t\tif ( skeleton === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: No skeleton found with UUID:', child.skeleton );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tchild.bind( skeleton, child.bindMatrix );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} );\n\n\t}\n\n\tbindLightTargets( object ) {\n\n\t\tobject.traverse( function ( child ) {\n\n\t\t\tif ( child.isDirectionalLight || child.isSpotLight ) {\n\n\t\t\t\tconst uuid = child.target;\n\n\t\t\t\tconst target = object.getObjectByProperty( 'uuid', uuid );\n\n\t\t\t\tif ( target !== undefined ) {\n\n\t\t\t\t\tchild.target = target;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tchild.target = new Object3D();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} );\n\n\t}\n\n}\n\nconst TEXTURE_MAPPING = {\n\tUVMapping: UVMapping,\n\tCubeReflectionMapping: CubeReflectionMapping,\n\tCubeRefractionMapping: CubeRefractionMapping,\n\tEquirectangularReflectionMapping: EquirectangularReflectionMapping,\n\tEquirectangularRefractionMapping: EquirectangularRefractionMapping,\n\tCubeUVReflectionMapping: CubeUVReflectionMapping\n};\n\nconst TEXTURE_WRAPPING = {\n\tRepeatWrapping: RepeatWrapping,\n\tClampToEdgeWrapping: ClampToEdgeWrapping,\n\tMirroredRepeatWrapping: MirroredRepeatWrapping\n};\n\nconst TEXTURE_FILTER = {\n\tNearestFilter: NearestFilter,\n\tNearestMipmapNearestFilter: NearestMipmapNearestFilter,\n\tNearestMipmapLinearFilter: NearestMipmapLinearFilter,\n\tLinearFilter: LinearFilter,\n\tLinearMipmapNearestFilter: LinearMipmapNearestFilter,\n\tLinearMipmapLinearFilter: LinearMipmapLinearFilter\n};\n\nclass ImageBitmapLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t\tthis.isImageBitmapLoader = true;\n\n\t\tif ( typeof createImageBitmap === 'undefined' ) {\n\n\t\t\tconsole.warn( 'THREE.ImageBitmapLoader: createImageBitmap() not supported.' );\n\n\t\t}\n\n\t\tif ( typeof fetch === 'undefined' ) {\n\n\t\t\tconsole.warn( 'THREE.ImageBitmapLoader: fetch() not supported.' );\n\n\t\t}\n\n\t\tthis.options = { premultiplyAlpha: 'none' };\n\n\t}\n\n\tsetOptions( options ) {\n\n\t\tthis.options = options;\n\n\t\treturn this;\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tif ( url === undefined ) url = '';\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tconst scope = this;\n\n\t\tconst cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\t// If cached is a promise, wait for it to resolve\n\t\t\tif ( cached.then ) {\n\n\t\t\t\tcached.then( imageBitmap => {\n\n\t\t\t\t\tif ( onLoad ) onLoad( imageBitmap );\n\n\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t} ).catch( e => {\n\n\t\t\t\t\tif ( onError ) onError( e );\n\n\t\t\t\t} );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\t// If cached is not a promise (i.e., it's already an imageBitmap)\n\t\t\tsetTimeout( function () {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\tconst fetchOptions = {};\n\t\tfetchOptions.credentials = ( this.crossOrigin === 'anonymous' ) ? 'same-origin' : 'include';\n\t\tfetchOptions.headers = this.requestHeader;\n\n\t\tconst promise = fetch( url, fetchOptions ).then( function ( res ) {\n\n\t\t\treturn res.blob();\n\n\t\t} ).then( function ( blob ) {\n\n\t\t\treturn createImageBitmap( blob, Object.assign( scope.options, { colorSpaceConversion: 'none' } ) );\n\n\t\t} ).then( function ( imageBitmap ) {\n\n\t\t\tCache.add( url, imageBitmap );\n\n\t\t\tif ( onLoad ) onLoad( imageBitmap );\n\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t\treturn imageBitmap;\n\n\t\t} ).catch( function ( e ) {\n\n\t\t\tif ( onError ) onError( e );\n\n\t\t\tCache.remove( url );\n\n\t\t\tscope.manager.itemError( url );\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t} );\n\n\t\tCache.add( url, promise );\n\t\tscope.manager.itemStart( url );\n\n\t}\n\n}\n\nlet _context;\n\nclass AudioContext {\n\n\tstatic getContext() {\n\n\t\tif ( _context === undefined ) {\n\n\t\t\t_context = new ( window.AudioContext || window.webkitAudioContext )();\n\n\t\t}\n\n\t\treturn _context;\n\n\t}\n\n\tstatic setContext( value ) {\n\n\t\t_context = value;\n\n\t}\n\n}\n\nclass AudioLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\t\tloader.load( url, function ( buffer ) {\n\n\t\t\ttry {\n\n\t\t\t\t// Create a copy of the buffer. The `decodeAudioData` method\n\t\t\t\t// detaches the buffer when complete, preventing reuse.\n\t\t\t\tconst bufferCopy = buffer.slice( 0 );\n\n\t\t\t\tconst context = AudioContext.getContext();\n\t\t\t\tcontext.decodeAudioData( bufferCopy, function ( audioBuffer ) {\n\n\t\t\t\t\tonLoad( audioBuffer );\n\n\t\t\t\t} ).catch( handleError );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\thandleError( e );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t\tfunction handleError( e ) {\n\n\t\t\tif ( onError ) {\n\n\t\t\t\tonError( e );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.error( e );\n\n\t\t\t}\n\n\t\t\tscope.manager.itemError( url );\n\n\t\t}\n\n\t}\n\n}\n\nconst _eyeRight = /*@__PURE__*/ new Matrix4();\nconst _eyeLeft = /*@__PURE__*/ new Matrix4();\nconst _projectionMatrix = /*@__PURE__*/ new Matrix4();\n\nclass StereoCamera {\n\n\tconstructor() {\n\n\t\tthis.type = 'StereoCamera';\n\n\t\tthis.aspect = 1;\n\n\t\tthis.eyeSep = 0.064;\n\n\t\tthis.cameraL = new PerspectiveCamera();\n\t\tthis.cameraL.layers.enable( 1 );\n\t\tthis.cameraL.matrixAutoUpdate = false;\n\n\t\tthis.cameraR = new PerspectiveCamera();\n\t\tthis.cameraR.layers.enable( 2 );\n\t\tthis.cameraR.matrixAutoUpdate = false;\n\n\t\tthis._cache = {\n\t\t\tfocus: null,\n\t\t\tfov: null,\n\t\t\taspect: null,\n\t\t\tnear: null,\n\t\t\tfar: null,\n\t\t\tzoom: null,\n\t\t\teyeSep: null\n\t\t};\n\n\t}\n\n\tupdate( camera ) {\n\n\t\tconst cache = this._cache;\n\n\t\tconst needsUpdate = cache.focus !== camera.focus || cache.fov !== camera.fov ||\n\t\t\tcache.aspect !== camera.aspect * this.aspect || cache.near !== camera.near ||\n\t\t\tcache.far !== camera.far || cache.zoom !== camera.zoom || cache.eyeSep !== this.eyeSep;\n\n\t\tif ( needsUpdate ) {\n\n\t\t\tcache.focus = camera.focus;\n\t\t\tcache.fov = camera.fov;\n\t\t\tcache.aspect = camera.aspect * this.aspect;\n\t\t\tcache.near = camera.near;\n\t\t\tcache.far = camera.far;\n\t\t\tcache.zoom = camera.zoom;\n\t\t\tcache.eyeSep = this.eyeSep;\n\n\t\t\t// Off-axis stereoscopic effect based on\n\t\t\t// http://paulbourke.net/stereographics/stereorender/\n\n\t\t\t_projectionMatrix.copy( camera.projectionMatrix );\n\t\t\tconst eyeSepHalf = cache.eyeSep / 2;\n\t\t\tconst eyeSepOnProjection = eyeSepHalf * cache.near / cache.focus;\n\t\t\tconst ymax = ( cache.near * Math.tan( DEG2RAD * cache.fov * 0.5 ) ) / cache.zoom;\n\t\t\tlet xmin, xmax;\n\n\t\t\t// translate xOffset\n\n\t\t\t_eyeLeft.elements[ 12 ] = - eyeSepHalf;\n\t\t\t_eyeRight.elements[ 12 ] = eyeSepHalf;\n\n\t\t\t// for left eye\n\n\t\t\txmin = - ymax * cache.aspect + eyeSepOnProjection;\n\t\t\txmax = ymax * cache.aspect + eyeSepOnProjection;\n\n\t\t\t_projectionMatrix.elements[ 0 ] = 2 * cache.near / ( xmax - xmin );\n\t\t\t_projectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\n\n\t\t\tthis.cameraL.projectionMatrix.copy( _projectionMatrix );\n\n\t\t\t// for right eye\n\n\t\t\txmin = - ymax * cache.aspect - eyeSepOnProjection;\n\t\t\txmax = ymax * cache.aspect - eyeSepOnProjection;\n\n\t\t\t_projectionMatrix.elements[ 0 ] = 2 * cache.near / ( xmax - xmin );\n\t\t\t_projectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\n\n\t\t\tthis.cameraR.projectionMatrix.copy( _projectionMatrix );\n\n\t\t}\n\n\t\tthis.cameraL.matrixWorld.copy( camera.matrixWorld ).multiply( _eyeLeft );\n\t\tthis.cameraR.matrixWorld.copy( camera.matrixWorld ).multiply( _eyeRight );\n\n\t}\n\n}\n\nclass Clock {\n\n\tconstructor( autoStart = true ) {\n\n\t\tthis.autoStart = autoStart;\n\n\t\tthis.startTime = 0;\n\t\tthis.oldTime = 0;\n\t\tthis.elapsedTime = 0;\n\n\t\tthis.running = false;\n\n\t}\n\n\tstart() {\n\n\t\tthis.startTime = now();\n\n\t\tthis.oldTime = this.startTime;\n\t\tthis.elapsedTime = 0;\n\t\tthis.running = true;\n\n\t}\n\n\tstop() {\n\n\t\tthis.getElapsedTime();\n\t\tthis.running = false;\n\t\tthis.autoStart = false;\n\n\t}\n\n\tgetElapsedTime() {\n\n\t\tthis.getDelta();\n\t\treturn this.elapsedTime;\n\n\t}\n\n\tgetDelta() {\n\n\t\tlet diff = 0;\n\n\t\tif ( this.autoStart && ! this.running ) {\n\n\t\t\tthis.start();\n\t\t\treturn 0;\n\n\t\t}\n\n\t\tif ( this.running ) {\n\n\t\t\tconst newTime = now();\n\n\t\t\tdiff = ( newTime - this.oldTime ) / 1000;\n\t\t\tthis.oldTime = newTime;\n\n\t\t\tthis.elapsedTime += diff;\n\n\t\t}\n\n\t\treturn diff;\n\n\t}\n\n}\n\nfunction now() {\n\n\treturn ( typeof performance === 'undefined' ? Date : performance ).now(); // see #10732\n\n}\n\nconst _position$1 = /*@__PURE__*/ new Vector3();\nconst _quaternion$1 = /*@__PURE__*/ new Quaternion();\nconst _scale$1 = /*@__PURE__*/ new Vector3();\nconst _orientation$1 = /*@__PURE__*/ new Vector3();\n\nclass AudioListener extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.type = 'AudioListener';\n\n\t\tthis.context = AudioContext.getContext();\n\n\t\tthis.gain = this.context.createGain();\n\t\tthis.gain.connect( this.context.destination );\n\n\t\tthis.filter = null;\n\n\t\tthis.timeDelta = 0;\n\n\t\t// private\n\n\t\tthis._clock = new Clock();\n\n\t}\n\n\tgetInput() {\n\n\t\treturn this.gain;\n\n\t}\n\n\tremoveFilter() {\n\n\t\tif ( this.filter !== null ) {\n\n\t\t\tthis.gain.disconnect( this.filter );\n\t\t\tthis.filter.disconnect( this.context.destination );\n\t\t\tthis.gain.connect( this.context.destination );\n\t\t\tthis.filter = null;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetFilter() {\n\n\t\treturn this.filter;\n\n\t}\n\n\tsetFilter( value ) {\n\n\t\tif ( this.filter !== null ) {\n\n\t\t\tthis.gain.disconnect( this.filter );\n\t\t\tthis.filter.disconnect( this.context.destination );\n\n\t\t} else {\n\n\t\t\tthis.gain.disconnect( this.context.destination );\n\n\t\t}\n\n\t\tthis.filter = value;\n\t\tthis.gain.connect( this.filter );\n\t\tthis.filter.connect( this.context.destination );\n\n\t\treturn this;\n\n\t}\n\n\tgetMasterVolume() {\n\n\t\treturn this.gain.gain.value;\n\n\t}\n\n\tsetMasterVolume( value ) {\n\n\t\tthis.gain.gain.setTargetAtTime( value, this.context.currentTime, 0.01 );\n\n\t\treturn this;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tconst listener = this.context.listener;\n\t\tconst up = this.up;\n\n\t\tthis.timeDelta = this._clock.getDelta();\n\n\t\tthis.matrixWorld.decompose( _position$1, _quaternion$1, _scale$1 );\n\n\t\t_orientation$1.set( 0, 0, - 1 ).applyQuaternion( _quaternion$1 );\n\n\t\tif ( listener.positionX ) {\n\n\t\t\t// code path for Chrome (see #14393)\n\n\t\t\tconst endTime = this.context.currentTime + this.timeDelta;\n\n\t\t\tlistener.positionX.linearRampToValueAtTime( _position$1.x, endTime );\n\t\t\tlistener.positionY.linearRampToValueAtTime( _position$1.y, endTime );\n\t\t\tlistener.positionZ.linearRampToValueAtTime( _position$1.z, endTime );\n\t\t\tlistener.forwardX.linearRampToValueAtTime( _orientation$1.x, endTime );\n\t\t\tlistener.forwardY.linearRampToValueAtTime( _orientation$1.y, endTime );\n\t\t\tlistener.forwardZ.linearRampToValueAtTime( _orientation$1.z, endTime );\n\t\t\tlistener.upX.linearRampToValueAtTime( up.x, endTime );\n\t\t\tlistener.upY.linearRampToValueAtTime( up.y, endTime );\n\t\t\tlistener.upZ.linearRampToValueAtTime( up.z, endTime );\n\n\t\t} else {\n\n\t\t\tlistener.setPosition( _position$1.x, _position$1.y, _position$1.z );\n\t\t\tlistener.setOrientation( _orientation$1.x, _orientation$1.y, _orientation$1.z, up.x, up.y, up.z );\n\n\t\t}\n\n\t}\n\n}\n\nclass Audio extends Object3D {\n\n\tconstructor( listener ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'Audio';\n\n\t\tthis.listener = listener;\n\t\tthis.context = listener.context;\n\n\t\tthis.gain = this.context.createGain();\n\t\tthis.gain.connect( listener.getInput() );\n\n\t\tthis.autoplay = false;\n\n\t\tthis.buffer = null;\n\t\tthis.detune = 0;\n\t\tthis.loop = false;\n\t\tthis.loopStart = 0;\n\t\tthis.loopEnd = 0;\n\t\tthis.offset = 0;\n\t\tthis.duration = undefined;\n\t\tthis.playbackRate = 1;\n\t\tthis.isPlaying = false;\n\t\tthis.hasPlaybackControl = true;\n\t\tthis.source = null;\n\t\tthis.sourceType = 'empty';\n\n\t\tthis._startedAt = 0;\n\t\tthis._progress = 0;\n\t\tthis._connected = false;\n\n\t\tthis.filters = [];\n\n\t}\n\n\tgetOutput() {\n\n\t\treturn this.gain;\n\n\t}\n\n\tsetNodeSource( audioNode ) {\n\n\t\tthis.hasPlaybackControl = false;\n\t\tthis.sourceType = 'audioNode';\n\t\tthis.source = audioNode;\n\t\tthis.connect();\n\n\t\treturn this;\n\n\t}\n\n\tsetMediaElementSource( mediaElement ) {\n\n\t\tthis.hasPlaybackControl = false;\n\t\tthis.sourceType = 'mediaNode';\n\t\tthis.source = this.context.createMediaElementSource( mediaElement );\n\t\tthis.connect();\n\n\t\treturn this;\n\n\t}\n\n\tsetMediaStreamSource( mediaStream ) {\n\n\t\tthis.hasPlaybackControl = false;\n\t\tthis.sourceType = 'mediaStreamNode';\n\t\tthis.source = this.context.createMediaStreamSource( mediaStream );\n\t\tthis.connect();\n\n\t\treturn this;\n\n\t}\n\n\tsetBuffer( audioBuffer ) {\n\n\t\tthis.buffer = audioBuffer;\n\t\tthis.sourceType = 'buffer';\n\n\t\tif ( this.autoplay ) this.play();\n\n\t\treturn this;\n\n\t}\n\n\tplay( delay = 0 ) {\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: Audio is already playing.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis._startedAt = this.context.currentTime + delay;\n\n\t\tconst source = this.context.createBufferSource();\n\t\tsource.buffer = this.buffer;\n\t\tsource.loop = this.loop;\n\t\tsource.loopStart = this.loopStart;\n\t\tsource.loopEnd = this.loopEnd;\n\t\tsource.onended = this.onEnded.bind( this );\n\t\tsource.start( this._startedAt, this._progress + this.offset, this.duration );\n\n\t\tthis.isPlaying = true;\n\n\t\tthis.source = source;\n\n\t\tthis.setDetune( this.detune );\n\t\tthis.setPlaybackRate( this.playbackRate );\n\n\t\treturn this.connect();\n\n\t}\n\n\tpause() {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\t// update current progress\n\n\t\t\tthis._progress += Math.max( this.context.currentTime - this._startedAt, 0 ) * this.playbackRate;\n\n\t\t\tif ( this.loop === true ) {\n\n\t\t\t\t// ensure _progress does not exceed duration with looped audios\n\n\t\t\t\tthis._progress = this._progress % ( this.duration || this.buffer.duration );\n\n\t\t\t}\n\n\t\t\tthis.source.stop();\n\t\t\tthis.source.onended = null;\n\n\t\t\tthis.isPlaying = false;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tstop() {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis._progress = 0;\n\n\t\tif ( this.source !== null ) {\n\n\t\t\tthis.source.stop();\n\t\t\tthis.source.onended = null;\n\n\t\t}\n\n\t\tthis.isPlaying = false;\n\n\t\treturn this;\n\n\t}\n\n\tconnect() {\n\n\t\tif ( this.filters.length > 0 ) {\n\n\t\t\tthis.source.connect( this.filters[ 0 ] );\n\n\t\t\tfor ( let i = 1, l = this.filters.length; i < l; i ++ ) {\n\n\t\t\t\tthis.filters[ i - 1 ].connect( this.filters[ i ] );\n\n\t\t\t}\n\n\t\t\tthis.filters[ this.filters.length - 1 ].connect( this.getOutput() );\n\n\t\t} else {\n\n\t\t\tthis.source.connect( this.getOutput() );\n\n\t\t}\n\n\t\tthis._connected = true;\n\n\t\treturn this;\n\n\t}\n\n\tdisconnect() {\n\n\t\tif ( this._connected === false ) {\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( this.filters.length > 0 ) {\n\n\t\t\tthis.source.disconnect( this.filters[ 0 ] );\n\n\t\t\tfor ( let i = 1, l = this.filters.length; i < l; i ++ ) {\n\n\t\t\t\tthis.filters[ i - 1 ].disconnect( this.filters[ i ] );\n\n\t\t\t}\n\n\t\t\tthis.filters[ this.filters.length - 1 ].disconnect( this.getOutput() );\n\n\t\t} else {\n\n\t\t\tthis.source.disconnect( this.getOutput() );\n\n\t\t}\n\n\t\tthis._connected = false;\n\n\t\treturn this;\n\n\t}\n\n\tgetFilters() {\n\n\t\treturn this.filters;\n\n\t}\n\n\tsetFilters( value ) {\n\n\t\tif ( ! value ) value = [];\n\n\t\tif ( this._connected === true ) {\n\n\t\t\tthis.disconnect();\n\t\t\tthis.filters = value.slice();\n\t\t\tthis.connect();\n\n\t\t} else {\n\n\t\t\tthis.filters = value.slice();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetDetune( value ) {\n\n\t\tthis.detune = value;\n\n\t\tif ( this.isPlaying === true && this.source.detune !== undefined ) {\n\n\t\t\tthis.source.detune.setTargetAtTime( this.detune, this.context.currentTime, 0.01 );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetDetune() {\n\n\t\treturn this.detune;\n\n\t}\n\n\tgetFilter() {\n\n\t\treturn this.getFilters()[ 0 ];\n\n\t}\n\n\tsetFilter( filter ) {\n\n\t\treturn this.setFilters( filter ? [ filter ] : [] );\n\n\t}\n\n\tsetPlaybackRate( value ) {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.playbackRate = value;\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.playbackRate.setTargetAtTime( this.playbackRate, this.context.currentTime, 0.01 );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetPlaybackRate() {\n\n\t\treturn this.playbackRate;\n\n\t}\n\n\tonEnded() {\n\n\t\tthis.isPlaying = false;\n\n\t}\n\n\tgetLoop() {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn false;\n\n\t\t}\n\n\t\treturn this.loop;\n\n\t}\n\n\tsetLoop( value ) {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.loop = value;\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.loop = this.loop;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetLoopStart( value ) {\n\n\t\tthis.loopStart = value;\n\n\t\treturn this;\n\n\t}\n\n\tsetLoopEnd( value ) {\n\n\t\tthis.loopEnd = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetVolume() {\n\n\t\treturn this.gain.gain.value;\n\n\t}\n\n\tsetVolume( value ) {\n\n\t\tthis.gain.gain.setTargetAtTime( value, this.context.currentTime, 0.01 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _position = /*@__PURE__*/ new Vector3();\nconst _quaternion = /*@__PURE__*/ new Quaternion();\nconst _scale = /*@__PURE__*/ new Vector3();\nconst _orientation = /*@__PURE__*/ new Vector3();\n\nclass PositionalAudio extends Audio {\n\n\tconstructor( listener ) {\n\n\t\tsuper( listener );\n\n\t\tthis.panner = this.context.createPanner();\n\t\tthis.panner.panningModel = 'HRTF';\n\t\tthis.panner.connect( this.gain );\n\n\t}\n\n\tconnect() {\n\n\t\tsuper.connect();\n\n\t\tthis.panner.connect( this.gain );\n\n\t}\n\n\tdisconnect() {\n\n\t\tsuper.disconnect();\n\n\t\tthis.panner.disconnect( this.gain );\n\n\t}\n\n\tgetOutput() {\n\n\t\treturn this.panner;\n\n\t}\n\n\tgetRefDistance() {\n\n\t\treturn this.panner.refDistance;\n\n\t}\n\n\tsetRefDistance( value ) {\n\n\t\tthis.panner.refDistance = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetRolloffFactor() {\n\n\t\treturn this.panner.rolloffFactor;\n\n\t}\n\n\tsetRolloffFactor( value ) {\n\n\t\tthis.panner.rolloffFactor = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetDistanceModel() {\n\n\t\treturn this.panner.distanceModel;\n\n\t}\n\n\tsetDistanceModel( value ) {\n\n\t\tthis.panner.distanceModel = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetMaxDistance() {\n\n\t\treturn this.panner.maxDistance;\n\n\t}\n\n\tsetMaxDistance( value ) {\n\n\t\tthis.panner.maxDistance = value;\n\n\t\treturn this;\n\n\t}\n\n\tsetDirectionalCone( coneInnerAngle, coneOuterAngle, coneOuterGain ) {\n\n\t\tthis.panner.coneInnerAngle = coneInnerAngle;\n\t\tthis.panner.coneOuterAngle = coneOuterAngle;\n\t\tthis.panner.coneOuterGain = coneOuterGain;\n\n\t\treturn this;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tif ( this.hasPlaybackControl === true && this.isPlaying === false ) return;\n\n\t\tthis.matrixWorld.decompose( _position, _quaternion, _scale );\n\n\t\t_orientation.set( 0, 0, 1 ).applyQuaternion( _quaternion );\n\n\t\tconst panner = this.panner;\n\n\t\tif ( panner.positionX ) {\n\n\t\t\t// code path for Chrome and Firefox (see #14393)\n\n\t\t\tconst endTime = this.context.currentTime + this.listener.timeDelta;\n\n\t\t\tpanner.positionX.linearRampToValueAtTime( _position.x, endTime );\n\t\t\tpanner.positionY.linearRampToValueAtTime( _position.y, endTime );\n\t\t\tpanner.positionZ.linearRampToValueAtTime( _position.z, endTime );\n\t\t\tpanner.orientationX.linearRampToValueAtTime( _orientation.x, endTime );\n\t\t\tpanner.orientationY.linearRampToValueAtTime( _orientation.y, endTime );\n\t\t\tpanner.orientationZ.linearRampToValueAtTime( _orientation.z, endTime );\n\n\t\t} else {\n\n\t\t\tpanner.setPosition( _position.x, _position.y, _position.z );\n\t\t\tpanner.setOrientation( _orientation.x, _orientation.y, _orientation.z );\n\n\t\t}\n\n\t}\n\n}\n\nclass AudioAnalyser {\n\n\tconstructor( audio, fftSize = 2048 ) {\n\n\t\tthis.analyser = audio.context.createAnalyser();\n\t\tthis.analyser.fftSize = fftSize;\n\n\t\tthis.data = new Uint8Array( this.analyser.frequencyBinCount );\n\n\t\taudio.getOutput().connect( this.analyser );\n\n\t}\n\n\n\tgetFrequencyData() {\n\n\t\tthis.analyser.getByteFrequencyData( this.data );\n\n\t\treturn this.data;\n\n\t}\n\n\tgetAverageFrequency() {\n\n\t\tlet value = 0;\n\t\tconst data = this.getFrequencyData();\n\n\t\tfor ( let i = 0; i < data.length; i ++ ) {\n\n\t\t\tvalue += data[ i ];\n\n\t\t}\n\n\t\treturn value / data.length;\n\n\t}\n\n}\n\nclass PropertyMixer {\n\n\tconstructor( binding, typeName, valueSize ) {\n\n\t\tthis.binding = binding;\n\t\tthis.valueSize = valueSize;\n\n\t\tlet mixFunction,\n\t\t\tmixFunctionAdditive,\n\t\t\tsetIdentity;\n\n\t\t// buffer layout: [ incoming | accu0 | accu1 | orig | addAccu | (optional work) ]\n\t\t//\n\t\t// interpolators can use .buffer as their .result\n\t\t// the data then goes to 'incoming'\n\t\t//\n\t\t// 'accu0' and 'accu1' are used frame-interleaved for\n\t\t// the cumulative result and are compared to detect\n\t\t// changes\n\t\t//\n\t\t// 'orig' stores the original state of the property\n\t\t//\n\t\t// 'add' is used for additive cumulative results\n\t\t//\n\t\t// 'work' is optional and is only present for quaternion types. It is used\n\t\t// to store intermediate quaternion multiplication results\n\n\t\tswitch ( typeName ) {\n\n\t\t\tcase 'quaternion':\n\t\t\t\tmixFunction = this._slerp;\n\t\t\t\tmixFunctionAdditive = this._slerpAdditive;\n\t\t\t\tsetIdentity = this._setAdditiveIdentityQuaternion;\n\n\t\t\t\tthis.buffer = new Float64Array( valueSize * 6 );\n\t\t\t\tthis._workIndex = 5;\n\t\t\t\tbreak;\n\n\t\t\tcase 'string':\n\t\t\tcase 'bool':\n\t\t\t\tmixFunction = this._select;\n\n\t\t\t\t// Use the regular mix function and for additive on these types,\n\t\t\t\t// additive is not relevant for non-numeric types\n\t\t\t\tmixFunctionAdditive = this._select;\n\n\t\t\t\tsetIdentity = this._setAdditiveIdentityOther;\n\n\t\t\t\tthis.buffer = new Array( valueSize * 5 );\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tmixFunction = this._lerp;\n\t\t\t\tmixFunctionAdditive = this._lerpAdditive;\n\t\t\t\tsetIdentity = this._setAdditiveIdentityNumeric;\n\n\t\t\t\tthis.buffer = new Float64Array( valueSize * 5 );\n\n\t\t}\n\n\t\tthis._mixBufferRegion = mixFunction;\n\t\tthis._mixBufferRegionAdditive = mixFunctionAdditive;\n\t\tthis._setIdentity = setIdentity;\n\t\tthis._origIndex = 3;\n\t\tthis._addIndex = 4;\n\n\t\tthis.cumulativeWeight = 0;\n\t\tthis.cumulativeWeightAdditive = 0;\n\n\t\tthis.useCount = 0;\n\t\tthis.referenceCount = 0;\n\n\t}\n\n\t// accumulate data in the 'incoming' region into 'accu<i>'\n\taccumulate( accuIndex, weight ) {\n\n\t\t// note: happily accumulating nothing when weight = 0, the caller knows\n\t\t// the weight and shouldn't have made the call in the first place\n\n\t\tconst buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = accuIndex * stride + stride;\n\n\t\tlet currentWeight = this.cumulativeWeight;\n\n\t\tif ( currentWeight === 0 ) {\n\n\t\t\t// accuN := incoming * weight\n\n\t\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tbuffer[ offset + i ] = buffer[ i ];\n\n\t\t\t}\n\n\t\t\tcurrentWeight = weight;\n\n\t\t} else {\n\n\t\t\t// accuN := accuN + incoming * weight\n\n\t\t\tcurrentWeight += weight;\n\t\t\tconst mix = weight / currentWeight;\n\t\t\tthis._mixBufferRegion( buffer, offset, 0, mix, stride );\n\n\t\t}\n\n\t\tthis.cumulativeWeight = currentWeight;\n\n\t}\n\n\t// accumulate data in the 'incoming' region into 'add'\n\taccumulateAdditive( weight ) {\n\n\t\tconst buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = stride * this._addIndex;\n\n\t\tif ( this.cumulativeWeightAdditive === 0 ) {\n\n\t\t\t// add = identity\n\n\t\t\tthis._setIdentity();\n\n\t\t}\n\n\t\t// add := add + incoming * weight\n\n\t\tthis._mixBufferRegionAdditive( buffer, offset, 0, weight, stride );\n\t\tthis.cumulativeWeightAdditive += weight;\n\n\t}\n\n\t// apply the state of 'accu<i>' to the binding when accus differ\n\tapply( accuIndex ) {\n\n\t\tconst stride = this.valueSize,\n\t\t\tbuffer = this.buffer,\n\t\t\toffset = accuIndex * stride + stride,\n\n\t\t\tweight = this.cumulativeWeight,\n\t\t\tweightAdditive = this.cumulativeWeightAdditive,\n\n\t\t\tbinding = this.binding;\n\n\t\tthis.cumulativeWeight = 0;\n\t\tthis.cumulativeWeightAdditive = 0;\n\n\t\tif ( weight < 1 ) {\n\n\t\t\t// accuN := accuN + original * ( 1 - cumulativeWeight )\n\n\t\t\tconst originalValueOffset = stride * this._origIndex;\n\n\t\t\tthis._mixBufferRegion(\n\t\t\t\tbuffer, offset, originalValueOffset, 1 - weight, stride );\n\n\t\t}\n\n\t\tif ( weightAdditive > 0 ) {\n\n\t\t\t// accuN := accuN + additive accuN\n\n\t\t\tthis._mixBufferRegionAdditive( buffer, offset, this._addIndex * stride, 1, stride );\n\n\t\t}\n\n\t\tfor ( let i = stride, e = stride + stride; i !== e; ++ i ) {\n\n\t\t\tif ( buffer[ i ] !== buffer[ i + stride ] ) {\n\n\t\t\t\t// value has changed -> update scene graph\n\n\t\t\t\tbinding.setValue( buffer, offset );\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// remember the state of the bound property and copy it to both accus\n\tsaveOriginalState() {\n\n\t\tconst binding = this.binding;\n\n\t\tconst buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\n\t\t\toriginalValueOffset = stride * this._origIndex;\n\n\t\tbinding.getValue( buffer, originalValueOffset );\n\n\t\t// accu[0..1] := orig -- initially detect changes against the original\n\t\tfor ( let i = stride, e = originalValueOffset; i !== e; ++ i ) {\n\n\t\t\tbuffer[ i ] = buffer[ originalValueOffset + ( i % stride ) ];\n\n\t\t}\n\n\t\t// Add to identity for additive\n\t\tthis._setIdentity();\n\n\t\tthis.cumulativeWeight = 0;\n\t\tthis.cumulativeWeightAdditive = 0;\n\n\t}\n\n\t// apply the state previously taken via 'saveOriginalState' to the binding\n\trestoreOriginalState() {\n\n\t\tconst originalValueOffset = this.valueSize * 3;\n\t\tthis.binding.setValue( this.buffer, originalValueOffset );\n\n\t}\n\n\t_setAdditiveIdentityNumeric() {\n\n\t\tconst startIndex = this._addIndex * this.valueSize;\n\t\tconst endIndex = startIndex + this.valueSize;\n\n\t\tfor ( let i = startIndex; i < endIndex; i ++ ) {\n\n\t\t\tthis.buffer[ i ] = 0;\n\n\t\t}\n\n\t}\n\n\t_setAdditiveIdentityQuaternion() {\n\n\t\tthis._setAdditiveIdentityNumeric();\n\t\tthis.buffer[ this._addIndex * this.valueSize + 3 ] = 1;\n\n\t}\n\n\t_setAdditiveIdentityOther() {\n\n\t\tconst startIndex = this._origIndex * this.valueSize;\n\t\tconst targetIndex = this._addIndex * this.valueSize;\n\n\t\tfor ( let i = 0; i < this.valueSize; i ++ ) {\n\n\t\t\tthis.buffer[ targetIndex + i ] = this.buffer[ startIndex + i ];\n\n\t\t}\n\n\t}\n\n\n\t// mix functions\n\n\t_select( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tif ( t >= 0.5 ) {\n\n\t\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tbuffer[ dstOffset + i ] = buffer[ srcOffset + i ];\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_slerp( buffer, dstOffset, srcOffset, t ) {\n\n\t\tQuaternion.slerpFlat( buffer, dstOffset, buffer, dstOffset, buffer, srcOffset, t );\n\n\t}\n\n\t_slerpAdditive( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tconst workOffset = this._workIndex * stride;\n\n\t\t// Store result in intermediate buffer offset\n\t\tQuaternion.multiplyQuaternionsFlat( buffer, workOffset, buffer, dstOffset, buffer, srcOffset );\n\n\t\t// Slerp to the intermediate result\n\t\tQuaternion.slerpFlat( buffer, dstOffset, buffer, dstOffset, buffer, workOffset, t );\n\n\t}\n\n\t_lerp( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tconst s = 1 - t;\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tconst j = dstOffset + i;\n\n\t\t\tbuffer[ j ] = buffer[ j ] * s + buffer[ srcOffset + i ] * t;\n\n\t\t}\n\n\t}\n\n\t_lerpAdditive( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tconst j = dstOffset + i;\n\n\t\t\tbuffer[ j ] = buffer[ j ] + buffer[ srcOffset + i ] * t;\n\n\t\t}\n\n\t}\n\n}\n\n// Characters [].:/ are reserved for track binding syntax.\nconst _RESERVED_CHARS_RE = '\\\\[\\\\]\\\\.:\\\\/';\nconst _reservedRe = new RegExp( '[' + _RESERVED_CHARS_RE + ']', 'g' );\n\n// Attempts to allow node names from any language. ES5's `\\w` regexp matches\n// only latin characters, and the unicode \\p{L} is not yet supported. So\n// instead, we exclude reserved characters and match everything else.\nconst _wordChar = '[^' + _RESERVED_CHARS_RE + ']';\nconst _wordCharOrDot = '[^' + _RESERVED_CHARS_RE.replace( '\\\\.', '' ) + ']';\n\n// Parent directories, delimited by '/' or ':'. Currently unused, but must\n// be matched to parse the rest of the track name.\nconst _directoryRe = /*@__PURE__*/ /((?:WC+[\\/:])*)/.source.replace( 'WC', _wordChar );\n\n// Target node. May contain word characters (a-zA-Z0-9_) and '.' or '-'.\nconst _nodeRe = /*@__PURE__*/ /(WCOD+)?/.source.replace( 'WCOD', _wordCharOrDot );\n\n// Object on target node, and accessor. May not contain reserved\n// characters. Accessor may contain any character except closing bracket.\nconst _objectRe = /*@__PURE__*/ /(?:\\.(WC+)(?:\\[(.+)\\])?)?/.source.replace( 'WC', _wordChar );\n\n// Property and accessor. May not contain reserved characters. Accessor may\n// contain any non-bracket characters.\nconst _propertyRe = /*@__PURE__*/ /\\.(WC+)(?:\\[(.+)\\])?/.source.replace( 'WC', _wordChar );\n\nconst _trackRe = new RegExp( ''\n\t+ '^'\n\t+ _directoryRe\n\t+ _nodeRe\n\t+ _objectRe\n\t+ _propertyRe\n\t+ '$'\n);\n\nconst _supportedObjectNames = [ 'material', 'materials', 'bones', 'map' ];\n\nclass Composite {\n\n\tconstructor( targetGroup, path, optionalParsedPath ) {\n\n\t\tconst parsedPath = optionalParsedPath || PropertyBinding.parseTrackName( path );\n\n\t\tthis._targetGroup = targetGroup;\n\t\tthis._bindings = targetGroup.subscribe_( path, parsedPath );\n\n\t}\n\n\tgetValue( array, offset ) {\n\n\t\tthis.bind(); // bind all binding\n\n\t\tconst firstValidIndex = this._targetGroup.nCachedObjects_,\n\t\t\tbinding = this._bindings[ firstValidIndex ];\n\n\t\t// and only call .getValue on the first\n\t\tif ( binding !== undefined ) binding.getValue( array, offset );\n\n\t}\n\n\tsetValue( array, offset ) {\n\n\t\tconst bindings = this._bindings;\n\n\t\tfor ( let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].setValue( array, offset );\n\n\t\t}\n\n\t}\n\n\tbind() {\n\n\t\tconst bindings = this._bindings;\n\n\t\tfor ( let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].bind();\n\n\t\t}\n\n\t}\n\n\tunbind() {\n\n\t\tconst bindings = this._bindings;\n\n\t\tfor ( let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].unbind();\n\n\t\t}\n\n\t}\n\n}\n\n// Note: This class uses a State pattern on a per-method basis:\n// 'bind' sets 'this.getValue' / 'setValue' and shadows the\n// prototype version of these methods with one that represents\n// the bound state. When the property is not found, the methods\n// become no-ops.\nclass PropertyBinding {\n\n\tconstructor( rootNode, path, parsedPath ) {\n\n\t\tthis.path = path;\n\t\tthis.parsedPath = parsedPath || PropertyBinding.parseTrackName( path );\n\n\t\tthis.node = PropertyBinding.findNode( rootNode, this.parsedPath.nodeName );\n\n\t\tthis.rootNode = rootNode;\n\n\t\t// initial state of these methods that calls 'bind'\n\t\tthis.getValue = this._getValue_unbound;\n\t\tthis.setValue = this._setValue_unbound;\n\n\t}\n\n\n\tstatic create( root, path, parsedPath ) {\n\n\t\tif ( ! ( root && root.isAnimationObjectGroup ) ) {\n\n\t\t\treturn new PropertyBinding( root, path, parsedPath );\n\n\t\t} else {\n\n\t\t\treturn new PropertyBinding.Composite( root, path, parsedPath );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Replaces spaces with underscores and removes unsupported characters from\n\t * node names, to ensure compatibility with parseTrackName().\n\t *\n\t * @param {string} name Node name to be sanitized.\n\t * @return {string}\n\t */\n\tstatic sanitizeNodeName( name ) {\n\n\t\treturn name.replace( /\\s/g, '_' ).replace( _reservedRe, '' );\n\n\t}\n\n\tstatic parseTrackName( trackName ) {\n\n\t\tconst matches = _trackRe.exec( trackName );\n\n\t\tif ( matches === null ) {\n\n\t\t\tthrow new Error( 'PropertyBinding: Cannot parse trackName: ' + trackName );\n\n\t\t}\n\n\t\tconst results = {\n\t\t\t// directoryName: matches[ 1 ], // (tschw) currently unused\n\t\t\tnodeName: matches[ 2 ],\n\t\t\tobjectName: matches[ 3 ],\n\t\t\tobjectIndex: matches[ 4 ],\n\t\t\tpropertyName: matches[ 5 ], // required\n\t\t\tpropertyIndex: matches[ 6 ]\n\t\t};\n\n\t\tconst lastDot = results.nodeName && results.nodeName.lastIndexOf( '.' );\n\n\t\tif ( lastDot !== undefined && lastDot !== - 1 ) {\n\n\t\t\tconst objectName = results.nodeName.substring( lastDot + 1 );\n\n\t\t\t// Object names must be checked against an allowlist. Otherwise, there\n\t\t\t// is no way to parse 'foo.bar.baz': 'baz' must be a property, but\n\t\t\t// 'bar' could be the objectName, or part of a nodeName (which can\n\t\t\t// include '.' characters).\n\t\t\tif ( _supportedObjectNames.indexOf( objectName ) !== - 1 ) {\n\n\t\t\t\tresults.nodeName = results.nodeName.substring( 0, lastDot );\n\t\t\t\tresults.objectName = objectName;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( results.propertyName === null || results.propertyName.length === 0 ) {\n\n\t\t\tthrow new Error( 'PropertyBinding: can not parse propertyName from trackName: ' + trackName );\n\n\t\t}\n\n\t\treturn results;\n\n\t}\n\n\tstatic findNode( root, nodeName ) {\n\n\t\tif ( nodeName === undefined || nodeName === '' || nodeName === '.' || nodeName === - 1 || nodeName === root.name || nodeName === root.uuid ) {\n\n\t\t\treturn root;\n\n\t\t}\n\n\t\t// search into skeleton bones.\n\t\tif ( root.skeleton ) {\n\n\t\t\tconst bone = root.skeleton.getBoneByName( nodeName );\n\n\t\t\tif ( bone !== undefined ) {\n\n\t\t\t\treturn bone;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// search into node subtree.\n\t\tif ( root.children ) {\n\n\t\t\tconst searchNodeSubtree = function ( children ) {\n\n\t\t\t\tfor ( let i = 0; i < children.length; i ++ ) {\n\n\t\t\t\t\tconst childNode = children[ i ];\n\n\t\t\t\t\tif ( childNode.name === nodeName || childNode.uuid === nodeName ) {\n\n\t\t\t\t\t\treturn childNode;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst result = searchNodeSubtree( childNode.children );\n\n\t\t\t\t\tif ( result ) return result;\n\n\t\t\t\t}\n\n\t\t\t\treturn null;\n\n\t\t\t};\n\n\t\t\tconst subTreeNode = searchNodeSubtree( root.children );\n\n\t\t\tif ( subTreeNode ) {\n\n\t\t\t\treturn subTreeNode;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\t// these are used to \"bind\" a nonexistent property\n\t_getValue_unavailable() {}\n\t_setValue_unavailable() {}\n\n\t// Getters\n\n\t_getValue_direct( buffer, offset ) {\n\n\t\tbuffer[ offset ] = this.targetObject[ this.propertyName ];\n\n\t}\n\n\t_getValue_array( buffer, offset ) {\n\n\t\tconst source = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = source.length; i !== n; ++ i ) {\n\n\t\t\tbuffer[ offset ++ ] = source[ i ];\n\n\t\t}\n\n\t}\n\n\t_getValue_arrayElement( buffer, offset ) {\n\n\t\tbuffer[ offset ] = this.resolvedProperty[ this.propertyIndex ];\n\n\t}\n\n\t_getValue_toArray( buffer, offset ) {\n\n\t\tthis.resolvedProperty.toArray( buffer, offset );\n\n\t}\n\n\t// Direct\n\n\t_setValue_direct( buffer, offset ) {\n\n\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\n\t}\n\n\t_setValue_direct_setNeedsUpdate( buffer, offset ) {\n\n\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_direct_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t// EntireArray\n\n\t_setValue_array( buffer, offset ) {\n\n\t\tconst dest = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t}\n\n\t}\n\n\t_setValue_array_setNeedsUpdate( buffer, offset ) {\n\n\t\tconst dest = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t}\n\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_array_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tconst dest = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t}\n\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t// ArrayElement\n\n\t_setValue_arrayElement( buffer, offset ) {\n\n\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\n\t}\n\n\t_setValue_arrayElement_setNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_arrayElement_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t// HasToFromArray\n\n\t_setValue_fromArray( buffer, offset ) {\n\n\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\n\t}\n\n\t_setValue_fromArray_setNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_fromArray_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t_getValue_unbound( targetArray, offset ) {\n\n\t\tthis.bind();\n\t\tthis.getValue( targetArray, offset );\n\n\t}\n\n\t_setValue_unbound( sourceArray, offset ) {\n\n\t\tthis.bind();\n\t\tthis.setValue( sourceArray, offset );\n\n\t}\n\n\t// create getter / setter pair for a property in the scene graph\n\tbind() {\n\n\t\tlet targetObject = this.node;\n\t\tconst parsedPath = this.parsedPath;\n\n\t\tconst objectName = parsedPath.objectName;\n\t\tconst propertyName = parsedPath.propertyName;\n\t\tlet propertyIndex = parsedPath.propertyIndex;\n\n\t\tif ( ! targetObject ) {\n\n\t\t\ttargetObject = PropertyBinding.findNode( this.rootNode, parsedPath.nodeName );\n\n\t\t\tthis.node = targetObject;\n\n\t\t}\n\n\t\t// set fail state so we can just 'return' on error\n\t\tthis.getValue = this._getValue_unavailable;\n\t\tthis.setValue = this._setValue_unavailable;\n\n\t\t// ensure there is a value node\n\t\tif ( ! targetObject ) {\n\n\t\t\tconsole.warn( 'THREE.PropertyBinding: No target node found for track: ' + this.path + '.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( objectName ) {\n\n\t\t\tlet objectIndex = parsedPath.objectIndex;\n\n\t\t\t// special cases were we need to reach deeper into the hierarchy to get the face materials....\n\t\t\tswitch ( objectName ) {\n\n\t\t\t\tcase 'materials':\n\n\t\t\t\t\tif ( ! targetObject.material ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material as node does not have a material.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! targetObject.material.materials ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject.material.materials;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'bones':\n\n\t\t\t\t\tif ( ! targetObject.skeleton ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// potential future optimization: skip this if propertyIndex is already an integer\n\t\t\t\t\t// and convert the integer string to a true integer.\n\n\t\t\t\t\ttargetObject = targetObject.skeleton.bones;\n\n\t\t\t\t\t// support resolving morphTarget names into indices.\n\t\t\t\t\tfor ( let i = 0; i < targetObject.length; i ++ ) {\n\n\t\t\t\t\t\tif ( targetObject[ i ].name === objectIndex ) {\n\n\t\t\t\t\t\t\tobjectIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'map':\n\n\t\t\t\t\tif ( 'map' in targetObject ) {\n\n\t\t\t\t\t\ttargetObject = targetObject.map;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! targetObject.material ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material as node does not have a material.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! targetObject.material.map ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material.map as node.material does not have a map.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject.material.map;\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tif ( targetObject[ objectName ] === undefined ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to objectName of node undefined.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject[ objectName ];\n\n\t\t\t}\n\n\n\t\t\tif ( objectIndex !== undefined ) {\n\n\t\t\t\tif ( targetObject[ objectIndex ] === undefined ) {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.', this, targetObject );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\ttargetObject = targetObject[ objectIndex ];\n\n\t\t\t}\n\n\t\t}\n\n\t\t// resolve property\n\t\tconst nodeProperty = targetObject[ propertyName ];\n\n\t\tif ( nodeProperty === undefined ) {\n\n\t\t\tconst nodeName = parsedPath.nodeName;\n\n\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to update property for track: ' + nodeName +\n\t\t\t\t'.' + propertyName + ' but it wasn\\'t found.', targetObject );\n\t\t\treturn;\n\n\t\t}\n\n\t\t// determine versioning scheme\n\t\tlet versioning = this.Versioning.None;\n\n\t\tthis.targetObject = targetObject;\n\n\t\tif ( targetObject.needsUpdate !== undefined ) { // material\n\n\t\t\tversioning = this.Versioning.NeedsUpdate;\n\n\t\t} else if ( targetObject.matrixWorldNeedsUpdate !== undefined ) { // node transform\n\n\t\t\tversioning = this.Versioning.MatrixWorldNeedsUpdate;\n\n\t\t}\n\n\t\t// determine how the property gets bound\n\t\tlet bindingType = this.BindingType.Direct;\n\n\t\tif ( propertyIndex !== undefined ) {\n\n\t\t\t// access a sub element of the property array (only primitives are supported right now)\n\n\t\t\tif ( propertyName === 'morphTargetInfluences' ) {\n\n\t\t\t\t// potential optimization, skip this if propertyIndex is already an integer, and convert the integer string to a true integer.\n\n\t\t\t\t// support resolving morphTarget names into indices.\n\t\t\t\tif ( ! targetObject.geometry ) {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.', this );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tif ( ! targetObject.geometry.morphAttributes ) {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.', this );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tif ( targetObject.morphTargetDictionary[ propertyIndex ] !== undefined ) {\n\n\t\t\t\t\tpropertyIndex = targetObject.morphTargetDictionary[ propertyIndex ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tbindingType = this.BindingType.ArrayElement;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\t\t\tthis.propertyIndex = propertyIndex;\n\n\t\t} else if ( nodeProperty.fromArray !== undefined && nodeProperty.toArray !== undefined ) {\n\n\t\t\t// must use copy for Object3D.Euler/Quaternion\n\n\t\t\tbindingType = this.BindingType.HasFromToArray;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\n\t\t} else if ( Array.isArray( nodeProperty ) ) {\n\n\t\t\tbindingType = this.BindingType.EntireArray;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\n\t\t} else {\n\n\t\t\tthis.propertyName = propertyName;\n\n\t\t}\n\n\t\t// select getter / setter\n\t\tthis.getValue = this.GetterByBindingType[ bindingType ];\n\t\tthis.setValue = this.SetterByBindingTypeAndVersioning[ bindingType ][ versioning ];\n\n\t}\n\n\tunbind() {\n\n\t\tthis.node = null;\n\n\t\t// back to the prototype version of getValue / setValue\n\t\t// note: avoiding to mutate the shape of 'this' via 'delete'\n\t\tthis.getValue = this._getValue_unbound;\n\t\tthis.setValue = this._setValue_unbound;\n\n\t}\n\n}\n\nPropertyBinding.Composite = Composite;\n\nPropertyBinding.prototype.BindingType = {\n\tDirect: 0,\n\tEntireArray: 1,\n\tArrayElement: 2,\n\tHasFromToArray: 3\n};\n\nPropertyBinding.prototype.Versioning = {\n\tNone: 0,\n\tNeedsUpdate: 1,\n\tMatrixWorldNeedsUpdate: 2\n};\n\nPropertyBinding.prototype.GetterByBindingType = [\n\n\tPropertyBinding.prototype._getValue_direct,\n\tPropertyBinding.prototype._getValue_array,\n\tPropertyBinding.prototype._getValue_arrayElement,\n\tPropertyBinding.prototype._getValue_toArray,\n\n];\n\nPropertyBinding.prototype.SetterByBindingTypeAndVersioning = [\n\n\t[\n\t\t// Direct\n\t\tPropertyBinding.prototype._setValue_direct,\n\t\tPropertyBinding.prototype._setValue_direct_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_direct_setMatrixWorldNeedsUpdate,\n\n\t], [\n\n\t\t// EntireArray\n\n\t\tPropertyBinding.prototype._setValue_array,\n\t\tPropertyBinding.prototype._setValue_array_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_array_setMatrixWorldNeedsUpdate,\n\n\t], [\n\n\t\t// ArrayElement\n\t\tPropertyBinding.prototype._setValue_arrayElement,\n\t\tPropertyBinding.prototype._setValue_arrayElement_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate,\n\n\t], [\n\n\t\t// HasToFromArray\n\t\tPropertyBinding.prototype._setValue_fromArray,\n\t\tPropertyBinding.prototype._setValue_fromArray_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate,\n\n\t]\n\n];\n\n/**\n *\n * A group of objects that receives a shared animation state.\n *\n * Usage:\n *\n *  - Add objects you would otherwise pass as 'root' to the\n *    constructor or the .clipAction method of AnimationMixer.\n *\n *  - Instead pass this object as 'root'.\n *\n *  - You can also add and remove objects later when the mixer\n *    is running.\n *\n * Note:\n *\n *    Objects of this class appear as one object to the mixer,\n *    so cache control of the individual objects must be done\n *    on the group.\n *\n * Limitation:\n *\n *  - The animated properties must be compatible among the\n *    all objects in the group.\n *\n *  - A single property can either be controlled through a\n *    target group or directly, but not both.\n */\n\nclass AnimationObjectGroup {\n\n\tconstructor() {\n\n\t\tthis.isAnimationObjectGroup = true;\n\n\t\tthis.uuid = generateUUID();\n\n\t\t// cached objects followed by the active ones\n\t\tthis._objects = Array.prototype.slice.call( arguments );\n\n\t\tthis.nCachedObjects_ = 0; // threshold\n\t\t// note: read by PropertyBinding.Composite\n\n\t\tconst indices = {};\n\t\tthis._indicesByUUID = indices; // for bookkeeping\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tindices[ arguments[ i ].uuid ] = i;\n\n\t\t}\n\n\t\tthis._paths = []; // inside: string\n\t\tthis._parsedPaths = []; // inside: { we don't care, here }\n\t\tthis._bindings = []; // inside: Array< PropertyBinding >\n\t\tthis._bindingsIndicesByPath = {}; // inside: indices in these arrays\n\n\t\tconst scope = this;\n\n\t\tthis.stats = {\n\n\t\t\tobjects: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._objects.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn this.total - scope.nCachedObjects_;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tget bindingsPerObject() {\n\n\t\t\t\treturn scope._bindings.length;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tadd() {\n\n\t\tconst objects = this._objects,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tpaths = this._paths,\n\t\t\tparsedPaths = this._parsedPaths,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tlet knownObject = undefined,\n\t\t\tnObjects = objects.length,\n\t\t\tnCachedObjects = this.nCachedObjects_;\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tconst object = arguments[ i ],\n\t\t\t\tuuid = object.uuid;\n\t\t\tlet index = indicesByUUID[ uuid ];\n\n\t\t\tif ( index === undefined ) {\n\n\t\t\t\t// unknown object -> add it to the ACTIVE region\n\n\t\t\t\tindex = nObjects ++;\n\t\t\t\tindicesByUUID[ uuid ] = index;\n\t\t\t\tobjects.push( object );\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tbindings[ j ].push( new PropertyBinding( object, paths[ j ], parsedPaths[ j ] ) );\n\n\t\t\t\t}\n\n\t\t\t} else if ( index < nCachedObjects ) {\n\n\t\t\t\tknownObject = objects[ index ];\n\n\t\t\t\t// move existing object to the ACTIVE region\n\n\t\t\t\tconst firstActiveIndex = -- nCachedObjects,\n\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ];\n\n\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\n\t\t\t\tobjects[ index ] = lastCachedObject;\n\n\t\t\t\tindicesByUUID[ uuid ] = firstActiveIndex;\n\t\t\t\tobjects[ firstActiveIndex ] = object;\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tconst bindingsForPath = bindings[ j ],\n\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ];\n\n\t\t\t\t\tlet binding = bindingsForPath[ index ];\n\n\t\t\t\t\tbindingsForPath[ index ] = lastCached;\n\n\t\t\t\t\tif ( binding === undefined ) {\n\n\t\t\t\t\t\t// since we do not bother to create new bindings\n\t\t\t\t\t\t// for objects that are cached, the binding may\n\t\t\t\t\t\t// or may not exist\n\n\t\t\t\t\t\tbinding = new PropertyBinding( object, paths[ j ], parsedPaths[ j ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = binding;\n\n\t\t\t\t}\n\n\t\t\t} else if ( objects[ index ] !== knownObject ) {\n\n\t\t\t\tconsole.error( 'THREE.AnimationObjectGroup: Different objects with the same UUID ' +\n\t\t\t\t\t'detected. Clean the caches or recreate your infrastructure when reloading scenes.' );\n\n\t\t\t} // else the object is already where we want it to be\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t}\n\n\tremove() {\n\n\t\tconst objects = this._objects,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tlet nCachedObjects = this.nCachedObjects_;\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tconst object = arguments[ i ],\n\t\t\t\tuuid = object.uuid,\n\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\tif ( index !== undefined && index >= nCachedObjects ) {\n\n\t\t\t\t// move existing object into the CACHED region\n\n\t\t\t\tconst lastCachedIndex = nCachedObjects ++,\n\t\t\t\t\tfirstActiveObject = objects[ lastCachedIndex ];\n\n\t\t\t\tindicesByUUID[ firstActiveObject.uuid ] = index;\n\t\t\t\tobjects[ index ] = firstActiveObject;\n\n\t\t\t\tindicesByUUID[ uuid ] = lastCachedIndex;\n\t\t\t\tobjects[ lastCachedIndex ] = object;\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tconst bindingsForPath = bindings[ j ],\n\t\t\t\t\t\tfirstActive = bindingsForPath[ lastCachedIndex ],\n\t\t\t\t\t\tbinding = bindingsForPath[ index ];\n\n\t\t\t\t\tbindingsForPath[ index ] = firstActive;\n\t\t\t\t\tbindingsForPath[ lastCachedIndex ] = binding;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t}\n\n\t// remove & forget\n\tuncache() {\n\n\t\tconst objects = this._objects,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tlet nCachedObjects = this.nCachedObjects_,\n\t\t\tnObjects = objects.length;\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tconst object = arguments[ i ],\n\t\t\t\tuuid = object.uuid,\n\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\tif ( index !== undefined ) {\n\n\t\t\t\tdelete indicesByUUID[ uuid ];\n\n\t\t\t\tif ( index < nCachedObjects ) {\n\n\t\t\t\t\t// object is cached, shrink the CACHED region\n\n\t\t\t\t\tconst firstActiveIndex = -- nCachedObjects,\n\t\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ],\n\t\t\t\t\t\tlastIndex = -- nObjects,\n\t\t\t\t\t\tlastObject = objects[ lastIndex ];\n\n\t\t\t\t\t// last cached object takes this object's place\n\t\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\n\t\t\t\t\tobjects[ index ] = lastCachedObject;\n\n\t\t\t\t\t// last object goes to the activated slot and pop\n\t\t\t\t\tindicesByUUID[ lastObject.uuid ] = firstActiveIndex;\n\t\t\t\t\tobjects[ firstActiveIndex ] = lastObject;\n\t\t\t\t\tobjects.pop();\n\n\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\tconst bindingsForPath = bindings[ j ],\n\t\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ],\n\t\t\t\t\t\t\tlast = bindingsForPath[ lastIndex ];\n\n\t\t\t\t\t\tbindingsForPath[ index ] = lastCached;\n\t\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = last;\n\t\t\t\t\t\tbindingsForPath.pop();\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// object is active, just swap with the last and pop\n\n\t\t\t\t\tconst lastIndex = -- nObjects,\n\t\t\t\t\t\tlastObject = objects[ lastIndex ];\n\n\t\t\t\t\tif ( lastIndex > 0 ) {\n\n\t\t\t\t\t\tindicesByUUID[ lastObject.uuid ] = index;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tobjects[ index ] = lastObject;\n\t\t\t\t\tobjects.pop();\n\n\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\tconst bindingsForPath = bindings[ j ];\n\n\t\t\t\t\t\tbindingsForPath[ index ] = bindingsForPath[ lastIndex ];\n\t\t\t\t\t\tbindingsForPath.pop();\n\n\t\t\t\t\t}\n\n\t\t\t\t} // cached or active\n\n\t\t\t} // if object is known\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t}\n\n\t// Internal interface used by befriended PropertyBinding.Composite:\n\n\tsubscribe_( path, parsedPath ) {\n\n\t\t// returns an array of bindings for the given path that is changed\n\t\t// according to the contained objects in the group\n\n\t\tconst indicesByPath = this._bindingsIndicesByPath;\n\t\tlet index = indicesByPath[ path ];\n\t\tconst bindings = this._bindings;\n\n\t\tif ( index !== undefined ) return bindings[ index ];\n\n\t\tconst paths = this._paths,\n\t\t\tparsedPaths = this._parsedPaths,\n\t\t\tobjects = this._objects,\n\t\t\tnObjects = objects.length,\n\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\tbindingsForPath = new Array( nObjects );\n\n\t\tindex = bindings.length;\n\n\t\tindicesByPath[ path ] = index;\n\n\t\tpaths.push( path );\n\t\tparsedPaths.push( parsedPath );\n\t\tbindings.push( bindingsForPath );\n\n\t\tfor ( let i = nCachedObjects, n = objects.length; i !== n; ++ i ) {\n\n\t\t\tconst object = objects[ i ];\n\t\t\tbindingsForPath[ i ] = new PropertyBinding( object, path, parsedPath );\n\n\t\t}\n\n\t\treturn bindingsForPath;\n\n\t}\n\n\tunsubscribe_( path ) {\n\n\t\t// tells the group to forget about a property path and no longer\n\t\t// update the array previously obtained with 'subscribe_'\n\n\t\tconst indicesByPath = this._bindingsIndicesByPath,\n\t\t\tindex = indicesByPath[ path ];\n\n\t\tif ( index !== undefined ) {\n\n\t\t\tconst paths = this._paths,\n\t\t\t\tparsedPaths = this._parsedPaths,\n\t\t\t\tbindings = this._bindings,\n\t\t\t\tlastBindingsIndex = bindings.length - 1,\n\t\t\t\tlastBindings = bindings[ lastBindingsIndex ],\n\t\t\t\tlastBindingsPath = path[ lastBindingsIndex ];\n\n\t\t\tindicesByPath[ lastBindingsPath ] = index;\n\n\t\t\tbindings[ index ] = lastBindings;\n\t\t\tbindings.pop();\n\n\t\t\tparsedPaths[ index ] = parsedPaths[ lastBindingsIndex ];\n\t\t\tparsedPaths.pop();\n\n\t\t\tpaths[ index ] = paths[ lastBindingsIndex ];\n\t\t\tpaths.pop();\n\n\t\t}\n\n\t}\n\n}\n\nclass AnimationAction {\n\n\tconstructor( mixer, clip, localRoot = null, blendMode = clip.blendMode ) {\n\n\t\tthis._mixer = mixer;\n\t\tthis._clip = clip;\n\t\tthis._localRoot = localRoot;\n\t\tthis.blendMode = blendMode;\n\n\t\tconst tracks = clip.tracks,\n\t\t\tnTracks = tracks.length,\n\t\t\tinterpolants = new Array( nTracks );\n\n\t\tconst interpolantSettings = {\n\t\t\tendingStart: ZeroCurvatureEnding,\n\t\t\tendingEnd: ZeroCurvatureEnding\n\t\t};\n\n\t\tfor ( let i = 0; i !== nTracks; ++ i ) {\n\n\t\t\tconst interpolant = tracks[ i ].createInterpolant( null );\n\t\t\tinterpolants[ i ] = interpolant;\n\t\t\tinterpolant.settings = interpolantSettings;\n\n\t\t}\n\n\t\tthis._interpolantSettings = interpolantSettings;\n\n\t\tthis._interpolants = interpolants; // bound by the mixer\n\n\t\t// inside: PropertyMixer (managed by the mixer)\n\t\tthis._propertyBindings = new Array( nTracks );\n\n\t\tthis._cacheIndex = null; // for the memory manager\n\t\tthis._byClipCacheIndex = null; // for the memory manager\n\n\t\tthis._timeScaleInterpolant = null;\n\t\tthis._weightInterpolant = null;\n\n\t\tthis.loop = LoopRepeat;\n\t\tthis._loopCount = - 1;\n\n\t\t// global mixer time when the action is to be started\n\t\t// it's set back to 'null' upon start of the action\n\t\tthis._startTime = null;\n\n\t\t// scaled local time of the action\n\t\t// gets clamped or wrapped to 0..clip.duration according to loop\n\t\tthis.time = 0;\n\n\t\tthis.timeScale = 1;\n\t\tthis._effectiveTimeScale = 1;\n\n\t\tthis.weight = 1;\n\t\tthis._effectiveWeight = 1;\n\n\t\tthis.repetitions = Infinity; // no. of repetitions when looping\n\n\t\tthis.paused = false; // true -> zero effective time scale\n\t\tthis.enabled = true; // false -> zero effective weight\n\n\t\tthis.clampWhenFinished = false;// keep feeding the last frame?\n\n\t\tthis.zeroSlopeAtStart = true;// for smooth interpolation w/o separate\n\t\tthis.zeroSlopeAtEnd = true;// clips for start, loop and end\n\n\t}\n\n\t// State & Scheduling\n\n\tplay() {\n\n\t\tthis._mixer._activateAction( this );\n\n\t\treturn this;\n\n\t}\n\n\tstop() {\n\n\t\tthis._mixer._deactivateAction( this );\n\n\t\treturn this.reset();\n\n\t}\n\n\treset() {\n\n\t\tthis.paused = false;\n\t\tthis.enabled = true;\n\n\t\tthis.time = 0; // restart clip\n\t\tthis._loopCount = - 1;// forget previous loops\n\t\tthis._startTime = null;// forget scheduling\n\n\t\treturn this.stopFading().stopWarping();\n\n\t}\n\n\tisRunning() {\n\n\t\treturn this.enabled && ! this.paused && this.timeScale !== 0 &&\n\t\t\tthis._startTime === null && this._mixer._isActiveAction( this );\n\n\t}\n\n\t// return true when play has been called\n\tisScheduled() {\n\n\t\treturn this._mixer._isActiveAction( this );\n\n\t}\n\n\tstartAt( time ) {\n\n\t\tthis._startTime = time;\n\n\t\treturn this;\n\n\t}\n\n\tsetLoop( mode, repetitions ) {\n\n\t\tthis.loop = mode;\n\t\tthis.repetitions = repetitions;\n\n\t\treturn this;\n\n\t}\n\n\t// Weight\n\n\t// set the weight stopping any scheduled fading\n\t// although .enabled = false yields an effective weight of zero, this\n\t// method does *not* change .enabled, because it would be confusing\n\tsetEffectiveWeight( weight ) {\n\n\t\tthis.weight = weight;\n\n\t\t// note: same logic as when updated at runtime\n\t\tthis._effectiveWeight = this.enabled ? weight : 0;\n\n\t\treturn this.stopFading();\n\n\t}\n\n\t// return the weight considering fading and .enabled\n\tgetEffectiveWeight() {\n\n\t\treturn this._effectiveWeight;\n\n\t}\n\n\tfadeIn( duration ) {\n\n\t\treturn this._scheduleFading( duration, 0, 1 );\n\n\t}\n\n\tfadeOut( duration ) {\n\n\t\treturn this._scheduleFading( duration, 1, 0 );\n\n\t}\n\n\tcrossFadeFrom( fadeOutAction, duration, warp ) {\n\n\t\tfadeOutAction.fadeOut( duration );\n\t\tthis.fadeIn( duration );\n\n\t\tif ( warp ) {\n\n\t\t\tconst fadeInDuration = this._clip.duration,\n\t\t\t\tfadeOutDuration = fadeOutAction._clip.duration,\n\n\t\t\t\tstartEndRatio = fadeOutDuration / fadeInDuration,\n\t\t\t\tendStartRatio = fadeInDuration / fadeOutDuration;\n\n\t\t\tfadeOutAction.warp( 1.0, startEndRatio, duration );\n\t\t\tthis.warp( endStartRatio, 1.0, duration );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcrossFadeTo( fadeInAction, duration, warp ) {\n\n\t\treturn fadeInAction.crossFadeFrom( this, duration, warp );\n\n\t}\n\n\tstopFading() {\n\n\t\tconst weightInterpolant = this._weightInterpolant;\n\n\t\tif ( weightInterpolant !== null ) {\n\n\t\t\tthis._weightInterpolant = null;\n\t\t\tthis._mixer._takeBackControlInterpolant( weightInterpolant );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// Time Scale Control\n\n\t// set the time scale stopping any scheduled warping\n\t// although .paused = true yields an effective time scale of zero, this\n\t// method does *not* change .paused, because it would be confusing\n\tsetEffectiveTimeScale( timeScale ) {\n\n\t\tthis.timeScale = timeScale;\n\t\tthis._effectiveTimeScale = this.paused ? 0 : timeScale;\n\n\t\treturn this.stopWarping();\n\n\t}\n\n\t// return the time scale considering warping and .paused\n\tgetEffectiveTimeScale() {\n\n\t\treturn this._effectiveTimeScale;\n\n\t}\n\n\tsetDuration( duration ) {\n\n\t\tthis.timeScale = this._clip.duration / duration;\n\n\t\treturn this.stopWarping();\n\n\t}\n\n\tsyncWith( action ) {\n\n\t\tthis.time = action.time;\n\t\tthis.timeScale = action.timeScale;\n\n\t\treturn this.stopWarping();\n\n\t}\n\n\thalt( duration ) {\n\n\t\treturn this.warp( this._effectiveTimeScale, 0, duration );\n\n\t}\n\n\twarp( startTimeScale, endTimeScale, duration ) {\n\n\t\tconst mixer = this._mixer,\n\t\t\tnow = mixer.time,\n\t\t\ttimeScale = this.timeScale;\n\n\t\tlet interpolant = this._timeScaleInterpolant;\n\n\t\tif ( interpolant === null ) {\n\n\t\t\tinterpolant = mixer._lendControlInterpolant();\n\t\t\tthis._timeScaleInterpolant = interpolant;\n\n\t\t}\n\n\t\tconst times = interpolant.parameterPositions,\n\t\t\tvalues = interpolant.sampleValues;\n\n\t\ttimes[ 0 ] = now;\n\t\ttimes[ 1 ] = now + duration;\n\n\t\tvalues[ 0 ] = startTimeScale / timeScale;\n\t\tvalues[ 1 ] = endTimeScale / timeScale;\n\n\t\treturn this;\n\n\t}\n\n\tstopWarping() {\n\n\t\tconst timeScaleInterpolant = this._timeScaleInterpolant;\n\n\t\tif ( timeScaleInterpolant !== null ) {\n\n\t\t\tthis._timeScaleInterpolant = null;\n\t\t\tthis._mixer._takeBackControlInterpolant( timeScaleInterpolant );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// Object Accessors\n\n\tgetMixer() {\n\n\t\treturn this._mixer;\n\n\t}\n\n\tgetClip() {\n\n\t\treturn this._clip;\n\n\t}\n\n\tgetRoot() {\n\n\t\treturn this._localRoot || this._mixer._root;\n\n\t}\n\n\t// Interna\n\n\t_update( time, deltaTime, timeDirection, accuIndex ) {\n\n\t\t// called by the mixer\n\n\t\tif ( ! this.enabled ) {\n\n\t\t\t// call ._updateWeight() to update ._effectiveWeight\n\n\t\t\tthis._updateWeight( time );\n\t\t\treturn;\n\n\t\t}\n\n\t\tconst startTime = this._startTime;\n\n\t\tif ( startTime !== null ) {\n\n\t\t\t// check for scheduled start of action\n\n\t\t\tconst timeRunning = ( time - startTime ) * timeDirection;\n\t\t\tif ( timeRunning < 0 || timeDirection === 0 ) {\n\n\t\t\t\tdeltaTime = 0;\n\n\t\t\t} else {\n\n\n\t\t\t\tthis._startTime = null; // unschedule\n\t\t\t\tdeltaTime = timeDirection * timeRunning;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// apply time scale and advance time\n\n\t\tdeltaTime *= this._updateTimeScale( time );\n\t\tconst clipTime = this._updateTime( deltaTime );\n\n\t\t// note: _updateTime may disable the action resulting in\n\t\t// an effective weight of 0\n\n\t\tconst weight = this._updateWeight( time );\n\n\t\tif ( weight > 0 ) {\n\n\t\t\tconst interpolants = this._interpolants;\n\t\t\tconst propertyMixers = this._propertyBindings;\n\n\t\t\tswitch ( this.blendMode ) {\n\n\t\t\t\tcase AdditiveAnimationBlendMode:\n\n\t\t\t\t\tfor ( let j = 0, m = interpolants.length; j !== m; ++ j ) {\n\n\t\t\t\t\t\tinterpolants[ j ].evaluate( clipTime );\n\t\t\t\t\t\tpropertyMixers[ j ].accumulateAdditive( weight );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase NormalAnimationBlendMode:\n\t\t\t\tdefault:\n\n\t\t\t\t\tfor ( let j = 0, m = interpolants.length; j !== m; ++ j ) {\n\n\t\t\t\t\t\tinterpolants[ j ].evaluate( clipTime );\n\t\t\t\t\t\tpropertyMixers[ j ].accumulate( accuIndex, weight );\n\n\t\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_updateWeight( time ) {\n\n\t\tlet weight = 0;\n\n\t\tif ( this.enabled ) {\n\n\t\t\tweight = this.weight;\n\t\t\tconst interpolant = this._weightInterpolant;\n\n\t\t\tif ( interpolant !== null ) {\n\n\t\t\t\tconst interpolantValue = interpolant.evaluate( time )[ 0 ];\n\n\t\t\t\tweight *= interpolantValue;\n\n\t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\n\n\t\t\t\t\tthis.stopFading();\n\n\t\t\t\t\tif ( interpolantValue === 0 ) {\n\n\t\t\t\t\t\t// faded out, disable\n\t\t\t\t\t\tthis.enabled = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis._effectiveWeight = weight;\n\t\treturn weight;\n\n\t}\n\n\t_updateTimeScale( time ) {\n\n\t\tlet timeScale = 0;\n\n\t\tif ( ! this.paused ) {\n\n\t\t\ttimeScale = this.timeScale;\n\n\t\t\tconst interpolant = this._timeScaleInterpolant;\n\n\t\t\tif ( interpolant !== null ) {\n\n\t\t\t\tconst interpolantValue = interpolant.evaluate( time )[ 0 ];\n\n\t\t\t\ttimeScale *= interpolantValue;\n\n\t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\n\n\t\t\t\t\tthis.stopWarping();\n\n\t\t\t\t\tif ( timeScale === 0 ) {\n\n\t\t\t\t\t\t// motion has halted, pause\n\t\t\t\t\t\tthis.paused = true;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// warp done - apply final time scale\n\t\t\t\t\t\tthis.timeScale = timeScale;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis._effectiveTimeScale = timeScale;\n\t\treturn timeScale;\n\n\t}\n\n\t_updateTime( deltaTime ) {\n\n\t\tconst duration = this._clip.duration;\n\t\tconst loop = this.loop;\n\n\t\tlet time = this.time + deltaTime;\n\t\tlet loopCount = this._loopCount;\n\n\t\tconst pingPong = ( loop === LoopPingPong );\n\n\t\tif ( deltaTime === 0 ) {\n\n\t\t\tif ( loopCount === - 1 ) return time;\n\n\t\t\treturn ( pingPong && ( loopCount & 1 ) === 1 ) ? duration - time : time;\n\n\t\t}\n\n\t\tif ( loop === LoopOnce ) {\n\n\t\t\tif ( loopCount === - 1 ) {\n\n\t\t\t\t// just started\n\n\t\t\t\tthis._loopCount = 0;\n\t\t\t\tthis._setEndings( true, true, false );\n\n\t\t\t}\n\n\t\t\thandle_stop: {\n\n\t\t\t\tif ( time >= duration ) {\n\n\t\t\t\t\ttime = duration;\n\n\t\t\t\t} else if ( time < 0 ) {\n\n\t\t\t\t\ttime = 0;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\tbreak handle_stop;\n\n\t\t\t\t}\n\n\t\t\t\tif ( this.clampWhenFinished ) this.paused = true;\n\t\t\t\telse this.enabled = false;\n\n\t\t\t\tthis.time = time;\n\n\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\ttype: 'finished', action: this,\n\t\t\t\t\tdirection: deltaTime < 0 ? - 1 : 1\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t} else { // repetitive Repeat or PingPong\n\n\t\t\tif ( loopCount === - 1 ) {\n\n\t\t\t\t// just started\n\n\t\t\t\tif ( deltaTime >= 0 ) {\n\n\t\t\t\t\tloopCount = 0;\n\n\t\t\t\t\tthis._setEndings( true, this.repetitions === 0, pingPong );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// when looping in reverse direction, the initial\n\t\t\t\t\t// transition through zero counts as a repetition,\n\t\t\t\t\t// so leave loopCount at -1\n\n\t\t\t\t\tthis._setEndings( this.repetitions === 0, true, pingPong );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( time >= duration || time < 0 ) {\n\n\t\t\t\t// wrap around\n\n\t\t\t\tconst loopDelta = Math.floor( time / duration ); // signed\n\t\t\t\ttime -= duration * loopDelta;\n\n\t\t\t\tloopCount += Math.abs( loopDelta );\n\n\t\t\t\tconst pending = this.repetitions - loopCount;\n\n\t\t\t\tif ( pending <= 0 ) {\n\n\t\t\t\t\t// have to stop (switch state, clamp time, fire event)\n\n\t\t\t\t\tif ( this.clampWhenFinished ) this.paused = true;\n\t\t\t\t\telse this.enabled = false;\n\n\t\t\t\t\ttime = deltaTime > 0 ? duration : 0;\n\n\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\t\ttype: 'finished', action: this,\n\t\t\t\t\t\tdirection: deltaTime > 0 ? 1 : - 1\n\t\t\t\t\t} );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// keep running\n\n\t\t\t\t\tif ( pending === 1 ) {\n\n\t\t\t\t\t\t// entering the last round\n\n\t\t\t\t\t\tconst atStart = deltaTime < 0;\n\t\t\t\t\t\tthis._setEndings( atStart, ! atStart, pingPong );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthis._setEndings( false, false, pingPong );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._loopCount = loopCount;\n\n\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\t\ttype: 'loop', action: this, loopDelta: loopDelta\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tthis.time = time;\n\n\t\t\t}\n\n\t\t\tif ( pingPong && ( loopCount & 1 ) === 1 ) {\n\n\t\t\t\t// invert time for the \"pong round\"\n\n\t\t\t\treturn duration - time;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn time;\n\n\t}\n\n\t_setEndings( atStart, atEnd, pingPong ) {\n\n\t\tconst settings = this._interpolantSettings;\n\n\t\tif ( pingPong ) {\n\n\t\t\tsettings.endingStart = ZeroSlopeEnding;\n\t\t\tsettings.endingEnd = ZeroSlopeEnding;\n\n\t\t} else {\n\n\t\t\t// assuming for LoopOnce atStart == atEnd == true\n\n\t\t\tif ( atStart ) {\n\n\t\t\t\tsettings.endingStart = this.zeroSlopeAtStart ? ZeroSlopeEnding : ZeroCurvatureEnding;\n\n\t\t\t} else {\n\n\t\t\t\tsettings.endingStart = WrapAroundEnding;\n\n\t\t\t}\n\n\t\t\tif ( atEnd ) {\n\n\t\t\t\tsettings.endingEnd = this.zeroSlopeAtEnd ? ZeroSlopeEnding : ZeroCurvatureEnding;\n\n\t\t\t} else {\n\n\t\t\t\tsettings.endingEnd \t = WrapAroundEnding;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_scheduleFading( duration, weightNow, weightThen ) {\n\n\t\tconst mixer = this._mixer, now = mixer.time;\n\t\tlet interpolant = this._weightInterpolant;\n\n\t\tif ( interpolant === null ) {\n\n\t\t\tinterpolant = mixer._lendControlInterpolant();\n\t\t\tthis._weightInterpolant = interpolant;\n\n\t\t}\n\n\t\tconst times = interpolant.parameterPositions,\n\t\t\tvalues = interpolant.sampleValues;\n\n\t\ttimes[ 0 ] = now;\n\t\tvalues[ 0 ] = weightNow;\n\t\ttimes[ 1 ] = now + duration;\n\t\tvalues[ 1 ] = weightThen;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _controlInterpolantsResultBuffer = new Float32Array( 1 );\n\n\nclass AnimationMixer extends EventDispatcher {\n\n\tconstructor( root ) {\n\n\t\tsuper();\n\n\t\tthis._root = root;\n\t\tthis._initMemoryManager();\n\t\tthis._accuIndex = 0;\n\t\tthis.time = 0;\n\t\tthis.timeScale = 1.0;\n\n\t}\n\n\t_bindAction( action, prototypeAction ) {\n\n\t\tconst root = action._localRoot || this._root,\n\t\t\ttracks = action._clip.tracks,\n\t\t\tnTracks = tracks.length,\n\t\t\tbindings = action._propertyBindings,\n\t\t\tinterpolants = action._interpolants,\n\t\t\trootUuid = root.uuid,\n\t\t\tbindingsByRoot = this._bindingsByRootAndName;\n\n\t\tlet bindingsByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingsByName === undefined ) {\n\n\t\t\tbindingsByName = {};\n\t\t\tbindingsByRoot[ rootUuid ] = bindingsByName;\n\n\t\t}\n\n\t\tfor ( let i = 0; i !== nTracks; ++ i ) {\n\n\t\t\tconst track = tracks[ i ],\n\t\t\t\ttrackName = track.name;\n\n\t\t\tlet binding = bindingsByName[ trackName ];\n\n\t\t\tif ( binding !== undefined ) {\n\n\t\t\t\t++ binding.referenceCount;\n\t\t\t\tbindings[ i ] = binding;\n\n\t\t\t} else {\n\n\t\t\t\tbinding = bindings[ i ];\n\n\t\t\t\tif ( binding !== undefined ) {\n\n\t\t\t\t\t// existing binding, make sure the cache knows\n\n\t\t\t\t\tif ( binding._cacheIndex === null ) {\n\n\t\t\t\t\t\t++ binding.referenceCount;\n\t\t\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\tconst path = prototypeAction && prototypeAction.\n\t\t\t\t\t_propertyBindings[ i ].binding.parsedPath;\n\n\t\t\t\tbinding = new PropertyMixer(\n\t\t\t\t\tPropertyBinding.create( root, trackName, path ),\n\t\t\t\t\ttrack.ValueTypeName, track.getValueSize() );\n\n\t\t\t\t++ binding.referenceCount;\n\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\n\n\t\t\t\tbindings[ i ] = binding;\n\n\t\t\t}\n\n\t\t\tinterpolants[ i ].resultBuffer = binding.buffer;\n\n\t\t}\n\n\t}\n\n\t_activateAction( action ) {\n\n\t\tif ( ! this._isActiveAction( action ) ) {\n\n\t\t\tif ( action._cacheIndex === null ) {\n\n\t\t\t\t// this action has been forgotten by the cache, but the user\n\t\t\t\t// appears to be still using it -> rebind\n\n\t\t\t\tconst rootUuid = ( action._localRoot || this._root ).uuid,\n\t\t\t\t\tclipUuid = action._clip.uuid,\n\t\t\t\t\tactionsForClip = this._actionsByClip[ clipUuid ];\n\n\t\t\t\tthis._bindAction( action,\n\t\t\t\t\tactionsForClip && actionsForClip.knownActions[ 0 ] );\n\n\t\t\t\tthis._addInactiveAction( action, clipUuid, rootUuid );\n\n\t\t\t}\n\n\t\t\tconst bindings = action._propertyBindings;\n\n\t\t\t// increment reference counts / sort out state\n\t\t\tfor ( let i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tconst binding = bindings[ i ];\n\n\t\t\t\tif ( binding.useCount ++ === 0 ) {\n\n\t\t\t\t\tthis._lendBinding( binding );\n\t\t\t\t\tbinding.saveOriginalState();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._lendAction( action );\n\n\t\t}\n\n\t}\n\n\t_deactivateAction( action ) {\n\n\t\tif ( this._isActiveAction( action ) ) {\n\n\t\t\tconst bindings = action._propertyBindings;\n\n\t\t\t// decrement reference counts / sort out state\n\t\t\tfor ( let i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tconst binding = bindings[ i ];\n\n\t\t\t\tif ( -- binding.useCount === 0 ) {\n\n\t\t\t\t\tbinding.restoreOriginalState();\n\t\t\t\t\tthis._takeBackBinding( binding );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._takeBackAction( action );\n\n\t\t}\n\n\t}\n\n\t// Memory manager\n\n\t_initMemoryManager() {\n\n\t\tthis._actions = []; // 'nActiveActions' followed by inactive ones\n\t\tthis._nActiveActions = 0;\n\n\t\tthis._actionsByClip = {};\n\t\t// inside:\n\t\t// {\n\t\t// \tknownActions: Array< AnimationAction > - used as prototypes\n\t\t// \tactionByRoot: AnimationAction - lookup\n\t\t// }\n\n\n\t\tthis._bindings = []; // 'nActiveBindings' followed by inactive ones\n\t\tthis._nActiveBindings = 0;\n\n\t\tthis._bindingsByRootAndName = {}; // inside: Map< name, PropertyMixer >\n\n\n\t\tthis._controlInterpolants = []; // same game as above\n\t\tthis._nActiveControlInterpolants = 0;\n\n\t\tconst scope = this;\n\n\t\tthis.stats = {\n\n\t\t\tactions: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._actions.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveActions;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tbindings: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._bindings.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveBindings;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tcontrolInterpolants: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._controlInterpolants.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveControlInterpolants;\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t// Memory management for AnimationAction objects\n\n\t_isActiveAction( action ) {\n\n\t\tconst index = action._cacheIndex;\n\t\treturn index !== null && index < this._nActiveActions;\n\n\t}\n\n\t_addInactiveAction( action, clipUuid, rootUuid ) {\n\n\t\tconst actions = this._actions,\n\t\t\tactionsByClip = this._actionsByClip;\n\n\t\tlet actionsForClip = actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip === undefined ) {\n\n\t\t\tactionsForClip = {\n\n\t\t\t\tknownActions: [ action ],\n\t\t\t\tactionByRoot: {}\n\n\t\t\t};\n\n\t\t\taction._byClipCacheIndex = 0;\n\n\t\t\tactionsByClip[ clipUuid ] = actionsForClip;\n\n\t\t} else {\n\n\t\t\tconst knownActions = actionsForClip.knownActions;\n\n\t\t\taction._byClipCacheIndex = knownActions.length;\n\t\t\tknownActions.push( action );\n\n\t\t}\n\n\t\taction._cacheIndex = actions.length;\n\t\tactions.push( action );\n\n\t\tactionsForClip.actionByRoot[ rootUuid ] = action;\n\n\t}\n\n\t_removeInactiveAction( action ) {\n\n\t\tconst actions = this._actions,\n\t\t\tlastInactiveAction = actions[ actions.length - 1 ],\n\t\t\tcacheIndex = action._cacheIndex;\n\n\t\tlastInactiveAction._cacheIndex = cacheIndex;\n\t\tactions[ cacheIndex ] = lastInactiveAction;\n\t\tactions.pop();\n\n\t\taction._cacheIndex = null;\n\n\n\t\tconst clipUuid = action._clip.uuid,\n\t\t\tactionsByClip = this._actionsByClip,\n\t\t\tactionsForClip = actionsByClip[ clipUuid ],\n\t\t\tknownActionsForClip = actionsForClip.knownActions,\n\n\t\t\tlastKnownAction =\n\t\t\t\tknownActionsForClip[ knownActionsForClip.length - 1 ],\n\n\t\t\tbyClipCacheIndex = action._byClipCacheIndex;\n\n\t\tlastKnownAction._byClipCacheIndex = byClipCacheIndex;\n\t\tknownActionsForClip[ byClipCacheIndex ] = lastKnownAction;\n\t\tknownActionsForClip.pop();\n\n\t\taction._byClipCacheIndex = null;\n\n\n\t\tconst actionByRoot = actionsForClip.actionByRoot,\n\t\t\trootUuid = ( action._localRoot || this._root ).uuid;\n\n\t\tdelete actionByRoot[ rootUuid ];\n\n\t\tif ( knownActionsForClip.length === 0 ) {\n\n\t\t\tdelete actionsByClip[ clipUuid ];\n\n\t\t}\n\n\t\tthis._removeInactiveBindingsForAction( action );\n\n\t}\n\n\t_removeInactiveBindingsForAction( action ) {\n\n\t\tconst bindings = action._propertyBindings;\n\n\t\tfor ( let i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tconst binding = bindings[ i ];\n\n\t\t\tif ( -- binding.referenceCount === 0 ) {\n\n\t\t\t\tthis._removeInactiveBinding( binding );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_lendAction( action ) {\n\n\t\t// [ active actions |  inactive actions  ]\n\t\t// [  active actions >| inactive actions ]\n\t\t//                 s        a\n\t\t//                  <-swap->\n\t\t//                 a        s\n\n\t\tconst actions = this._actions,\n\t\t\tprevIndex = action._cacheIndex,\n\n\t\t\tlastActiveIndex = this._nActiveActions ++,\n\n\t\t\tfirstInactiveAction = actions[ lastActiveIndex ];\n\n\t\taction._cacheIndex = lastActiveIndex;\n\t\tactions[ lastActiveIndex ] = action;\n\n\t\tfirstInactiveAction._cacheIndex = prevIndex;\n\t\tactions[ prevIndex ] = firstInactiveAction;\n\n\t}\n\n\t_takeBackAction( action ) {\n\n\t\t// [  active actions  | inactive actions ]\n\t\t// [ active actions |< inactive actions  ]\n\t\t//        a        s\n\t\t//         <-swap->\n\t\t//        s        a\n\n\t\tconst actions = this._actions,\n\t\t\tprevIndex = action._cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveActions,\n\n\t\t\tlastActiveAction = actions[ firstInactiveIndex ];\n\n\t\taction._cacheIndex = firstInactiveIndex;\n\t\tactions[ firstInactiveIndex ] = action;\n\n\t\tlastActiveAction._cacheIndex = prevIndex;\n\t\tactions[ prevIndex ] = lastActiveAction;\n\n\t}\n\n\t// Memory management for PropertyMixer objects\n\n\t_addInactiveBinding( binding, rootUuid, trackName ) {\n\n\t\tconst bindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindings = this._bindings;\n\n\t\tlet bindingByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingByName === undefined ) {\n\n\t\t\tbindingByName = {};\n\t\t\tbindingsByRoot[ rootUuid ] = bindingByName;\n\n\t\t}\n\n\t\tbindingByName[ trackName ] = binding;\n\n\t\tbinding._cacheIndex = bindings.length;\n\t\tbindings.push( binding );\n\n\t}\n\n\t_removeInactiveBinding( binding ) {\n\n\t\tconst bindings = this._bindings,\n\t\t\tpropBinding = binding.binding,\n\t\t\trootUuid = propBinding.rootNode.uuid,\n\t\t\ttrackName = propBinding.path,\n\t\t\tbindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindingByName = bindingsByRoot[ rootUuid ],\n\n\t\t\tlastInactiveBinding = bindings[ bindings.length - 1 ],\n\t\t\tcacheIndex = binding._cacheIndex;\n\n\t\tlastInactiveBinding._cacheIndex = cacheIndex;\n\t\tbindings[ cacheIndex ] = lastInactiveBinding;\n\t\tbindings.pop();\n\n\t\tdelete bindingByName[ trackName ];\n\n\t\tif ( Object.keys( bindingByName ).length === 0 ) {\n\n\t\t\tdelete bindingsByRoot[ rootUuid ];\n\n\t\t}\n\n\t}\n\n\t_lendBinding( binding ) {\n\n\t\tconst bindings = this._bindings,\n\t\t\tprevIndex = binding._cacheIndex,\n\n\t\t\tlastActiveIndex = this._nActiveBindings ++,\n\n\t\t\tfirstInactiveBinding = bindings[ lastActiveIndex ];\n\n\t\tbinding._cacheIndex = lastActiveIndex;\n\t\tbindings[ lastActiveIndex ] = binding;\n\n\t\tfirstInactiveBinding._cacheIndex = prevIndex;\n\t\tbindings[ prevIndex ] = firstInactiveBinding;\n\n\t}\n\n\t_takeBackBinding( binding ) {\n\n\t\tconst bindings = this._bindings,\n\t\t\tprevIndex = binding._cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveBindings,\n\n\t\t\tlastActiveBinding = bindings[ firstInactiveIndex ];\n\n\t\tbinding._cacheIndex = firstInactiveIndex;\n\t\tbindings[ firstInactiveIndex ] = binding;\n\n\t\tlastActiveBinding._cacheIndex = prevIndex;\n\t\tbindings[ prevIndex ] = lastActiveBinding;\n\n\t}\n\n\n\t// Memory management of Interpolants for weight and time scale\n\n\t_lendControlInterpolant() {\n\n\t\tconst interpolants = this._controlInterpolants,\n\t\t\tlastActiveIndex = this._nActiveControlInterpolants ++;\n\n\t\tlet interpolant = interpolants[ lastActiveIndex ];\n\n\t\tif ( interpolant === undefined ) {\n\n\t\t\tinterpolant = new LinearInterpolant(\n\t\t\t\tnew Float32Array( 2 ), new Float32Array( 2 ),\n\t\t\t\t1, _controlInterpolantsResultBuffer );\n\n\t\t\tinterpolant.__cacheIndex = lastActiveIndex;\n\t\t\tinterpolants[ lastActiveIndex ] = interpolant;\n\n\t\t}\n\n\t\treturn interpolant;\n\n\t}\n\n\t_takeBackControlInterpolant( interpolant ) {\n\n\t\tconst interpolants = this._controlInterpolants,\n\t\t\tprevIndex = interpolant.__cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveControlInterpolants,\n\n\t\t\tlastActiveInterpolant = interpolants[ firstInactiveIndex ];\n\n\t\tinterpolant.__cacheIndex = firstInactiveIndex;\n\t\tinterpolants[ firstInactiveIndex ] = interpolant;\n\n\t\tlastActiveInterpolant.__cacheIndex = prevIndex;\n\t\tinterpolants[ prevIndex ] = lastActiveInterpolant;\n\n\t}\n\n\t// return an action for a clip optionally using a custom root target\n\t// object (this method allocates a lot of dynamic memory in case a\n\t// previously unknown clip/root combination is specified)\n\tclipAction( clip, optionalRoot, blendMode ) {\n\n\t\tconst root = optionalRoot || this._root,\n\t\t\trootUuid = root.uuid;\n\n\t\tlet clipObject = typeof clip === 'string' ? AnimationClip.findByName( root, clip ) : clip;\n\n\t\tconst clipUuid = clipObject !== null ? clipObject.uuid : clip;\n\n\t\tconst actionsForClip = this._actionsByClip[ clipUuid ];\n\t\tlet prototypeAction = null;\n\n\t\tif ( blendMode === undefined ) {\n\n\t\t\tif ( clipObject !== null ) {\n\n\t\t\t\tblendMode = clipObject.blendMode;\n\n\t\t\t} else {\n\n\t\t\t\tblendMode = NormalAnimationBlendMode;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\tconst existingAction = actionsForClip.actionByRoot[ rootUuid ];\n\n\t\t\tif ( existingAction !== undefined && existingAction.blendMode === blendMode ) {\n\n\t\t\t\treturn existingAction;\n\n\t\t\t}\n\n\t\t\t// we know the clip, so we don't have to parse all\n\t\t\t// the bindings again but can just copy\n\t\t\tprototypeAction = actionsForClip.knownActions[ 0 ];\n\n\t\t\t// also, take the clip from the prototype action\n\t\t\tif ( clipObject === null )\n\t\t\t\tclipObject = prototypeAction._clip;\n\n\t\t}\n\n\t\t// clip must be known when specified via string\n\t\tif ( clipObject === null ) return null;\n\n\t\t// allocate all resources required to run it\n\t\tconst newAction = new AnimationAction( this, clipObject, optionalRoot, blendMode );\n\n\t\tthis._bindAction( newAction, prototypeAction );\n\n\t\t// and make the action known to the memory manager\n\t\tthis._addInactiveAction( newAction, clipUuid, rootUuid );\n\n\t\treturn newAction;\n\n\t}\n\n\t// get an existing action\n\texistingAction( clip, optionalRoot ) {\n\n\t\tconst root = optionalRoot || this._root,\n\t\t\trootUuid = root.uuid,\n\n\t\t\tclipObject = typeof clip === 'string' ?\n\t\t\t\tAnimationClip.findByName( root, clip ) : clip,\n\n\t\t\tclipUuid = clipObject ? clipObject.uuid : clip,\n\n\t\t\tactionsForClip = this._actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\treturn actionsForClip.actionByRoot[ rootUuid ] || null;\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\t// deactivates all previously scheduled actions\n\tstopAllAction() {\n\n\t\tconst actions = this._actions,\n\t\t\tnActions = this._nActiveActions;\n\n\t\tfor ( let i = nActions - 1; i >= 0; -- i ) {\n\n\t\t\tactions[ i ].stop();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// advance the time and update apply the animation\n\tupdate( deltaTime ) {\n\n\t\tdeltaTime *= this.timeScale;\n\n\t\tconst actions = this._actions,\n\t\t\tnActions = this._nActiveActions,\n\n\t\t\ttime = this.time += deltaTime,\n\t\t\ttimeDirection = Math.sign( deltaTime ),\n\n\t\t\taccuIndex = this._accuIndex ^= 1;\n\n\t\t// run active actions\n\n\t\tfor ( let i = 0; i !== nActions; ++ i ) {\n\n\t\t\tconst action = actions[ i ];\n\n\t\t\taction._update( time, deltaTime, timeDirection, accuIndex );\n\n\t\t}\n\n\t\t// update scene graph\n\n\t\tconst bindings = this._bindings,\n\t\t\tnBindings = this._nActiveBindings;\n\n\t\tfor ( let i = 0; i !== nBindings; ++ i ) {\n\n\t\t\tbindings[ i ].apply( accuIndex );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// Allows you to seek to a specific time in an animation.\n\tsetTime( timeInSeconds ) {\n\n\t\tthis.time = 0; // Zero out time attribute for AnimationMixer object;\n\t\tfor ( let i = 0; i < this._actions.length; i ++ ) {\n\n\t\t\tthis._actions[ i ].time = 0; // Zero out time attribute for all associated AnimationAction objects.\n\n\t\t}\n\n\t\treturn this.update( timeInSeconds ); // Update used to set exact time. Returns \"this\" AnimationMixer object.\n\n\t}\n\n\t// return this mixer's root target object\n\tgetRoot() {\n\n\t\treturn this._root;\n\n\t}\n\n\t// free all resources specific to a particular clip\n\tuncacheClip( clip ) {\n\n\t\tconst actions = this._actions,\n\t\t\tclipUuid = clip.uuid,\n\t\t\tactionsByClip = this._actionsByClip,\n\t\t\tactionsForClip = actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\t// note: just calling _removeInactiveAction would mess up the\n\t\t\t// iteration state and also require updating the state we can\n\t\t\t// just throw away\n\n\t\t\tconst actionsToRemove = actionsForClip.knownActions;\n\n\t\t\tfor ( let i = 0, n = actionsToRemove.length; i !== n; ++ i ) {\n\n\t\t\t\tconst action = actionsToRemove[ i ];\n\n\t\t\t\tthis._deactivateAction( action );\n\n\t\t\t\tconst cacheIndex = action._cacheIndex,\n\t\t\t\t\tlastInactiveAction = actions[ actions.length - 1 ];\n\n\t\t\t\taction._cacheIndex = null;\n\t\t\t\taction._byClipCacheIndex = null;\n\n\t\t\t\tlastInactiveAction._cacheIndex = cacheIndex;\n\t\t\t\tactions[ cacheIndex ] = lastInactiveAction;\n\t\t\t\tactions.pop();\n\n\t\t\t\tthis._removeInactiveBindingsForAction( action );\n\n\t\t\t}\n\n\t\t\tdelete actionsByClip[ clipUuid ];\n\n\t\t}\n\n\t}\n\n\t// free all resources specific to a particular root target object\n\tuncacheRoot( root ) {\n\n\t\tconst rootUuid = root.uuid,\n\t\t\tactionsByClip = this._actionsByClip;\n\n\t\tfor ( const clipUuid in actionsByClip ) {\n\n\t\t\tconst actionByRoot = actionsByClip[ clipUuid ].actionByRoot,\n\t\t\t\taction = actionByRoot[ rootUuid ];\n\n\t\t\tif ( action !== undefined ) {\n\n\t\t\t\tthis._deactivateAction( action );\n\t\t\t\tthis._removeInactiveAction( action );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst bindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindingByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingByName !== undefined ) {\n\n\t\t\tfor ( const trackName in bindingByName ) {\n\n\t\t\t\tconst binding = bindingByName[ trackName ];\n\t\t\t\tbinding.restoreOriginalState();\n\t\t\t\tthis._removeInactiveBinding( binding );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// remove a targeted clip from the cache\n\tuncacheAction( clip, optionalRoot ) {\n\n\t\tconst action = this.existingAction( clip, optionalRoot );\n\n\t\tif ( action !== null ) {\n\n\t\t\tthis._deactivateAction( action );\n\t\t\tthis._removeInactiveAction( action );\n\n\t\t}\n\n\t}\n\n}\n\nclass Uniform {\n\n\tconstructor( value ) {\n\n\t\tthis.value = value;\n\n\t}\n\n\tclone() {\n\n\t\treturn new Uniform( this.value.clone === undefined ? this.value : this.value.clone() );\n\n\t}\n\n}\n\nlet _id = 0;\n\nclass UniformsGroup extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isUniformsGroup = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _id ++ } );\n\n\t\tthis.name = '';\n\n\t\tthis.usage = StaticDrawUsage;\n\t\tthis.uniforms = [];\n\n\t}\n\n\tadd( uniform ) {\n\n\t\tthis.uniforms.push( uniform );\n\n\t\treturn this;\n\n\t}\n\n\tremove( uniform ) {\n\n\t\tconst index = this.uniforms.indexOf( uniform );\n\n\t\tif ( index !== - 1 ) this.uniforms.splice( index, 1 );\n\n\t\treturn this;\n\n\t}\n\n\tsetName( name ) {\n\n\t\tthis.name = name;\n\n\t\treturn this;\n\n\t}\n\n\tsetUsage( value ) {\n\n\t\tthis.usage = value;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\t\tthis.usage = source.usage;\n\n\t\tconst uniformsSource = source.uniforms;\n\n\t\tthis.uniforms.length = 0;\n\n\t\tfor ( let i = 0, l = uniformsSource.length; i < l; i ++ ) {\n\n\t\t\tconst uniforms = Array.isArray( uniformsSource[ i ] ) ? uniformsSource[ i ] : [ uniformsSource[ i ] ];\n\n\t\t\tfor ( let j = 0; j < uniforms.length; j ++ ) {\n\n\t\t\t\tthis.uniforms.push( uniforms[ j ].clone() );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nclass InstancedInterleavedBuffer extends InterleavedBuffer {\n\n\tconstructor( array, stride, meshPerAttribute = 1 ) {\n\n\t\tsuper( array, stride );\n\n\t\tthis.isInstancedInterleavedBuffer = true;\n\n\t\tthis.meshPerAttribute = meshPerAttribute;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.meshPerAttribute = source.meshPerAttribute;\n\n\t\treturn this;\n\n\t}\n\n\tclone( data ) {\n\n\t\tconst ib = super.clone( data );\n\n\t\tib.meshPerAttribute = this.meshPerAttribute;\n\n\t\treturn ib;\n\n\t}\n\n\ttoJSON( data ) {\n\n\t\tconst json = super.toJSON( data );\n\n\t\tjson.isInstancedInterleavedBuffer = true;\n\t\tjson.meshPerAttribute = this.meshPerAttribute;\n\n\t\treturn json;\n\n\t}\n\n}\n\nclass GLBufferAttribute {\n\n\tconstructor( buffer, type, itemSize, elementSize, count ) {\n\n\t\tthis.isGLBufferAttribute = true;\n\n\t\tthis.name = '';\n\n\t\tthis.buffer = buffer;\n\t\tthis.type = type;\n\t\tthis.itemSize = itemSize;\n\t\tthis.elementSize = elementSize;\n\t\tthis.count = count;\n\n\t\tthis.version = 0;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\tsetBuffer( buffer ) {\n\n\t\tthis.buffer = buffer;\n\n\t\treturn this;\n\n\t}\n\n\tsetType( type, elementSize ) {\n\n\t\tthis.type = type;\n\t\tthis.elementSize = elementSize;\n\n\t\treturn this;\n\n\t}\n\n\tsetItemSize( itemSize ) {\n\n\t\tthis.itemSize = itemSize;\n\n\t\treturn this;\n\n\t}\n\n\tsetCount( count ) {\n\n\t\tthis.count = count;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _matrix = /*@__PURE__*/ new Matrix4();\n\nclass Raycaster {\n\n\tconstructor( origin, direction, near = 0, far = Infinity ) {\n\n\t\tthis.ray = new Ray( origin, direction );\n\t\t// direction is assumed to be normalized (for accurate distance calculations)\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\t\tthis.camera = null;\n\t\tthis.layers = new Layers();\n\n\t\tthis.params = {\n\t\t\tMesh: {},\n\t\t\tLine: { threshold: 1 },\n\t\t\tLOD: {},\n\t\t\tPoints: { threshold: 1 },\n\t\t\tSprite: {}\n\t\t};\n\n\t}\n\n\tset( origin, direction ) {\n\n\t\t// direction is assumed to be normalized (for accurate distance calculations)\n\n\t\tthis.ray.set( origin, direction );\n\n\t}\n\n\tsetFromCamera( coords, camera ) {\n\n\t\tif ( camera.isPerspectiveCamera ) {\n\n\t\t\tthis.ray.origin.setFromMatrixPosition( camera.matrixWorld );\n\t\t\tthis.ray.direction.set( coords.x, coords.y, 0.5 ).unproject( camera ).sub( this.ray.origin ).normalize();\n\t\t\tthis.camera = camera;\n\n\t\t} else if ( camera.isOrthographicCamera ) {\n\n\t\t\tthis.ray.origin.set( coords.x, coords.y, ( camera.near + camera.far ) / ( camera.near - camera.far ) ).unproject( camera ); // set origin in plane of camera\n\t\t\tthis.ray.direction.set( 0, 0, - 1 ).transformDirection( camera.matrixWorld );\n\t\t\tthis.camera = camera;\n\n\t\t} else {\n\n\t\t\tconsole.error( 'THREE.Raycaster: Unsupported camera type: ' + camera.type );\n\n\t\t}\n\n\t}\n\n\tsetFromXRController( controller ) {\n\n\t\t_matrix.identity().extractRotation( controller.matrixWorld );\n\n\t\tthis.ray.origin.setFromMatrixPosition( controller.matrixWorld );\n\t\tthis.ray.direction.set( 0, 0, - 1 ).applyMatrix4( _matrix );\n\n\t\treturn this;\n\n\t}\n\n\tintersectObject( object, recursive = true, intersects = [] ) {\n\n\t\tintersect( object, this, intersects, recursive );\n\n\t\tintersects.sort( ascSort );\n\n\t\treturn intersects;\n\n\t}\n\n\tintersectObjects( objects, recursive = true, intersects = [] ) {\n\n\t\tfor ( let i = 0, l = objects.length; i < l; i ++ ) {\n\n\t\t\tintersect( objects[ i ], this, intersects, recursive );\n\n\t\t}\n\n\t\tintersects.sort( ascSort );\n\n\t\treturn intersects;\n\n\t}\n\n}\n\nfunction ascSort( a, b ) {\n\n\treturn a.distance - b.distance;\n\n}\n\nfunction intersect( object, raycaster, intersects, recursive ) {\n\n\tlet propagate = true;\n\n\tif ( object.layers.test( raycaster.layers ) ) {\n\n\t\tconst result = object.raycast( raycaster, intersects );\n\n\t\tif ( result === false ) propagate = false;\n\n\t}\n\n\tif ( propagate === true && recursive === true ) {\n\n\t\tconst children = object.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tintersect( children[ i ], raycaster, intersects, true );\n\n\t\t}\n\n\t}\n\n}\n\n/**\n * Ref: https://en.wikipedia.org/wiki/Spherical_coordinate_system\n *\n * phi (the polar angle) is measured from the positive y-axis. The positive y-axis is up.\n * theta (the azimuthal angle) is measured from the positive z-axis.\n */\nclass Spherical {\n\n\tconstructor( radius = 1, phi = 0, theta = 0 ) {\n\n\t\tthis.radius = radius;\n\t\tthis.phi = phi; // polar angle\n\t\tthis.theta = theta; // azimuthal angle\n\n\t\treturn this;\n\n\t}\n\n\tset( radius, phi, theta ) {\n\n\t\tthis.radius = radius;\n\t\tthis.phi = phi;\n\t\tthis.theta = theta;\n\n\t\treturn this;\n\n\t}\n\n\tcopy( other ) {\n\n\t\tthis.radius = other.radius;\n\t\tthis.phi = other.phi;\n\t\tthis.theta = other.theta;\n\n\t\treturn this;\n\n\t}\n\n\t// restrict phi to be between EPS and PI-EPS\n\tmakeSafe() {\n\n\t\tconst EPS = 0.000001;\n\t\tthis.phi = Math.max( EPS, Math.min( Math.PI - EPS, this.phi ) );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromVector3( v ) {\n\n\t\treturn this.setFromCartesianCoords( v.x, v.y, v.z );\n\n\t}\n\n\tsetFromCartesianCoords( x, y, z ) {\n\n\t\tthis.radius = Math.sqrt( x * x + y * y + z * z );\n\n\t\tif ( this.radius === 0 ) {\n\n\t\t\tthis.theta = 0;\n\t\t\tthis.phi = 0;\n\n\t\t} else {\n\n\t\t\tthis.theta = Math.atan2( x, z );\n\t\t\tthis.phi = Math.acos( clamp( y / this.radius, - 1, 1 ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\n/**\n * Ref: https://en.wikipedia.org/wiki/Cylindrical_coordinate_system\n */\n\nclass Cylindrical {\n\n\tconstructor( radius = 1, theta = 0, y = 0 ) {\n\n\t\tthis.radius = radius; // distance from the origin to a point in the x-z plane\n\t\tthis.theta = theta; // counterclockwise angle in the x-z plane measured in radians from the positive z-axis\n\t\tthis.y = y; // height above the x-z plane\n\n\t\treturn this;\n\n\t}\n\n\tset( radius, theta, y ) {\n\n\t\tthis.radius = radius;\n\t\tthis.theta = theta;\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tcopy( other ) {\n\n\t\tthis.radius = other.radius;\n\t\tthis.theta = other.theta;\n\t\tthis.y = other.y;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromVector3( v ) {\n\n\t\treturn this.setFromCartesianCoords( v.x, v.y, v.z );\n\n\t}\n\n\tsetFromCartesianCoords( x, y, z ) {\n\n\t\tthis.radius = Math.sqrt( x * x + z * z );\n\t\tthis.theta = Math.atan2( x, z );\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _vector$4 = /*@__PURE__*/ new Vector2();\n\nclass Box2 {\n\n\tconstructor( min = new Vector2( + Infinity, + Infinity ), max = new Vector2( - Infinity, - Infinity ) ) {\n\n\t\tthis.isBox2 = true;\n\n\t\tthis.min = min;\n\t\tthis.max = max;\n\n\t}\n\n\tset( min, max ) {\n\n\t\tthis.min.copy( min );\n\t\tthis.max.copy( max );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( let i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tthis.expandByPoint( points[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCenterAndSize( center, size ) {\n\n\t\tconst halfSize = _vector$4.copy( size ).multiplyScalar( 0.5 );\n\t\tthis.min.copy( center ).sub( halfSize );\n\t\tthis.max.copy( center ).add( halfSize );\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( box ) {\n\n\t\tthis.min.copy( box.min );\n\t\tthis.max.copy( box.max );\n\n\t\treturn this;\n\n\t}\n\n\tmakeEmpty() {\n\n\t\tthis.min.x = this.min.y = + Infinity;\n\t\tthis.max.x = this.max.y = - Infinity;\n\n\t\treturn this;\n\n\t}\n\n\tisEmpty() {\n\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y );\n\n\t}\n\n\tgetCenter( target ) {\n\n\t\treturn this.isEmpty() ? target.set( 0, 0 ) : target.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\n\t}\n\n\tgetSize( target ) {\n\n\t\treturn this.isEmpty() ? target.set( 0, 0 ) : target.subVectors( this.max, this.min );\n\n\t}\n\n\texpandByPoint( point ) {\n\n\t\tthis.min.min( point );\n\t\tthis.max.max( point );\n\n\t\treturn this;\n\n\t}\n\n\texpandByVector( vector ) {\n\n\t\tthis.min.sub( vector );\n\t\tthis.max.add( vector );\n\n\t\treturn this;\n\n\t}\n\n\texpandByScalar( scalar ) {\n\n\t\tthis.min.addScalar( - scalar );\n\t\tthis.max.addScalar( scalar );\n\n\t\treturn this;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn point.x < this.min.x || point.x > this.max.x ||\n\t\t\tpoint.y < this.min.y || point.y > this.max.y ? false : true;\n\n\t}\n\n\tcontainsBox( box ) {\n\n\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x &&\n\t\t\tthis.min.y <= box.min.y && box.max.y <= this.max.y;\n\n\t}\n\n\tgetParameter( point, target ) {\n\n\t\t// This can potentially have a divide by zero if the box\n\t\t// has a size dimension of 0.\n\n\t\treturn target.set(\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y )\n\t\t);\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\t// using 4 splitting planes to rule out intersections\n\n\t\treturn box.max.x < this.min.x || box.min.x > this.max.x ||\n\t\t\tbox.max.y < this.min.y || box.min.y > this.max.y ? false : true;\n\n\t}\n\n\tclampPoint( point, target ) {\n\n\t\treturn target.copy( point ).clamp( this.min, this.max );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn this.clampPoint( point, _vector$4 ).distanceTo( point );\n\n\t}\n\n\tintersect( box ) {\n\n\t\tthis.min.max( box.min );\n\t\tthis.max.min( box.max );\n\n\t\tif ( this.isEmpty() ) this.makeEmpty();\n\n\t\treturn this;\n\n\t}\n\n\tunion( box ) {\n\n\t\tthis.min.min( box.min );\n\t\tthis.max.max( box.max );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.min.add( offset );\n\t\tthis.max.add( offset );\n\n\t\treturn this;\n\n\t}\n\n\tequals( box ) {\n\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\n\n\t}\n\n}\n\nconst _startP = /*@__PURE__*/ new Vector3();\nconst _startEnd = /*@__PURE__*/ new Vector3();\n\nclass Line3 {\n\n\tconstructor( start = new Vector3(), end = new Vector3() ) {\n\n\t\tthis.start = start;\n\t\tthis.end = end;\n\n\t}\n\n\tset( start, end ) {\n\n\t\tthis.start.copy( start );\n\t\tthis.end.copy( end );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( line ) {\n\n\t\tthis.start.copy( line.start );\n\t\tthis.end.copy( line.end );\n\n\t\treturn this;\n\n\t}\n\n\tgetCenter( target ) {\n\n\t\treturn target.addVectors( this.start, this.end ).multiplyScalar( 0.5 );\n\n\t}\n\n\tdelta( target ) {\n\n\t\treturn target.subVectors( this.end, this.start );\n\n\t}\n\n\tdistanceSq() {\n\n\t\treturn this.start.distanceToSquared( this.end );\n\n\t}\n\n\tdistance() {\n\n\t\treturn this.start.distanceTo( this.end );\n\n\t}\n\n\tat( t, target ) {\n\n\t\treturn this.delta( target ).multiplyScalar( t ).add( this.start );\n\n\t}\n\n\tclosestPointToPointParameter( point, clampToLine ) {\n\n\t\t_startP.subVectors( point, this.start );\n\t\t_startEnd.subVectors( this.end, this.start );\n\n\t\tconst startEnd2 = _startEnd.dot( _startEnd );\n\t\tconst startEnd_startP = _startEnd.dot( _startP );\n\n\t\tlet t = startEnd_startP / startEnd2;\n\n\t\tif ( clampToLine ) {\n\n\t\t\tt = clamp( t, 0, 1 );\n\n\t\t}\n\n\t\treturn t;\n\n\t}\n\n\tclosestPointToPoint( point, clampToLine, target ) {\n\n\t\tconst t = this.closestPointToPointParameter( point, clampToLine );\n\n\t\treturn this.delta( target ).multiplyScalar( t ).add( this.start );\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tthis.start.applyMatrix4( matrix );\n\t\tthis.end.applyMatrix4( matrix );\n\n\t\treturn this;\n\n\t}\n\n\tequals( line ) {\n\n\t\treturn line.start.equals( this.start ) && line.end.equals( this.end );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _vector$3 = /*@__PURE__*/ new Vector3();\n\nclass SpotLightHelper extends Object3D {\n\n\tconstructor( light, color ) {\n\n\t\tsuper();\n\n\t\tthis.light = light;\n\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.color = color;\n\n\t\tthis.type = 'SpotLightHelper';\n\n\t\tconst geometry = new BufferGeometry();\n\n\t\tconst positions = [\n\t\t\t0, 0, 0, \t0, 0, 1,\n\t\t\t0, 0, 0, \t1, 0, 1,\n\t\t\t0, 0, 0,\t- 1, 0, 1,\n\t\t\t0, 0, 0, \t0, 1, 1,\n\t\t\t0, 0, 0, \t0, - 1, 1\n\t\t];\n\n\t\tfor ( let i = 0, j = 1, l = 32; i < l; i ++, j ++ ) {\n\n\t\t\tconst p1 = ( i / l ) * Math.PI * 2;\n\t\t\tconst p2 = ( j / l ) * Math.PI * 2;\n\n\t\t\tpositions.push(\n\t\t\t\tMath.cos( p1 ), Math.sin( p1 ), 1,\n\t\t\t\tMath.cos( p2 ), Math.sin( p2 ), 1\n\t\t\t);\n\n\t\t}\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { fog: false, toneMapped: false } );\n\n\t\tthis.cone = new LineSegments( geometry, material );\n\t\tthis.add( this.cone );\n\n\t\tthis.update();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.cone.geometry.dispose();\n\t\tthis.cone.material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\tthis.light.updateWorldMatrix( true, false );\n\t\tthis.light.target.updateWorldMatrix( true, false );\n\n\t\t// update the local matrix based on the parent and light target transforms\n\t\tif ( this.parent ) {\n\n\t\t\tthis.parent.updateWorldMatrix( true );\n\n\t\t\tthis.matrix\n\t\t\t\t.copy( this.parent.matrixWorld )\n\t\t\t\t.invert()\n\t\t\t\t.multiply( this.light.matrixWorld );\n\n\t\t} else {\n\n\t\t\tthis.matrix.copy( this.light.matrixWorld );\n\n\t\t}\n\n\t\tthis.matrixWorld.copy( this.light.matrixWorld );\n\n\t\tconst coneLength = this.light.distance ? this.light.distance : 1000;\n\t\tconst coneWidth = coneLength * Math.tan( this.light.angle );\n\n\t\tthis.cone.scale.set( coneWidth, coneWidth, coneLength );\n\n\t\t_vector$3.setFromMatrixPosition( this.light.target.matrixWorld );\n\n\t\tthis.cone.lookAt( _vector$3 );\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.cone.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.cone.material.color.copy( this.light.color );\n\n\t\t}\n\n\t}\n\n}\n\nconst _vector$2 = /*@__PURE__*/ new Vector3();\nconst _boneMatrix = /*@__PURE__*/ new Matrix4();\nconst _matrixWorldInv = /*@__PURE__*/ new Matrix4();\n\n\nclass SkeletonHelper extends LineSegments {\n\n\tconstructor( object ) {\n\n\t\tconst bones = getBoneList( object );\n\n\t\tconst geometry = new BufferGeometry();\n\n\t\tconst vertices = [];\n\t\tconst colors = [];\n\n\t\tconst color1 = new Color( 0, 0, 1 );\n\t\tconst color2 = new Color( 0, 1, 0 );\n\n\t\tfor ( let i = 0; i < bones.length; i ++ ) {\n\n\t\t\tconst bone = bones[ i ];\n\n\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\tvertices.push( 0, 0, 0 );\n\t\t\t\tvertices.push( 0, 0, 0 );\n\t\t\t\tcolors.push( color1.r, color1.g, color1.b );\n\t\t\t\tcolors.push( color2.r, color2.g, color2.b );\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, depthTest: false, depthWrite: false, toneMapped: false, transparent: true } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isSkeletonHelper = true;\n\n\t\tthis.type = 'SkeletonHelper';\n\n\t\tthis.root = object;\n\t\tthis.bones = bones;\n\n\t\tthis.matrix = object.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tconst bones = this.bones;\n\n\t\tconst geometry = this.geometry;\n\t\tconst position = geometry.getAttribute( 'position' );\n\n\t\t_matrixWorldInv.copy( this.root.matrixWorld ).invert();\n\n\t\tfor ( let i = 0, j = 0; i < bones.length; i ++ ) {\n\n\t\t\tconst bone = bones[ i ];\n\n\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\t_boneMatrix.multiplyMatrices( _matrixWorldInv, bone.matrixWorld );\n\t\t\t\t_vector$2.setFromMatrixPosition( _boneMatrix );\n\t\t\t\tposition.setXYZ( j, _vector$2.x, _vector$2.y, _vector$2.z );\n\n\t\t\t\t_boneMatrix.multiplyMatrices( _matrixWorldInv, bone.parent.matrixWorld );\n\t\t\t\t_vector$2.setFromMatrixPosition( _boneMatrix );\n\t\t\t\tposition.setXYZ( j + 1, _vector$2.x, _vector$2.y, _vector$2.z );\n\n\t\t\t\tj += 2;\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeometry.getAttribute( 'position' ).needsUpdate = true;\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\n\nfunction getBoneList( object ) {\n\n\tconst boneList = [];\n\n\tif ( object.isBone === true ) {\n\n\t\tboneList.push( object );\n\n\t}\n\n\tfor ( let i = 0; i < object.children.length; i ++ ) {\n\n\t\tboneList.push.apply( boneList, getBoneList( object.children[ i ] ) );\n\n\t}\n\n\treturn boneList;\n\n}\n\nclass PointLightHelper extends Mesh {\n\n\tconstructor( light, sphereSize, color ) {\n\n\t\tconst geometry = new SphereGeometry( sphereSize, 4, 2 );\n\t\tconst material = new MeshBasicMaterial( { wireframe: true, fog: false, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.light = light;\n\n\t\tthis.color = color;\n\n\t\tthis.type = 'PointLightHelper';\n\n\t\tthis.matrix = this.light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.update();\n\n\n\t\t/*\n\t// TODO: delete this comment?\n\tconst distanceGeometry = new THREE.IcosahedronGeometry( 1, 2 );\n\tconst distanceMaterial = new THREE.MeshBasicMaterial( { color: hexColor, fog: false, wireframe: true, opacity: 0.1, transparent: true } );\n\n\tthis.lightSphere = new THREE.Mesh( bulbGeometry, bulbMaterial );\n\tthis.lightDistance = new THREE.Mesh( distanceGeometry, distanceMaterial );\n\n\tconst d = light.distance;\n\n\tif ( d === 0.0 ) {\n\n\t\tthis.lightDistance.visible = false;\n\n\t} else {\n\n\t\tthis.lightDistance.scale.set( d, d, d );\n\n\t}\n\n\tthis.add( this.lightDistance );\n\t*/\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\tthis.light.updateWorldMatrix( true, false );\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.material.color.copy( this.light.color );\n\n\t\t}\n\n\t\t/*\n\t\tconst d = this.light.distance;\n\n\t\tif ( d === 0.0 ) {\n\n\t\t\tthis.lightDistance.visible = false;\n\n\t\t} else {\n\n\t\t\tthis.lightDistance.visible = true;\n\t\t\tthis.lightDistance.scale.set( d, d, d );\n\n\t\t}\n\t\t*/\n\n\t}\n\n}\n\nconst _vector$1 = /*@__PURE__*/ new Vector3();\nconst _color1 = /*@__PURE__*/ new Color();\nconst _color2 = /*@__PURE__*/ new Color();\n\nclass HemisphereLightHelper extends Object3D {\n\n\tconstructor( light, size, color ) {\n\n\t\tsuper();\n\n\t\tthis.light = light;\n\n\t\tthis.matrix = light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.color = color;\n\n\t\tthis.type = 'HemisphereLightHelper';\n\n\t\tconst geometry = new OctahedronGeometry( size );\n\t\tgeometry.rotateY( Math.PI * 0.5 );\n\n\t\tthis.material = new MeshBasicMaterial( { wireframe: true, fog: false, toneMapped: false } );\n\t\tif ( this.color === undefined ) this.material.vertexColors = true;\n\n\t\tconst position = geometry.getAttribute( 'position' );\n\t\tconst colors = new Float32Array( position.count * 3 );\n\n\t\tgeometry.setAttribute( 'color', new BufferAttribute( colors, 3 ) );\n\n\t\tthis.add( new Mesh( geometry, this.material ) );\n\n\t\tthis.update();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.children[ 0 ].geometry.dispose();\n\t\tthis.children[ 0 ].material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\tconst mesh = this.children[ 0 ];\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tconst colors = mesh.geometry.getAttribute( 'color' );\n\n\t\t\t_color1.copy( this.light.color );\n\t\t\t_color2.copy( this.light.groundColor );\n\n\t\t\tfor ( let i = 0, l = colors.count; i < l; i ++ ) {\n\n\t\t\t\tconst color = ( i < ( l / 2 ) ) ? _color1 : _color2;\n\n\t\t\t\tcolors.setXYZ( i, color.r, color.g, color.b );\n\n\t\t\t}\n\n\t\t\tcolors.needsUpdate = true;\n\n\t\t}\n\n\t\tthis.light.updateWorldMatrix( true, false );\n\n\t\tmesh.lookAt( _vector$1.setFromMatrixPosition( this.light.matrixWorld ).negate() );\n\n\t}\n\n}\n\nclass GridHelper extends LineSegments {\n\n\tconstructor( size = 10, divisions = 10, color1 = 0x444444, color2 = 0x888888 ) {\n\n\t\tcolor1 = new Color( color1 );\n\t\tcolor2 = new Color( color2 );\n\n\t\tconst center = divisions / 2;\n\t\tconst step = size / divisions;\n\t\tconst halfSize = size / 2;\n\n\t\tconst vertices = [], colors = [];\n\n\t\tfor ( let i = 0, j = 0, k = - halfSize; i <= divisions; i ++, k += step ) {\n\n\t\t\tvertices.push( - halfSize, 0, k, halfSize, 0, k );\n\t\t\tvertices.push( k, 0, - halfSize, k, 0, halfSize );\n\n\t\t\tconst color = i === center ? color1 : color2;\n\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\n\t\t}\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'GridHelper';\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nclass PolarGridHelper extends LineSegments {\n\n\tconstructor( radius = 10, sectors = 16, rings = 8, divisions = 64, color1 = 0x444444, color2 = 0x888888 ) {\n\n\t\tcolor1 = new Color( color1 );\n\t\tcolor2 = new Color( color2 );\n\n\t\tconst vertices = [];\n\t\tconst colors = [];\n\n\t\t// create the sectors\n\n\t\tif ( sectors > 1 ) {\n\n\t\t\tfor ( let i = 0; i < sectors; i ++ ) {\n\n\t\t\t\tconst v = ( i / sectors ) * ( Math.PI * 2 );\n\n\t\t\t\tconst x = Math.sin( v ) * radius;\n\t\t\t\tconst z = Math.cos( v ) * radius;\n\n\t\t\t\tvertices.push( 0, 0, 0 );\n\t\t\t\tvertices.push( x, 0, z );\n\n\t\t\t\tconst color = ( i & 1 ) ? color1 : color2;\n\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// create the rings\n\n\t\tfor ( let i = 0; i < rings; i ++ ) {\n\n\t\t\tconst color = ( i & 1 ) ? color1 : color2;\n\n\t\t\tconst r = radius - ( radius / rings * i );\n\n\t\t\tfor ( let j = 0; j < divisions; j ++ ) {\n\n\t\t\t\t// first vertex\n\n\t\t\t\tlet v = ( j / divisions ) * ( Math.PI * 2 );\n\n\t\t\t\tlet x = Math.sin( v ) * r;\n\t\t\t\tlet z = Math.cos( v ) * r;\n\n\t\t\t\tvertices.push( x, 0, z );\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\t\t// second vertex\n\n\t\t\t\tv = ( ( j + 1 ) / divisions ) * ( Math.PI * 2 );\n\n\t\t\t\tx = Math.sin( v ) * r;\n\t\t\t\tz = Math.cos( v ) * r;\n\n\t\t\t\tvertices.push( x, 0, z );\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'PolarGridHelper';\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nconst _v1 = /*@__PURE__*/ new Vector3();\nconst _v2 = /*@__PURE__*/ new Vector3();\nconst _v3 = /*@__PURE__*/ new Vector3();\n\nclass DirectionalLightHelper extends Object3D {\n\n\tconstructor( light, size, color ) {\n\n\t\tsuper();\n\n\t\tthis.light = light;\n\n\t\tthis.matrix = light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.color = color;\n\n\t\tthis.type = 'DirectionalLightHelper';\n\n\t\tif ( size === undefined ) size = 1;\n\n\t\tlet geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( [\n\t\t\t- size, size, 0,\n\t\t\tsize, size, 0,\n\t\t\tsize, - size, 0,\n\t\t\t- size, - size, 0,\n\t\t\t- size, size, 0\n\t\t], 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { fog: false, toneMapped: false } );\n\n\t\tthis.lightPlane = new Line( geometry, material );\n\t\tthis.add( this.lightPlane );\n\n\t\tgeometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 0, 1 ], 3 ) );\n\n\t\tthis.targetLine = new Line( geometry, material );\n\t\tthis.add( this.targetLine );\n\n\t\tthis.update();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.lightPlane.geometry.dispose();\n\t\tthis.lightPlane.material.dispose();\n\t\tthis.targetLine.geometry.dispose();\n\t\tthis.targetLine.material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\tthis.light.updateWorldMatrix( true, false );\n\t\tthis.light.target.updateWorldMatrix( true, false );\n\n\t\t_v1.setFromMatrixPosition( this.light.matrixWorld );\n\t\t_v2.setFromMatrixPosition( this.light.target.matrixWorld );\n\t\t_v3.subVectors( _v2, _v1 );\n\n\t\tthis.lightPlane.lookAt( _v2 );\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.lightPlane.material.color.set( this.color );\n\t\t\tthis.targetLine.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.lightPlane.material.color.copy( this.light.color );\n\t\t\tthis.targetLine.material.color.copy( this.light.color );\n\n\t\t}\n\n\t\tthis.targetLine.lookAt( _v2 );\n\t\tthis.targetLine.scale.z = _v3.length();\n\n\t}\n\n}\n\nconst _vector = /*@__PURE__*/ new Vector3();\nconst _camera = /*@__PURE__*/ new Camera();\n\n/**\n *\t- shows frustum, line of sight and up of the camera\n *\t- suitable for fast updates\n * \t- based on frustum visualization in lightgl.js shadowmap example\n *\t\thttps://github.com/evanw/lightgl.js/blob/master/tests/shadowmap.html\n */\n\nclass CameraHelper extends LineSegments {\n\n\tconstructor( camera ) {\n\n\t\tconst geometry = new BufferGeometry();\n\t\tconst material = new LineBasicMaterial( { color: 0xffffff, vertexColors: true, toneMapped: false } );\n\n\t\tconst vertices = [];\n\t\tconst colors = [];\n\n\t\tconst pointMap = {};\n\n\t\t// near\n\n\t\taddLine( 'n1', 'n2' );\n\t\taddLine( 'n2', 'n4' );\n\t\taddLine( 'n4', 'n3' );\n\t\taddLine( 'n3', 'n1' );\n\n\t\t// far\n\n\t\taddLine( 'f1', 'f2' );\n\t\taddLine( 'f2', 'f4' );\n\t\taddLine( 'f4', 'f3' );\n\t\taddLine( 'f3', 'f1' );\n\n\t\t// sides\n\n\t\taddLine( 'n1', 'f1' );\n\t\taddLine( 'n2', 'f2' );\n\t\taddLine( 'n3', 'f3' );\n\t\taddLine( 'n4', 'f4' );\n\n\t\t// cone\n\n\t\taddLine( 'p', 'n1' );\n\t\taddLine( 'p', 'n2' );\n\t\taddLine( 'p', 'n3' );\n\t\taddLine( 'p', 'n4' );\n\n\t\t// up\n\n\t\taddLine( 'u1', 'u2' );\n\t\taddLine( 'u2', 'u3' );\n\t\taddLine( 'u3', 'u1' );\n\n\t\t// target\n\n\t\taddLine( 'c', 't' );\n\t\taddLine( 'p', 'c' );\n\n\t\t// cross\n\n\t\taddLine( 'cn1', 'cn2' );\n\t\taddLine( 'cn3', 'cn4' );\n\n\t\taddLine( 'cf1', 'cf2' );\n\t\taddLine( 'cf3', 'cf4' );\n\n\t\tfunction addLine( a, b ) {\n\n\t\t\taddPoint( a );\n\t\t\taddPoint( b );\n\n\t\t}\n\n\t\tfunction addPoint( id ) {\n\n\t\t\tvertices.push( 0, 0, 0 );\n\t\t\tcolors.push( 0, 0, 0 );\n\n\t\t\tif ( pointMap[ id ] === undefined ) {\n\n\t\t\t\tpointMap[ id ] = [];\n\n\t\t\t}\n\n\t\t\tpointMap[ id ].push( ( vertices.length / 3 ) - 1 );\n\n\t\t}\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'CameraHelper';\n\n\t\tthis.camera = camera;\n\t\tif ( this.camera.updateProjectionMatrix ) this.camera.updateProjectionMatrix();\n\n\t\tthis.matrix = camera.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.pointMap = pointMap;\n\n\t\tthis.update();\n\n\t\t// colors\n\n\t\tconst colorFrustum = new Color( 0xffaa00 );\n\t\tconst colorCone = new Color( 0xff0000 );\n\t\tconst colorUp = new Color( 0x00aaff );\n\t\tconst colorTarget = new Color( 0xffffff );\n\t\tconst colorCross = new Color( 0x333333 );\n\n\t\tthis.setColors( colorFrustum, colorCone, colorUp, colorTarget, colorCross );\n\n\t}\n\n\tsetColors( frustum, cone, up, target, cross ) {\n\n\t\tconst geometry = this.geometry;\n\n\t\tconst colorAttribute = geometry.getAttribute( 'color' );\n\n\t\t// near\n\n\t\tcolorAttribute.setXYZ( 0, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 1, frustum.r, frustum.g, frustum.b ); // n1, n2\n\t\tcolorAttribute.setXYZ( 2, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 3, frustum.r, frustum.g, frustum.b ); // n2, n4\n\t\tcolorAttribute.setXYZ( 4, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 5, frustum.r, frustum.g, frustum.b ); // n4, n3\n\t\tcolorAttribute.setXYZ( 6, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 7, frustum.r, frustum.g, frustum.b ); // n3, n1\n\n\t\t// far\n\n\t\tcolorAttribute.setXYZ( 8, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 9, frustum.r, frustum.g, frustum.b ); // f1, f2\n\t\tcolorAttribute.setXYZ( 10, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 11, frustum.r, frustum.g, frustum.b ); // f2, f4\n\t\tcolorAttribute.setXYZ( 12, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 13, frustum.r, frustum.g, frustum.b ); // f4, f3\n\t\tcolorAttribute.setXYZ( 14, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 15, frustum.r, frustum.g, frustum.b ); // f3, f1\n\n\t\t// sides\n\n\t\tcolorAttribute.setXYZ( 16, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 17, frustum.r, frustum.g, frustum.b ); // n1, f1\n\t\tcolorAttribute.setXYZ( 18, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 19, frustum.r, frustum.g, frustum.b ); // n2, f2\n\t\tcolorAttribute.setXYZ( 20, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 21, frustum.r, frustum.g, frustum.b ); // n3, f3\n\t\tcolorAttribute.setXYZ( 22, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 23, frustum.r, frustum.g, frustum.b ); // n4, f4\n\n\t\t// cone\n\n\t\tcolorAttribute.setXYZ( 24, cone.r, cone.g, cone.b ); colorAttribute.setXYZ( 25, cone.r, cone.g, cone.b ); // p, n1\n\t\tcolorAttribute.setXYZ( 26, cone.r, cone.g, cone.b ); colorAttribute.setXYZ( 27, cone.r, cone.g, cone.b ); // p, n2\n\t\tcolorAttribute.setXYZ( 28, cone.r, cone.g, cone.b ); colorAttribute.setXYZ( 29, cone.r, cone.g, cone.b ); // p, n3\n\t\tcolorAttribute.setXYZ( 30, cone.r, cone.g, cone.b ); colorAttribute.setXYZ( 31, cone.r, cone.g, cone.b ); // p, n4\n\n\t\t// up\n\n\t\tcolorAttribute.setXYZ( 32, up.r, up.g, up.b ); colorAttribute.setXYZ( 33, up.r, up.g, up.b ); // u1, u2\n\t\tcolorAttribute.setXYZ( 34, up.r, up.g, up.b ); colorAttribute.setXYZ( 35, up.r, up.g, up.b ); // u2, u3\n\t\tcolorAttribute.setXYZ( 36, up.r, up.g, up.b ); colorAttribute.setXYZ( 37, up.r, up.g, up.b ); // u3, u1\n\n\t\t// target\n\n\t\tcolorAttribute.setXYZ( 38, target.r, target.g, target.b ); colorAttribute.setXYZ( 39, target.r, target.g, target.b ); // c, t\n\t\tcolorAttribute.setXYZ( 40, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 41, cross.r, cross.g, cross.b ); // p, c\n\n\t\t// cross\n\n\t\tcolorAttribute.setXYZ( 42, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 43, cross.r, cross.g, cross.b ); // cn1, cn2\n\t\tcolorAttribute.setXYZ( 44, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 45, cross.r, cross.g, cross.b ); // cn3, cn4\n\n\t\tcolorAttribute.setXYZ( 46, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 47, cross.r, cross.g, cross.b ); // cf1, cf2\n\t\tcolorAttribute.setXYZ( 48, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 49, cross.r, cross.g, cross.b ); // cf3, cf4\n\n\t\tcolorAttribute.needsUpdate = true;\n\n\t}\n\n\tupdate() {\n\n\t\tconst geometry = this.geometry;\n\t\tconst pointMap = this.pointMap;\n\n\t\tconst w = 1, h = 1;\n\n\t\t// we need just camera projection matrix inverse\n\t\t// world matrix must be identity\n\n\t\t_camera.projectionMatrixInverse.copy( this.camera.projectionMatrixInverse );\n\n\t\t// center / target\n\n\t\tsetPoint( 'c', pointMap, geometry, _camera, 0, 0, - 1 );\n\t\tsetPoint( 't', pointMap, geometry, _camera, 0, 0, 1 );\n\n\t\t// near\n\n\t\tsetPoint( 'n1', pointMap, geometry, _camera, - w, - h, - 1 );\n\t\tsetPoint( 'n2', pointMap, geometry, _camera, w, - h, - 1 );\n\t\tsetPoint( 'n3', pointMap, geometry, _camera, - w, h, - 1 );\n\t\tsetPoint( 'n4', pointMap, geometry, _camera, w, h, - 1 );\n\n\t\t// far\n\n\t\tsetPoint( 'f1', pointMap, geometry, _camera, - w, - h, 1 );\n\t\tsetPoint( 'f2', pointMap, geometry, _camera, w, - h, 1 );\n\t\tsetPoint( 'f3', pointMap, geometry, _camera, - w, h, 1 );\n\t\tsetPoint( 'f4', pointMap, geometry, _camera, w, h, 1 );\n\n\t\t// up\n\n\t\tsetPoint( 'u1', pointMap, geometry, _camera, w * 0.7, h * 1.1, - 1 );\n\t\tsetPoint( 'u2', pointMap, geometry, _camera, - w * 0.7, h * 1.1, - 1 );\n\t\tsetPoint( 'u3', pointMap, geometry, _camera, 0, h * 2, - 1 );\n\n\t\t// cross\n\n\t\tsetPoint( 'cf1', pointMap, geometry, _camera, - w, 0, 1 );\n\t\tsetPoint( 'cf2', pointMap, geometry, _camera, w, 0, 1 );\n\t\tsetPoint( 'cf3', pointMap, geometry, _camera, 0, - h, 1 );\n\t\tsetPoint( 'cf4', pointMap, geometry, _camera, 0, h, 1 );\n\n\t\tsetPoint( 'cn1', pointMap, geometry, _camera, - w, 0, - 1 );\n\t\tsetPoint( 'cn2', pointMap, geometry, _camera, w, 0, - 1 );\n\t\tsetPoint( 'cn3', pointMap, geometry, _camera, 0, - h, - 1 );\n\t\tsetPoint( 'cn4', pointMap, geometry, _camera, 0, h, - 1 );\n\n\t\tgeometry.getAttribute( 'position' ).needsUpdate = true;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\n\nfunction setPoint( point, pointMap, geometry, camera, x, y, z ) {\n\n\t_vector.set( x, y, z ).unproject( camera );\n\n\tconst points = pointMap[ point ];\n\n\tif ( points !== undefined ) {\n\n\t\tconst position = geometry.getAttribute( 'position' );\n\n\t\tfor ( let i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\tposition.setXYZ( points[ i ], _vector.x, _vector.y, _vector.z );\n\n\t\t}\n\n\t}\n\n}\n\nconst _box = /*@__PURE__*/ new Box3();\n\nclass BoxHelper extends LineSegments {\n\n\tconstructor( object, color = 0xffff00 ) {\n\n\t\tconst indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\n\t\tconst positions = new Float32Array( 8 * 3 );\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setIndex( new BufferAttribute( indices, 1 ) );\n\t\tgeometry.setAttribute( 'position', new BufferAttribute( positions, 3 ) );\n\n\t\tsuper( geometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\n\t\tthis.object = object;\n\t\tthis.type = 'BoxHelper';\n\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.update();\n\n\t}\n\n\tupdate( object ) {\n\n\t\tif ( object !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.BoxHelper: .update() has no longer arguments.' );\n\n\t\t}\n\n\t\tif ( this.object !== undefined ) {\n\n\t\t\t_box.setFromObject( this.object );\n\n\t\t}\n\n\t\tif ( _box.isEmpty() ) return;\n\n\t\tconst min = _box.min;\n\t\tconst max = _box.max;\n\n\t\t/*\n\t\t\t5____4\n\t\t1/___0/|\n\t\t| 6__|_7\n\t\t2/___3/\n\n\t\t0: max.x, max.y, max.z\n\t\t1: min.x, max.y, max.z\n\t\t2: min.x, min.y, max.z\n\t\t3: max.x, min.y, max.z\n\t\t4: max.x, max.y, min.z\n\t\t5: min.x, max.y, min.z\n\t\t6: min.x, min.y, min.z\n\t\t7: max.x, min.y, min.z\n\t\t*/\n\n\t\tconst position = this.geometry.attributes.position;\n\t\tconst array = position.array;\n\n\t\tarray[ 0 ] = max.x; array[ 1 ] = max.y; array[ 2 ] = max.z;\n\t\tarray[ 3 ] = min.x; array[ 4 ] = max.y; array[ 5 ] = max.z;\n\t\tarray[ 6 ] = min.x; array[ 7 ] = min.y; array[ 8 ] = max.z;\n\t\tarray[ 9 ] = max.x; array[ 10 ] = min.y; array[ 11 ] = max.z;\n\t\tarray[ 12 ] = max.x; array[ 13 ] = max.y; array[ 14 ] = min.z;\n\t\tarray[ 15 ] = min.x; array[ 16 ] = max.y; array[ 17 ] = min.z;\n\t\tarray[ 18 ] = min.x; array[ 19 ] = min.y; array[ 20 ] = min.z;\n\t\tarray[ 21 ] = max.x; array[ 22 ] = min.y; array[ 23 ] = min.z;\n\n\t\tposition.needsUpdate = true;\n\n\t\tthis.geometry.computeBoundingSphere();\n\n\t}\n\n\tsetFromObject( object ) {\n\n\t\tthis.object = object;\n\t\tthis.update();\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.object = source.object;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nclass Box3Helper extends LineSegments {\n\n\tconstructor( box, color = 0xffff00 ) {\n\n\t\tconst indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\n\n\t\tconst positions = [ 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, - 1, 1, 1, 1, - 1, - 1, 1, - 1, - 1, - 1, - 1, 1, - 1, - 1 ];\n\n\t\tconst geometry = new BufferGeometry();\n\n\t\tgeometry.setIndex( new BufferAttribute( indices, 1 ) );\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\n\t\tsuper( geometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\n\t\tthis.box = box;\n\n\t\tthis.type = 'Box3Helper';\n\n\t\tthis.geometry.computeBoundingSphere();\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tconst box = this.box;\n\n\t\tif ( box.isEmpty() ) return;\n\n\t\tbox.getCenter( this.position );\n\n\t\tbox.getSize( this.scale );\n\n\t\tthis.scale.multiplyScalar( 0.5 );\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nclass PlaneHelper extends Line {\n\n\tconstructor( plane, size = 1, hex = 0xffff00 ) {\n\n\t\tconst color = hex;\n\n\t\tconst positions = [ 1, - 1, 0, - 1, 1, 0, - 1, - 1, 0, 1, 1, 0, - 1, 1, 0, - 1, - 1, 0, 1, - 1, 0, 1, 1, 0 ];\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\t\tgeometry.computeBoundingSphere();\n\n\t\tsuper( geometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\n\t\tthis.type = 'PlaneHelper';\n\n\t\tthis.plane = plane;\n\n\t\tthis.size = size;\n\n\t\tconst positions2 = [ 1, 1, 0, - 1, 1, 0, - 1, - 1, 0, 1, 1, 0, - 1, - 1, 0, 1, - 1, 0 ];\n\n\t\tconst geometry2 = new BufferGeometry();\n\t\tgeometry2.setAttribute( 'position', new Float32BufferAttribute( positions2, 3 ) );\n\t\tgeometry2.computeBoundingSphere();\n\n\t\tthis.add( new Mesh( geometry2, new MeshBasicMaterial( { color: color, opacity: 0.2, transparent: true, depthWrite: false, toneMapped: false } ) ) );\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tthis.position.set( 0, 0, 0 );\n\n\t\tthis.scale.set( 0.5 * this.size, 0.5 * this.size, 1 );\n\n\t\tthis.lookAt( this.plane.normal );\n\n\t\tthis.translateZ( - this.plane.constant );\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\t\tthis.children[ 0 ].geometry.dispose();\n\t\tthis.children[ 0 ].material.dispose();\n\n\t}\n\n}\n\nconst _axis = /*@__PURE__*/ new Vector3();\nlet _lineGeometry, _coneGeometry;\n\nclass ArrowHelper extends Object3D {\n\n\t// dir is assumed to be normalized\n\n\tconstructor( dir = new Vector3( 0, 0, 1 ), origin = new Vector3( 0, 0, 0 ), length = 1, color = 0xffff00, headLength = length * 0.2, headWidth = headLength * 0.2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'ArrowHelper';\n\n\t\tif ( _lineGeometry === undefined ) {\n\n\t\t\t_lineGeometry = new BufferGeometry();\n\t\t\t_lineGeometry.setAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 1, 0 ], 3 ) );\n\n\t\t\t_coneGeometry = new CylinderGeometry( 0, 0.5, 1, 5, 1 );\n\t\t\t_coneGeometry.translate( 0, - 0.5, 0 );\n\n\t\t}\n\n\t\tthis.position.copy( origin );\n\n\t\tthis.line = new Line( _lineGeometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\t\tthis.line.matrixAutoUpdate = false;\n\t\tthis.add( this.line );\n\n\t\tthis.cone = new Mesh( _coneGeometry, new MeshBasicMaterial( { color: color, toneMapped: false } ) );\n\t\tthis.cone.matrixAutoUpdate = false;\n\t\tthis.add( this.cone );\n\n\t\tthis.setDirection( dir );\n\t\tthis.setLength( length, headLength, headWidth );\n\n\t}\n\n\tsetDirection( dir ) {\n\n\t\t// dir is assumed to be normalized\n\n\t\tif ( dir.y > 0.99999 ) {\n\n\t\t\tthis.quaternion.set( 0, 0, 0, 1 );\n\n\t\t} else if ( dir.y < - 0.99999 ) {\n\n\t\t\tthis.quaternion.set( 1, 0, 0, 0 );\n\n\t\t} else {\n\n\t\t\t_axis.set( dir.z, 0, - dir.x ).normalize();\n\n\t\t\tconst radians = Math.acos( dir.y );\n\n\t\t\tthis.quaternion.setFromAxisAngle( _axis, radians );\n\n\t\t}\n\n\t}\n\n\tsetLength( length, headLength = length * 0.2, headWidth = headLength * 0.2 ) {\n\n\t\tthis.line.scale.set( 1, Math.max( 0.0001, length - headLength ), 1 ); // see #17458\n\t\tthis.line.updateMatrix();\n\n\t\tthis.cone.scale.set( headWidth, headLength, headWidth );\n\t\tthis.cone.position.y = length;\n\t\tthis.cone.updateMatrix();\n\n\t}\n\n\tsetColor( color ) {\n\n\t\tthis.line.material.color.set( color );\n\t\tthis.cone.material.color.set( color );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source, false );\n\n\t\tthis.line.copy( source.line );\n\t\tthis.cone.copy( source.cone );\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.line.geometry.dispose();\n\t\tthis.line.material.dispose();\n\t\tthis.cone.geometry.dispose();\n\t\tthis.cone.material.dispose();\n\n\t}\n\n}\n\nclass AxesHelper extends LineSegments {\n\n\tconstructor( size = 1 ) {\n\n\t\tconst vertices = [\n\t\t\t0, 0, 0,\tsize, 0, 0,\n\t\t\t0, 0, 0,\t0, size, 0,\n\t\t\t0, 0, 0,\t0, 0, size\n\t\t];\n\n\t\tconst colors = [\n\t\t\t1, 0, 0,\t1, 0.6, 0,\n\t\t\t0, 1, 0,\t0.6, 1, 0,\n\t\t\t0, 0, 1,\t0, 0.6, 1\n\t\t];\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'AxesHelper';\n\n\t}\n\n\tsetColors( xAxisColor, yAxisColor, zAxisColor ) {\n\n\t\tconst color = new Color();\n\t\tconst array = this.geometry.attributes.color.array;\n\n\t\tcolor.set( xAxisColor );\n\t\tcolor.toArray( array, 0 );\n\t\tcolor.toArray( array, 3 );\n\n\t\tcolor.set( yAxisColor );\n\t\tcolor.toArray( array, 6 );\n\t\tcolor.toArray( array, 9 );\n\n\t\tcolor.set( zAxisColor );\n\t\tcolor.toArray( array, 12 );\n\t\tcolor.toArray( array, 15 );\n\n\t\tthis.geometry.attributes.color.needsUpdate = true;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nclass ShapePath {\n\n\tconstructor() {\n\n\t\tthis.type = 'ShapePath';\n\n\t\tthis.color = new Color();\n\n\t\tthis.subPaths = [];\n\t\tthis.currentPath = null;\n\n\t}\n\n\tmoveTo( x, y ) {\n\n\t\tthis.currentPath = new Path();\n\t\tthis.subPaths.push( this.currentPath );\n\t\tthis.currentPath.moveTo( x, y );\n\n\t\treturn this;\n\n\t}\n\n\tlineTo( x, y ) {\n\n\t\tthis.currentPath.lineTo( x, y );\n\n\t\treturn this;\n\n\t}\n\n\tquadraticCurveTo( aCPx, aCPy, aX, aY ) {\n\n\t\tthis.currentPath.quadraticCurveTo( aCPx, aCPy, aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tbezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\n\n\t\tthis.currentPath.bezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tsplineThru( pts ) {\n\n\t\tthis.currentPath.splineThru( pts );\n\n\t\treturn this;\n\n\t}\n\n\ttoShapes( isCCW ) {\n\n\t\tfunction toShapesNoHoles( inSubpaths ) {\n\n\t\t\tconst shapes = [];\n\n\t\t\tfor ( let i = 0, l = inSubpaths.length; i < l; i ++ ) {\n\n\t\t\t\tconst tmpPath = inSubpaths[ i ];\n\n\t\t\t\tconst tmpShape = new Shape();\n\t\t\t\ttmpShape.curves = tmpPath.curves;\n\n\t\t\t\tshapes.push( tmpShape );\n\n\t\t\t}\n\n\t\t\treturn shapes;\n\n\t\t}\n\n\t\tfunction isPointInsidePolygon( inPt, inPolygon ) {\n\n\t\t\tconst polyLen = inPolygon.length;\n\n\t\t\t// inPt on polygon contour => immediate success    or\n\t\t\t// toggling of inside/outside at every single! intersection point of an edge\n\t\t\t//  with the horizontal line through inPt, left of inPt\n\t\t\t//  not counting lowerY endpoints of edges and whole edges on that line\n\t\t\tlet inside = false;\n\t\t\tfor ( let p = polyLen - 1, q = 0; q < polyLen; p = q ++ ) {\n\n\t\t\t\tlet edgeLowPt = inPolygon[ p ];\n\t\t\t\tlet edgeHighPt = inPolygon[ q ];\n\n\t\t\t\tlet edgeDx = edgeHighPt.x - edgeLowPt.x;\n\t\t\t\tlet edgeDy = edgeHighPt.y - edgeLowPt.y;\n\n\t\t\t\tif ( Math.abs( edgeDy ) > Number.EPSILON ) {\n\n\t\t\t\t\t// not parallel\n\t\t\t\t\tif ( edgeDy < 0 ) {\n\n\t\t\t\t\t\tedgeLowPt = inPolygon[ q ]; edgeDx = - edgeDx;\n\t\t\t\t\t\tedgeHighPt = inPolygon[ p ]; edgeDy = - edgeDy;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ( inPt.y < edgeLowPt.y ) || ( inPt.y > edgeHighPt.y ) ) \t\tcontinue;\n\n\t\t\t\t\tif ( inPt.y === edgeLowPt.y ) {\n\n\t\t\t\t\t\tif ( inPt.x === edgeLowPt.x )\t\treturn\ttrue;\t\t// inPt is on contour ?\n\t\t\t\t\t\t// continue;\t\t\t\t// no intersection or edgeLowPt => doesn't count !!!\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst perpEdge = edgeDy * ( inPt.x - edgeLowPt.x ) - edgeDx * ( inPt.y - edgeLowPt.y );\n\t\t\t\t\t\tif ( perpEdge === 0 )\t\t\t\treturn\ttrue;\t\t// inPt is on contour ?\n\t\t\t\t\t\tif ( perpEdge < 0 ) \t\t\t\tcontinue;\n\t\t\t\t\t\tinside = ! inside;\t\t// true intersection left of inPt\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// parallel or collinear\n\t\t\t\t\tif ( inPt.y !== edgeLowPt.y ) \t\tcontinue;\t\t\t// parallel\n\t\t\t\t\t// edge lies on the same horizontal line as inPt\n\t\t\t\t\tif ( ( ( edgeHighPt.x <= inPt.x ) && ( inPt.x <= edgeLowPt.x ) ) ||\n\t\t\t\t\t\t ( ( edgeLowPt.x <= inPt.x ) && ( inPt.x <= edgeHighPt.x ) ) )\t\treturn\ttrue;\t// inPt: Point on contour !\n\t\t\t\t\t// continue;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn\tinside;\n\n\t\t}\n\n\t\tconst isClockWise = ShapeUtils.isClockWise;\n\n\t\tconst subPaths = this.subPaths;\n\t\tif ( subPaths.length === 0 ) return [];\n\n\t\tlet solid, tmpPath, tmpShape;\n\t\tconst shapes = [];\n\n\t\tif ( subPaths.length === 1 ) {\n\n\t\t\ttmpPath = subPaths[ 0 ];\n\t\t\ttmpShape = new Shape();\n\t\t\ttmpShape.curves = tmpPath.curves;\n\t\t\tshapes.push( tmpShape );\n\t\t\treturn shapes;\n\n\t\t}\n\n\t\tlet holesFirst = ! isClockWise( subPaths[ 0 ].getPoints() );\n\t\tholesFirst = isCCW ? ! holesFirst : holesFirst;\n\n\t\t// console.log(\"Holes first\", holesFirst);\n\n\t\tconst betterShapeHoles = [];\n\t\tconst newShapes = [];\n\t\tlet newShapeHoles = [];\n\t\tlet mainIdx = 0;\n\t\tlet tmpPoints;\n\n\t\tnewShapes[ mainIdx ] = undefined;\n\t\tnewShapeHoles[ mainIdx ] = [];\n\n\t\tfor ( let i = 0, l = subPaths.length; i < l; i ++ ) {\n\n\t\t\ttmpPath = subPaths[ i ];\n\t\t\ttmpPoints = tmpPath.getPoints();\n\t\t\tsolid = isClockWise( tmpPoints );\n\t\t\tsolid = isCCW ? ! solid : solid;\n\n\t\t\tif ( solid ) {\n\n\t\t\t\tif ( ( ! holesFirst ) && ( newShapes[ mainIdx ] ) )\tmainIdx ++;\n\n\t\t\t\tnewShapes[ mainIdx ] = { s: new Shape(), p: tmpPoints };\n\t\t\t\tnewShapes[ mainIdx ].s.curves = tmpPath.curves;\n\n\t\t\t\tif ( holesFirst )\tmainIdx ++;\n\t\t\t\tnewShapeHoles[ mainIdx ] = [];\n\n\t\t\t\t//console.log('cw', i);\n\n\t\t\t} else {\n\n\t\t\t\tnewShapeHoles[ mainIdx ].push( { h: tmpPath, p: tmpPoints[ 0 ] } );\n\n\t\t\t\t//console.log('ccw', i);\n\n\t\t\t}\n\n\t\t}\n\n\t\t// only Holes? -> probably all Shapes with wrong orientation\n\t\tif ( ! newShapes[ 0 ] )\treturn\ttoShapesNoHoles( subPaths );\n\n\n\t\tif ( newShapes.length > 1 ) {\n\n\t\t\tlet ambiguous = false;\n\t\t\tlet toChange = 0;\n\n\t\t\tfor ( let sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\n\n\t\t\t\tbetterShapeHoles[ sIdx ] = [];\n\n\t\t\t}\n\n\t\t\tfor ( let sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\n\n\t\t\t\tconst sho = newShapeHoles[ sIdx ];\n\n\t\t\t\tfor ( let hIdx = 0; hIdx < sho.length; hIdx ++ ) {\n\n\t\t\t\t\tconst ho = sho[ hIdx ];\n\t\t\t\t\tlet hole_unassigned = true;\n\n\t\t\t\t\tfor ( let s2Idx = 0; s2Idx < newShapes.length; s2Idx ++ ) {\n\n\t\t\t\t\t\tif ( isPointInsidePolygon( ho.p, newShapes[ s2Idx ].p ) ) {\n\n\t\t\t\t\t\t\tif ( sIdx !== s2Idx )\ttoChange ++;\n\n\t\t\t\t\t\t\tif ( hole_unassigned ) {\n\n\t\t\t\t\t\t\t\thole_unassigned = false;\n\t\t\t\t\t\t\t\tbetterShapeHoles[ s2Idx ].push( ho );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tambiguous = true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( hole_unassigned ) {\n\n\t\t\t\t\t\tbetterShapeHoles[ sIdx ].push( ho );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( toChange > 0 && ambiguous === false ) {\n\n\t\t\t\tnewShapeHoles = betterShapeHoles;\n\n\t\t\t}\n\n\t\t}\n\n\t\tlet tmpHoles;\n\n\t\tfor ( let i = 0, il = newShapes.length; i < il; i ++ ) {\n\n\t\t\ttmpShape = newShapes[ i ].s;\n\t\t\tshapes.push( tmpShape );\n\t\t\ttmpHoles = newShapeHoles[ i ];\n\n\t\t\tfor ( let j = 0, jl = tmpHoles.length; j < jl; j ++ ) {\n\n\t\t\t\ttmpShape.holes.push( tmpHoles[ j ].h );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//console.log(\"shape\", shapes);\n\n\t\treturn shapes;\n\n\t}\n\n}\n\nclass WebGLMultipleRenderTargets extends WebGLRenderTarget { // @deprecated, r162\n\n\tconstructor( width = 1, height = 1, count = 1, options = {} ) {\n\n\t\tconsole.warn( 'THREE.WebGLMultipleRenderTargets has been deprecated and will be removed in r172. Use THREE.WebGLRenderTarget and set the \"count\" parameter to enable MRT.' );\n\n\t\tsuper( width, height, { ...options, count } );\n\n\t\tthis.isWebGLMultipleRenderTargets = true;\n\n\t}\n\n\tget texture() {\n\n\t\treturn this.textures;\n\n\t}\n\n}\n\nif ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\n\n\t__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'register', { detail: {\n\t\trevision: REVISION,\n\t} } ) );\n\n}\n\nif ( typeof window !== 'undefined' ) {\n\n\tif ( window.__THREE__ ) {\n\n\t\tconsole.warn( 'WARNING: Multiple instances of Three.js being imported.' );\n\n\t} else {\n\n\t\twindow.__THREE__ = REVISION;\n\n\t}\n\n}\n\nexport { ACESFilmicToneMapping, AddEquation, AddOperation, AdditiveAnimationBlendMode, AdditiveBlending, AgXToneMapping, AlphaFormat, AlwaysCompare, AlwaysDepth, AlwaysStencilFunc, AmbientLight, AnimationAction, AnimationClip, AnimationLoader, AnimationMixer, AnimationObjectGroup, AnimationUtils, ArcCurve, ArrayCamera, ArrowHelper, AttachedBindMode, Audio, AudioAnalyser, AudioContext, AudioListener, AudioLoader, AxesHelper, BackSide, BasicDepthPacking, BasicShadowMap, BatchedMesh, Bone, BooleanKeyframeTrack, Box2, Box3, Box3Helper, BoxGeometry, BoxHelper, BufferAttribute, BufferGeometry, BufferGeometryLoader, ByteType, Cache, Camera, CameraHelper, CanvasTexture, CapsuleGeometry, CatmullRomCurve3, CineonToneMapping, CircleGeometry, ClampToEdgeWrapping, Clock, Color, ColorKeyframeTrack, ColorManagement, CompressedArrayTexture, CompressedCubeTexture, CompressedTexture, CompressedTextureLoader, ConeGeometry, ConstantAlphaFactor, ConstantColorFactor, CubeCamera, CubeReflectionMapping, CubeRefractionMapping, CubeTexture, CubeTextureLoader, CubeUVReflectionMapping, CubicBezierCurve, CubicBezierCurve3, CubicInterpolant, CullFaceBack, CullFaceFront, CullFaceFrontBack, CullFaceNone, Curve, CurvePath, CustomBlending, CustomToneMapping, CylinderGeometry, Cylindrical, Data3DTexture, DataArrayTexture, DataTexture, DataTextureLoader, DataUtils, DecrementStencilOp, DecrementWrapStencilOp, DefaultLoadingManager, DepthFormat, DepthStencilFormat, DepthTexture, DetachedBindMode, DirectionalLight, DirectionalLightHelper, DiscreteInterpolant, DisplayP3ColorSpace, DodecahedronGeometry, DoubleSide, DstAlphaFactor, DstColorFactor, DynamicCopyUsage, DynamicDrawUsage, DynamicReadUsage, EdgesGeometry, EllipseCurve, EqualCompare, EqualDepth, EqualStencilFunc, EquirectangularReflectionMapping, EquirectangularRefractionMapping, Euler, EventDispatcher, ExtrudeGeometry, FileLoader, Float16BufferAttribute, Float32BufferAttribute, FloatType, Fog, FogExp2, FramebufferTexture, FrontSide, Frustum, GLBufferAttribute, GLSL1, GLSL3, GreaterCompare, GreaterDepth, GreaterEqualCompare, GreaterEqualDepth, GreaterEqualStencilFunc, GreaterStencilFunc, GridHelper, Group, HalfFloatType, HemisphereLight, HemisphereLightHelper, IcosahedronGeometry, ImageBitmapLoader, ImageLoader, ImageUtils, IncrementStencilOp, IncrementWrapStencilOp, InstancedBufferAttribute, InstancedBufferGeometry, InstancedInterleavedBuffer, InstancedMesh, Int16BufferAttribute, Int32BufferAttribute, Int8BufferAttribute, IntType, InterleavedBuffer, InterleavedBufferAttribute, Interpolant, InterpolateDiscrete, InterpolateLinear, InterpolateSmooth, InvertStencilOp, KeepStencilOp, KeyframeTrack, LOD, LatheGeometry, Layers, LessCompare, LessDepth, LessEqualCompare, LessEqualDepth, LessEqualStencilFunc, LessStencilFunc, Light, LightProbe, Line, Line3, LineBasicMaterial, LineCurve, LineCurve3, LineDashedMaterial, LineLoop, LineSegments, LinearDisplayP3ColorSpace, LinearFilter, LinearInterpolant, LinearMipMapLinearFilter, LinearMipMapNearestFilter, LinearMipmapLinearFilter, LinearMipmapNearestFilter, LinearSRGBColorSpace, LinearToneMapping, LinearTransfer, Loader, LoaderUtils, LoadingManager, LoopOnce, LoopPingPong, LoopRepeat, LuminanceAlphaFormat, LuminanceFormat, MOUSE, Material, MaterialLoader, MathUtils, Matrix3, Matrix4, MaxEquation, Mesh, MeshBasicMaterial, MeshDepthMaterial, MeshDistanceMaterial, MeshLambertMaterial, MeshMatcapMaterial, MeshNormalMaterial, MeshPhongMaterial, MeshPhysicalMaterial, MeshStandardMaterial, MeshToonMaterial, MinEquation, MirroredRepeatWrapping, MixOperation, MultiplyBlending, MultiplyOperation, NearestFilter, NearestMipMapLinearFilter, NearestMipMapNearestFilter, NearestMipmapLinearFilter, NearestMipmapNearestFilter, NeutralToneMapping, NeverCompare, NeverDepth, NeverStencilFunc, NoBlending, NoColorSpace, NoToneMapping, NormalAnimationBlendMode, NormalBlending, NotEqualCompare, NotEqualDepth, NotEqualStencilFunc, NumberKeyframeTrack, Object3D, ObjectLoader, ObjectSpaceNormalMap, OctahedronGeometry, OneFactor, OneMinusConstantAlphaFactor, OneMinusConstantColorFactor, OneMinusDstAlphaFactor, OneMinusDstColorFactor, OneMinusSrcAlphaFactor, OneMinusSrcColorFactor, OrthographicCamera, P3Primaries, PCFShadowMap, PCFSoftShadowMap, PMREMGenerator, Path, PerspectiveCamera, Plane, PlaneGeometry, PlaneHelper, PointLight, PointLightHelper, Points, PointsMaterial, PolarGridHelper, PolyhedronGeometry, PositionalAudio, PropertyBinding, PropertyMixer, QuadraticBezierCurve, QuadraticBezierCurve3, Quaternion, QuaternionKeyframeTrack, QuaternionLinearInterpolant, RED_GREEN_RGTC2_Format, RED_RGTC1_Format, REVISION, RGBADepthPacking, RGBAFormat, RGBAIntegerFormat, RGBA_ASTC_10x10_Format, RGBA_ASTC_10x5_Format, RGBA_ASTC_10x6_Format, RGBA_ASTC_10x8_Format, RGBA_ASTC_12x10_Format, RGBA_ASTC_12x12_Format, RGBA_ASTC_4x4_Format, RGBA_ASTC_5x4_Format, RGBA_ASTC_5x5_Format, RGBA_ASTC_6x5_Format, RGBA_ASTC_6x6_Format, RGBA_ASTC_8x5_Format, RGBA_ASTC_8x6_Format, RGBA_ASTC_8x8_Format, RGBA_BPTC_Format, RGBA_ETC2_EAC_Format, RGBA_PVRTC_2BPPV1_Format, RGBA_PVRTC_4BPPV1_Format, RGBA_S3TC_DXT1_Format, RGBA_S3TC_DXT3_Format, RGBA_S3TC_DXT5_Format, RGBFormat, RGBIntegerFormat, RGB_BPTC_SIGNED_Format, RGB_BPTC_UNSIGNED_Format, RGB_ETC1_Format, RGB_ETC2_Format, RGB_PVRTC_2BPPV1_Format, RGB_PVRTC_4BPPV1_Format, RGB_S3TC_DXT1_Format, RGFormat, RGIntegerFormat, RawShaderMaterial, Ray, Raycaster, Rec709Primaries, RectAreaLight, RedFormat, RedIntegerFormat, ReinhardToneMapping, RenderTarget, RepeatWrapping, ReplaceStencilOp, ReverseSubtractEquation, RingGeometry, SIGNED_RED_GREEN_RGTC2_Format, SIGNED_RED_RGTC1_Format, SRGBColorSpace, SRGBTransfer, Scene, ShaderChunk, ShaderLib, ShaderMaterial, ShadowMaterial, Shape, ShapeGeometry, ShapePath, ShapeUtils, ShortType, Skeleton, SkeletonHelper, SkinnedMesh, Source, Sphere, SphereGeometry, Spherical, SphericalHarmonics3, SplineCurve, SpotLight, SpotLightHelper, Sprite, SpriteMaterial, SrcAlphaFactor, SrcAlphaSaturateFactor, SrcColorFactor, StaticCopyUsage, StaticDrawUsage, StaticReadUsage, StereoCamera, StreamCopyUsage, StreamDrawUsage, StreamReadUsage, StringKeyframeTrack, SubtractEquation, SubtractiveBlending, TOUCH, TangentSpaceNormalMap, TetrahedronGeometry, Texture, TextureLoader, TextureUtils, TorusGeometry, TorusKnotGeometry, Triangle, TriangleFanDrawMode, TriangleStripDrawMode, TrianglesDrawMode, TubeGeometry, UVMapping, Uint16BufferAttribute, Uint32BufferAttribute, Uint8BufferAttribute, Uint8ClampedBufferAttribute, Uniform, UniformsGroup, UniformsLib, UniformsUtils, UnsignedByteType, UnsignedInt248Type, UnsignedInt5999Type, UnsignedIntType, UnsignedShort4444Type, UnsignedShort5551Type, UnsignedShortType, VSMShadowMap, Vector2, Vector3, Vector4, VectorKeyframeTrack, VideoTexture, WebGL3DRenderTarget, WebGLArrayRenderTarget, WebGLCoordinateSystem, WebGLCubeRenderTarget, WebGLMultipleRenderTargets, WebGLRenderTarget, WebGLRenderer, WebGLUtils, WebGPUCoordinateSystem, WireframeGeometry, WrapAroundEnding, ZeroCurvatureEnding, ZeroFactor, ZeroSlopeEnding, ZeroStencilOp, createCanvasElement };\n","import avatar1 from \"../images/avatars/1.jpeg\";\r\nimport avatar2 from \"../images/avatars/lekshmimam.jpg\";\r\nimport avatar3 from \"../images/avatars/joshansir.png\";\r\nimport avatar4 from \"../images/avatars/jishnu.png\";\r\nimport avatar5 from \"../images/avatars/Sreejesh.png\";\r\nimport avatar6 from \"../images/avatars/kps.png\";\r\nimport avatar7 from \"../images/avatars/7.png\";\r\nimport avatar8 from \"../images/avatars/radhika.png\";\r\nimport avatar9 from \"../images/avatars/chickoo.png\";\r\nimport avatar10 from \"../images/avatars/10.png\";\r\nimport avatar11 from \"../images/avatars/11.png\";\r\n\r\nimport bg1 from \"../images/wallpapers/1.png\";\r\nimport bg2 from \"../images/wallpapers/2.jpg\";\r\nimport bg3 from \"../images/wallpapers/3.jpg\";\r\nimport bg4 from \"../images/wallpapers/4.jpg\";\r\nimport bg5 from \"../images/wallpapers/220.jpg\";\r\nimport bg6 from \"../images/wallpapers/5.jpg\";\r\nimport bg7 from \"../images/wallpapers/24.jpg\";\r\nimport bg8 from \"../images/wallpapers/34.jpg\";\r\nimport bg9 from \"../images/wallpapers/52.jpg\";\r\nimport bg10 from \"../images/wallpapers/91.jpg\";\r\nimport bg11 from \"../images/wallpapers/97.jpg\";\r\nimport bg12 from \"../images/wallpapers/107.jpg\";\r\nimport bg13 from \"../images/wallpapers/bg5.jpg\";\r\n\r\n\r\n\r\nimport me1 from \"../images/avatars/gogo3.jpeg\";\r\nimport me2 from \"../images/avatars/w1.jpeg\";\r\nimport me3 from \"../images/avatars/w2.jpeg\";\r\n\r\n\r\n\r\n\r\nconst images = {\r\n    avatar1,\r\n    avatar2,\r\n    avatar3,\r\n    avatar4,\r\n    avatar5,\r\n    avatar6,\r\n    avatar7,\r\n    avatar8,\r\n    avatar9,\r\n    avatar10,\r\n    avatar11,\r\n    bg1,\r\n    bg2,\r\n    bg3,\r\n    bg4,\r\n    bg5,\r\n    bg6,\r\n    bg7,\r\n    bg8,\r\n    bg9,\r\n    bg10,\r\n    bg11,\r\n    bg12,\r\n    bg13,\r\n    me1,\r\n    me2,\r\n    me3,\r\n\r\n   \r\n};\r\n\r\nexport default images;","import * as THREE from \"three\";\r\nimport images from \"./images\";\r\nconst container = document.querySelector(\".three_bg\");\r\n\r\nconst loader = new THREE.TextureLoader();\r\nconst scene = new THREE.Scene();\r\nconst camera = new THREE.PerspectiveCamera(\r\n    70, \r\n    window.innerWidth/window.innerHeight,\r\n    0.1, //default value\r\n    1000 //how far we can see\r\n\r\n);\r\n//the higher the value the element will be mmore far from us.\r\n\r\nconst renderer = new THREE.WebGLRenderer({\r\n    antialias: true,\r\n});\r\nrenderer.setSize(window.innerWidth, window.innerHeight);\r\ncontainer.appendChild(renderer.domElement);\r\n\r\n\r\n//responsive\r\nwindow.addEventListener('resize', ()=>{\r\n   camera.aspect = window.innerWidth / window.innerHeight; \r\n   camera.updateProjectionMatrix();\r\n   renderer.setSize(window.innerWidth, window.innerHeight);\r\n});\r\n\r\nconst geometry = new THREE.PlaneGeometry(18, 10, 15, 9);\r\nconst material = new THREE.MeshBasicMaterial({\r\n    //color: 0x0000FF,\r\n    color: 0xff0000,\r\n    //color: undefined,\r\n    map:loader.load(images.bg4),\r\n    //wireframe: true,\r\n\r\n});\r\nconst mesh = new THREE.Mesh(geometry, material);\r\n\r\nscene.add(mesh);\r\ncamera.position.z = 5;\r\n\r\nconst count = geometry.attributes.position.count;\r\n//console.log(count);\r\nconst clock = new THREE.Clock();\r\n\r\n\r\nfunction animate() {\r\n    const time = clock.getElapsedTime();\r\n    console.log(time);\r\n\r\n    for(let i=0; i<count; i++){\r\n       const x = geometry.attributes.position.getX(i);\r\n       const y = geometry.attributes.position.getY(i);\r\n\r\n       const anim1 = 0.9 * Math.sin(x * time * .4);\r\n       const anim2 = 0.25 * Math.sin(y + time * .4);\r\n\r\n\r\n       geometry.attributes.position.setZ(i, /*-y * time * 2*/ anim1 + anim2);\r\n       geometry.computeVertexNormals();\r\n       geometry.attributes.position.needsUpdate = true;\r\n    }\r\n    requestAnimationFrame(animate);\r\n    //mesh.rotation.x += 0.01;\r\n    //mesh.rotation.y += 0.01;\r\n    renderer.render(scene, camera);\r\n}\r\nanimate();\r\n\r\n\r\n"]}